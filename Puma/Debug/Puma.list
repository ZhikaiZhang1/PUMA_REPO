
Puma.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .init         0000000c  00008000  00008000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         0001bd54  00008010  00008010  00008010  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fini         0000000c  00023d64  00023d64  00023d64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000003c8  00023d70  00023d70  00023d70  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.exidx    00000008  00024138  00024138  00024138  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .eh_frame     00000004  00024140  00024140  00024140  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .init_array   00000004  00034144  00034144  00024144  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  00034148  00034148  00024148  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f1  0003414c  0003414c  0002414c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001da0  00034340  00034340  0002433d  2**3
                  ALLOC
 10 .comment      0000007b  00000000  00000000  0002433d  2**0
                  CONTENTS, READONLY
 11 .debug_aranges 000017e8  00000000  00000000  000243b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_info   0002d756  00000000  00000000  00025ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00004ed6  00000000  00000000  000532f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00018c5d  00000000  00000000  000581cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000068a4  00000000  00000000  00070e2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    00165646  00000000  00000000  000776d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000015e0  00000000  00000000  001dcd16  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_macro  0003bb3b  00000000  00000000  001de2f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .ARM.attributes 0000002e  00000000  00000000  00219e31  2**0
                  CONTENTS, READONLY

Disassembly of section .init:

00008000 <_init>:
    8000:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8002:	bf00      	nop
    8004:	bcf8      	pop	{r3, r4, r5, r6, r7}
    8006:	bc08      	pop	{r3}
    8008:	469e      	mov	lr, r3
    800a:	4770      	bx	lr

Disassembly of section .text:

00008010 <exit>:
    8010:	b508      	push	{r3, lr}
    8012:	4b07      	ldr	r3, [pc, #28]	; (8030 <exit+0x20>)
    8014:	4604      	mov	r4, r0
    8016:	b113      	cbz	r3, 801e <exit+0xe>
    8018:	2100      	movs	r1, #0
    801a:	f3af 8000 	nop.w
    801e:	4b05      	ldr	r3, [pc, #20]	; (8034 <exit+0x24>)
    8020:	6818      	ldr	r0, [r3, #0]
    8022:	6a83      	ldr	r3, [r0, #40]	; 0x28
    8024:	b103      	cbz	r3, 8028 <exit+0x18>
    8026:	4798      	blx	r3
    8028:	4620      	mov	r0, r4
    802a:	f011 fefb 	bl	19e24 <_exit>
    802e:	bf00      	nop
    8030:	00000000 	.word	0x00000000
    8034:	00023efc 	.word	0x00023efc

00008038 <__do_global_dtors_aux>:
    8038:	b510      	push	{r4, lr}
    803a:	4c05      	ldr	r4, [pc, #20]	; (8050 <__do_global_dtors_aux+0x18>)
    803c:	7823      	ldrb	r3, [r4, #0]
    803e:	b933      	cbnz	r3, 804e <__do_global_dtors_aux+0x16>
    8040:	4b04      	ldr	r3, [pc, #16]	; (8054 <__do_global_dtors_aux+0x1c>)
    8042:	b113      	cbz	r3, 804a <__do_global_dtors_aux+0x12>
    8044:	4804      	ldr	r0, [pc, #16]	; (8058 <__do_global_dtors_aux+0x20>)
    8046:	f3af 8000 	nop.w
    804a:	2301      	movs	r3, #1
    804c:	7023      	strb	r3, [r4, #0]
    804e:	bd10      	pop	{r4, pc}
    8050:	00034340 	.word	0x00034340
    8054:	00000000 	.word	0x00000000
    8058:	00024140 	.word	0x00024140

0000805c <frame_dummy>:
    805c:	b508      	push	{r3, lr}
    805e:	4b03      	ldr	r3, [pc, #12]	; (806c <frame_dummy+0x10>)
    8060:	b11b      	cbz	r3, 806a <frame_dummy+0xe>
    8062:	4903      	ldr	r1, [pc, #12]	; (8070 <frame_dummy+0x14>)
    8064:	4803      	ldr	r0, [pc, #12]	; (8074 <frame_dummy+0x18>)
    8066:	f3af 8000 	nop.w
    806a:	bd08      	pop	{r3, pc}
    806c:	00000000 	.word	0x00000000
    8070:	00034344 	.word	0x00034344
    8074:	00024140 	.word	0x00024140

00008078 <_mainCRTStartup>:
    8078:	4b15      	ldr	r3, [pc, #84]	; (80d0 <_mainCRTStartup+0x58>)
    807a:	2b00      	cmp	r3, #0
    807c:	bf08      	it	eq
    807e:	4b13      	ldreq	r3, [pc, #76]	; (80cc <_mainCRTStartup+0x54>)
    8080:	469d      	mov	sp, r3
    8082:	f5a3 3a80 	sub.w	sl, r3, #65536	; 0x10000
    8086:	2100      	movs	r1, #0
    8088:	468b      	mov	fp, r1
    808a:	460f      	mov	r7, r1
    808c:	4813      	ldr	r0, [pc, #76]	; (80dc <_mainCRTStartup+0x64>)
    808e:	4a14      	ldr	r2, [pc, #80]	; (80e0 <_mainCRTStartup+0x68>)
    8090:	1a12      	subs	r2, r2, r0
    8092:	f01a fc19 	bl	228c8 <memset>
    8096:	4b0f      	ldr	r3, [pc, #60]	; (80d4 <_mainCRTStartup+0x5c>)
    8098:	2b00      	cmp	r3, #0
    809a:	d000      	beq.n	809e <_mainCRTStartup+0x26>
    809c:	4798      	blx	r3
    809e:	4b0e      	ldr	r3, [pc, #56]	; (80d8 <_mainCRTStartup+0x60>)
    80a0:	2b00      	cmp	r3, #0
    80a2:	d000      	beq.n	80a6 <_mainCRTStartup+0x2e>
    80a4:	4798      	blx	r3
    80a6:	2000      	movs	r0, #0
    80a8:	2100      	movs	r1, #0
    80aa:	0004      	movs	r4, r0
    80ac:	000d      	movs	r5, r1
    80ae:	480d      	ldr	r0, [pc, #52]	; (80e4 <_mainCRTStartup+0x6c>)
    80b0:	2800      	cmp	r0, #0
    80b2:	d002      	beq.n	80ba <_mainCRTStartup+0x42>
    80b4:	480c      	ldr	r0, [pc, #48]	; (80e8 <_mainCRTStartup+0x70>)
    80b6:	f3af 8000 	nop.w
    80ba:	f01a fbb7 	bl	2282c <__libc_init_array>
    80be:	0020      	movs	r0, r4
    80c0:	0029      	movs	r1, r5
    80c2:	f010 fd03 	bl	18acc <main>
    80c6:	f7ff ffa3 	bl	8010 <exit>
    80ca:	bf00      	nop
    80cc:	00080000 	.word	0x00080000
	...
    80dc:	0003433d 	.word	0x0003433d
    80e0:	000360e0 	.word	0x000360e0
	...

000080f0 <G_q>:
 *                creal_T b_G_q[6]
 * Return Type  : void
 */
void G_q(double g, double theta2, double theta3, double theta4, double theta5,
         creal_T b_G_q[6])
{
    80f0:	b590      	push	{r4, r7, lr}
    80f2:	f5ad 5d9e 	sub.w	sp, sp, #5056	; 0x13c0
    80f6:	b085      	sub	sp, #20
    80f8:	af00      	add	r7, sp, #0
    80fa:	4bc1      	ldr	r3, [pc, #772]	; (8400 <G_q+0x310>)
    80fc:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8100:	443a      	add	r2, r7
    8102:	4413      	add	r3, r2
    8104:	ed83 0b00 	vstr	d0, [r3]
    8108:	4bbe      	ldr	r3, [pc, #760]	; (8404 <G_q+0x314>)
    810a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    810e:	443a      	add	r2, r7
    8110:	4413      	add	r3, r2
    8112:	ed83 1b00 	vstr	d1, [r3]
    8116:	4bbc      	ldr	r3, [pc, #752]	; (8408 <G_q+0x318>)
    8118:	f241 32d0 	movw	r2, #5072	; 0x13d0
    811c:	443a      	add	r2, r7
    811e:	4413      	add	r3, r2
    8120:	ed83 2b00 	vstr	d2, [r3]
    8124:	f107 0310 	add.w	r3, r7, #16
    8128:	ed83 3b00 	vstr	d3, [r3]
    812c:	4bb7      	ldr	r3, [pc, #732]	; (840c <G_q+0x31c>)
    812e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8132:	443a      	add	r2, r7
    8134:	4413      	add	r3, r2
    8136:	ed83 4b00 	vstr	d4, [r3]
    813a:	4bb5      	ldr	r3, [pc, #724]	; (8410 <G_q+0x320>)
    813c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8140:	443a      	add	r2, r7
    8142:	4413      	add	r3, r2
    8144:	6018      	str	r0, [r3, #0]
  double t74_re;
  double t74_im;
  double t76_re;
  double t58_im;
  double t60_re;
  if (isInitialized_G_q == false) {
    8146:	4bb3      	ldr	r3, [pc, #716]	; (8414 <G_q+0x324>)
    8148:	781b      	ldrb	r3, [r3, #0]
    814a:	2b00      	cmp	r3, #0
    814c:	d101      	bne.n	8152 <G_q+0x62>
    G_q_initialize();
    814e:	f010 f8cf 	bl	182f0 <G_q_initialize>
  }

  /*     This function was generated by the Symbolic Math Toolbox version 8.2. */
  /*     24-May-2020 14:27:08 */
  t299.re = theta2 * 0.0;
    8152:	4bac      	ldr	r3, [pc, #688]	; (8404 <G_q+0x314>)
    8154:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8158:	443a      	add	r2, r7
    815a:	4413      	add	r3, r2
    815c:	ed93 7b00 	vldr	d7, [r3]
    8160:	ed9f 6ba5 	vldr	d6, [pc, #660]	; 83f8 <G_q+0x308>
    8164:	ee27 7b06 	vmul.f64	d7, d7, d6
    8168:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    816c:	ed83 7b00 	vstr	d7, [r3]
  t299.im = theta2;
    8170:	f507 5292 	add.w	r2, r7, #4672	; 0x1240
    8174:	4ba3      	ldr	r3, [pc, #652]	; (8404 <G_q+0x314>)
    8176:	f241 31d0 	movw	r1, #5072	; 0x13d0
    817a:	4439      	add	r1, r7
    817c:	440b      	add	r3, r1
    817e:	e9d3 3400 	ldrd	r3, r4, [r3]
    8182:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t298.re = -t299.re;
    8186:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    818a:	ed93 7b00 	vldr	d7, [r3]
    818e:	eeb1 7b47 	vneg.f64	d7, d7
    8192:	f241 2330 	movw	r3, #4656	; 0x1230
    8196:	443b      	add	r3, r7
    8198:	ed83 7b00 	vstr	d7, [r3]
  t298.im = -theta2;
    819c:	4b99      	ldr	r3, [pc, #612]	; (8404 <G_q+0x314>)
    819e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    81a2:	443a      	add	r2, r7
    81a4:	4413      	add	r3, r2
    81a6:	ed93 7b00 	vldr	d7, [r3]
    81aa:	eeb1 7b47 	vneg.f64	d7, d7
    81ae:	f241 2330 	movw	r3, #4656	; 0x1230
    81b2:	443b      	add	r3, r7
    81b4:	ed83 7b02 	vstr	d7, [r3, #8]
  t293.re = t299.re;
    81b8:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    81bc:	e9d3 3400 	ldrd	r3, r4, [r3]
    81c0:	f507 5291 	add.w	r2, r7, #4640	; 0x1220
    81c4:	e9c2 3400 	strd	r3, r4, [r2]
  t293.im = theta2;
    81c8:	f507 5291 	add.w	r2, r7, #4640	; 0x1220
    81cc:	4b8d      	ldr	r3, [pc, #564]	; (8404 <G_q+0x314>)
    81ce:	f241 31d0 	movw	r1, #5072	; 0x13d0
    81d2:	4439      	add	r1, r7
    81d4:	440b      	add	r3, r1
    81d6:	e9d3 3400 	ldrd	r3, r4, [r3]
    81da:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t292.re = -t299.re;
    81de:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    81e2:	ed93 7b00 	vldr	d7, [r3]
    81e6:	eeb1 7b47 	vneg.f64	d7, d7
    81ea:	f241 2310 	movw	r3, #4624	; 0x1210
    81ee:	443b      	add	r3, r7
    81f0:	ed83 7b00 	vstr	d7, [r3]
  t292.im = -theta2;
    81f4:	4b83      	ldr	r3, [pc, #524]	; (8404 <G_q+0x314>)
    81f6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    81fa:	443a      	add	r2, r7
    81fc:	4413      	add	r3, r2
    81fe:	ed93 7b00 	vldr	d7, [r3]
    8202:	eeb1 7b47 	vneg.f64	d7, d7
    8206:	f241 2310 	movw	r3, #4624	; 0x1210
    820a:	443b      	add	r3, r7
    820c:	ed83 7b02 	vstr	d7, [r3, #8]
  t291.re = t299.re;
    8210:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8214:	e9d3 3400 	ldrd	r3, r4, [r3]
    8218:	f507 5290 	add.w	r2, r7, #4608	; 0x1200
    821c:	e9c2 3400 	strd	r3, r4, [r2]
  t291.im = theta2;
    8220:	f507 5290 	add.w	r2, r7, #4608	; 0x1200
    8224:	4b77      	ldr	r3, [pc, #476]	; (8404 <G_q+0x314>)
    8226:	f241 31d0 	movw	r1, #5072	; 0x13d0
    822a:	4439      	add	r1, r7
    822c:	440b      	add	r3, r1
    822e:	e9d3 3400 	ldrd	r3, r4, [r3]
    8232:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t290.re = -t299.re;
    8236:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    823a:	ed93 7b00 	vldr	d7, [r3]
    823e:	eeb1 7b47 	vneg.f64	d7, d7
    8242:	f241 13f0 	movw	r3, #4592	; 0x11f0
    8246:	443b      	add	r3, r7
    8248:	ed83 7b00 	vstr	d7, [r3]
  t290.im = -theta2;
    824c:	4b6d      	ldr	r3, [pc, #436]	; (8404 <G_q+0x314>)
    824e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8252:	443a      	add	r2, r7
    8254:	4413      	add	r3, r2
    8256:	ed93 7b00 	vldr	d7, [r3]
    825a:	eeb1 7b47 	vneg.f64	d7, d7
    825e:	f241 13f0 	movw	r3, #4592	; 0x11f0
    8262:	443b      	add	r3, r7
    8264:	ed83 7b02 	vstr	d7, [r3, #8]
  t287.re = t299.re;
    8268:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    826c:	e9d3 3400 	ldrd	r3, r4, [r3]
    8270:	f507 528f 	add.w	r2, r7, #4576	; 0x11e0
    8274:	e9c2 3400 	strd	r3, r4, [r2]
  t287.im = theta2;
    8278:	f507 528f 	add.w	r2, r7, #4576	; 0x11e0
    827c:	4b61      	ldr	r3, [pc, #388]	; (8404 <G_q+0x314>)
    827e:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8282:	4439      	add	r1, r7
    8284:	440b      	add	r3, r1
    8286:	e9d3 3400 	ldrd	r3, r4, [r3]
    828a:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t286.re = -t299.re;
    828e:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8292:	ed93 7b00 	vldr	d7, [r3]
    8296:	eeb1 7b47 	vneg.f64	d7, d7
    829a:	f241 13d0 	movw	r3, #4560	; 0x11d0
    829e:	443b      	add	r3, r7
    82a0:	ed83 7b00 	vstr	d7, [r3]
  t286.im = -theta2;
    82a4:	4b57      	ldr	r3, [pc, #348]	; (8404 <G_q+0x314>)
    82a6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    82aa:	443a      	add	r2, r7
    82ac:	4413      	add	r3, r2
    82ae:	ed93 7b00 	vldr	d7, [r3]
    82b2:	eeb1 7b47 	vneg.f64	d7, d7
    82b6:	f241 13d0 	movw	r3, #4560	; 0x11d0
    82ba:	443b      	add	r3, r7
    82bc:	ed83 7b02 	vstr	d7, [r3, #8]
  t281.re = t299.re;
    82c0:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    82c4:	e9d3 3400 	ldrd	r3, r4, [r3]
    82c8:	f507 528e 	add.w	r2, r7, #4544	; 0x11c0
    82cc:	e9c2 3400 	strd	r3, r4, [r2]
  t281.im = theta2;
    82d0:	f507 528e 	add.w	r2, r7, #4544	; 0x11c0
    82d4:	4b4b      	ldr	r3, [pc, #300]	; (8404 <G_q+0x314>)
    82d6:	f241 31d0 	movw	r1, #5072	; 0x13d0
    82da:	4439      	add	r1, r7
    82dc:	440b      	add	r3, r1
    82de:	e9d3 3400 	ldrd	r3, r4, [r3]
    82e2:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t280.re = -t299.re;
    82e6:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    82ea:	ed93 7b00 	vldr	d7, [r3]
    82ee:	eeb1 7b47 	vneg.f64	d7, d7
    82f2:	f241 13b0 	movw	r3, #4528	; 0x11b0
    82f6:	443b      	add	r3, r7
    82f8:	ed83 7b00 	vstr	d7, [r3]
  t280.im = -theta2;
    82fc:	4b41      	ldr	r3, [pc, #260]	; (8404 <G_q+0x314>)
    82fe:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8302:	443a      	add	r2, r7
    8304:	4413      	add	r3, r2
    8306:	ed93 7b00 	vldr	d7, [r3]
    830a:	eeb1 7b47 	vneg.f64	d7, d7
    830e:	f241 13b0 	movw	r3, #4528	; 0x11b0
    8312:	443b      	add	r3, r7
    8314:	ed83 7b02 	vstr	d7, [r3, #8]
  t277.re = t299.re;
    8318:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    831c:	e9d3 3400 	ldrd	r3, r4, [r3]
    8320:	f507 528d 	add.w	r2, r7, #4512	; 0x11a0
    8324:	e9c2 3400 	strd	r3, r4, [r2]
  t277.im = theta2;
    8328:	f507 528d 	add.w	r2, r7, #4512	; 0x11a0
    832c:	4b35      	ldr	r3, [pc, #212]	; (8404 <G_q+0x314>)
    832e:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8332:	4439      	add	r1, r7
    8334:	440b      	add	r3, r1
    8336:	e9d3 3400 	ldrd	r3, r4, [r3]
    833a:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t276.re = -t299.re;
    833e:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8342:	ed93 7b00 	vldr	d7, [r3]
    8346:	eeb1 7b47 	vneg.f64	d7, d7
    834a:	f241 1390 	movw	r3, #4496	; 0x1190
    834e:	443b      	add	r3, r7
    8350:	ed83 7b00 	vstr	d7, [r3]
  t276.im = -theta2;
    8354:	4b2b      	ldr	r3, [pc, #172]	; (8404 <G_q+0x314>)
    8356:	f241 32d0 	movw	r2, #5072	; 0x13d0
    835a:	443a      	add	r2, r7
    835c:	4413      	add	r3, r2
    835e:	ed93 7b00 	vldr	d7, [r3]
    8362:	eeb1 7b47 	vneg.f64	d7, d7
    8366:	f241 1390 	movw	r3, #4496	; 0x1190
    836a:	443b      	add	r3, r7
    836c:	ed83 7b02 	vstr	d7, [r3, #8]
  t273.re = t299.re;
    8370:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8374:	e9d3 3400 	ldrd	r3, r4, [r3]
    8378:	f507 528c 	add.w	r2, r7, #4480	; 0x1180
    837c:	e9c2 3400 	strd	r3, r4, [r2]
  t273.im = theta2;
    8380:	f507 528c 	add.w	r2, r7, #4480	; 0x1180
    8384:	4b1f      	ldr	r3, [pc, #124]	; (8404 <G_q+0x314>)
    8386:	f241 31d0 	movw	r1, #5072	; 0x13d0
    838a:	4439      	add	r1, r7
    838c:	440b      	add	r3, r1
    838e:	e9d3 3400 	ldrd	r3, r4, [r3]
    8392:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t272.re = -t299.re;
    8396:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    839a:	ed93 7b00 	vldr	d7, [r3]
    839e:	eeb1 7b47 	vneg.f64	d7, d7
    83a2:	f241 1370 	movw	r3, #4464	; 0x1170
    83a6:	443b      	add	r3, r7
    83a8:	ed83 7b00 	vstr	d7, [r3]
  t272.im = -theta2;
    83ac:	4b15      	ldr	r3, [pc, #84]	; (8404 <G_q+0x314>)
    83ae:	f241 32d0 	movw	r2, #5072	; 0x13d0
    83b2:	443a      	add	r2, r7
    83b4:	4413      	add	r3, r2
    83b6:	ed93 7b00 	vldr	d7, [r3]
    83ba:	eeb1 7b47 	vneg.f64	d7, d7
    83be:	f241 1370 	movw	r3, #4464	; 0x1170
    83c2:	443b      	add	r3, r7
    83c4:	ed83 7b02 	vstr	d7, [r3, #8]
  t269.re = t299.re;
    83c8:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    83cc:	e9d3 3400 	ldrd	r3, r4, [r3]
    83d0:	f507 528b 	add.w	r2, r7, #4448	; 0x1160
    83d4:	e9c2 3400 	strd	r3, r4, [r2]
  t269.im = theta2;
    83d8:	f507 528b 	add.w	r2, r7, #4448	; 0x1160
    83dc:	4b09      	ldr	r3, [pc, #36]	; (8404 <G_q+0x314>)
    83de:	f241 31d0 	movw	r1, #5072	; 0x13d0
    83e2:	4439      	add	r1, r7
    83e4:	440b      	add	r3, r1
    83e6:	e9d3 3400 	ldrd	r3, r4, [r3]
    83ea:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t268.re = -t299.re;
    83ee:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    83f2:	ed93 7b00 	vldr	d7, [r3]
    83f6:	e00f      	b.n	8418 <G_q+0x328>
	...
    8400:	ffffec58 	.word	0xffffec58
    8404:	ffffec50 	.word	0xffffec50
    8408:	ffffec48 	.word	0xffffec48
    840c:	ffffec38 	.word	0xffffec38
    8410:	ffffec34 	.word	0xffffec34
    8414:	0003435c 	.word	0x0003435c
    8418:	eeb1 7b47 	vneg.f64	d7, d7
    841c:	f241 1350 	movw	r3, #4432	; 0x1150
    8420:	443b      	add	r3, r7
    8422:	ed83 7b00 	vstr	d7, [r3]
  t268.im = -theta2;
    8426:	4bc0      	ldr	r3, [pc, #768]	; (8728 <G_q+0x638>)
    8428:	f241 32d0 	movw	r2, #5072	; 0x13d0
    842c:	443a      	add	r2, r7
    842e:	4413      	add	r3, r2
    8430:	ed93 7b00 	vldr	d7, [r3]
    8434:	eeb1 7b47 	vneg.f64	d7, d7
    8438:	f241 1350 	movw	r3, #4432	; 0x1150
    843c:	443b      	add	r3, r7
    843e:	ed83 7b02 	vstr	d7, [r3, #8]
  t263.re = t299.re;
    8442:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8446:	e9d3 3400 	ldrd	r3, r4, [r3]
    844a:	f507 528a 	add.w	r2, r7, #4416	; 0x1140
    844e:	e9c2 3400 	strd	r3, r4, [r2]
  t263.im = theta2;
    8452:	f507 528a 	add.w	r2, r7, #4416	; 0x1140
    8456:	4bb4      	ldr	r3, [pc, #720]	; (8728 <G_q+0x638>)
    8458:	f241 31d0 	movw	r1, #5072	; 0x13d0
    845c:	4439      	add	r1, r7
    845e:	440b      	add	r3, r1
    8460:	e9d3 3400 	ldrd	r3, r4, [r3]
    8464:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t262.re = -t299.re;
    8468:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    846c:	ed93 7b00 	vldr	d7, [r3]
    8470:	eeb1 7b47 	vneg.f64	d7, d7
    8474:	f241 1330 	movw	r3, #4400	; 0x1130
    8478:	443b      	add	r3, r7
    847a:	ed83 7b00 	vstr	d7, [r3]
  t262.im = -theta2;
    847e:	4baa      	ldr	r3, [pc, #680]	; (8728 <G_q+0x638>)
    8480:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8484:	443a      	add	r2, r7
    8486:	4413      	add	r3, r2
    8488:	ed93 7b00 	vldr	d7, [r3]
    848c:	eeb1 7b47 	vneg.f64	d7, d7
    8490:	f241 1330 	movw	r3, #4400	; 0x1130
    8494:	443b      	add	r3, r7
    8496:	ed83 7b02 	vstr	d7, [r3, #8]
  t259.re = t299.re;
    849a:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    849e:	e9d3 3400 	ldrd	r3, r4, [r3]
    84a2:	f507 5289 	add.w	r2, r7, #4384	; 0x1120
    84a6:	e9c2 3400 	strd	r3, r4, [r2]
  t259.im = theta2;
    84aa:	f507 5289 	add.w	r2, r7, #4384	; 0x1120
    84ae:	4b9e      	ldr	r3, [pc, #632]	; (8728 <G_q+0x638>)
    84b0:	f241 31d0 	movw	r1, #5072	; 0x13d0
    84b4:	4439      	add	r1, r7
    84b6:	440b      	add	r3, r1
    84b8:	e9d3 3400 	ldrd	r3, r4, [r3]
    84bc:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t258.re = -t299.re;
    84c0:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    84c4:	ed93 7b00 	vldr	d7, [r3]
    84c8:	eeb1 7b47 	vneg.f64	d7, d7
    84cc:	f241 1310 	movw	r3, #4368	; 0x1110
    84d0:	443b      	add	r3, r7
    84d2:	ed83 7b00 	vstr	d7, [r3]
  t258.im = -theta2;
    84d6:	4b94      	ldr	r3, [pc, #592]	; (8728 <G_q+0x638>)
    84d8:	f241 32d0 	movw	r2, #5072	; 0x13d0
    84dc:	443a      	add	r2, r7
    84de:	4413      	add	r3, r2
    84e0:	ed93 7b00 	vldr	d7, [r3]
    84e4:	eeb1 7b47 	vneg.f64	d7, d7
    84e8:	f241 1310 	movw	r3, #4368	; 0x1110
    84ec:	443b      	add	r3, r7
    84ee:	ed83 7b02 	vstr	d7, [r3, #8]
  t251.re = t299.re;
    84f2:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    84f6:	e9d3 3400 	ldrd	r3, r4, [r3]
    84fa:	f507 5288 	add.w	r2, r7, #4352	; 0x1100
    84fe:	e9c2 3400 	strd	r3, r4, [r2]
  t251.im = theta2;
    8502:	f507 5288 	add.w	r2, r7, #4352	; 0x1100
    8506:	4b88      	ldr	r3, [pc, #544]	; (8728 <G_q+0x638>)
    8508:	f241 31d0 	movw	r1, #5072	; 0x13d0
    850c:	4439      	add	r1, r7
    850e:	440b      	add	r3, r1
    8510:	e9d3 3400 	ldrd	r3, r4, [r3]
    8514:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t250.re = -t299.re;
    8518:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    851c:	ed93 7b00 	vldr	d7, [r3]
    8520:	eeb1 7b47 	vneg.f64	d7, d7
    8524:	f241 03f0 	movw	r3, #4336	; 0x10f0
    8528:	443b      	add	r3, r7
    852a:	ed83 7b00 	vstr	d7, [r3]
  t250.im = -theta2;
    852e:	4b7e      	ldr	r3, [pc, #504]	; (8728 <G_q+0x638>)
    8530:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8534:	443a      	add	r2, r7
    8536:	4413      	add	r3, r2
    8538:	ed93 7b00 	vldr	d7, [r3]
    853c:	eeb1 7b47 	vneg.f64	d7, d7
    8540:	f241 03f0 	movw	r3, #4336	; 0x10f0
    8544:	443b      	add	r3, r7
    8546:	ed83 7b02 	vstr	d7, [r3, #8]
  t249.re = t299.re;
    854a:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    854e:	e9d3 3400 	ldrd	r3, r4, [r3]
    8552:	f507 5287 	add.w	r2, r7, #4320	; 0x10e0
    8556:	e9c2 3400 	strd	r3, r4, [r2]
  t249.im = theta2;
    855a:	f507 5287 	add.w	r2, r7, #4320	; 0x10e0
    855e:	4b72      	ldr	r3, [pc, #456]	; (8728 <G_q+0x638>)
    8560:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8564:	4439      	add	r1, r7
    8566:	440b      	add	r3, r1
    8568:	e9d3 3400 	ldrd	r3, r4, [r3]
    856c:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t248.re = -t299.re;
    8570:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8574:	ed93 7b00 	vldr	d7, [r3]
    8578:	eeb1 7b47 	vneg.f64	d7, d7
    857c:	f241 03d0 	movw	r3, #4304	; 0x10d0
    8580:	443b      	add	r3, r7
    8582:	ed83 7b00 	vstr	d7, [r3]
  t248.im = -theta2;
    8586:	4b68      	ldr	r3, [pc, #416]	; (8728 <G_q+0x638>)
    8588:	f241 32d0 	movw	r2, #5072	; 0x13d0
    858c:	443a      	add	r2, r7
    858e:	4413      	add	r3, r2
    8590:	ed93 7b00 	vldr	d7, [r3]
    8594:	eeb1 7b47 	vneg.f64	d7, d7
    8598:	f241 03d0 	movw	r3, #4304	; 0x10d0
    859c:	443b      	add	r3, r7
    859e:	ed83 7b02 	vstr	d7, [r3, #8]
  t245.re = t299.re;
    85a2:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    85a6:	e9d3 3400 	ldrd	r3, r4, [r3]
    85aa:	f507 5286 	add.w	r2, r7, #4288	; 0x10c0
    85ae:	e9c2 3400 	strd	r3, r4, [r2]
  t245.im = theta2;
    85b2:	f507 5286 	add.w	r2, r7, #4288	; 0x10c0
    85b6:	4b5c      	ldr	r3, [pc, #368]	; (8728 <G_q+0x638>)
    85b8:	f241 31d0 	movw	r1, #5072	; 0x13d0
    85bc:	4439      	add	r1, r7
    85be:	440b      	add	r3, r1
    85c0:	e9d3 3400 	ldrd	r3, r4, [r3]
    85c4:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t244.re = -t299.re;
    85c8:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    85cc:	ed93 7b00 	vldr	d7, [r3]
    85d0:	eeb1 7b47 	vneg.f64	d7, d7
    85d4:	f241 03b0 	movw	r3, #4272	; 0x10b0
    85d8:	443b      	add	r3, r7
    85da:	ed83 7b00 	vstr	d7, [r3]
  t244.im = -theta2;
    85de:	4b52      	ldr	r3, [pc, #328]	; (8728 <G_q+0x638>)
    85e0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    85e4:	443a      	add	r2, r7
    85e6:	4413      	add	r3, r2
    85e8:	ed93 7b00 	vldr	d7, [r3]
    85ec:	eeb1 7b47 	vneg.f64	d7, d7
    85f0:	f241 03b0 	movw	r3, #4272	; 0x10b0
    85f4:	443b      	add	r3, r7
    85f6:	ed83 7b02 	vstr	d7, [r3, #8]
  t239.re = t299.re;
    85fa:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    85fe:	e9d3 3400 	ldrd	r3, r4, [r3]
    8602:	f507 5285 	add.w	r2, r7, #4256	; 0x10a0
    8606:	e9c2 3400 	strd	r3, r4, [r2]
  t239.im = theta2;
    860a:	f507 5285 	add.w	r2, r7, #4256	; 0x10a0
    860e:	4b46      	ldr	r3, [pc, #280]	; (8728 <G_q+0x638>)
    8610:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8614:	4439      	add	r1, r7
    8616:	440b      	add	r3, r1
    8618:	e9d3 3400 	ldrd	r3, r4, [r3]
    861c:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t238.re = -t299.re;
    8620:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8624:	ed93 7b00 	vldr	d7, [r3]
    8628:	eeb1 7b47 	vneg.f64	d7, d7
    862c:	f241 0390 	movw	r3, #4240	; 0x1090
    8630:	443b      	add	r3, r7
    8632:	ed83 7b00 	vstr	d7, [r3]
  t238.im = -theta2;
    8636:	4b3c      	ldr	r3, [pc, #240]	; (8728 <G_q+0x638>)
    8638:	f241 32d0 	movw	r2, #5072	; 0x13d0
    863c:	443a      	add	r2, r7
    863e:	4413      	add	r3, r2
    8640:	ed93 7b00 	vldr	d7, [r3]
    8644:	eeb1 7b47 	vneg.f64	d7, d7
    8648:	f241 0390 	movw	r3, #4240	; 0x1090
    864c:	443b      	add	r3, r7
    864e:	ed83 7b02 	vstr	d7, [r3, #8]
  t237.re = t299.re;
    8652:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8656:	e9d3 3400 	ldrd	r3, r4, [r3]
    865a:	f507 5284 	add.w	r2, r7, #4224	; 0x1080
    865e:	e9c2 3400 	strd	r3, r4, [r2]
  t237.im = theta2;
    8662:	f507 5284 	add.w	r2, r7, #4224	; 0x1080
    8666:	4b30      	ldr	r3, [pc, #192]	; (8728 <G_q+0x638>)
    8668:	f241 31d0 	movw	r1, #5072	; 0x13d0
    866c:	4439      	add	r1, r7
    866e:	440b      	add	r3, r1
    8670:	e9d3 3400 	ldrd	r3, r4, [r3]
    8674:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t236.re = -t299.re;
    8678:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    867c:	ed93 7b00 	vldr	d7, [r3]
    8680:	eeb1 7b47 	vneg.f64	d7, d7
    8684:	f241 0370 	movw	r3, #4208	; 0x1070
    8688:	443b      	add	r3, r7
    868a:	ed83 7b00 	vstr	d7, [r3]
  t236.im = -theta2;
    868e:	4b26      	ldr	r3, [pc, #152]	; (8728 <G_q+0x638>)
    8690:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8694:	443a      	add	r2, r7
    8696:	4413      	add	r3, r2
    8698:	ed93 7b00 	vldr	d7, [r3]
    869c:	eeb1 7b47 	vneg.f64	d7, d7
    86a0:	f241 0370 	movw	r3, #4208	; 0x1070
    86a4:	443b      	add	r3, r7
    86a6:	ed83 7b02 	vstr	d7, [r3, #8]
  t233.re = t299.re;
    86aa:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    86ae:	e9d3 3400 	ldrd	r3, r4, [r3]
    86b2:	f507 5283 	add.w	r2, r7, #4192	; 0x1060
    86b6:	e9c2 3400 	strd	r3, r4, [r2]
  t233.im = theta2;
    86ba:	f507 5283 	add.w	r2, r7, #4192	; 0x1060
    86be:	4b1a      	ldr	r3, [pc, #104]	; (8728 <G_q+0x638>)
    86c0:	f241 31d0 	movw	r1, #5072	; 0x13d0
    86c4:	4439      	add	r1, r7
    86c6:	440b      	add	r3, r1
    86c8:	e9d3 3400 	ldrd	r3, r4, [r3]
    86cc:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t232.re = -t299.re;
    86d0:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    86d4:	ed93 7b00 	vldr	d7, [r3]
    86d8:	eeb1 7b47 	vneg.f64	d7, d7
    86dc:	f241 0350 	movw	r3, #4176	; 0x1050
    86e0:	443b      	add	r3, r7
    86e2:	ed83 7b00 	vstr	d7, [r3]
  t232.im = -theta2;
    86e6:	4b10      	ldr	r3, [pc, #64]	; (8728 <G_q+0x638>)
    86e8:	f241 32d0 	movw	r2, #5072	; 0x13d0
    86ec:	443a      	add	r2, r7
    86ee:	4413      	add	r3, r2
    86f0:	ed93 7b00 	vldr	d7, [r3]
    86f4:	eeb1 7b47 	vneg.f64	d7, d7
    86f8:	f241 0350 	movw	r3, #4176	; 0x1050
    86fc:	443b      	add	r3, r7
    86fe:	ed83 7b02 	vstr	d7, [r3, #8]
  t227.re = t299.re;
    8702:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8706:	e9d3 3400 	ldrd	r3, r4, [r3]
    870a:	f507 5282 	add.w	r2, r7, #4160	; 0x1040
    870e:	e9c2 3400 	strd	r3, r4, [r2]
  t227.im = theta2;
    8712:	f507 5282 	add.w	r2, r7, #4160	; 0x1040
    8716:	4b04      	ldr	r3, [pc, #16]	; (8728 <G_q+0x638>)
    8718:	f241 31d0 	movw	r1, #5072	; 0x13d0
    871c:	4439      	add	r1, r7
    871e:	440b      	add	r3, r1
    8720:	e9d3 3400 	ldrd	r3, r4, [r3]
    8724:	e002      	b.n	872c <G_q+0x63c>
    8726:	bf00      	nop
    8728:	ffffec50 	.word	0xffffec50
    872c:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t226.re = -t299.re;
    8730:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8734:	ed93 7b00 	vldr	d7, [r3]
    8738:	eeb1 7b47 	vneg.f64	d7, d7
    873c:	f241 0330 	movw	r3, #4144	; 0x1030
    8740:	443b      	add	r3, r7
    8742:	ed83 7b00 	vstr	d7, [r3]
  t226.im = -theta2;
    8746:	4bc4      	ldr	r3, [pc, #784]	; (8a58 <G_q+0x968>)
    8748:	f241 32d0 	movw	r2, #5072	; 0x13d0
    874c:	443a      	add	r2, r7
    874e:	4413      	add	r3, r2
    8750:	ed93 7b00 	vldr	d7, [r3]
    8754:	eeb1 7b47 	vneg.f64	d7, d7
    8758:	f241 0330 	movw	r3, #4144	; 0x1030
    875c:	443b      	add	r3, r7
    875e:	ed83 7b02 	vstr	d7, [r3, #8]
  t223.re = t299.re;
    8762:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8766:	e9d3 3400 	ldrd	r3, r4, [r3]
    876a:	f507 5281 	add.w	r2, r7, #4128	; 0x1020
    876e:	e9c2 3400 	strd	r3, r4, [r2]
  t223.im = theta2;
    8772:	f507 5281 	add.w	r2, r7, #4128	; 0x1020
    8776:	4bb8      	ldr	r3, [pc, #736]	; (8a58 <G_q+0x968>)
    8778:	f241 31d0 	movw	r1, #5072	; 0x13d0
    877c:	4439      	add	r1, r7
    877e:	440b      	add	r3, r1
    8780:	e9d3 3400 	ldrd	r3, r4, [r3]
    8784:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t222.re = -t299.re;
    8788:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    878c:	ed93 7b00 	vldr	d7, [r3]
    8790:	eeb1 7b47 	vneg.f64	d7, d7
    8794:	f241 0310 	movw	r3, #4112	; 0x1010
    8798:	443b      	add	r3, r7
    879a:	ed83 7b00 	vstr	d7, [r3]
  t222.im = -theta2;
    879e:	4bae      	ldr	r3, [pc, #696]	; (8a58 <G_q+0x968>)
    87a0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    87a4:	443a      	add	r2, r7
    87a6:	4413      	add	r3, r2
    87a8:	ed93 7b00 	vldr	d7, [r3]
    87ac:	eeb1 7b47 	vneg.f64	d7, d7
    87b0:	f241 0310 	movw	r3, #4112	; 0x1010
    87b4:	443b      	add	r3, r7
    87b6:	ed83 7b02 	vstr	d7, [r3, #8]
  t217.re = t299.re;
    87ba:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    87be:	e9d3 3400 	ldrd	r3, r4, [r3]
    87c2:	f507 5280 	add.w	r2, r7, #4096	; 0x1000
    87c6:	e9c2 3400 	strd	r3, r4, [r2]
  t217.im = theta2;
    87ca:	f507 5280 	add.w	r2, r7, #4096	; 0x1000
    87ce:	4ba2      	ldr	r3, [pc, #648]	; (8a58 <G_q+0x968>)
    87d0:	f241 31d0 	movw	r1, #5072	; 0x13d0
    87d4:	4439      	add	r1, r7
    87d6:	440b      	add	r3, r1
    87d8:	e9d3 3400 	ldrd	r3, r4, [r3]
    87dc:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t216.re = -t299.re;
    87e0:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    87e4:	ed93 7b00 	vldr	d7, [r3]
    87e8:	eeb1 7b47 	vneg.f64	d7, d7
    87ec:	f507 637f 	add.w	r3, r7, #4080	; 0xff0
    87f0:	ed83 7b00 	vstr	d7, [r3]
  t216.im = -theta2;
    87f4:	4b98      	ldr	r3, [pc, #608]	; (8a58 <G_q+0x968>)
    87f6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    87fa:	443a      	add	r2, r7
    87fc:	4413      	add	r3, r2
    87fe:	ed93 7b00 	vldr	d7, [r3]
    8802:	eeb1 7b47 	vneg.f64	d7, d7
    8806:	f507 637f 	add.w	r3, r7, #4080	; 0xff0
    880a:	ed83 7b02 	vstr	d7, [r3, #8]
  t213.re = t299.re;
    880e:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8812:	e9d3 3400 	ldrd	r3, r4, [r3]
    8816:	f507 627e 	add.w	r2, r7, #4064	; 0xfe0
    881a:	e9c2 3400 	strd	r3, r4, [r2]
  t213.im = theta2;
    881e:	f507 627e 	add.w	r2, r7, #4064	; 0xfe0
    8822:	4b8d      	ldr	r3, [pc, #564]	; (8a58 <G_q+0x968>)
    8824:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8828:	4439      	add	r1, r7
    882a:	440b      	add	r3, r1
    882c:	e9d3 3400 	ldrd	r3, r4, [r3]
    8830:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t212.re = -t299.re;
    8834:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8838:	ed93 7b00 	vldr	d7, [r3]
    883c:	eeb1 7b47 	vneg.f64	d7, d7
    8840:	f507 637d 	add.w	r3, r7, #4048	; 0xfd0
    8844:	ed83 7b00 	vstr	d7, [r3]
  t212.im = -theta2;
    8848:	4b83      	ldr	r3, [pc, #524]	; (8a58 <G_q+0x968>)
    884a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    884e:	443a      	add	r2, r7
    8850:	4413      	add	r3, r2
    8852:	ed93 7b00 	vldr	d7, [r3]
    8856:	eeb1 7b47 	vneg.f64	d7, d7
    885a:	f507 637d 	add.w	r3, r7, #4048	; 0xfd0
    885e:	ed83 7b02 	vstr	d7, [r3, #8]
  t205.re = t299.re;
    8862:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8866:	e9d3 3400 	ldrd	r3, r4, [r3]
    886a:	f507 627c 	add.w	r2, r7, #4032	; 0xfc0
    886e:	e9c2 3400 	strd	r3, r4, [r2]
  t205.im = theta2;
    8872:	f507 627c 	add.w	r2, r7, #4032	; 0xfc0
    8876:	4b78      	ldr	r3, [pc, #480]	; (8a58 <G_q+0x968>)
    8878:	f241 31d0 	movw	r1, #5072	; 0x13d0
    887c:	4439      	add	r1, r7
    887e:	440b      	add	r3, r1
    8880:	e9d3 3400 	ldrd	r3, r4, [r3]
    8884:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t204.re = -t299.re;
    8888:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    888c:	ed93 7b00 	vldr	d7, [r3]
    8890:	eeb1 7b47 	vneg.f64	d7, d7
    8894:	f507 637b 	add.w	r3, r7, #4016	; 0xfb0
    8898:	ed83 7b00 	vstr	d7, [r3]
  t204.im = -theta2;
    889c:	4b6e      	ldr	r3, [pc, #440]	; (8a58 <G_q+0x968>)
    889e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    88a2:	443a      	add	r2, r7
    88a4:	4413      	add	r3, r2
    88a6:	ed93 7b00 	vldr	d7, [r3]
    88aa:	eeb1 7b47 	vneg.f64	d7, d7
    88ae:	f507 637b 	add.w	r3, r7, #4016	; 0xfb0
    88b2:	ed83 7b02 	vstr	d7, [r3, #8]
  t203.re = t299.re;
    88b6:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    88ba:	e9d3 3400 	ldrd	r3, r4, [r3]
    88be:	f507 627a 	add.w	r2, r7, #4000	; 0xfa0
    88c2:	e9c2 3400 	strd	r3, r4, [r2]
  t203.im = theta2;
    88c6:	f507 627a 	add.w	r2, r7, #4000	; 0xfa0
    88ca:	4b63      	ldr	r3, [pc, #396]	; (8a58 <G_q+0x968>)
    88cc:	f241 31d0 	movw	r1, #5072	; 0x13d0
    88d0:	4439      	add	r1, r7
    88d2:	440b      	add	r3, r1
    88d4:	e9d3 3400 	ldrd	r3, r4, [r3]
    88d8:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t202.re = -t299.re;
    88dc:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    88e0:	ed93 7b00 	vldr	d7, [r3]
    88e4:	eeb1 7b47 	vneg.f64	d7, d7
    88e8:	f507 6379 	add.w	r3, r7, #3984	; 0xf90
    88ec:	ed83 7b00 	vstr	d7, [r3]
  t202.im = -theta2;
    88f0:	4b59      	ldr	r3, [pc, #356]	; (8a58 <G_q+0x968>)
    88f2:	f241 32d0 	movw	r2, #5072	; 0x13d0
    88f6:	443a      	add	r2, r7
    88f8:	4413      	add	r3, r2
    88fa:	ed93 7b00 	vldr	d7, [r3]
    88fe:	eeb1 7b47 	vneg.f64	d7, d7
    8902:	f507 6379 	add.w	r3, r7, #3984	; 0xf90
    8906:	ed83 7b02 	vstr	d7, [r3, #8]
  t199.re = t299.re;
    890a:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    890e:	e9d3 3400 	ldrd	r3, r4, [r3]
    8912:	f507 6278 	add.w	r2, r7, #3968	; 0xf80
    8916:	e9c2 3400 	strd	r3, r4, [r2]
  t199.im = theta2;
    891a:	f507 6278 	add.w	r2, r7, #3968	; 0xf80
    891e:	4b4e      	ldr	r3, [pc, #312]	; (8a58 <G_q+0x968>)
    8920:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8924:	4439      	add	r1, r7
    8926:	440b      	add	r3, r1
    8928:	e9d3 3400 	ldrd	r3, r4, [r3]
    892c:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t198.re = -t299.re;
    8930:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8934:	ed93 7b00 	vldr	d7, [r3]
    8938:	eeb1 7b47 	vneg.f64	d7, d7
    893c:	f507 6377 	add.w	r3, r7, #3952	; 0xf70
    8940:	ed83 7b00 	vstr	d7, [r3]
  t198.im = -theta2;
    8944:	4b44      	ldr	r3, [pc, #272]	; (8a58 <G_q+0x968>)
    8946:	f241 32d0 	movw	r2, #5072	; 0x13d0
    894a:	443a      	add	r2, r7
    894c:	4413      	add	r3, r2
    894e:	ed93 7b00 	vldr	d7, [r3]
    8952:	eeb1 7b47 	vneg.f64	d7, d7
    8956:	f507 6377 	add.w	r3, r7, #3952	; 0xf70
    895a:	ed83 7b02 	vstr	d7, [r3, #8]
  t193.re = t299.re;
    895e:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8962:	e9d3 3400 	ldrd	r3, r4, [r3]
    8966:	f507 6276 	add.w	r2, r7, #3936	; 0xf60
    896a:	e9c2 3400 	strd	r3, r4, [r2]
  t193.im = theta2;
    896e:	f507 6276 	add.w	r2, r7, #3936	; 0xf60
    8972:	4b39      	ldr	r3, [pc, #228]	; (8a58 <G_q+0x968>)
    8974:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8978:	4439      	add	r1, r7
    897a:	440b      	add	r3, r1
    897c:	e9d3 3400 	ldrd	r3, r4, [r3]
    8980:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t192.re = -t299.re;
    8984:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8988:	ed93 7b00 	vldr	d7, [r3]
    898c:	eeb1 7b47 	vneg.f64	d7, d7
    8990:	f507 6375 	add.w	r3, r7, #3920	; 0xf50
    8994:	ed83 7b00 	vstr	d7, [r3]
  t192.im = -theta2;
    8998:	4b2f      	ldr	r3, [pc, #188]	; (8a58 <G_q+0x968>)
    899a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    899e:	443a      	add	r2, r7
    89a0:	4413      	add	r3, r2
    89a2:	ed93 7b00 	vldr	d7, [r3]
    89a6:	eeb1 7b47 	vneg.f64	d7, d7
    89aa:	f507 6375 	add.w	r3, r7, #3920	; 0xf50
    89ae:	ed83 7b02 	vstr	d7, [r3, #8]
  t189.re = t299.re;
    89b2:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    89b6:	e9d3 3400 	ldrd	r3, r4, [r3]
    89ba:	f507 6274 	add.w	r2, r7, #3904	; 0xf40
    89be:	e9c2 3400 	strd	r3, r4, [r2]
  t189.im = theta2;
    89c2:	f507 6274 	add.w	r2, r7, #3904	; 0xf40
    89c6:	4b24      	ldr	r3, [pc, #144]	; (8a58 <G_q+0x968>)
    89c8:	f241 31d0 	movw	r1, #5072	; 0x13d0
    89cc:	4439      	add	r1, r7
    89ce:	440b      	add	r3, r1
    89d0:	e9d3 3400 	ldrd	r3, r4, [r3]
    89d4:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t188.re = -t299.re;
    89d8:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    89dc:	ed93 7b00 	vldr	d7, [r3]
    89e0:	eeb1 7b47 	vneg.f64	d7, d7
    89e4:	f507 6373 	add.w	r3, r7, #3888	; 0xf30
    89e8:	ed83 7b00 	vstr	d7, [r3]
  t188.im = -theta2;
    89ec:	4b1a      	ldr	r3, [pc, #104]	; (8a58 <G_q+0x968>)
    89ee:	f241 32d0 	movw	r2, #5072	; 0x13d0
    89f2:	443a      	add	r2, r7
    89f4:	4413      	add	r3, r2
    89f6:	ed93 7b00 	vldr	d7, [r3]
    89fa:	eeb1 7b47 	vneg.f64	d7, d7
    89fe:	f507 6373 	add.w	r3, r7, #3888	; 0xf30
    8a02:	ed83 7b02 	vstr	d7, [r3, #8]
  t181.re = t299.re;
    8a06:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8a0a:	e9d3 3400 	ldrd	r3, r4, [r3]
    8a0e:	f507 6272 	add.w	r2, r7, #3872	; 0xf20
    8a12:	e9c2 3400 	strd	r3, r4, [r2]
  t181.im = theta2;
    8a16:	f507 6272 	add.w	r2, r7, #3872	; 0xf20
    8a1a:	4b0f      	ldr	r3, [pc, #60]	; (8a58 <G_q+0x968>)
    8a1c:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8a20:	4439      	add	r1, r7
    8a22:	440b      	add	r3, r1
    8a24:	e9d3 3400 	ldrd	r3, r4, [r3]
    8a28:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t180.re = -t299.re;
    8a2c:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8a30:	ed93 7b00 	vldr	d7, [r3]
    8a34:	eeb1 7b47 	vneg.f64	d7, d7
    8a38:	f507 6371 	add.w	r3, r7, #3856	; 0xf10
    8a3c:	ed83 7b00 	vstr	d7, [r3]
  t180.im = -theta2;
    8a40:	4b05      	ldr	r3, [pc, #20]	; (8a58 <G_q+0x968>)
    8a42:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8a46:	443a      	add	r2, r7
    8a48:	4413      	add	r3, r2
    8a4a:	ed93 7b00 	vldr	d7, [r3]
    8a4e:	eeb1 7b47 	vneg.f64	d7, d7
    8a52:	f507 6371 	add.w	r3, r7, #3856	; 0xf10
    8a56:	e001      	b.n	8a5c <G_q+0x96c>
    8a58:	ffffec50 	.word	0xffffec50
    8a5c:	ed83 7b02 	vstr	d7, [r3, #8]
  t179.re = t299.re;
    8a60:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8a64:	e9d3 3400 	ldrd	r3, r4, [r3]
    8a68:	f507 6270 	add.w	r2, r7, #3840	; 0xf00
    8a6c:	e9c2 3400 	strd	r3, r4, [r2]
  t179.im = theta2;
    8a70:	f507 6270 	add.w	r2, r7, #3840	; 0xf00
    8a74:	4bc3      	ldr	r3, [pc, #780]	; (8d84 <G_q+0xc94>)
    8a76:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8a7a:	4439      	add	r1, r7
    8a7c:	440b      	add	r3, r1
    8a7e:	e9d3 3400 	ldrd	r3, r4, [r3]
    8a82:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t178.re = -t299.re;
    8a86:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8a8a:	ed93 7b00 	vldr	d7, [r3]
    8a8e:	eeb1 7b47 	vneg.f64	d7, d7
    8a92:	f507 636f 	add.w	r3, r7, #3824	; 0xef0
    8a96:	ed83 7b00 	vstr	d7, [r3]
  t178.im = -theta2;
    8a9a:	4bba      	ldr	r3, [pc, #744]	; (8d84 <G_q+0xc94>)
    8a9c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8aa0:	443a      	add	r2, r7
    8aa2:	4413      	add	r3, r2
    8aa4:	ed93 7b00 	vldr	d7, [r3]
    8aa8:	eeb1 7b47 	vneg.f64	d7, d7
    8aac:	f507 636f 	add.w	r3, r7, #3824	; 0xef0
    8ab0:	ed83 7b02 	vstr	d7, [r3, #8]
  t175.re = t299.re;
    8ab4:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8ab8:	e9d3 3400 	ldrd	r3, r4, [r3]
    8abc:	f507 626e 	add.w	r2, r7, #3808	; 0xee0
    8ac0:	e9c2 3400 	strd	r3, r4, [r2]
  t175.im = theta2;
    8ac4:	f507 626e 	add.w	r2, r7, #3808	; 0xee0
    8ac8:	4bae      	ldr	r3, [pc, #696]	; (8d84 <G_q+0xc94>)
    8aca:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8ace:	4439      	add	r1, r7
    8ad0:	440b      	add	r3, r1
    8ad2:	e9d3 3400 	ldrd	r3, r4, [r3]
    8ad6:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t174.re = -t299.re;
    8ada:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8ade:	ed93 7b00 	vldr	d7, [r3]
    8ae2:	eeb1 7b47 	vneg.f64	d7, d7
    8ae6:	f507 636d 	add.w	r3, r7, #3792	; 0xed0
    8aea:	ed83 7b00 	vstr	d7, [r3]
  t174.im = -theta2;
    8aee:	4ba5      	ldr	r3, [pc, #660]	; (8d84 <G_q+0xc94>)
    8af0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8af4:	443a      	add	r2, r7
    8af6:	4413      	add	r3, r2
    8af8:	ed93 7b00 	vldr	d7, [r3]
    8afc:	eeb1 7b47 	vneg.f64	d7, d7
    8b00:	f507 636d 	add.w	r3, r7, #3792	; 0xed0
    8b04:	ed83 7b02 	vstr	d7, [r3, #8]
  t171.re = t299.re;
    8b08:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8b0c:	e9d3 3400 	ldrd	r3, r4, [r3]
    8b10:	f507 626c 	add.w	r2, r7, #3776	; 0xec0
    8b14:	e9c2 3400 	strd	r3, r4, [r2]
  t171.im = theta2;
    8b18:	f507 626c 	add.w	r2, r7, #3776	; 0xec0
    8b1c:	4b99      	ldr	r3, [pc, #612]	; (8d84 <G_q+0xc94>)
    8b1e:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8b22:	4439      	add	r1, r7
    8b24:	440b      	add	r3, r1
    8b26:	e9d3 3400 	ldrd	r3, r4, [r3]
    8b2a:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t170.re = -t299.re;
    8b2e:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8b32:	ed93 7b00 	vldr	d7, [r3]
    8b36:	eeb1 7b47 	vneg.f64	d7, d7
    8b3a:	f507 636b 	add.w	r3, r7, #3760	; 0xeb0
    8b3e:	ed83 7b00 	vstr	d7, [r3]
  t170.im = -theta2;
    8b42:	4b90      	ldr	r3, [pc, #576]	; (8d84 <G_q+0xc94>)
    8b44:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8b48:	443a      	add	r2, r7
    8b4a:	4413      	add	r3, r2
    8b4c:	ed93 7b00 	vldr	d7, [r3]
    8b50:	eeb1 7b47 	vneg.f64	d7, d7
    8b54:	f507 636b 	add.w	r3, r7, #3760	; 0xeb0
    8b58:	ed83 7b02 	vstr	d7, [r3, #8]
  t167.re = t299.re;
    8b5c:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8b60:	e9d3 3400 	ldrd	r3, r4, [r3]
    8b64:	f507 626a 	add.w	r2, r7, #3744	; 0xea0
    8b68:	e9c2 3400 	strd	r3, r4, [r2]
  t167.im = theta2;
    8b6c:	f507 626a 	add.w	r2, r7, #3744	; 0xea0
    8b70:	4b84      	ldr	r3, [pc, #528]	; (8d84 <G_q+0xc94>)
    8b72:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8b76:	4439      	add	r1, r7
    8b78:	440b      	add	r3, r1
    8b7a:	e9d3 3400 	ldrd	r3, r4, [r3]
    8b7e:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t166.re = -t299.re;
    8b82:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8b86:	ed93 7b00 	vldr	d7, [r3]
    8b8a:	eeb1 7b47 	vneg.f64	d7, d7
    8b8e:	f507 6369 	add.w	r3, r7, #3728	; 0xe90
    8b92:	ed83 7b00 	vstr	d7, [r3]
  t166.im = -theta2;
    8b96:	4b7b      	ldr	r3, [pc, #492]	; (8d84 <G_q+0xc94>)
    8b98:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8b9c:	443a      	add	r2, r7
    8b9e:	4413      	add	r3, r2
    8ba0:	ed93 7b00 	vldr	d7, [r3]
    8ba4:	eeb1 7b47 	vneg.f64	d7, d7
    8ba8:	f507 6369 	add.w	r3, r7, #3728	; 0xe90
    8bac:	ed83 7b02 	vstr	d7, [r3, #8]
  t161.re = t299.re;
    8bb0:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8bb4:	e9d3 3400 	ldrd	r3, r4, [r3]
    8bb8:	f507 6268 	add.w	r2, r7, #3712	; 0xe80
    8bbc:	e9c2 3400 	strd	r3, r4, [r2]
  t161.im = theta2;
    8bc0:	f507 6268 	add.w	r2, r7, #3712	; 0xe80
    8bc4:	4b6f      	ldr	r3, [pc, #444]	; (8d84 <G_q+0xc94>)
    8bc6:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8bca:	4439      	add	r1, r7
    8bcc:	440b      	add	r3, r1
    8bce:	e9d3 3400 	ldrd	r3, r4, [r3]
    8bd2:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t160.re = -t299.re;
    8bd6:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8bda:	ed93 7b00 	vldr	d7, [r3]
    8bde:	eeb1 7b47 	vneg.f64	d7, d7
    8be2:	f507 6367 	add.w	r3, r7, #3696	; 0xe70
    8be6:	ed83 7b00 	vstr	d7, [r3]
  t160.im = -theta2;
    8bea:	4b66      	ldr	r3, [pc, #408]	; (8d84 <G_q+0xc94>)
    8bec:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8bf0:	443a      	add	r2, r7
    8bf2:	4413      	add	r3, r2
    8bf4:	ed93 7b00 	vldr	d7, [r3]
    8bf8:	eeb1 7b47 	vneg.f64	d7, d7
    8bfc:	f507 6367 	add.w	r3, r7, #3696	; 0xe70
    8c00:	ed83 7b02 	vstr	d7, [r3, #8]
  t157.re = t299.re;
    8c04:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8c08:	e9d3 3400 	ldrd	r3, r4, [r3]
    8c0c:	f507 6266 	add.w	r2, r7, #3680	; 0xe60
    8c10:	e9c2 3400 	strd	r3, r4, [r2]
  t157.im = theta2;
    8c14:	f507 6266 	add.w	r2, r7, #3680	; 0xe60
    8c18:	4b5a      	ldr	r3, [pc, #360]	; (8d84 <G_q+0xc94>)
    8c1a:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8c1e:	4439      	add	r1, r7
    8c20:	440b      	add	r3, r1
    8c22:	e9d3 3400 	ldrd	r3, r4, [r3]
    8c26:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t156.re = -t299.re;
    8c2a:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8c2e:	ed93 7b00 	vldr	d7, [r3]
    8c32:	eeb1 7b47 	vneg.f64	d7, d7
    8c36:	f507 6365 	add.w	r3, r7, #3664	; 0xe50
    8c3a:	ed83 7b00 	vstr	d7, [r3]
  t156.im = -theta2;
    8c3e:	4b51      	ldr	r3, [pc, #324]	; (8d84 <G_q+0xc94>)
    8c40:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8c44:	443a      	add	r2, r7
    8c46:	4413      	add	r3, r2
    8c48:	ed93 7b00 	vldr	d7, [r3]
    8c4c:	eeb1 7b47 	vneg.f64	d7, d7
    8c50:	f507 6365 	add.w	r3, r7, #3664	; 0xe50
    8c54:	ed83 7b02 	vstr	d7, [r3, #8]
  t149.re = t299.re;
    8c58:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8c5c:	e9d3 3400 	ldrd	r3, r4, [r3]
    8c60:	f507 6264 	add.w	r2, r7, #3648	; 0xe40
    8c64:	e9c2 3400 	strd	r3, r4, [r2]
  t149.im = theta2;
    8c68:	f507 6264 	add.w	r2, r7, #3648	; 0xe40
    8c6c:	4b45      	ldr	r3, [pc, #276]	; (8d84 <G_q+0xc94>)
    8c6e:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8c72:	4439      	add	r1, r7
    8c74:	440b      	add	r3, r1
    8c76:	e9d3 3400 	ldrd	r3, r4, [r3]
    8c7a:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t148.re = -t299.re;
    8c7e:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8c82:	ed93 7b00 	vldr	d7, [r3]
    8c86:	eeb1 7b47 	vneg.f64	d7, d7
    8c8a:	f507 6363 	add.w	r3, r7, #3632	; 0xe30
    8c8e:	ed83 7b00 	vstr	d7, [r3]
  t148.im = -theta2;
    8c92:	4b3c      	ldr	r3, [pc, #240]	; (8d84 <G_q+0xc94>)
    8c94:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8c98:	443a      	add	r2, r7
    8c9a:	4413      	add	r3, r2
    8c9c:	ed93 7b00 	vldr	d7, [r3]
    8ca0:	eeb1 7b47 	vneg.f64	d7, d7
    8ca4:	f507 6363 	add.w	r3, r7, #3632	; 0xe30
    8ca8:	ed83 7b02 	vstr	d7, [r3, #8]
  t147.re = t299.re;
    8cac:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8cb0:	e9d3 3400 	ldrd	r3, r4, [r3]
    8cb4:	f507 6262 	add.w	r2, r7, #3616	; 0xe20
    8cb8:	e9c2 3400 	strd	r3, r4, [r2]
  t147.im = theta2;
    8cbc:	f507 6262 	add.w	r2, r7, #3616	; 0xe20
    8cc0:	4b30      	ldr	r3, [pc, #192]	; (8d84 <G_q+0xc94>)
    8cc2:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8cc6:	4439      	add	r1, r7
    8cc8:	440b      	add	r3, r1
    8cca:	e9d3 3400 	ldrd	r3, r4, [r3]
    8cce:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t146.re = -t299.re;
    8cd2:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8cd6:	ed93 7b00 	vldr	d7, [r3]
    8cda:	eeb1 7b47 	vneg.f64	d7, d7
    8cde:	f507 6361 	add.w	r3, r7, #3600	; 0xe10
    8ce2:	ed83 7b00 	vstr	d7, [r3]
  t146.im = -theta2;
    8ce6:	4b27      	ldr	r3, [pc, #156]	; (8d84 <G_q+0xc94>)
    8ce8:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8cec:	443a      	add	r2, r7
    8cee:	4413      	add	r3, r2
    8cf0:	ed93 7b00 	vldr	d7, [r3]
    8cf4:	eeb1 7b47 	vneg.f64	d7, d7
    8cf8:	f507 6361 	add.w	r3, r7, #3600	; 0xe10
    8cfc:	ed83 7b02 	vstr	d7, [r3, #8]
  t143.re = t299.re;
    8d00:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8d04:	e9d3 3400 	ldrd	r3, r4, [r3]
    8d08:	f507 6260 	add.w	r2, r7, #3584	; 0xe00
    8d0c:	e9c2 3400 	strd	r3, r4, [r2]
  t143.im = theta2;
    8d10:	f507 6260 	add.w	r2, r7, #3584	; 0xe00
    8d14:	4b1b      	ldr	r3, [pc, #108]	; (8d84 <G_q+0xc94>)
    8d16:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8d1a:	4439      	add	r1, r7
    8d1c:	440b      	add	r3, r1
    8d1e:	e9d3 3400 	ldrd	r3, r4, [r3]
    8d22:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t142.re = -t299.re;
    8d26:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8d2a:	ed93 7b00 	vldr	d7, [r3]
    8d2e:	eeb1 7b47 	vneg.f64	d7, d7
    8d32:	f507 635f 	add.w	r3, r7, #3568	; 0xdf0
    8d36:	ed83 7b00 	vstr	d7, [r3]
  t142.im = -theta2;
    8d3a:	4b12      	ldr	r3, [pc, #72]	; (8d84 <G_q+0xc94>)
    8d3c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8d40:	443a      	add	r2, r7
    8d42:	4413      	add	r3, r2
    8d44:	ed93 7b00 	vldr	d7, [r3]
    8d48:	eeb1 7b47 	vneg.f64	d7, d7
    8d4c:	f507 635f 	add.w	r3, r7, #3568	; 0xdf0
    8d50:	ed83 7b02 	vstr	d7, [r3, #8]
  t139.re = t299.re;
    8d54:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8d58:	e9d3 3400 	ldrd	r3, r4, [r3]
    8d5c:	f507 625e 	add.w	r2, r7, #3552	; 0xde0
    8d60:	e9c2 3400 	strd	r3, r4, [r2]
  t139.im = theta2;
    8d64:	f507 625e 	add.w	r2, r7, #3552	; 0xde0
    8d68:	4b06      	ldr	r3, [pc, #24]	; (8d84 <G_q+0xc94>)
    8d6a:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8d6e:	4439      	add	r1, r7
    8d70:	440b      	add	r3, r1
    8d72:	e9d3 3400 	ldrd	r3, r4, [r3]
    8d76:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t138.re = -t299.re;
    8d7a:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8d7e:	ed93 7b00 	vldr	d7, [r3]
    8d82:	e001      	b.n	8d88 <G_q+0xc98>
    8d84:	ffffec50 	.word	0xffffec50
    8d88:	eeb1 7b47 	vneg.f64	d7, d7
    8d8c:	f507 635d 	add.w	r3, r7, #3536	; 0xdd0
    8d90:	ed83 7b00 	vstr	d7, [r3]
  t138.im = -theta2;
    8d94:	4bc4      	ldr	r3, [pc, #784]	; (90a8 <G_q+0xfb8>)
    8d96:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8d9a:	443a      	add	r2, r7
    8d9c:	4413      	add	r3, r2
    8d9e:	ed93 7b00 	vldr	d7, [r3]
    8da2:	eeb1 7b47 	vneg.f64	d7, d7
    8da6:	f507 635d 	add.w	r3, r7, #3536	; 0xdd0
    8daa:	ed83 7b02 	vstr	d7, [r3, #8]
  t133.re = t299.re;
    8dae:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8db2:	e9d3 3400 	ldrd	r3, r4, [r3]
    8db6:	f507 625c 	add.w	r2, r7, #3520	; 0xdc0
    8dba:	e9c2 3400 	strd	r3, r4, [r2]
  t133.im = theta2;
    8dbe:	f507 625c 	add.w	r2, r7, #3520	; 0xdc0
    8dc2:	4bb9      	ldr	r3, [pc, #740]	; (90a8 <G_q+0xfb8>)
    8dc4:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8dc8:	4439      	add	r1, r7
    8dca:	440b      	add	r3, r1
    8dcc:	e9d3 3400 	ldrd	r3, r4, [r3]
    8dd0:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t132.re = -t299.re;
    8dd4:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8dd8:	ed93 7b00 	vldr	d7, [r3]
    8ddc:	eeb1 7b47 	vneg.f64	d7, d7
    8de0:	f507 635b 	add.w	r3, r7, #3504	; 0xdb0
    8de4:	ed83 7b00 	vstr	d7, [r3]
  t132.im = -theta2;
    8de8:	4baf      	ldr	r3, [pc, #700]	; (90a8 <G_q+0xfb8>)
    8dea:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8dee:	443a      	add	r2, r7
    8df0:	4413      	add	r3, r2
    8df2:	ed93 7b00 	vldr	d7, [r3]
    8df6:	eeb1 7b47 	vneg.f64	d7, d7
    8dfa:	f507 635b 	add.w	r3, r7, #3504	; 0xdb0
    8dfe:	ed83 7b02 	vstr	d7, [r3, #8]
  t127.re = t299.re;
    8e02:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8e06:	e9d3 3400 	ldrd	r3, r4, [r3]
    8e0a:	f507 625a 	add.w	r2, r7, #3488	; 0xda0
    8e0e:	e9c2 3400 	strd	r3, r4, [r2]
  t127.im = theta2;
    8e12:	f507 625a 	add.w	r2, r7, #3488	; 0xda0
    8e16:	4ba4      	ldr	r3, [pc, #656]	; (90a8 <G_q+0xfb8>)
    8e18:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8e1c:	4439      	add	r1, r7
    8e1e:	440b      	add	r3, r1
    8e20:	e9d3 3400 	ldrd	r3, r4, [r3]
    8e24:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t126.re = -t299.re;
    8e28:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8e2c:	ed93 7b00 	vldr	d7, [r3]
    8e30:	eeb1 7b47 	vneg.f64	d7, d7
    8e34:	f507 6359 	add.w	r3, r7, #3472	; 0xd90
    8e38:	ed83 7b00 	vstr	d7, [r3]
  t126.im = -theta2;
    8e3c:	4b9a      	ldr	r3, [pc, #616]	; (90a8 <G_q+0xfb8>)
    8e3e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8e42:	443a      	add	r2, r7
    8e44:	4413      	add	r3, r2
    8e46:	ed93 7b00 	vldr	d7, [r3]
    8e4a:	eeb1 7b47 	vneg.f64	d7, d7
    8e4e:	f507 6359 	add.w	r3, r7, #3472	; 0xd90
    8e52:	ed83 7b02 	vstr	d7, [r3, #8]
  t119.re = t299.re;
    8e56:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8e5a:	e9d3 3400 	ldrd	r3, r4, [r3]
    8e5e:	f507 6258 	add.w	r2, r7, #3456	; 0xd80
    8e62:	e9c2 3400 	strd	r3, r4, [r2]
  t119.im = theta2;
    8e66:	f507 6258 	add.w	r2, r7, #3456	; 0xd80
    8e6a:	4b8f      	ldr	r3, [pc, #572]	; (90a8 <G_q+0xfb8>)
    8e6c:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8e70:	4439      	add	r1, r7
    8e72:	440b      	add	r3, r1
    8e74:	e9d3 3400 	ldrd	r3, r4, [r3]
    8e78:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t118.re = -t299.re;
    8e7c:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8e80:	ed93 7b00 	vldr	d7, [r3]
    8e84:	eeb1 7b47 	vneg.f64	d7, d7
    8e88:	f507 6357 	add.w	r3, r7, #3440	; 0xd70
    8e8c:	ed83 7b00 	vstr	d7, [r3]
  t118.im = -theta2;
    8e90:	4b85      	ldr	r3, [pc, #532]	; (90a8 <G_q+0xfb8>)
    8e92:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8e96:	443a      	add	r2, r7
    8e98:	4413      	add	r3, r2
    8e9a:	ed93 7b00 	vldr	d7, [r3]
    8e9e:	eeb1 7b47 	vneg.f64	d7, d7
    8ea2:	f507 6357 	add.w	r3, r7, #3440	; 0xd70
    8ea6:	ed83 7b02 	vstr	d7, [r3, #8]
  t117.re = t299.re;
    8eaa:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8eae:	e9d3 3400 	ldrd	r3, r4, [r3]
    8eb2:	f507 6256 	add.w	r2, r7, #3424	; 0xd60
    8eb6:	e9c2 3400 	strd	r3, r4, [r2]
  t117.im = theta2;
    8eba:	f507 6256 	add.w	r2, r7, #3424	; 0xd60
    8ebe:	4b7a      	ldr	r3, [pc, #488]	; (90a8 <G_q+0xfb8>)
    8ec0:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8ec4:	4439      	add	r1, r7
    8ec6:	440b      	add	r3, r1
    8ec8:	e9d3 3400 	ldrd	r3, r4, [r3]
    8ecc:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t116.re = -t299.re;
    8ed0:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8ed4:	ed93 7b00 	vldr	d7, [r3]
    8ed8:	eeb1 7b47 	vneg.f64	d7, d7
    8edc:	f507 6355 	add.w	r3, r7, #3408	; 0xd50
    8ee0:	ed83 7b00 	vstr	d7, [r3]
  t116.im = -theta2;
    8ee4:	4b70      	ldr	r3, [pc, #448]	; (90a8 <G_q+0xfb8>)
    8ee6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8eea:	443a      	add	r2, r7
    8eec:	4413      	add	r3, r2
    8eee:	ed93 7b00 	vldr	d7, [r3]
    8ef2:	eeb1 7b47 	vneg.f64	d7, d7
    8ef6:	f507 6355 	add.w	r3, r7, #3408	; 0xd50
    8efa:	ed83 7b02 	vstr	d7, [r3, #8]
  t111.re = t299.re;
    8efe:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8f02:	e9d3 3400 	ldrd	r3, r4, [r3]
    8f06:	f507 6254 	add.w	r2, r7, #3392	; 0xd40
    8f0a:	e9c2 3400 	strd	r3, r4, [r2]
  t111.im = theta2;
    8f0e:	f507 6254 	add.w	r2, r7, #3392	; 0xd40
    8f12:	4b65      	ldr	r3, [pc, #404]	; (90a8 <G_q+0xfb8>)
    8f14:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8f18:	4439      	add	r1, r7
    8f1a:	440b      	add	r3, r1
    8f1c:	e9d3 3400 	ldrd	r3, r4, [r3]
    8f20:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t110.re = -t299.re;
    8f24:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8f28:	ed93 7b00 	vldr	d7, [r3]
    8f2c:	eeb1 7b47 	vneg.f64	d7, d7
    8f30:	f507 6353 	add.w	r3, r7, #3376	; 0xd30
    8f34:	ed83 7b00 	vstr	d7, [r3]
  t110.im = -theta2;
    8f38:	4b5b      	ldr	r3, [pc, #364]	; (90a8 <G_q+0xfb8>)
    8f3a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8f3e:	443a      	add	r2, r7
    8f40:	4413      	add	r3, r2
    8f42:	ed93 7b00 	vldr	d7, [r3]
    8f46:	eeb1 7b47 	vneg.f64	d7, d7
    8f4a:	f507 6353 	add.w	r3, r7, #3376	; 0xd30
    8f4e:	ed83 7b02 	vstr	d7, [r3, #8]
  t105.re = t299.re;
    8f52:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8f56:	e9d3 3400 	ldrd	r3, r4, [r3]
    8f5a:	f507 6252 	add.w	r2, r7, #3360	; 0xd20
    8f5e:	e9c2 3400 	strd	r3, r4, [r2]
  t105.im = theta2;
    8f62:	f507 6252 	add.w	r2, r7, #3360	; 0xd20
    8f66:	4b50      	ldr	r3, [pc, #320]	; (90a8 <G_q+0xfb8>)
    8f68:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8f6c:	4439      	add	r1, r7
    8f6e:	440b      	add	r3, r1
    8f70:	e9d3 3400 	ldrd	r3, r4, [r3]
    8f74:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t104.re = -t299.re;
    8f78:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8f7c:	ed93 7b00 	vldr	d7, [r3]
    8f80:	eeb1 7b47 	vneg.f64	d7, d7
    8f84:	f507 6351 	add.w	r3, r7, #3344	; 0xd10
    8f88:	ed83 7b00 	vstr	d7, [r3]
  t104.im = -theta2;
    8f8c:	4b46      	ldr	r3, [pc, #280]	; (90a8 <G_q+0xfb8>)
    8f8e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8f92:	443a      	add	r2, r7
    8f94:	4413      	add	r3, r2
    8f96:	ed93 7b00 	vldr	d7, [r3]
    8f9a:	eeb1 7b47 	vneg.f64	d7, d7
    8f9e:	f507 6351 	add.w	r3, r7, #3344	; 0xd10
    8fa2:	ed83 7b02 	vstr	d7, [r3, #8]
  t97.re = t299.re;
    8fa6:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8faa:	e9d3 3400 	ldrd	r3, r4, [r3]
    8fae:	f507 6250 	add.w	r2, r7, #3328	; 0xd00
    8fb2:	e9c2 3400 	strd	r3, r4, [r2]
  t97.im = theta2;
    8fb6:	f507 6250 	add.w	r2, r7, #3328	; 0xd00
    8fba:	4b3b      	ldr	r3, [pc, #236]	; (90a8 <G_q+0xfb8>)
    8fbc:	f241 31d0 	movw	r1, #5072	; 0x13d0
    8fc0:	4439      	add	r1, r7
    8fc2:	440b      	add	r3, r1
    8fc4:	e9d3 3400 	ldrd	r3, r4, [r3]
    8fc8:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t96.re = -t299.re;
    8fcc:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8fd0:	ed93 7b00 	vldr	d7, [r3]
    8fd4:	eeb1 7b47 	vneg.f64	d7, d7
    8fd8:	f507 634f 	add.w	r3, r7, #3312	; 0xcf0
    8fdc:	ed83 7b00 	vstr	d7, [r3]
  t96.im = -theta2;
    8fe0:	4b31      	ldr	r3, [pc, #196]	; (90a8 <G_q+0xfb8>)
    8fe2:	f241 32d0 	movw	r2, #5072	; 0x13d0
    8fe6:	443a      	add	r2, r7
    8fe8:	4413      	add	r3, r2
    8fea:	ed93 7b00 	vldr	d7, [r3]
    8fee:	eeb1 7b47 	vneg.f64	d7, d7
    8ff2:	f507 634f 	add.w	r3, r7, #3312	; 0xcf0
    8ff6:	ed83 7b02 	vstr	d7, [r3, #8]
  t95.re = t299.re;
    8ffa:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    8ffe:	e9d3 3400 	ldrd	r3, r4, [r3]
    9002:	f507 624e 	add.w	r2, r7, #3296	; 0xce0
    9006:	e9c2 3400 	strd	r3, r4, [r2]
  t95.im = theta2;
    900a:	f507 624e 	add.w	r2, r7, #3296	; 0xce0
    900e:	4b26      	ldr	r3, [pc, #152]	; (90a8 <G_q+0xfb8>)
    9010:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9014:	4439      	add	r1, r7
    9016:	440b      	add	r3, r1
    9018:	e9d3 3400 	ldrd	r3, r4, [r3]
    901c:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t94.re = -t299.re;
    9020:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9024:	ed93 7b00 	vldr	d7, [r3]
    9028:	eeb1 7b47 	vneg.f64	d7, d7
    902c:	f507 634d 	add.w	r3, r7, #3280	; 0xcd0
    9030:	ed83 7b00 	vstr	d7, [r3]
  t94.im = -theta2;
    9034:	4b1c      	ldr	r3, [pc, #112]	; (90a8 <G_q+0xfb8>)
    9036:	f241 32d0 	movw	r2, #5072	; 0x13d0
    903a:	443a      	add	r2, r7
    903c:	4413      	add	r3, r2
    903e:	ed93 7b00 	vldr	d7, [r3]
    9042:	eeb1 7b47 	vneg.f64	d7, d7
    9046:	f507 634d 	add.w	r3, r7, #3280	; 0xcd0
    904a:	ed83 7b02 	vstr	d7, [r3, #8]
  t83.re = t299.re;
    904e:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9052:	e9d3 3400 	ldrd	r3, r4, [r3]
    9056:	f507 624c 	add.w	r2, r7, #3264	; 0xcc0
    905a:	e9c2 3400 	strd	r3, r4, [r2]
  t83.im = theta2;
    905e:	f507 624c 	add.w	r2, r7, #3264	; 0xcc0
    9062:	4b11      	ldr	r3, [pc, #68]	; (90a8 <G_q+0xfb8>)
    9064:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9068:	4439      	add	r1, r7
    906a:	440b      	add	r3, r1
    906c:	e9d3 3400 	ldrd	r3, r4, [r3]
    9070:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t82.re = -t299.re;
    9074:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9078:	ed93 7b00 	vldr	d7, [r3]
    907c:	eeb1 7b47 	vneg.f64	d7, d7
    9080:	f507 634b 	add.w	r3, r7, #3248	; 0xcb0
    9084:	ed83 7b00 	vstr	d7, [r3]
  t82.im = -theta2;
    9088:	4b07      	ldr	r3, [pc, #28]	; (90a8 <G_q+0xfb8>)
    908a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    908e:	443a      	add	r2, r7
    9090:	4413      	add	r3, r2
    9092:	ed93 7b00 	vldr	d7, [r3]
    9096:	eeb1 7b47 	vneg.f64	d7, d7
    909a:	f507 634b 	add.w	r3, r7, #3248	; 0xcb0
    909e:	ed83 7b02 	vstr	d7, [r3, #8]
  t79.re = t299.re;
    90a2:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    90a6:	e001      	b.n	90ac <G_q+0xfbc>
    90a8:	ffffec50 	.word	0xffffec50
    90ac:	e9d3 3400 	ldrd	r3, r4, [r3]
    90b0:	f507 624a 	add.w	r2, r7, #3232	; 0xca0
    90b4:	e9c2 3400 	strd	r3, r4, [r2]
  t79.im = theta2;
    90b8:	f507 624a 	add.w	r2, r7, #3232	; 0xca0
    90bc:	4bc3      	ldr	r3, [pc, #780]	; (93cc <G_q+0x12dc>)
    90be:	f241 31d0 	movw	r1, #5072	; 0x13d0
    90c2:	4439      	add	r1, r7
    90c4:	440b      	add	r3, r1
    90c6:	e9d3 3400 	ldrd	r3, r4, [r3]
    90ca:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t78.re = -t299.re;
    90ce:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    90d2:	ed93 7b00 	vldr	d7, [r3]
    90d6:	eeb1 7b47 	vneg.f64	d7, d7
    90da:	f507 6349 	add.w	r3, r7, #3216	; 0xc90
    90de:	ed83 7b00 	vstr	d7, [r3]
  t78.im = -theta2;
    90e2:	4bba      	ldr	r3, [pc, #744]	; (93cc <G_q+0x12dc>)
    90e4:	f241 32d0 	movw	r2, #5072	; 0x13d0
    90e8:	443a      	add	r2, r7
    90ea:	4413      	add	r3, r2
    90ec:	ed93 7b00 	vldr	d7, [r3]
    90f0:	eeb1 7b47 	vneg.f64	d7, d7
    90f4:	f507 6349 	add.w	r3, r7, #3216	; 0xc90
    90f8:	ed83 7b02 	vstr	d7, [r3, #8]
  t77.re = t299.re;
    90fc:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9100:	e9d3 3400 	ldrd	r3, r4, [r3]
    9104:	f507 6248 	add.w	r2, r7, #3200	; 0xc80
    9108:	e9c2 3400 	strd	r3, r4, [r2]
  t77.im = theta2;
    910c:	f507 6248 	add.w	r2, r7, #3200	; 0xc80
    9110:	4bae      	ldr	r3, [pc, #696]	; (93cc <G_q+0x12dc>)
    9112:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9116:	4439      	add	r1, r7
    9118:	440b      	add	r3, r1
    911a:	e9d3 3400 	ldrd	r3, r4, [r3]
    911e:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t76.re = -t299.re;
    9122:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9126:	ed93 7b00 	vldr	d7, [r3]
    912a:	eeb1 7b47 	vneg.f64	d7, d7
    912e:	f507 6347 	add.w	r3, r7, #3184	; 0xc70
    9132:	ed83 7b00 	vstr	d7, [r3]
  t76.im = -theta2;
    9136:	4ba5      	ldr	r3, [pc, #660]	; (93cc <G_q+0x12dc>)
    9138:	f241 32d0 	movw	r2, #5072	; 0x13d0
    913c:	443a      	add	r2, r7
    913e:	4413      	add	r3, r2
    9140:	ed93 7b00 	vldr	d7, [r3]
    9144:	eeb1 7b47 	vneg.f64	d7, d7
    9148:	f507 6347 	add.w	r3, r7, #3184	; 0xc70
    914c:	ed83 7b02 	vstr	d7, [r3, #8]
  t71.re = t299.re;
    9150:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9154:	e9d3 3400 	ldrd	r3, r4, [r3]
    9158:	f507 6246 	add.w	r2, r7, #3168	; 0xc60
    915c:	e9c2 3400 	strd	r3, r4, [r2]
  t71.im = theta2;
    9160:	f507 6246 	add.w	r2, r7, #3168	; 0xc60
    9164:	4b99      	ldr	r3, [pc, #612]	; (93cc <G_q+0x12dc>)
    9166:	f241 31d0 	movw	r1, #5072	; 0x13d0
    916a:	4439      	add	r1, r7
    916c:	440b      	add	r3, r1
    916e:	e9d3 3400 	ldrd	r3, r4, [r3]
    9172:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t70.re = -t299.re;
    9176:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    917a:	ed93 7b00 	vldr	d7, [r3]
    917e:	eeb1 7b47 	vneg.f64	d7, d7
    9182:	f507 6345 	add.w	r3, r7, #3152	; 0xc50
    9186:	ed83 7b00 	vstr	d7, [r3]
  t70.im = -theta2;
    918a:	4b90      	ldr	r3, [pc, #576]	; (93cc <G_q+0x12dc>)
    918c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9190:	443a      	add	r2, r7
    9192:	4413      	add	r3, r2
    9194:	ed93 7b00 	vldr	d7, [r3]
    9198:	eeb1 7b47 	vneg.f64	d7, d7
    919c:	f507 6345 	add.w	r3, r7, #3152	; 0xc50
    91a0:	ed83 7b02 	vstr	d7, [r3, #8]
  t67.re = t299.re;
    91a4:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    91a8:	e9d3 3400 	ldrd	r3, r4, [r3]
    91ac:	f507 6244 	add.w	r2, r7, #3136	; 0xc40
    91b0:	e9c2 3400 	strd	r3, r4, [r2]
  t67.im = theta2;
    91b4:	f507 6244 	add.w	r2, r7, #3136	; 0xc40
    91b8:	4b84      	ldr	r3, [pc, #528]	; (93cc <G_q+0x12dc>)
    91ba:	f241 31d0 	movw	r1, #5072	; 0x13d0
    91be:	4439      	add	r1, r7
    91c0:	440b      	add	r3, r1
    91c2:	e9d3 3400 	ldrd	r3, r4, [r3]
    91c6:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t66.re = -t299.re;
    91ca:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    91ce:	ed93 7b00 	vldr	d7, [r3]
    91d2:	eeb1 7b47 	vneg.f64	d7, d7
    91d6:	f507 6343 	add.w	r3, r7, #3120	; 0xc30
    91da:	ed83 7b00 	vstr	d7, [r3]
  t66.im = -theta2;
    91de:	4b7b      	ldr	r3, [pc, #492]	; (93cc <G_q+0x12dc>)
    91e0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    91e4:	443a      	add	r2, r7
    91e6:	4413      	add	r3, r2
    91e8:	ed93 7b00 	vldr	d7, [r3]
    91ec:	eeb1 7b47 	vneg.f64	d7, d7
    91f0:	f507 6343 	add.w	r3, r7, #3120	; 0xc30
    91f4:	ed83 7b02 	vstr	d7, [r3, #8]
  t63.re = t299.re;
    91f8:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    91fc:	e9d3 3400 	ldrd	r3, r4, [r3]
    9200:	f507 6242 	add.w	r2, r7, #3104	; 0xc20
    9204:	e9c2 3400 	strd	r3, r4, [r2]
  t63.im = theta2;
    9208:	f507 6242 	add.w	r2, r7, #3104	; 0xc20
    920c:	4b6f      	ldr	r3, [pc, #444]	; (93cc <G_q+0x12dc>)
    920e:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9212:	4439      	add	r1, r7
    9214:	440b      	add	r3, r1
    9216:	e9d3 3400 	ldrd	r3, r4, [r3]
    921a:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t62.re = -t299.re;
    921e:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9222:	ed93 7b00 	vldr	d7, [r3]
    9226:	eeb1 7b47 	vneg.f64	d7, d7
    922a:	f507 6341 	add.w	r3, r7, #3088	; 0xc10
    922e:	ed83 7b00 	vstr	d7, [r3]
  t62.im = -theta2;
    9232:	4b66      	ldr	r3, [pc, #408]	; (93cc <G_q+0x12dc>)
    9234:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9238:	443a      	add	r2, r7
    923a:	4413      	add	r3, r2
    923c:	ed93 7b00 	vldr	d7, [r3]
    9240:	eeb1 7b47 	vneg.f64	d7, d7
    9244:	f507 6341 	add.w	r3, r7, #3088	; 0xc10
    9248:	ed83 7b02 	vstr	d7, [r3, #8]
  t61.re = t299.re;
    924c:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9250:	e9d3 3400 	ldrd	r3, r4, [r3]
    9254:	f507 6240 	add.w	r2, r7, #3072	; 0xc00
    9258:	e9c2 3400 	strd	r3, r4, [r2]
  t61.im = theta2;
    925c:	f507 6240 	add.w	r2, r7, #3072	; 0xc00
    9260:	4b5a      	ldr	r3, [pc, #360]	; (93cc <G_q+0x12dc>)
    9262:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9266:	4439      	add	r1, r7
    9268:	440b      	add	r3, r1
    926a:	e9d3 3400 	ldrd	r3, r4, [r3]
    926e:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t60.re = -t299.re;
    9272:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9276:	ed93 7b00 	vldr	d7, [r3]
    927a:	eeb1 7b47 	vneg.f64	d7, d7
    927e:	f507 633f 	add.w	r3, r7, #3056	; 0xbf0
    9282:	ed83 7b00 	vstr	d7, [r3]
  t60.im = -theta2;
    9286:	4b51      	ldr	r3, [pc, #324]	; (93cc <G_q+0x12dc>)
    9288:	f241 32d0 	movw	r2, #5072	; 0x13d0
    928c:	443a      	add	r2, r7
    928e:	4413      	add	r3, r2
    9290:	ed93 7b00 	vldr	d7, [r3]
    9294:	eeb1 7b47 	vneg.f64	d7, d7
    9298:	f507 633f 	add.w	r3, r7, #3056	; 0xbf0
    929c:	ed83 7b02 	vstr	d7, [r3, #8]
  t57.re = t299.re;
    92a0:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    92a4:	e9d3 3400 	ldrd	r3, r4, [r3]
    92a8:	f507 623e 	add.w	r2, r7, #3040	; 0xbe0
    92ac:	e9c2 3400 	strd	r3, r4, [r2]
  t57.im = theta2;
    92b0:	f507 623e 	add.w	r2, r7, #3040	; 0xbe0
    92b4:	4b45      	ldr	r3, [pc, #276]	; (93cc <G_q+0x12dc>)
    92b6:	f241 31d0 	movw	r1, #5072	; 0x13d0
    92ba:	4439      	add	r1, r7
    92bc:	440b      	add	r3, r1
    92be:	e9d3 3400 	ldrd	r3, r4, [r3]
    92c2:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t56.re = -t299.re;
    92c6:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    92ca:	ed93 7b00 	vldr	d7, [r3]
    92ce:	eeb1 7b47 	vneg.f64	d7, d7
    92d2:	f507 633d 	add.w	r3, r7, #3024	; 0xbd0
    92d6:	ed83 7b00 	vstr	d7, [r3]
  t56.im = -theta2;
    92da:	4b3c      	ldr	r3, [pc, #240]	; (93cc <G_q+0x12dc>)
    92dc:	f241 32d0 	movw	r2, #5072	; 0x13d0
    92e0:	443a      	add	r2, r7
    92e2:	4413      	add	r3, r2
    92e4:	ed93 7b00 	vldr	d7, [r3]
    92e8:	eeb1 7b47 	vneg.f64	d7, d7
    92ec:	f507 633d 	add.w	r3, r7, #3024	; 0xbd0
    92f0:	ed83 7b02 	vstr	d7, [r3, #8]
  t50.re = t299.re;
    92f4:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    92f8:	e9d3 3400 	ldrd	r3, r4, [r3]
    92fc:	f507 623c 	add.w	r2, r7, #3008	; 0xbc0
    9300:	e9c2 3400 	strd	r3, r4, [r2]
  t50.im = theta2;
    9304:	f507 623c 	add.w	r2, r7, #3008	; 0xbc0
    9308:	4b30      	ldr	r3, [pc, #192]	; (93cc <G_q+0x12dc>)
    930a:	f241 31d0 	movw	r1, #5072	; 0x13d0
    930e:	4439      	add	r1, r7
    9310:	440b      	add	r3, r1
    9312:	e9d3 3400 	ldrd	r3, r4, [r3]
    9316:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t49.re = -t299.re;
    931a:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    931e:	ed93 7b00 	vldr	d7, [r3]
    9322:	eeb1 7b47 	vneg.f64	d7, d7
    9326:	f507 633b 	add.w	r3, r7, #2992	; 0xbb0
    932a:	ed83 7b00 	vstr	d7, [r3]
  t49.im = -theta2;
    932e:	4b27      	ldr	r3, [pc, #156]	; (93cc <G_q+0x12dc>)
    9330:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9334:	443a      	add	r2, r7
    9336:	4413      	add	r3, r2
    9338:	ed93 7b00 	vldr	d7, [r3]
    933c:	eeb1 7b47 	vneg.f64	d7, d7
    9340:	f507 633b 	add.w	r3, r7, #2992	; 0xbb0
    9344:	ed83 7b02 	vstr	d7, [r3, #8]
  t46.re = t299.re;
    9348:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    934c:	e9d3 3400 	ldrd	r3, r4, [r3]
    9350:	f507 623a 	add.w	r2, r7, #2976	; 0xba0
    9354:	e9c2 3400 	strd	r3, r4, [r2]
  t46.im = theta2;
    9358:	f507 623a 	add.w	r2, r7, #2976	; 0xba0
    935c:	4b1b      	ldr	r3, [pc, #108]	; (93cc <G_q+0x12dc>)
    935e:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9362:	4439      	add	r1, r7
    9364:	440b      	add	r3, r1
    9366:	e9d3 3400 	ldrd	r3, r4, [r3]
    936a:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t45.re = -t299.re;
    936e:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9372:	ed93 7b00 	vldr	d7, [r3]
    9376:	eeb1 7b47 	vneg.f64	d7, d7
    937a:	f507 6339 	add.w	r3, r7, #2960	; 0xb90
    937e:	ed83 7b00 	vstr	d7, [r3]
  t45.im = -theta2;
    9382:	4b12      	ldr	r3, [pc, #72]	; (93cc <G_q+0x12dc>)
    9384:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9388:	443a      	add	r2, r7
    938a:	4413      	add	r3, r2
    938c:	ed93 7b00 	vldr	d7, [r3]
    9390:	eeb1 7b47 	vneg.f64	d7, d7
    9394:	f507 6339 	add.w	r3, r7, #2960	; 0xb90
    9398:	ed83 7b02 	vstr	d7, [r3, #8]
  t44.re = t299.re;
    939c:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    93a0:	e9d3 3400 	ldrd	r3, r4, [r3]
    93a4:	f507 6238 	add.w	r2, r7, #2944	; 0xb80
    93a8:	e9c2 3400 	strd	r3, r4, [r2]
  t44.im = theta2;
    93ac:	f507 6238 	add.w	r2, r7, #2944	; 0xb80
    93b0:	4b06      	ldr	r3, [pc, #24]	; (93cc <G_q+0x12dc>)
    93b2:	f241 31d0 	movw	r1, #5072	; 0x13d0
    93b6:	4439      	add	r1, r7
    93b8:	440b      	add	r3, r1
    93ba:	e9d3 3400 	ldrd	r3, r4, [r3]
    93be:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t43.re = -t299.re;
    93c2:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    93c6:	ed93 7b00 	vldr	d7, [r3]
    93ca:	e001      	b.n	93d0 <G_q+0x12e0>
    93cc:	ffffec50 	.word	0xffffec50
    93d0:	eeb1 7b47 	vneg.f64	d7, d7
    93d4:	f507 6337 	add.w	r3, r7, #2928	; 0xb70
    93d8:	ed83 7b00 	vstr	d7, [r3]
  t43.im = -theta2;
    93dc:	4bc6      	ldr	r3, [pc, #792]	; (96f8 <G_q+0x1608>)
    93de:	f241 32d0 	movw	r2, #5072	; 0x13d0
    93e2:	443a      	add	r2, r7
    93e4:	4413      	add	r3, r2
    93e6:	ed93 7b00 	vldr	d7, [r3]
    93ea:	eeb1 7b47 	vneg.f64	d7, d7
    93ee:	f507 6337 	add.w	r3, r7, #2928	; 0xb70
    93f2:	ed83 7b02 	vstr	d7, [r3, #8]
  t40.re = t299.re;
    93f6:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    93fa:	e9d3 3400 	ldrd	r3, r4, [r3]
    93fe:	f507 6236 	add.w	r2, r7, #2912	; 0xb60
    9402:	e9c2 3400 	strd	r3, r4, [r2]
  t40.im = theta2;
    9406:	f507 6236 	add.w	r2, r7, #2912	; 0xb60
    940a:	4bbb      	ldr	r3, [pc, #748]	; (96f8 <G_q+0x1608>)
    940c:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9410:	4439      	add	r1, r7
    9412:	440b      	add	r3, r1
    9414:	e9d3 3400 	ldrd	r3, r4, [r3]
    9418:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t39.re = -t299.re;
    941c:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9420:	ed93 7b00 	vldr	d7, [r3]
    9424:	eeb1 7b47 	vneg.f64	d7, d7
    9428:	f507 6335 	add.w	r3, r7, #2896	; 0xb50
    942c:	ed83 7b00 	vstr	d7, [r3]
  t39.im = -theta2;
    9430:	4bb1      	ldr	r3, [pc, #708]	; (96f8 <G_q+0x1608>)
    9432:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9436:	443a      	add	r2, r7
    9438:	4413      	add	r3, r2
    943a:	ed93 7b00 	vldr	d7, [r3]
    943e:	eeb1 7b47 	vneg.f64	d7, d7
    9442:	f507 6335 	add.w	r3, r7, #2896	; 0xb50
    9446:	ed83 7b02 	vstr	d7, [r3, #8]
  t34.re = t299.re;
    944a:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    944e:	e9d3 3400 	ldrd	r3, r4, [r3]
    9452:	f507 6234 	add.w	r2, r7, #2880	; 0xb40
    9456:	e9c2 3400 	strd	r3, r4, [r2]
  t34.im = theta2;
    945a:	f507 6234 	add.w	r2, r7, #2880	; 0xb40
    945e:	4ba6      	ldr	r3, [pc, #664]	; (96f8 <G_q+0x1608>)
    9460:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9464:	4439      	add	r1, r7
    9466:	440b      	add	r3, r1
    9468:	e9d3 3400 	ldrd	r3, r4, [r3]
    946c:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t33.re = -t299.re;
    9470:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9474:	ed93 7b00 	vldr	d7, [r3]
    9478:	eeb1 7b47 	vneg.f64	d7, d7
    947c:	f507 6333 	add.w	r3, r7, #2864	; 0xb30
    9480:	ed83 7b00 	vstr	d7, [r3]
  t33.im = -theta2;
    9484:	4b9c      	ldr	r3, [pc, #624]	; (96f8 <G_q+0x1608>)
    9486:	f241 32d0 	movw	r2, #5072	; 0x13d0
    948a:	443a      	add	r2, r7
    948c:	4413      	add	r3, r2
    948e:	ed93 7b00 	vldr	d7, [r3]
    9492:	eeb1 7b47 	vneg.f64	d7, d7
    9496:	f507 6333 	add.w	r3, r7, #2864	; 0xb30
    949a:	ed83 7b02 	vstr	d7, [r3, #8]
  t30.re = t299.re;
    949e:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    94a2:	e9d3 3400 	ldrd	r3, r4, [r3]
    94a6:	f507 6232 	add.w	r2, r7, #2848	; 0xb20
    94aa:	e9c2 3400 	strd	r3, r4, [r2]
  t30.im = theta2;
    94ae:	f507 6232 	add.w	r2, r7, #2848	; 0xb20
    94b2:	4b91      	ldr	r3, [pc, #580]	; (96f8 <G_q+0x1608>)
    94b4:	f241 31d0 	movw	r1, #5072	; 0x13d0
    94b8:	4439      	add	r1, r7
    94ba:	440b      	add	r3, r1
    94bc:	e9d3 3400 	ldrd	r3, r4, [r3]
    94c0:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t29.re = -t299.re;
    94c4:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    94c8:	ed93 7b00 	vldr	d7, [r3]
    94cc:	eeb1 7b47 	vneg.f64	d7, d7
    94d0:	f507 6331 	add.w	r3, r7, #2832	; 0xb10
    94d4:	ed83 7b00 	vstr	d7, [r3]
  t29.im = -theta2;
    94d8:	4b87      	ldr	r3, [pc, #540]	; (96f8 <G_q+0x1608>)
    94da:	f241 32d0 	movw	r2, #5072	; 0x13d0
    94de:	443a      	add	r2, r7
    94e0:	4413      	add	r3, r2
    94e2:	ed93 7b00 	vldr	d7, [r3]
    94e6:	eeb1 7b47 	vneg.f64	d7, d7
    94ea:	f507 6331 	add.w	r3, r7, #2832	; 0xb10
    94ee:	ed83 7b02 	vstr	d7, [r3, #8]
  t26.re = t299.re;
    94f2:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    94f6:	e9d3 3400 	ldrd	r3, r4, [r3]
    94fa:	f507 6230 	add.w	r2, r7, #2816	; 0xb00
    94fe:	e9c2 3400 	strd	r3, r4, [r2]
  t26.im = theta2;
    9502:	f507 6230 	add.w	r2, r7, #2816	; 0xb00
    9506:	4b7c      	ldr	r3, [pc, #496]	; (96f8 <G_q+0x1608>)
    9508:	f241 31d0 	movw	r1, #5072	; 0x13d0
    950c:	4439      	add	r1, r7
    950e:	440b      	add	r3, r1
    9510:	e9d3 3400 	ldrd	r3, r4, [r3]
    9514:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t25.re = -t299.re;
    9518:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    951c:	ed93 7b00 	vldr	d7, [r3]
    9520:	eeb1 7b47 	vneg.f64	d7, d7
    9524:	f507 632f 	add.w	r3, r7, #2800	; 0xaf0
    9528:	ed83 7b00 	vstr	d7, [r3]
  t25.im = -theta2;
    952c:	4b72      	ldr	r3, [pc, #456]	; (96f8 <G_q+0x1608>)
    952e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9532:	443a      	add	r2, r7
    9534:	4413      	add	r3, r2
    9536:	ed93 7b00 	vldr	d7, [r3]
    953a:	eeb1 7b47 	vneg.f64	d7, d7
    953e:	f507 632f 	add.w	r3, r7, #2800	; 0xaf0
    9542:	ed83 7b02 	vstr	d7, [r3, #8]
  t24.re = t299.re;
    9546:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    954a:	e9d3 3400 	ldrd	r3, r4, [r3]
    954e:	f507 622e 	add.w	r2, r7, #2784	; 0xae0
    9552:	e9c2 3400 	strd	r3, r4, [r2]
  t24.im = theta2;
    9556:	f507 622e 	add.w	r2, r7, #2784	; 0xae0
    955a:	4b67      	ldr	r3, [pc, #412]	; (96f8 <G_q+0x1608>)
    955c:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9560:	4439      	add	r1, r7
    9562:	440b      	add	r3, r1
    9564:	e9d3 3400 	ldrd	r3, r4, [r3]
    9568:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t23.re = -t299.re;
    956c:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9570:	ed93 7b00 	vldr	d7, [r3]
    9574:	eeb1 7b47 	vneg.f64	d7, d7
    9578:	f507 632d 	add.w	r3, r7, #2768	; 0xad0
    957c:	ed83 7b00 	vstr	d7, [r3]
  t23.im = -theta2;
    9580:	4b5d      	ldr	r3, [pc, #372]	; (96f8 <G_q+0x1608>)
    9582:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9586:	443a      	add	r2, r7
    9588:	4413      	add	r3, r2
    958a:	ed93 7b00 	vldr	d7, [r3]
    958e:	eeb1 7b47 	vneg.f64	d7, d7
    9592:	f507 632d 	add.w	r3, r7, #2768	; 0xad0
    9596:	ed83 7b02 	vstr	d7, [r3, #8]
  t15.re = t299.re;
    959a:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    959e:	e9d3 3400 	ldrd	r3, r4, [r3]
    95a2:	f507 622c 	add.w	r2, r7, #2752	; 0xac0
    95a6:	e9c2 3400 	strd	r3, r4, [r2]
  t15.im = theta2;
    95aa:	f507 622c 	add.w	r2, r7, #2752	; 0xac0
    95ae:	4b52      	ldr	r3, [pc, #328]	; (96f8 <G_q+0x1608>)
    95b0:	f241 31d0 	movw	r1, #5072	; 0x13d0
    95b4:	4439      	add	r1, r7
    95b6:	440b      	add	r3, r1
    95b8:	e9d3 3400 	ldrd	r3, r4, [r3]
    95bc:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t14.re = -t299.re;
    95c0:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    95c4:	ed93 7b00 	vldr	d7, [r3]
    95c8:	eeb1 7b47 	vneg.f64	d7, d7
    95cc:	f507 632b 	add.w	r3, r7, #2736	; 0xab0
    95d0:	ed83 7b00 	vstr	d7, [r3]
  t14.im = -theta2;
    95d4:	4b48      	ldr	r3, [pc, #288]	; (96f8 <G_q+0x1608>)
    95d6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    95da:	443a      	add	r2, r7
    95dc:	4413      	add	r3, r2
    95de:	ed93 7b00 	vldr	d7, [r3]
    95e2:	eeb1 7b47 	vneg.f64	d7, d7
    95e6:	f507 632b 	add.w	r3, r7, #2736	; 0xab0
    95ea:	ed83 7b02 	vstr	d7, [r3, #8]
  t11.re = t299.re;
    95ee:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    95f2:	e9d3 3400 	ldrd	r3, r4, [r3]
    95f6:	f507 622a 	add.w	r2, r7, #2720	; 0xaa0
    95fa:	e9c2 3400 	strd	r3, r4, [r2]
  t11.im = theta2;
    95fe:	f507 622a 	add.w	r2, r7, #2720	; 0xaa0
    9602:	4b3d      	ldr	r3, [pc, #244]	; (96f8 <G_q+0x1608>)
    9604:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9608:	4439      	add	r1, r7
    960a:	440b      	add	r3, r1
    960c:	e9d3 3400 	ldrd	r3, r4, [r3]
    9610:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t10.re = -t299.re;
    9614:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9618:	ed93 7b00 	vldr	d7, [r3]
    961c:	eeb1 7b47 	vneg.f64	d7, d7
    9620:	f507 6329 	add.w	r3, r7, #2704	; 0xa90
    9624:	ed83 7b00 	vstr	d7, [r3]
  t10.im = -theta2;
    9628:	4b33      	ldr	r3, [pc, #204]	; (96f8 <G_q+0x1608>)
    962a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    962e:	443a      	add	r2, r7
    9630:	4413      	add	r3, r2
    9632:	ed93 7b00 	vldr	d7, [r3]
    9636:	eeb1 7b47 	vneg.f64	d7, d7
    963a:	f507 6329 	add.w	r3, r7, #2704	; 0xa90
    963e:	ed83 7b02 	vstr	d7, [r3, #8]
  t6.re = t299.re;
    9642:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    9646:	e9d3 3400 	ldrd	r3, r4, [r3]
    964a:	f507 6228 	add.w	r2, r7, #2688	; 0xa80
    964e:	e9c2 3400 	strd	r3, r4, [r2]
  t6.im = theta2;
    9652:	f507 6228 	add.w	r2, r7, #2688	; 0xa80
    9656:	4b28      	ldr	r3, [pc, #160]	; (96f8 <G_q+0x1608>)
    9658:	f241 31d0 	movw	r1, #5072	; 0x13d0
    965c:	4439      	add	r1, r7
    965e:	440b      	add	r3, r1
    9660:	e9d3 3400 	ldrd	r3, r4, [r3]
    9664:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t5.re = -t299.re;
    9668:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    966c:	ed93 7b00 	vldr	d7, [r3]
    9670:	eeb1 7b47 	vneg.f64	d7, d7
    9674:	f507 6327 	add.w	r3, r7, #2672	; 0xa70
    9678:	ed83 7b00 	vstr	d7, [r3]
  t5.im = -theta2;
    967c:	4b1e      	ldr	r3, [pc, #120]	; (96f8 <G_q+0x1608>)
    967e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9682:	443a      	add	r2, r7
    9684:	4413      	add	r3, r2
    9686:	ed93 7b00 	vldr	d7, [r3]
    968a:	eeb1 7b47 	vneg.f64	d7, d7
    968e:	f507 6327 	add.w	r3, r7, #2672	; 0xa70
    9692:	ed83 7b02 	vstr	d7, [r3, #8]
  t4.re = t299.re;
    9696:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    969a:	e9d3 3400 	ldrd	r3, r4, [r3]
    969e:	f507 6226 	add.w	r2, r7, #2656	; 0xa60
    96a2:	e9c2 3400 	strd	r3, r4, [r2]
  t4.im = theta2;
    96a6:	f507 6226 	add.w	r2, r7, #2656	; 0xa60
    96aa:	4b13      	ldr	r3, [pc, #76]	; (96f8 <G_q+0x1608>)
    96ac:	f241 31d0 	movw	r1, #5072	; 0x13d0
    96b0:	4439      	add	r1, r7
    96b2:	440b      	add	r3, r1
    96b4:	e9d3 3400 	ldrd	r3, r4, [r3]
    96b8:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t3.re = -t299.re;
    96bc:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    96c0:	ed93 7b00 	vldr	d7, [r3]
    96c4:	eeb1 7b47 	vneg.f64	d7, d7
    96c8:	f507 6325 	add.w	r3, r7, #2640	; 0xa50
    96cc:	ed83 7b00 	vstr	d7, [r3]
  t3.im = -theta2;
    96d0:	4b09      	ldr	r3, [pc, #36]	; (96f8 <G_q+0x1608>)
    96d2:	f241 32d0 	movw	r2, #5072	; 0x13d0
    96d6:	443a      	add	r2, r7
    96d8:	4413      	add	r3, r2
    96da:	ed93 7b00 	vldr	d7, [r3]
    96de:	eeb1 7b47 	vneg.f64	d7, d7
    96e2:	f507 6325 	add.w	r3, r7, #2640	; 0xa50
    96e6:	ed83 7b02 	vstr	d7, [r3, #8]
  b_exp(&t3);
    96ea:	f507 6325 	add.w	r3, r7, #2640	; 0xa50
    96ee:	4618      	mov	r0, r3
    96f0:	f00e fe16 	bl	18320 <b_exp>
    96f4:	e002      	b.n	96fc <G_q+0x160c>
    96f6:	bf00      	nop
    96f8:	ffffec50 	.word	0xffffec50
  t297.re = theta3 * 0.0;
    96fc:	4bc6      	ldr	r3, [pc, #792]	; (9a18 <G_q+0x1928>)
    96fe:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9702:	443a      	add	r2, r7
    9704:	4413      	add	r3, r2
    9706:	ed93 7b00 	vldr	d7, [r3]
    970a:	ed9f 6bc1 	vldr	d6, [pc, #772]	; 9a10 <G_q+0x1920>
    970e:	ee27 7b06 	vmul.f64	d7, d7, d6
    9712:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9716:	ed83 7b00 	vstr	d7, [r3]
  t297.im = theta3;
    971a:	f507 6224 	add.w	r2, r7, #2624	; 0xa40
    971e:	4bbe      	ldr	r3, [pc, #760]	; (9a18 <G_q+0x1928>)
    9720:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9724:	4439      	add	r1, r7
    9726:	440b      	add	r3, r1
    9728:	e9d3 3400 	ldrd	r3, r4, [r3]
    972c:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t296.re = -t297.re;
    9730:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9734:	ed93 7b00 	vldr	d7, [r3]
    9738:	eeb1 7b47 	vneg.f64	d7, d7
    973c:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    9740:	ed83 7b00 	vstr	d7, [r3]
  t296.im = -theta3;
    9744:	4bb4      	ldr	r3, [pc, #720]	; (9a18 <G_q+0x1928>)
    9746:	f241 32d0 	movw	r2, #5072	; 0x13d0
    974a:	443a      	add	r2, r7
    974c:	4413      	add	r3, r2
    974e:	ed93 7b00 	vldr	d7, [r3]
    9752:	eeb1 7b47 	vneg.f64	d7, d7
    9756:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    975a:	ed83 7b02 	vstr	d7, [r3, #8]
  t295.re = t297.re;
    975e:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9762:	e9d3 3400 	ldrd	r3, r4, [r3]
    9766:	f507 6222 	add.w	r2, r7, #2592	; 0xa20
    976a:	e9c2 3400 	strd	r3, r4, [r2]
  t295.im = theta3;
    976e:	f507 6222 	add.w	r2, r7, #2592	; 0xa20
    9772:	4ba9      	ldr	r3, [pc, #676]	; (9a18 <G_q+0x1928>)
    9774:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9778:	4439      	add	r1, r7
    977a:	440b      	add	r3, r1
    977c:	e9d3 3400 	ldrd	r3, r4, [r3]
    9780:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t294.re = -t297.re;
    9784:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9788:	ed93 7b00 	vldr	d7, [r3]
    978c:	eeb1 7b47 	vneg.f64	d7, d7
    9790:	f507 6321 	add.w	r3, r7, #2576	; 0xa10
    9794:	ed83 7b00 	vstr	d7, [r3]
  t294.im = -theta3;
    9798:	4b9f      	ldr	r3, [pc, #636]	; (9a18 <G_q+0x1928>)
    979a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    979e:	443a      	add	r2, r7
    97a0:	4413      	add	r3, r2
    97a2:	ed93 7b00 	vldr	d7, [r3]
    97a6:	eeb1 7b47 	vneg.f64	d7, d7
    97aa:	f507 6321 	add.w	r3, r7, #2576	; 0xa10
    97ae:	ed83 7b02 	vstr	d7, [r3, #8]
  t289.re = t297.re;
    97b2:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    97b6:	e9d3 3400 	ldrd	r3, r4, [r3]
    97ba:	f507 6220 	add.w	r2, r7, #2560	; 0xa00
    97be:	e9c2 3400 	strd	r3, r4, [r2]
  t289.im = theta3;
    97c2:	f507 6220 	add.w	r2, r7, #2560	; 0xa00
    97c6:	4b94      	ldr	r3, [pc, #592]	; (9a18 <G_q+0x1928>)
    97c8:	f241 31d0 	movw	r1, #5072	; 0x13d0
    97cc:	4439      	add	r1, r7
    97ce:	440b      	add	r3, r1
    97d0:	e9d3 3400 	ldrd	r3, r4, [r3]
    97d4:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t288.re = -t297.re;
    97d8:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    97dc:	ed93 7b00 	vldr	d7, [r3]
    97e0:	eeb1 7b47 	vneg.f64	d7, d7
    97e4:	f507 631f 	add.w	r3, r7, #2544	; 0x9f0
    97e8:	ed83 7b00 	vstr	d7, [r3]
  t288.im = -theta3;
    97ec:	4b8a      	ldr	r3, [pc, #552]	; (9a18 <G_q+0x1928>)
    97ee:	f241 32d0 	movw	r2, #5072	; 0x13d0
    97f2:	443a      	add	r2, r7
    97f4:	4413      	add	r3, r2
    97f6:	ed93 7b00 	vldr	d7, [r3]
    97fa:	eeb1 7b47 	vneg.f64	d7, d7
    97fe:	f507 631f 	add.w	r3, r7, #2544	; 0x9f0
    9802:	ed83 7b02 	vstr	d7, [r3, #8]
  t283.re = t297.re;
    9806:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    980a:	e9d3 3400 	ldrd	r3, r4, [r3]
    980e:	f507 621e 	add.w	r2, r7, #2528	; 0x9e0
    9812:	e9c2 3400 	strd	r3, r4, [r2]
  t283.im = theta3;
    9816:	f507 621e 	add.w	r2, r7, #2528	; 0x9e0
    981a:	4b7f      	ldr	r3, [pc, #508]	; (9a18 <G_q+0x1928>)
    981c:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9820:	4439      	add	r1, r7
    9822:	440b      	add	r3, r1
    9824:	e9d3 3400 	ldrd	r3, r4, [r3]
    9828:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t282.re = -t297.re;
    982c:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9830:	ed93 7b00 	vldr	d7, [r3]
    9834:	eeb1 7b47 	vneg.f64	d7, d7
    9838:	f507 631d 	add.w	r3, r7, #2512	; 0x9d0
    983c:	ed83 7b00 	vstr	d7, [r3]
  t282.im = -theta3;
    9840:	4b75      	ldr	r3, [pc, #468]	; (9a18 <G_q+0x1928>)
    9842:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9846:	443a      	add	r2, r7
    9848:	4413      	add	r3, r2
    984a:	ed93 7b00 	vldr	d7, [r3]
    984e:	eeb1 7b47 	vneg.f64	d7, d7
    9852:	f507 631d 	add.w	r3, r7, #2512	; 0x9d0
    9856:	ed83 7b02 	vstr	d7, [r3, #8]
  t275.re = t297.re;
    985a:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    985e:	e9d3 3400 	ldrd	r3, r4, [r3]
    9862:	f507 621c 	add.w	r2, r7, #2496	; 0x9c0
    9866:	e9c2 3400 	strd	r3, r4, [r2]
  t275.im = theta3;
    986a:	f507 621c 	add.w	r2, r7, #2496	; 0x9c0
    986e:	4b6a      	ldr	r3, [pc, #424]	; (9a18 <G_q+0x1928>)
    9870:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9874:	4439      	add	r1, r7
    9876:	440b      	add	r3, r1
    9878:	e9d3 3400 	ldrd	r3, r4, [r3]
    987c:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t274.re = -t297.re;
    9880:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9884:	ed93 7b00 	vldr	d7, [r3]
    9888:	eeb1 7b47 	vneg.f64	d7, d7
    988c:	f507 631b 	add.w	r3, r7, #2480	; 0x9b0
    9890:	ed83 7b00 	vstr	d7, [r3]
  t274.im = -theta3;
    9894:	4b60      	ldr	r3, [pc, #384]	; (9a18 <G_q+0x1928>)
    9896:	f241 32d0 	movw	r2, #5072	; 0x13d0
    989a:	443a      	add	r2, r7
    989c:	4413      	add	r3, r2
    989e:	ed93 7b00 	vldr	d7, [r3]
    98a2:	eeb1 7b47 	vneg.f64	d7, d7
    98a6:	f507 631b 	add.w	r3, r7, #2480	; 0x9b0
    98aa:	ed83 7b02 	vstr	d7, [r3, #8]
  t271.re = t297.re;
    98ae:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    98b2:	e9d3 3400 	ldrd	r3, r4, [r3]
    98b6:	f507 621a 	add.w	r2, r7, #2464	; 0x9a0
    98ba:	e9c2 3400 	strd	r3, r4, [r2]
  t271.im = theta3;
    98be:	f507 621a 	add.w	r2, r7, #2464	; 0x9a0
    98c2:	4b55      	ldr	r3, [pc, #340]	; (9a18 <G_q+0x1928>)
    98c4:	f241 31d0 	movw	r1, #5072	; 0x13d0
    98c8:	4439      	add	r1, r7
    98ca:	440b      	add	r3, r1
    98cc:	e9d3 3400 	ldrd	r3, r4, [r3]
    98d0:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t270.re = -t297.re;
    98d4:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    98d8:	ed93 7b00 	vldr	d7, [r3]
    98dc:	eeb1 7b47 	vneg.f64	d7, d7
    98e0:	f507 6319 	add.w	r3, r7, #2448	; 0x990
    98e4:	ed83 7b00 	vstr	d7, [r3]
  t270.im = -theta3;
    98e8:	4b4b      	ldr	r3, [pc, #300]	; (9a18 <G_q+0x1928>)
    98ea:	f241 32d0 	movw	r2, #5072	; 0x13d0
    98ee:	443a      	add	r2, r7
    98f0:	4413      	add	r3, r2
    98f2:	ed93 7b00 	vldr	d7, [r3]
    98f6:	eeb1 7b47 	vneg.f64	d7, d7
    98fa:	f507 6319 	add.w	r3, r7, #2448	; 0x990
    98fe:	ed83 7b02 	vstr	d7, [r3, #8]
  t261.re = t297.re;
    9902:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9906:	e9d3 3400 	ldrd	r3, r4, [r3]
    990a:	f507 6218 	add.w	r2, r7, #2432	; 0x980
    990e:	e9c2 3400 	strd	r3, r4, [r2]
  t261.im = theta3;
    9912:	f507 6218 	add.w	r2, r7, #2432	; 0x980
    9916:	4b40      	ldr	r3, [pc, #256]	; (9a18 <G_q+0x1928>)
    9918:	f241 31d0 	movw	r1, #5072	; 0x13d0
    991c:	4439      	add	r1, r7
    991e:	440b      	add	r3, r1
    9920:	e9d3 3400 	ldrd	r3, r4, [r3]
    9924:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t260.re = -t297.re;
    9928:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    992c:	ed93 7b00 	vldr	d7, [r3]
    9930:	eeb1 7b47 	vneg.f64	d7, d7
    9934:	f507 6317 	add.w	r3, r7, #2416	; 0x970
    9938:	ed83 7b00 	vstr	d7, [r3]
  t260.im = -theta3;
    993c:	4b36      	ldr	r3, [pc, #216]	; (9a18 <G_q+0x1928>)
    993e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9942:	443a      	add	r2, r7
    9944:	4413      	add	r3, r2
    9946:	ed93 7b00 	vldr	d7, [r3]
    994a:	eeb1 7b47 	vneg.f64	d7, d7
    994e:	f507 6317 	add.w	r3, r7, #2416	; 0x970
    9952:	ed83 7b02 	vstr	d7, [r3, #8]
  t257.re = t297.re;
    9956:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    995a:	e9d3 3400 	ldrd	r3, r4, [r3]
    995e:	f507 6216 	add.w	r2, r7, #2400	; 0x960
    9962:	e9c2 3400 	strd	r3, r4, [r2]
  t257.im = theta3;
    9966:	f507 6216 	add.w	r2, r7, #2400	; 0x960
    996a:	4b2b      	ldr	r3, [pc, #172]	; (9a18 <G_q+0x1928>)
    996c:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9970:	4439      	add	r1, r7
    9972:	440b      	add	r3, r1
    9974:	e9d3 3400 	ldrd	r3, r4, [r3]
    9978:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t256.re = -t297.re;
    997c:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9980:	ed93 7b00 	vldr	d7, [r3]
    9984:	eeb1 7b47 	vneg.f64	d7, d7
    9988:	f507 6315 	add.w	r3, r7, #2384	; 0x950
    998c:	ed83 7b00 	vstr	d7, [r3]
  t256.im = -theta3;
    9990:	4b21      	ldr	r3, [pc, #132]	; (9a18 <G_q+0x1928>)
    9992:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9996:	443a      	add	r2, r7
    9998:	4413      	add	r3, r2
    999a:	ed93 7b00 	vldr	d7, [r3]
    999e:	eeb1 7b47 	vneg.f64	d7, d7
    99a2:	f507 6315 	add.w	r3, r7, #2384	; 0x950
    99a6:	ed83 7b02 	vstr	d7, [r3, #8]
  t253.re = t297.re;
    99aa:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    99ae:	e9d3 3400 	ldrd	r3, r4, [r3]
    99b2:	f507 6214 	add.w	r2, r7, #2368	; 0x940
    99b6:	e9c2 3400 	strd	r3, r4, [r2]
  t253.im = theta3;
    99ba:	f507 6214 	add.w	r2, r7, #2368	; 0x940
    99be:	4b16      	ldr	r3, [pc, #88]	; (9a18 <G_q+0x1928>)
    99c0:	f241 31d0 	movw	r1, #5072	; 0x13d0
    99c4:	4439      	add	r1, r7
    99c6:	440b      	add	r3, r1
    99c8:	e9d3 3400 	ldrd	r3, r4, [r3]
    99cc:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t252.re = -t297.re;
    99d0:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    99d4:	ed93 7b00 	vldr	d7, [r3]
    99d8:	eeb1 7b47 	vneg.f64	d7, d7
    99dc:	f507 6313 	add.w	r3, r7, #2352	; 0x930
    99e0:	ed83 7b00 	vstr	d7, [r3]
  t252.im = -theta3;
    99e4:	4b0c      	ldr	r3, [pc, #48]	; (9a18 <G_q+0x1928>)
    99e6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    99ea:	443a      	add	r2, r7
    99ec:	4413      	add	r3, r2
    99ee:	ed93 7b00 	vldr	d7, [r3]
    99f2:	eeb1 7b47 	vneg.f64	d7, d7
    99f6:	f507 6313 	add.w	r3, r7, #2352	; 0x930
    99fa:	ed83 7b02 	vstr	d7, [r3, #8]
  t247.re = t297.re;
    99fe:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9a02:	e9d3 3400 	ldrd	r3, r4, [r3]
    9a06:	f507 6212 	add.w	r2, r7, #2336	; 0x920
    9a0a:	e007      	b.n	9a1c <G_q+0x192c>
    9a0c:	f3af 8000 	nop.w
	...
    9a18:	ffffec48 	.word	0xffffec48
    9a1c:	e9c2 3400 	strd	r3, r4, [r2]
  t247.im = theta3;
    9a20:	f507 6212 	add.w	r2, r7, #2336	; 0x920
    9a24:	4bc3      	ldr	r3, [pc, #780]	; (9d34 <G_q+0x1c44>)
    9a26:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9a2a:	4439      	add	r1, r7
    9a2c:	440b      	add	r3, r1
    9a2e:	e9d3 3400 	ldrd	r3, r4, [r3]
    9a32:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t246.re = -t297.re;
    9a36:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9a3a:	ed93 7b00 	vldr	d7, [r3]
    9a3e:	eeb1 7b47 	vneg.f64	d7, d7
    9a42:	f507 6311 	add.w	r3, r7, #2320	; 0x910
    9a46:	ed83 7b00 	vstr	d7, [r3]
  t246.im = -theta3;
    9a4a:	4bba      	ldr	r3, [pc, #744]	; (9d34 <G_q+0x1c44>)
    9a4c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9a50:	443a      	add	r2, r7
    9a52:	4413      	add	r3, r2
    9a54:	ed93 7b00 	vldr	d7, [r3]
    9a58:	eeb1 7b47 	vneg.f64	d7, d7
    9a5c:	f507 6311 	add.w	r3, r7, #2320	; 0x910
    9a60:	ed83 7b02 	vstr	d7, [r3, #8]
  t241.re = t297.re;
    9a64:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9a68:	e9d3 3400 	ldrd	r3, r4, [r3]
    9a6c:	f507 6210 	add.w	r2, r7, #2304	; 0x900
    9a70:	e9c2 3400 	strd	r3, r4, [r2]
  t241.im = theta3;
    9a74:	f507 6210 	add.w	r2, r7, #2304	; 0x900
    9a78:	4bae      	ldr	r3, [pc, #696]	; (9d34 <G_q+0x1c44>)
    9a7a:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9a7e:	4439      	add	r1, r7
    9a80:	440b      	add	r3, r1
    9a82:	e9d3 3400 	ldrd	r3, r4, [r3]
    9a86:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t240.re = -t297.re;
    9a8a:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9a8e:	ed93 7b00 	vldr	d7, [r3]
    9a92:	eeb1 7b47 	vneg.f64	d7, d7
    9a96:	f507 630f 	add.w	r3, r7, #2288	; 0x8f0
    9a9a:	ed83 7b00 	vstr	d7, [r3]
  t240.im = -theta3;
    9a9e:	4ba5      	ldr	r3, [pc, #660]	; (9d34 <G_q+0x1c44>)
    9aa0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9aa4:	443a      	add	r2, r7
    9aa6:	4413      	add	r3, r2
    9aa8:	ed93 7b00 	vldr	d7, [r3]
    9aac:	eeb1 7b47 	vneg.f64	d7, d7
    9ab0:	f507 630f 	add.w	r3, r7, #2288	; 0x8f0
    9ab4:	ed83 7b02 	vstr	d7, [r3, #8]
  t235.re = t297.re;
    9ab8:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9abc:	e9d3 3400 	ldrd	r3, r4, [r3]
    9ac0:	f507 620e 	add.w	r2, r7, #2272	; 0x8e0
    9ac4:	e9c2 3400 	strd	r3, r4, [r2]
  t235.im = theta3;
    9ac8:	f507 620e 	add.w	r2, r7, #2272	; 0x8e0
    9acc:	4b99      	ldr	r3, [pc, #612]	; (9d34 <G_q+0x1c44>)
    9ace:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9ad2:	4439      	add	r1, r7
    9ad4:	440b      	add	r3, r1
    9ad6:	e9d3 3400 	ldrd	r3, r4, [r3]
    9ada:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t234.re = -t297.re;
    9ade:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9ae2:	ed93 7b00 	vldr	d7, [r3]
    9ae6:	eeb1 7b47 	vneg.f64	d7, d7
    9aea:	f507 630d 	add.w	r3, r7, #2256	; 0x8d0
    9aee:	ed83 7b00 	vstr	d7, [r3]
  t234.im = -theta3;
    9af2:	4b90      	ldr	r3, [pc, #576]	; (9d34 <G_q+0x1c44>)
    9af4:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9af8:	443a      	add	r2, r7
    9afa:	4413      	add	r3, r2
    9afc:	ed93 7b00 	vldr	d7, [r3]
    9b00:	eeb1 7b47 	vneg.f64	d7, d7
    9b04:	f507 630d 	add.w	r3, r7, #2256	; 0x8d0
    9b08:	ed83 7b02 	vstr	d7, [r3, #8]
  t225.re = t297.re;
    9b0c:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9b10:	e9d3 3400 	ldrd	r3, r4, [r3]
    9b14:	f507 620c 	add.w	r2, r7, #2240	; 0x8c0
    9b18:	e9c2 3400 	strd	r3, r4, [r2]
  t225.im = theta3;
    9b1c:	f507 620c 	add.w	r2, r7, #2240	; 0x8c0
    9b20:	4b84      	ldr	r3, [pc, #528]	; (9d34 <G_q+0x1c44>)
    9b22:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9b26:	4439      	add	r1, r7
    9b28:	440b      	add	r3, r1
    9b2a:	e9d3 3400 	ldrd	r3, r4, [r3]
    9b2e:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t224.re = -t297.re;
    9b32:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9b36:	ed93 7b00 	vldr	d7, [r3]
    9b3a:	eeb1 7b47 	vneg.f64	d7, d7
    9b3e:	f507 630b 	add.w	r3, r7, #2224	; 0x8b0
    9b42:	ed83 7b00 	vstr	d7, [r3]
  t224.im = -theta3;
    9b46:	4b7b      	ldr	r3, [pc, #492]	; (9d34 <G_q+0x1c44>)
    9b48:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9b4c:	443a      	add	r2, r7
    9b4e:	4413      	add	r3, r2
    9b50:	ed93 7b00 	vldr	d7, [r3]
    9b54:	eeb1 7b47 	vneg.f64	d7, d7
    9b58:	f507 630b 	add.w	r3, r7, #2224	; 0x8b0
    9b5c:	ed83 7b02 	vstr	d7, [r3, #8]
  t221.re = t297.re;
    9b60:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9b64:	e9d3 3400 	ldrd	r3, r4, [r3]
    9b68:	f507 620a 	add.w	r2, r7, #2208	; 0x8a0
    9b6c:	e9c2 3400 	strd	r3, r4, [r2]
  t221.im = theta3;
    9b70:	f507 620a 	add.w	r2, r7, #2208	; 0x8a0
    9b74:	4b6f      	ldr	r3, [pc, #444]	; (9d34 <G_q+0x1c44>)
    9b76:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9b7a:	4439      	add	r1, r7
    9b7c:	440b      	add	r3, r1
    9b7e:	e9d3 3400 	ldrd	r3, r4, [r3]
    9b82:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t220.re = -t297.re;
    9b86:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9b8a:	ed93 7b00 	vldr	d7, [r3]
    9b8e:	eeb1 7b47 	vneg.f64	d7, d7
    9b92:	f507 6309 	add.w	r3, r7, #2192	; 0x890
    9b96:	ed83 7b00 	vstr	d7, [r3]
  t220.im = -theta3;
    9b9a:	4b66      	ldr	r3, [pc, #408]	; (9d34 <G_q+0x1c44>)
    9b9c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9ba0:	443a      	add	r2, r7
    9ba2:	4413      	add	r3, r2
    9ba4:	ed93 7b00 	vldr	d7, [r3]
    9ba8:	eeb1 7b47 	vneg.f64	d7, d7
    9bac:	f507 6309 	add.w	r3, r7, #2192	; 0x890
    9bb0:	ed83 7b02 	vstr	d7, [r3, #8]
  t215.re = t297.re;
    9bb4:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9bb8:	e9d3 3400 	ldrd	r3, r4, [r3]
    9bbc:	f507 6208 	add.w	r2, r7, #2176	; 0x880
    9bc0:	e9c2 3400 	strd	r3, r4, [r2]
  t215.im = theta3;
    9bc4:	f507 6208 	add.w	r2, r7, #2176	; 0x880
    9bc8:	4b5a      	ldr	r3, [pc, #360]	; (9d34 <G_q+0x1c44>)
    9bca:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9bce:	4439      	add	r1, r7
    9bd0:	440b      	add	r3, r1
    9bd2:	e9d3 3400 	ldrd	r3, r4, [r3]
    9bd6:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t214.re = -t297.re;
    9bda:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9bde:	ed93 7b00 	vldr	d7, [r3]
    9be2:	eeb1 7b47 	vneg.f64	d7, d7
    9be6:	f507 6307 	add.w	r3, r7, #2160	; 0x870
    9bea:	ed83 7b00 	vstr	d7, [r3]
  t214.im = -theta3;
    9bee:	4b51      	ldr	r3, [pc, #324]	; (9d34 <G_q+0x1c44>)
    9bf0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9bf4:	443a      	add	r2, r7
    9bf6:	4413      	add	r3, r2
    9bf8:	ed93 7b00 	vldr	d7, [r3]
    9bfc:	eeb1 7b47 	vneg.f64	d7, d7
    9c00:	f507 6307 	add.w	r3, r7, #2160	; 0x870
    9c04:	ed83 7b02 	vstr	d7, [r3, #8]
  t211.re = t297.re;
    9c08:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9c0c:	e9d3 3400 	ldrd	r3, r4, [r3]
    9c10:	f507 6206 	add.w	r2, r7, #2144	; 0x860
    9c14:	e9c2 3400 	strd	r3, r4, [r2]
  t211.im = theta3;
    9c18:	f507 6206 	add.w	r2, r7, #2144	; 0x860
    9c1c:	4b45      	ldr	r3, [pc, #276]	; (9d34 <G_q+0x1c44>)
    9c1e:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9c22:	4439      	add	r1, r7
    9c24:	440b      	add	r3, r1
    9c26:	e9d3 3400 	ldrd	r3, r4, [r3]
    9c2a:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t210.re = -t297.re;
    9c2e:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9c32:	ed93 7b00 	vldr	d7, [r3]
    9c36:	eeb1 7b47 	vneg.f64	d7, d7
    9c3a:	f507 6305 	add.w	r3, r7, #2128	; 0x850
    9c3e:	ed83 7b00 	vstr	d7, [r3]
  t210.im = -theta3;
    9c42:	4b3c      	ldr	r3, [pc, #240]	; (9d34 <G_q+0x1c44>)
    9c44:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9c48:	443a      	add	r2, r7
    9c4a:	4413      	add	r3, r2
    9c4c:	ed93 7b00 	vldr	d7, [r3]
    9c50:	eeb1 7b47 	vneg.f64	d7, d7
    9c54:	f507 6305 	add.w	r3, r7, #2128	; 0x850
    9c58:	ed83 7b02 	vstr	d7, [r3, #8]
  t207.re = t297.re;
    9c5c:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9c60:	e9d3 3400 	ldrd	r3, r4, [r3]
    9c64:	f507 6204 	add.w	r2, r7, #2112	; 0x840
    9c68:	e9c2 3400 	strd	r3, r4, [r2]
  t207.im = theta3;
    9c6c:	f507 6204 	add.w	r2, r7, #2112	; 0x840
    9c70:	4b30      	ldr	r3, [pc, #192]	; (9d34 <G_q+0x1c44>)
    9c72:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9c76:	4439      	add	r1, r7
    9c78:	440b      	add	r3, r1
    9c7a:	e9d3 3400 	ldrd	r3, r4, [r3]
    9c7e:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t206.re = -t297.re;
    9c82:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9c86:	ed93 7b00 	vldr	d7, [r3]
    9c8a:	eeb1 7b47 	vneg.f64	d7, d7
    9c8e:	f507 6303 	add.w	r3, r7, #2096	; 0x830
    9c92:	ed83 7b00 	vstr	d7, [r3]
  t206.im = -theta3;
    9c96:	4b27      	ldr	r3, [pc, #156]	; (9d34 <G_q+0x1c44>)
    9c98:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9c9c:	443a      	add	r2, r7
    9c9e:	4413      	add	r3, r2
    9ca0:	ed93 7b00 	vldr	d7, [r3]
    9ca4:	eeb1 7b47 	vneg.f64	d7, d7
    9ca8:	f507 6303 	add.w	r3, r7, #2096	; 0x830
    9cac:	ed83 7b02 	vstr	d7, [r3, #8]
  t201.re = t297.re;
    9cb0:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9cb4:	e9d3 3400 	ldrd	r3, r4, [r3]
    9cb8:	f507 6202 	add.w	r2, r7, #2080	; 0x820
    9cbc:	e9c2 3400 	strd	r3, r4, [r2]
  t201.im = theta3;
    9cc0:	f507 6202 	add.w	r2, r7, #2080	; 0x820
    9cc4:	4b1b      	ldr	r3, [pc, #108]	; (9d34 <G_q+0x1c44>)
    9cc6:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9cca:	4439      	add	r1, r7
    9ccc:	440b      	add	r3, r1
    9cce:	e9d3 3400 	ldrd	r3, r4, [r3]
    9cd2:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t200.re = -t297.re;
    9cd6:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9cda:	ed93 7b00 	vldr	d7, [r3]
    9cde:	eeb1 7b47 	vneg.f64	d7, d7
    9ce2:	f507 6301 	add.w	r3, r7, #2064	; 0x810
    9ce6:	ed83 7b00 	vstr	d7, [r3]
  t200.im = -theta3;
    9cea:	4b12      	ldr	r3, [pc, #72]	; (9d34 <G_q+0x1c44>)
    9cec:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9cf0:	443a      	add	r2, r7
    9cf2:	4413      	add	r3, r2
    9cf4:	ed93 7b00 	vldr	d7, [r3]
    9cf8:	eeb1 7b47 	vneg.f64	d7, d7
    9cfc:	f507 6301 	add.w	r3, r7, #2064	; 0x810
    9d00:	ed83 7b02 	vstr	d7, [r3, #8]
  t191.re = t297.re;
    9d04:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9d08:	e9d3 3400 	ldrd	r3, r4, [r3]
    9d0c:	f507 6200 	add.w	r2, r7, #2048	; 0x800
    9d10:	e9c2 3400 	strd	r3, r4, [r2]
  t191.im = theta3;
    9d14:	f507 6200 	add.w	r2, r7, #2048	; 0x800
    9d18:	4b06      	ldr	r3, [pc, #24]	; (9d34 <G_q+0x1c44>)
    9d1a:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9d1e:	4439      	add	r1, r7
    9d20:	440b      	add	r3, r1
    9d22:	e9d3 3400 	ldrd	r3, r4, [r3]
    9d26:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t190.re = -t297.re;
    9d2a:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9d2e:	ed93 7b00 	vldr	d7, [r3]
    9d32:	e001      	b.n	9d38 <G_q+0x1c48>
    9d34:	ffffec48 	.word	0xffffec48
    9d38:	eeb1 7b47 	vneg.f64	d7, d7
    9d3c:	f507 63fe 	add.w	r3, r7, #2032	; 0x7f0
    9d40:	ed83 7b00 	vstr	d7, [r3]
  t190.im = -theta3;
    9d44:	4bc4      	ldr	r3, [pc, #784]	; (a058 <G_q+0x1f68>)
    9d46:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9d4a:	443a      	add	r2, r7
    9d4c:	4413      	add	r3, r2
    9d4e:	ed93 7b00 	vldr	d7, [r3]
    9d52:	eeb1 7b47 	vneg.f64	d7, d7
    9d56:	f507 63fe 	add.w	r3, r7, #2032	; 0x7f0
    9d5a:	ed83 7b02 	vstr	d7, [r3, #8]
  t187.re = t297.re;
    9d5e:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9d62:	e9d3 3400 	ldrd	r3, r4, [r3]
    9d66:	f507 62fc 	add.w	r2, r7, #2016	; 0x7e0
    9d6a:	e9c2 3400 	strd	r3, r4, [r2]
  t187.im = theta3;
    9d6e:	f507 62fc 	add.w	r2, r7, #2016	; 0x7e0
    9d72:	4bb9      	ldr	r3, [pc, #740]	; (a058 <G_q+0x1f68>)
    9d74:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9d78:	4439      	add	r1, r7
    9d7a:	440b      	add	r3, r1
    9d7c:	e9d3 3400 	ldrd	r3, r4, [r3]
    9d80:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t186.re = -t297.re;
    9d84:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9d88:	ed93 7b00 	vldr	d7, [r3]
    9d8c:	eeb1 7b47 	vneg.f64	d7, d7
    9d90:	f507 63fa 	add.w	r3, r7, #2000	; 0x7d0
    9d94:	ed83 7b00 	vstr	d7, [r3]
  t186.im = -theta3;
    9d98:	4baf      	ldr	r3, [pc, #700]	; (a058 <G_q+0x1f68>)
    9d9a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9d9e:	443a      	add	r2, r7
    9da0:	4413      	add	r3, r2
    9da2:	ed93 7b00 	vldr	d7, [r3]
    9da6:	eeb1 7b47 	vneg.f64	d7, d7
    9daa:	f507 63fa 	add.w	r3, r7, #2000	; 0x7d0
    9dae:	ed83 7b02 	vstr	d7, [r3, #8]
  t183.re = t297.re;
    9db2:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9db6:	e9d3 3400 	ldrd	r3, r4, [r3]
    9dba:	f507 62f8 	add.w	r2, r7, #1984	; 0x7c0
    9dbe:	e9c2 3400 	strd	r3, r4, [r2]
  t183.im = theta3;
    9dc2:	f507 62f8 	add.w	r2, r7, #1984	; 0x7c0
    9dc6:	4ba4      	ldr	r3, [pc, #656]	; (a058 <G_q+0x1f68>)
    9dc8:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9dcc:	4439      	add	r1, r7
    9dce:	440b      	add	r3, r1
    9dd0:	e9d3 3400 	ldrd	r3, r4, [r3]
    9dd4:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t182.re = -t297.re;
    9dd8:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9ddc:	ed93 7b00 	vldr	d7, [r3]
    9de0:	eeb1 7b47 	vneg.f64	d7, d7
    9de4:	f507 63f6 	add.w	r3, r7, #1968	; 0x7b0
    9de8:	ed83 7b00 	vstr	d7, [r3]
  t182.im = -theta3;
    9dec:	4b9a      	ldr	r3, [pc, #616]	; (a058 <G_q+0x1f68>)
    9dee:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9df2:	443a      	add	r2, r7
    9df4:	4413      	add	r3, r2
    9df6:	ed93 7b00 	vldr	d7, [r3]
    9dfa:	eeb1 7b47 	vneg.f64	d7, d7
    9dfe:	f507 63f6 	add.w	r3, r7, #1968	; 0x7b0
    9e02:	ed83 7b02 	vstr	d7, [r3, #8]
  t177.re = t297.re;
    9e06:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9e0a:	e9d3 3400 	ldrd	r3, r4, [r3]
    9e0e:	f507 62f4 	add.w	r2, r7, #1952	; 0x7a0
    9e12:	e9c2 3400 	strd	r3, r4, [r2]
  t177.im = theta3;
    9e16:	f507 62f4 	add.w	r2, r7, #1952	; 0x7a0
    9e1a:	4b8f      	ldr	r3, [pc, #572]	; (a058 <G_q+0x1f68>)
    9e1c:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9e20:	4439      	add	r1, r7
    9e22:	440b      	add	r3, r1
    9e24:	e9d3 3400 	ldrd	r3, r4, [r3]
    9e28:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t176.re = -t297.re;
    9e2c:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9e30:	ed93 7b00 	vldr	d7, [r3]
    9e34:	eeb1 7b47 	vneg.f64	d7, d7
    9e38:	f507 63f2 	add.w	r3, r7, #1936	; 0x790
    9e3c:	ed83 7b00 	vstr	d7, [r3]
  t176.im = -theta3;
    9e40:	4b85      	ldr	r3, [pc, #532]	; (a058 <G_q+0x1f68>)
    9e42:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9e46:	443a      	add	r2, r7
    9e48:	4413      	add	r3, r2
    9e4a:	ed93 7b00 	vldr	d7, [r3]
    9e4e:	eeb1 7b47 	vneg.f64	d7, d7
    9e52:	f507 63f2 	add.w	r3, r7, #1936	; 0x790
    9e56:	ed83 7b02 	vstr	d7, [r3, #8]
  t169.re = t297.re;
    9e5a:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9e5e:	e9d3 3400 	ldrd	r3, r4, [r3]
    9e62:	f507 62f0 	add.w	r2, r7, #1920	; 0x780
    9e66:	e9c2 3400 	strd	r3, r4, [r2]
  t169.im = theta3;
    9e6a:	f507 62f0 	add.w	r2, r7, #1920	; 0x780
    9e6e:	4b7a      	ldr	r3, [pc, #488]	; (a058 <G_q+0x1f68>)
    9e70:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9e74:	4439      	add	r1, r7
    9e76:	440b      	add	r3, r1
    9e78:	e9d3 3400 	ldrd	r3, r4, [r3]
    9e7c:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t168.re = -t297.re;
    9e80:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9e84:	ed93 7b00 	vldr	d7, [r3]
    9e88:	eeb1 7b47 	vneg.f64	d7, d7
    9e8c:	f507 63ee 	add.w	r3, r7, #1904	; 0x770
    9e90:	ed83 7b00 	vstr	d7, [r3]
  t168.im = -theta3;
    9e94:	4b70      	ldr	r3, [pc, #448]	; (a058 <G_q+0x1f68>)
    9e96:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9e9a:	443a      	add	r2, r7
    9e9c:	4413      	add	r3, r2
    9e9e:	ed93 7b00 	vldr	d7, [r3]
    9ea2:	eeb1 7b47 	vneg.f64	d7, d7
    9ea6:	f507 63ee 	add.w	r3, r7, #1904	; 0x770
    9eaa:	ed83 7b02 	vstr	d7, [r3, #8]
  t165.re = t297.re;
    9eae:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9eb2:	e9d3 3400 	ldrd	r3, r4, [r3]
    9eb6:	f507 62ec 	add.w	r2, r7, #1888	; 0x760
    9eba:	e9c2 3400 	strd	r3, r4, [r2]
  t165.im = theta3;
    9ebe:	f507 62ec 	add.w	r2, r7, #1888	; 0x760
    9ec2:	4b65      	ldr	r3, [pc, #404]	; (a058 <G_q+0x1f68>)
    9ec4:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9ec8:	4439      	add	r1, r7
    9eca:	440b      	add	r3, r1
    9ecc:	e9d3 3400 	ldrd	r3, r4, [r3]
    9ed0:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t164.re = -t297.re;
    9ed4:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9ed8:	ed93 7b00 	vldr	d7, [r3]
    9edc:	eeb1 7b47 	vneg.f64	d7, d7
    9ee0:	f507 63ea 	add.w	r3, r7, #1872	; 0x750
    9ee4:	ed83 7b00 	vstr	d7, [r3]
  t164.im = -theta3;
    9ee8:	4b5b      	ldr	r3, [pc, #364]	; (a058 <G_q+0x1f68>)
    9eea:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9eee:	443a      	add	r2, r7
    9ef0:	4413      	add	r3, r2
    9ef2:	ed93 7b00 	vldr	d7, [r3]
    9ef6:	eeb1 7b47 	vneg.f64	d7, d7
    9efa:	f507 63ea 	add.w	r3, r7, #1872	; 0x750
    9efe:	ed83 7b02 	vstr	d7, [r3, #8]
  t163.re = t297.re;
    9f02:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9f06:	e9d3 3400 	ldrd	r3, r4, [r3]
    9f0a:	f507 62e8 	add.w	r2, r7, #1856	; 0x740
    9f0e:	e9c2 3400 	strd	r3, r4, [r2]
  t163.im = theta3;
    9f12:	f507 62e8 	add.w	r2, r7, #1856	; 0x740
    9f16:	4b50      	ldr	r3, [pc, #320]	; (a058 <G_q+0x1f68>)
    9f18:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9f1c:	4439      	add	r1, r7
    9f1e:	440b      	add	r3, r1
    9f20:	e9d3 3400 	ldrd	r3, r4, [r3]
    9f24:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t162.re = -t297.re;
    9f28:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9f2c:	ed93 7b00 	vldr	d7, [r3]
    9f30:	eeb1 7b47 	vneg.f64	d7, d7
    9f34:	f507 63e6 	add.w	r3, r7, #1840	; 0x730
    9f38:	ed83 7b00 	vstr	d7, [r3]
  t162.im = -theta3;
    9f3c:	4b46      	ldr	r3, [pc, #280]	; (a058 <G_q+0x1f68>)
    9f3e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9f42:	443a      	add	r2, r7
    9f44:	4413      	add	r3, r2
    9f46:	ed93 7b00 	vldr	d7, [r3]
    9f4a:	eeb1 7b47 	vneg.f64	d7, d7
    9f4e:	f507 63e6 	add.w	r3, r7, #1840	; 0x730
    9f52:	ed83 7b02 	vstr	d7, [r3, #8]
  t155.re = t297.re;
    9f56:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9f5a:	e9d3 3400 	ldrd	r3, r4, [r3]
    9f5e:	f507 62e4 	add.w	r2, r7, #1824	; 0x720
    9f62:	e9c2 3400 	strd	r3, r4, [r2]
  t155.im = theta3;
    9f66:	f507 62e4 	add.w	r2, r7, #1824	; 0x720
    9f6a:	4b3b      	ldr	r3, [pc, #236]	; (a058 <G_q+0x1f68>)
    9f6c:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9f70:	4439      	add	r1, r7
    9f72:	440b      	add	r3, r1
    9f74:	e9d3 3400 	ldrd	r3, r4, [r3]
    9f78:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t154.re = -t297.re;
    9f7c:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9f80:	ed93 7b00 	vldr	d7, [r3]
    9f84:	eeb1 7b47 	vneg.f64	d7, d7
    9f88:	f507 63e2 	add.w	r3, r7, #1808	; 0x710
    9f8c:	ed83 7b00 	vstr	d7, [r3]
  t154.im = -theta3;
    9f90:	4b31      	ldr	r3, [pc, #196]	; (a058 <G_q+0x1f68>)
    9f92:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9f96:	443a      	add	r2, r7
    9f98:	4413      	add	r3, r2
    9f9a:	ed93 7b00 	vldr	d7, [r3]
    9f9e:	eeb1 7b47 	vneg.f64	d7, d7
    9fa2:	f507 63e2 	add.w	r3, r7, #1808	; 0x710
    9fa6:	ed83 7b02 	vstr	d7, [r3, #8]
  t151.re = t297.re;
    9faa:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9fae:	e9d3 3400 	ldrd	r3, r4, [r3]
    9fb2:	f507 62e0 	add.w	r2, r7, #1792	; 0x700
    9fb6:	e9c2 3400 	strd	r3, r4, [r2]
  t151.im = theta3;
    9fba:	f507 62e0 	add.w	r2, r7, #1792	; 0x700
    9fbe:	4b26      	ldr	r3, [pc, #152]	; (a058 <G_q+0x1f68>)
    9fc0:	f241 31d0 	movw	r1, #5072	; 0x13d0
    9fc4:	4439      	add	r1, r7
    9fc6:	440b      	add	r3, r1
    9fc8:	e9d3 3400 	ldrd	r3, r4, [r3]
    9fcc:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t150.re = -t297.re;
    9fd0:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    9fd4:	ed93 7b00 	vldr	d7, [r3]
    9fd8:	eeb1 7b47 	vneg.f64	d7, d7
    9fdc:	f507 63de 	add.w	r3, r7, #1776	; 0x6f0
    9fe0:	ed83 7b00 	vstr	d7, [r3]
  t150.im = -theta3;
    9fe4:	4b1c      	ldr	r3, [pc, #112]	; (a058 <G_q+0x1f68>)
    9fe6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    9fea:	443a      	add	r2, r7
    9fec:	4413      	add	r3, r2
    9fee:	ed93 7b00 	vldr	d7, [r3]
    9ff2:	eeb1 7b47 	vneg.f64	d7, d7
    9ff6:	f507 63de 	add.w	r3, r7, #1776	; 0x6f0
    9ffa:	ed83 7b02 	vstr	d7, [r3, #8]
  t145.re = t297.re;
    9ffe:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a002:	e9d3 3400 	ldrd	r3, r4, [r3]
    a006:	f507 62dc 	add.w	r2, r7, #1760	; 0x6e0
    a00a:	e9c2 3400 	strd	r3, r4, [r2]
  t145.im = theta3;
    a00e:	f507 62dc 	add.w	r2, r7, #1760	; 0x6e0
    a012:	4b11      	ldr	r3, [pc, #68]	; (a058 <G_q+0x1f68>)
    a014:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a018:	4439      	add	r1, r7
    a01a:	440b      	add	r3, r1
    a01c:	e9d3 3400 	ldrd	r3, r4, [r3]
    a020:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t144.re = -t297.re;
    a024:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a028:	ed93 7b00 	vldr	d7, [r3]
    a02c:	eeb1 7b47 	vneg.f64	d7, d7
    a030:	f507 63da 	add.w	r3, r7, #1744	; 0x6d0
    a034:	ed83 7b00 	vstr	d7, [r3]
  t144.im = -theta3;
    a038:	4b07      	ldr	r3, [pc, #28]	; (a058 <G_q+0x1f68>)
    a03a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a03e:	443a      	add	r2, r7
    a040:	4413      	add	r3, r2
    a042:	ed93 7b00 	vldr	d7, [r3]
    a046:	eeb1 7b47 	vneg.f64	d7, d7
    a04a:	f507 63da 	add.w	r3, r7, #1744	; 0x6d0
    a04e:	ed83 7b02 	vstr	d7, [r3, #8]
  t141.re = t297.re;
    a052:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a056:	e001      	b.n	a05c <G_q+0x1f6c>
    a058:	ffffec48 	.word	0xffffec48
    a05c:	e9d3 3400 	ldrd	r3, r4, [r3]
    a060:	f507 62d8 	add.w	r2, r7, #1728	; 0x6c0
    a064:	e9c2 3400 	strd	r3, r4, [r2]
  t141.im = theta3;
    a068:	f507 62d8 	add.w	r2, r7, #1728	; 0x6c0
    a06c:	4bc3      	ldr	r3, [pc, #780]	; (a37c <G_q+0x228c>)
    a06e:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a072:	4439      	add	r1, r7
    a074:	440b      	add	r3, r1
    a076:	e9d3 3400 	ldrd	r3, r4, [r3]
    a07a:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t140.re = -t297.re;
    a07e:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a082:	ed93 7b00 	vldr	d7, [r3]
    a086:	eeb1 7b47 	vneg.f64	d7, d7
    a08a:	f507 63d6 	add.w	r3, r7, #1712	; 0x6b0
    a08e:	ed83 7b00 	vstr	d7, [r3]
  t140.im = -theta3;
    a092:	4bba      	ldr	r3, [pc, #744]	; (a37c <G_q+0x228c>)
    a094:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a098:	443a      	add	r2, r7
    a09a:	4413      	add	r3, r2
    a09c:	ed93 7b00 	vldr	d7, [r3]
    a0a0:	eeb1 7b47 	vneg.f64	d7, d7
    a0a4:	f507 63d6 	add.w	r3, r7, #1712	; 0x6b0
    a0a8:	ed83 7b02 	vstr	d7, [r3, #8]
  t137.re = t297.re;
    a0ac:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a0b0:	e9d3 3400 	ldrd	r3, r4, [r3]
    a0b4:	f507 62d4 	add.w	r2, r7, #1696	; 0x6a0
    a0b8:	e9c2 3400 	strd	r3, r4, [r2]
  t137.im = theta3;
    a0bc:	f507 62d4 	add.w	r2, r7, #1696	; 0x6a0
    a0c0:	4bae      	ldr	r3, [pc, #696]	; (a37c <G_q+0x228c>)
    a0c2:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a0c6:	4439      	add	r1, r7
    a0c8:	440b      	add	r3, r1
    a0ca:	e9d3 3400 	ldrd	r3, r4, [r3]
    a0ce:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t136.re = -t297.re;
    a0d2:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a0d6:	ed93 7b00 	vldr	d7, [r3]
    a0da:	eeb1 7b47 	vneg.f64	d7, d7
    a0de:	f507 63d2 	add.w	r3, r7, #1680	; 0x690
    a0e2:	ed83 7b00 	vstr	d7, [r3]
  t136.im = -theta3;
    a0e6:	4ba5      	ldr	r3, [pc, #660]	; (a37c <G_q+0x228c>)
    a0e8:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a0ec:	443a      	add	r2, r7
    a0ee:	4413      	add	r3, r2
    a0f0:	ed93 7b00 	vldr	d7, [r3]
    a0f4:	eeb1 7b47 	vneg.f64	d7, d7
    a0f8:	f507 63d2 	add.w	r3, r7, #1680	; 0x690
    a0fc:	ed83 7b02 	vstr	d7, [r3, #8]
  t131.re = t297.re;
    a100:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a104:	e9d3 3400 	ldrd	r3, r4, [r3]
    a108:	f507 62d0 	add.w	r2, r7, #1664	; 0x680
    a10c:	e9c2 3400 	strd	r3, r4, [r2]
  t131.im = theta3;
    a110:	f507 62d0 	add.w	r2, r7, #1664	; 0x680
    a114:	4b99      	ldr	r3, [pc, #612]	; (a37c <G_q+0x228c>)
    a116:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a11a:	4439      	add	r1, r7
    a11c:	440b      	add	r3, r1
    a11e:	e9d3 3400 	ldrd	r3, r4, [r3]
    a122:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t130.re = -t297.re;
    a126:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a12a:	ed93 7b00 	vldr	d7, [r3]
    a12e:	eeb1 7b47 	vneg.f64	d7, d7
    a132:	f507 63ce 	add.w	r3, r7, #1648	; 0x670
    a136:	ed83 7b00 	vstr	d7, [r3]
  t130.im = -theta3;
    a13a:	4b90      	ldr	r3, [pc, #576]	; (a37c <G_q+0x228c>)
    a13c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a140:	443a      	add	r2, r7
    a142:	4413      	add	r3, r2
    a144:	ed93 7b00 	vldr	d7, [r3]
    a148:	eeb1 7b47 	vneg.f64	d7, d7
    a14c:	f507 63ce 	add.w	r3, r7, #1648	; 0x670
    a150:	ed83 7b02 	vstr	d7, [r3, #8]
  t129.re = t297.re;
    a154:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a158:	e9d3 3400 	ldrd	r3, r4, [r3]
    a15c:	f507 62cc 	add.w	r2, r7, #1632	; 0x660
    a160:	e9c2 3400 	strd	r3, r4, [r2]
  t129.im = theta3;
    a164:	f507 62cc 	add.w	r2, r7, #1632	; 0x660
    a168:	4b84      	ldr	r3, [pc, #528]	; (a37c <G_q+0x228c>)
    a16a:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a16e:	4439      	add	r1, r7
    a170:	440b      	add	r3, r1
    a172:	e9d3 3400 	ldrd	r3, r4, [r3]
    a176:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t128.re = -t297.re;
    a17a:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a17e:	ed93 7b00 	vldr	d7, [r3]
    a182:	eeb1 7b47 	vneg.f64	d7, d7
    a186:	f507 63ca 	add.w	r3, r7, #1616	; 0x650
    a18a:	ed83 7b00 	vstr	d7, [r3]
  t128.im = -theta3;
    a18e:	4b7b      	ldr	r3, [pc, #492]	; (a37c <G_q+0x228c>)
    a190:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a194:	443a      	add	r2, r7
    a196:	4413      	add	r3, r2
    a198:	ed93 7b00 	vldr	d7, [r3]
    a19c:	eeb1 7b47 	vneg.f64	d7, d7
    a1a0:	f507 63ca 	add.w	r3, r7, #1616	; 0x650
    a1a4:	ed83 7b02 	vstr	d7, [r3, #8]
  t121.re = t297.re;
    a1a8:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a1ac:	e9d3 3400 	ldrd	r3, r4, [r3]
    a1b0:	f507 62c8 	add.w	r2, r7, #1600	; 0x640
    a1b4:	e9c2 3400 	strd	r3, r4, [r2]
  t121.im = theta3;
    a1b8:	f507 62c8 	add.w	r2, r7, #1600	; 0x640
    a1bc:	4b6f      	ldr	r3, [pc, #444]	; (a37c <G_q+0x228c>)
    a1be:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a1c2:	4439      	add	r1, r7
    a1c4:	440b      	add	r3, r1
    a1c6:	e9d3 3400 	ldrd	r3, r4, [r3]
    a1ca:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t120.re = -t297.re;
    a1ce:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a1d2:	ed93 7b00 	vldr	d7, [r3]
    a1d6:	eeb1 7b47 	vneg.f64	d7, d7
    a1da:	f507 63c6 	add.w	r3, r7, #1584	; 0x630
    a1de:	ed83 7b00 	vstr	d7, [r3]
  t120.im = -theta3;
    a1e2:	4b66      	ldr	r3, [pc, #408]	; (a37c <G_q+0x228c>)
    a1e4:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a1e8:	443a      	add	r2, r7
    a1ea:	4413      	add	r3, r2
    a1ec:	ed93 7b00 	vldr	d7, [r3]
    a1f0:	eeb1 7b47 	vneg.f64	d7, d7
    a1f4:	f507 63c6 	add.w	r3, r7, #1584	; 0x630
    a1f8:	ed83 7b02 	vstr	d7, [r3, #8]
  t115.re = t297.re;
    a1fc:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a200:	e9d3 3400 	ldrd	r3, r4, [r3]
    a204:	f507 62c4 	add.w	r2, r7, #1568	; 0x620
    a208:	e9c2 3400 	strd	r3, r4, [r2]
  t115.im = theta3;
    a20c:	f507 62c4 	add.w	r2, r7, #1568	; 0x620
    a210:	4b5a      	ldr	r3, [pc, #360]	; (a37c <G_q+0x228c>)
    a212:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a216:	4439      	add	r1, r7
    a218:	440b      	add	r3, r1
    a21a:	e9d3 3400 	ldrd	r3, r4, [r3]
    a21e:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t114.re = -t297.re;
    a222:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a226:	ed93 7b00 	vldr	d7, [r3]
    a22a:	eeb1 7b47 	vneg.f64	d7, d7
    a22e:	f507 63c2 	add.w	r3, r7, #1552	; 0x610
    a232:	ed83 7b00 	vstr	d7, [r3]
  t114.im = -theta3;
    a236:	4b51      	ldr	r3, [pc, #324]	; (a37c <G_q+0x228c>)
    a238:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a23c:	443a      	add	r2, r7
    a23e:	4413      	add	r3, r2
    a240:	ed93 7b00 	vldr	d7, [r3]
    a244:	eeb1 7b47 	vneg.f64	d7, d7
    a248:	f507 63c2 	add.w	r3, r7, #1552	; 0x610
    a24c:	ed83 7b02 	vstr	d7, [r3, #8]
  t109.re = t297.re;
    a250:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a254:	e9d3 3400 	ldrd	r3, r4, [r3]
    a258:	f507 62c0 	add.w	r2, r7, #1536	; 0x600
    a25c:	e9c2 3400 	strd	r3, r4, [r2]
  t109.im = theta3;
    a260:	f507 62c0 	add.w	r2, r7, #1536	; 0x600
    a264:	4b45      	ldr	r3, [pc, #276]	; (a37c <G_q+0x228c>)
    a266:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a26a:	4439      	add	r1, r7
    a26c:	440b      	add	r3, r1
    a26e:	e9d3 3400 	ldrd	r3, r4, [r3]
    a272:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t108.re = -t297.re;
    a276:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a27a:	ed93 7b00 	vldr	d7, [r3]
    a27e:	eeb1 7b47 	vneg.f64	d7, d7
    a282:	f507 63be 	add.w	r3, r7, #1520	; 0x5f0
    a286:	ed83 7b00 	vstr	d7, [r3]
  t108.im = -theta3;
    a28a:	4b3c      	ldr	r3, [pc, #240]	; (a37c <G_q+0x228c>)
    a28c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a290:	443a      	add	r2, r7
    a292:	4413      	add	r3, r2
    a294:	ed93 7b00 	vldr	d7, [r3]
    a298:	eeb1 7b47 	vneg.f64	d7, d7
    a29c:	f507 63be 	add.w	r3, r7, #1520	; 0x5f0
    a2a0:	ed83 7b02 	vstr	d7, [r3, #8]
  t107.re = t297.re;
    a2a4:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a2a8:	e9d3 3400 	ldrd	r3, r4, [r3]
    a2ac:	f507 62bc 	add.w	r2, r7, #1504	; 0x5e0
    a2b0:	e9c2 3400 	strd	r3, r4, [r2]
  t107.im = theta3;
    a2b4:	f507 62bc 	add.w	r2, r7, #1504	; 0x5e0
    a2b8:	4b30      	ldr	r3, [pc, #192]	; (a37c <G_q+0x228c>)
    a2ba:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a2be:	4439      	add	r1, r7
    a2c0:	440b      	add	r3, r1
    a2c2:	e9d3 3400 	ldrd	r3, r4, [r3]
    a2c6:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t106.re = -t297.re;
    a2ca:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a2ce:	ed93 7b00 	vldr	d7, [r3]
    a2d2:	eeb1 7b47 	vneg.f64	d7, d7
    a2d6:	f507 63ba 	add.w	r3, r7, #1488	; 0x5d0
    a2da:	ed83 7b00 	vstr	d7, [r3]
  t106.im = -theta3;
    a2de:	4b27      	ldr	r3, [pc, #156]	; (a37c <G_q+0x228c>)
    a2e0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a2e4:	443a      	add	r2, r7
    a2e6:	4413      	add	r3, r2
    a2e8:	ed93 7b00 	vldr	d7, [r3]
    a2ec:	eeb1 7b47 	vneg.f64	d7, d7
    a2f0:	f507 63ba 	add.w	r3, r7, #1488	; 0x5d0
    a2f4:	ed83 7b02 	vstr	d7, [r3, #8]
  t99.re = t297.re;
    a2f8:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a2fc:	e9d3 3400 	ldrd	r3, r4, [r3]
    a300:	f507 62b8 	add.w	r2, r7, #1472	; 0x5c0
    a304:	e9c2 3400 	strd	r3, r4, [r2]
  t99.im = theta3;
    a308:	f507 62b8 	add.w	r2, r7, #1472	; 0x5c0
    a30c:	4b1b      	ldr	r3, [pc, #108]	; (a37c <G_q+0x228c>)
    a30e:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a312:	4439      	add	r1, r7
    a314:	440b      	add	r3, r1
    a316:	e9d3 3400 	ldrd	r3, r4, [r3]
    a31a:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t98.re = -t297.re;
    a31e:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a322:	ed93 7b00 	vldr	d7, [r3]
    a326:	eeb1 7b47 	vneg.f64	d7, d7
    a32a:	f507 63b6 	add.w	r3, r7, #1456	; 0x5b0
    a32e:	ed83 7b00 	vstr	d7, [r3]
  t98.im = -theta3;
    a332:	4b12      	ldr	r3, [pc, #72]	; (a37c <G_q+0x228c>)
    a334:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a338:	443a      	add	r2, r7
    a33a:	4413      	add	r3, r2
    a33c:	ed93 7b00 	vldr	d7, [r3]
    a340:	eeb1 7b47 	vneg.f64	d7, d7
    a344:	f507 63b6 	add.w	r3, r7, #1456	; 0x5b0
    a348:	ed83 7b02 	vstr	d7, [r3, #8]
  t93.re = t297.re;
    a34c:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a350:	e9d3 3400 	ldrd	r3, r4, [r3]
    a354:	f507 62b4 	add.w	r2, r7, #1440	; 0x5a0
    a358:	e9c2 3400 	strd	r3, r4, [r2]
  t93.im = theta3;
    a35c:	f507 62b4 	add.w	r2, r7, #1440	; 0x5a0
    a360:	4b06      	ldr	r3, [pc, #24]	; (a37c <G_q+0x228c>)
    a362:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a366:	4439      	add	r1, r7
    a368:	440b      	add	r3, r1
    a36a:	e9d3 3400 	ldrd	r3, r4, [r3]
    a36e:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t92.re = -t297.re;
    a372:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a376:	ed93 7b00 	vldr	d7, [r3]
    a37a:	e001      	b.n	a380 <G_q+0x2290>
    a37c:	ffffec48 	.word	0xffffec48
    a380:	eeb1 7b47 	vneg.f64	d7, d7
    a384:	f507 63b2 	add.w	r3, r7, #1424	; 0x590
    a388:	ed83 7b00 	vstr	d7, [r3]
  t92.im = -theta3;
    a38c:	4bc4      	ldr	r3, [pc, #784]	; (a6a0 <G_q+0x25b0>)
    a38e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a392:	443a      	add	r2, r7
    a394:	4413      	add	r3, r2
    a396:	ed93 7b00 	vldr	d7, [r3]
    a39a:	eeb1 7b47 	vneg.f64	d7, d7
    a39e:	f507 63b2 	add.w	r3, r7, #1424	; 0x590
    a3a2:	ed83 7b02 	vstr	d7, [r3, #8]
  t85.re = t297.re;
    a3a6:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a3aa:	e9d3 3400 	ldrd	r3, r4, [r3]
    a3ae:	f507 62b0 	add.w	r2, r7, #1408	; 0x580
    a3b2:	e9c2 3400 	strd	r3, r4, [r2]
  t85.im = theta3;
    a3b6:	f507 62b0 	add.w	r2, r7, #1408	; 0x580
    a3ba:	4bb9      	ldr	r3, [pc, #740]	; (a6a0 <G_q+0x25b0>)
    a3bc:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a3c0:	4439      	add	r1, r7
    a3c2:	440b      	add	r3, r1
    a3c4:	e9d3 3400 	ldrd	r3, r4, [r3]
    a3c8:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t84.re = -t297.re;
    a3cc:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a3d0:	ed93 7b00 	vldr	d7, [r3]
    a3d4:	eeb1 7b47 	vneg.f64	d7, d7
    a3d8:	f507 63ae 	add.w	r3, r7, #1392	; 0x570
    a3dc:	ed83 7b00 	vstr	d7, [r3]
  t84.im = -theta3;
    a3e0:	4baf      	ldr	r3, [pc, #700]	; (a6a0 <G_q+0x25b0>)
    a3e2:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a3e6:	443a      	add	r2, r7
    a3e8:	4413      	add	r3, r2
    a3ea:	ed93 7b00 	vldr	d7, [r3]
    a3ee:	eeb1 7b47 	vneg.f64	d7, d7
    a3f2:	f507 63ae 	add.w	r3, r7, #1392	; 0x570
    a3f6:	ed83 7b02 	vstr	d7, [r3, #8]
  t81.re = t297.re;
    a3fa:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a3fe:	e9d3 3400 	ldrd	r3, r4, [r3]
    a402:	f507 62ac 	add.w	r2, r7, #1376	; 0x560
    a406:	e9c2 3400 	strd	r3, r4, [r2]
  t81.im = theta3;
    a40a:	f507 62ac 	add.w	r2, r7, #1376	; 0x560
    a40e:	4ba4      	ldr	r3, [pc, #656]	; (a6a0 <G_q+0x25b0>)
    a410:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a414:	4439      	add	r1, r7
    a416:	440b      	add	r3, r1
    a418:	e9d3 3400 	ldrd	r3, r4, [r3]
    a41c:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t80.re = -t297.re;
    a420:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a424:	ed93 7b00 	vldr	d7, [r3]
    a428:	eeb1 7b47 	vneg.f64	d7, d7
    a42c:	f507 63aa 	add.w	r3, r7, #1360	; 0x550
    a430:	ed83 7b00 	vstr	d7, [r3]
  t80.im = -theta3;
    a434:	4b9a      	ldr	r3, [pc, #616]	; (a6a0 <G_q+0x25b0>)
    a436:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a43a:	443a      	add	r2, r7
    a43c:	4413      	add	r3, r2
    a43e:	ed93 7b00 	vldr	d7, [r3]
    a442:	eeb1 7b47 	vneg.f64	d7, d7
    a446:	f507 63aa 	add.w	r3, r7, #1360	; 0x550
    a44a:	ed83 7b02 	vstr	d7, [r3, #8]
  t75.re = t297.re;
    a44e:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a452:	e9d3 3400 	ldrd	r3, r4, [r3]
    a456:	f507 62a8 	add.w	r2, r7, #1344	; 0x540
    a45a:	e9c2 3400 	strd	r3, r4, [r2]
  t75.im = theta3;
    a45e:	f507 62a8 	add.w	r2, r7, #1344	; 0x540
    a462:	4b8f      	ldr	r3, [pc, #572]	; (a6a0 <G_q+0x25b0>)
    a464:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a468:	4439      	add	r1, r7
    a46a:	440b      	add	r3, r1
    a46c:	e9d3 3400 	ldrd	r3, r4, [r3]
    a470:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t74.re = -t297.re;
    a474:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a478:	ed93 7b00 	vldr	d7, [r3]
    a47c:	eeb1 7b47 	vneg.f64	d7, d7
    a480:	f507 63a6 	add.w	r3, r7, #1328	; 0x530
    a484:	ed83 7b00 	vstr	d7, [r3]
  t74.im = -theta3;
    a488:	4b85      	ldr	r3, [pc, #532]	; (a6a0 <G_q+0x25b0>)
    a48a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a48e:	443a      	add	r2, r7
    a490:	4413      	add	r3, r2
    a492:	ed93 7b00 	vldr	d7, [r3]
    a496:	eeb1 7b47 	vneg.f64	d7, d7
    a49a:	f507 63a6 	add.w	r3, r7, #1328	; 0x530
    a49e:	ed83 7b02 	vstr	d7, [r3, #8]
  t73.re = t297.re;
    a4a2:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a4a6:	e9d3 3400 	ldrd	r3, r4, [r3]
    a4aa:	f507 62a4 	add.w	r2, r7, #1312	; 0x520
    a4ae:	e9c2 3400 	strd	r3, r4, [r2]
  t73.im = theta3;
    a4b2:	f507 62a4 	add.w	r2, r7, #1312	; 0x520
    a4b6:	4b7a      	ldr	r3, [pc, #488]	; (a6a0 <G_q+0x25b0>)
    a4b8:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a4bc:	4439      	add	r1, r7
    a4be:	440b      	add	r3, r1
    a4c0:	e9d3 3400 	ldrd	r3, r4, [r3]
    a4c4:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t72.re = -t297.re;
    a4c8:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a4cc:	ed93 7b00 	vldr	d7, [r3]
    a4d0:	eeb1 7b47 	vneg.f64	d7, d7
    a4d4:	f507 63a2 	add.w	r3, r7, #1296	; 0x510
    a4d8:	ed83 7b00 	vstr	d7, [r3]
  t72.im = -theta3;
    a4dc:	4b70      	ldr	r3, [pc, #448]	; (a6a0 <G_q+0x25b0>)
    a4de:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a4e2:	443a      	add	r2, r7
    a4e4:	4413      	add	r3, r2
    a4e6:	ed93 7b00 	vldr	d7, [r3]
    a4ea:	eeb1 7b47 	vneg.f64	d7, d7
    a4ee:	f507 63a2 	add.w	r3, r7, #1296	; 0x510
    a4f2:	ed83 7b02 	vstr	d7, [r3, #8]
  t69.re = t297.re;
    a4f6:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a4fa:	e9d3 3400 	ldrd	r3, r4, [r3]
    a4fe:	f507 62a0 	add.w	r2, r7, #1280	; 0x500
    a502:	e9c2 3400 	strd	r3, r4, [r2]
  t69.im = theta3;
    a506:	f507 62a0 	add.w	r2, r7, #1280	; 0x500
    a50a:	4b65      	ldr	r3, [pc, #404]	; (a6a0 <G_q+0x25b0>)
    a50c:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a510:	4439      	add	r1, r7
    a512:	440b      	add	r3, r1
    a514:	e9d3 3400 	ldrd	r3, r4, [r3]
    a518:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t68.re = -t297.re;
    a51c:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a520:	ed93 7b00 	vldr	d7, [r3]
    a524:	eeb1 7b47 	vneg.f64	d7, d7
    a528:	f507 639e 	add.w	r3, r7, #1264	; 0x4f0
    a52c:	ed83 7b00 	vstr	d7, [r3]
  t68.im = -theta3;
    a530:	4b5b      	ldr	r3, [pc, #364]	; (a6a0 <G_q+0x25b0>)
    a532:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a536:	443a      	add	r2, r7
    a538:	4413      	add	r3, r2
    a53a:	ed93 7b00 	vldr	d7, [r3]
    a53e:	eeb1 7b47 	vneg.f64	d7, d7
    a542:	f507 639e 	add.w	r3, r7, #1264	; 0x4f0
    a546:	ed83 7b02 	vstr	d7, [r3, #8]
  t65.re = t297.re;
    a54a:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a54e:	e9d3 3400 	ldrd	r3, r4, [r3]
    a552:	f507 629c 	add.w	r2, r7, #1248	; 0x4e0
    a556:	e9c2 3400 	strd	r3, r4, [r2]
  t65.im = theta3;
    a55a:	f507 629c 	add.w	r2, r7, #1248	; 0x4e0
    a55e:	4b50      	ldr	r3, [pc, #320]	; (a6a0 <G_q+0x25b0>)
    a560:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a564:	4439      	add	r1, r7
    a566:	440b      	add	r3, r1
    a568:	e9d3 3400 	ldrd	r3, r4, [r3]
    a56c:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t64.re = -t297.re;
    a570:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a574:	ed93 7b00 	vldr	d7, [r3]
    a578:	eeb1 7b47 	vneg.f64	d7, d7
    a57c:	f507 639a 	add.w	r3, r7, #1232	; 0x4d0
    a580:	ed83 7b00 	vstr	d7, [r3]
  t64.im = -theta3;
    a584:	4b46      	ldr	r3, [pc, #280]	; (a6a0 <G_q+0x25b0>)
    a586:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a58a:	443a      	add	r2, r7
    a58c:	4413      	add	r3, r2
    a58e:	ed93 7b00 	vldr	d7, [r3]
    a592:	eeb1 7b47 	vneg.f64	d7, d7
    a596:	f507 639a 	add.w	r3, r7, #1232	; 0x4d0
    a59a:	ed83 7b02 	vstr	d7, [r3, #8]
  t52.re = t297.re;
    a59e:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a5a2:	e9d3 3400 	ldrd	r3, r4, [r3]
    a5a6:	f507 6298 	add.w	r2, r7, #1216	; 0x4c0
    a5aa:	e9c2 3400 	strd	r3, r4, [r2]
  t52.im = theta3;
    a5ae:	f507 6298 	add.w	r2, r7, #1216	; 0x4c0
    a5b2:	4b3b      	ldr	r3, [pc, #236]	; (a6a0 <G_q+0x25b0>)
    a5b4:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a5b8:	4439      	add	r1, r7
    a5ba:	440b      	add	r3, r1
    a5bc:	e9d3 3400 	ldrd	r3, r4, [r3]
    a5c0:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t51.re = -t297.re;
    a5c4:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a5c8:	ed93 7b00 	vldr	d7, [r3]
    a5cc:	eeb1 7b47 	vneg.f64	d7, d7
    a5d0:	f507 6396 	add.w	r3, r7, #1200	; 0x4b0
    a5d4:	ed83 7b00 	vstr	d7, [r3]
  t51.im = -theta3;
    a5d8:	4b31      	ldr	r3, [pc, #196]	; (a6a0 <G_q+0x25b0>)
    a5da:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a5de:	443a      	add	r2, r7
    a5e0:	4413      	add	r3, r2
    a5e2:	ed93 7b00 	vldr	d7, [r3]
    a5e6:	eeb1 7b47 	vneg.f64	d7, d7
    a5ea:	f507 6396 	add.w	r3, r7, #1200	; 0x4b0
    a5ee:	ed83 7b02 	vstr	d7, [r3, #8]
  t48.re = t297.re;
    a5f2:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a5f6:	e9d3 3400 	ldrd	r3, r4, [r3]
    a5fa:	f507 6294 	add.w	r2, r7, #1184	; 0x4a0
    a5fe:	e9c2 3400 	strd	r3, r4, [r2]
  t48.im = theta3;
    a602:	f507 6294 	add.w	r2, r7, #1184	; 0x4a0
    a606:	4b26      	ldr	r3, [pc, #152]	; (a6a0 <G_q+0x25b0>)
    a608:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a60c:	4439      	add	r1, r7
    a60e:	440b      	add	r3, r1
    a610:	e9d3 3400 	ldrd	r3, r4, [r3]
    a614:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t47.re = -t297.re;
    a618:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a61c:	ed93 7b00 	vldr	d7, [r3]
    a620:	eeb1 7b47 	vneg.f64	d7, d7
    a624:	f507 6392 	add.w	r3, r7, #1168	; 0x490
    a628:	ed83 7b00 	vstr	d7, [r3]
  t47.im = -theta3;
    a62c:	4b1c      	ldr	r3, [pc, #112]	; (a6a0 <G_q+0x25b0>)
    a62e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a632:	443a      	add	r2, r7
    a634:	4413      	add	r3, r2
    a636:	ed93 7b00 	vldr	d7, [r3]
    a63a:	eeb1 7b47 	vneg.f64	d7, d7
    a63e:	f507 6392 	add.w	r3, r7, #1168	; 0x490
    a642:	ed83 7b02 	vstr	d7, [r3, #8]
  t38.re = t297.re;
    a646:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a64a:	e9d3 3400 	ldrd	r3, r4, [r3]
    a64e:	f507 6290 	add.w	r2, r7, #1152	; 0x480
    a652:	e9c2 3400 	strd	r3, r4, [r2]
  t38.im = theta3;
    a656:	f507 6290 	add.w	r2, r7, #1152	; 0x480
    a65a:	4b11      	ldr	r3, [pc, #68]	; (a6a0 <G_q+0x25b0>)
    a65c:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a660:	4439      	add	r1, r7
    a662:	440b      	add	r3, r1
    a664:	e9d3 3400 	ldrd	r3, r4, [r3]
    a668:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t37.re = -t297.re;
    a66c:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a670:	ed93 7b00 	vldr	d7, [r3]
    a674:	eeb1 7b47 	vneg.f64	d7, d7
    a678:	f507 638e 	add.w	r3, r7, #1136	; 0x470
    a67c:	ed83 7b00 	vstr	d7, [r3]
  t37.im = -theta3;
    a680:	4b07      	ldr	r3, [pc, #28]	; (a6a0 <G_q+0x25b0>)
    a682:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a686:	443a      	add	r2, r7
    a688:	4413      	add	r3, r2
    a68a:	ed93 7b00 	vldr	d7, [r3]
    a68e:	eeb1 7b47 	vneg.f64	d7, d7
    a692:	f507 638e 	add.w	r3, r7, #1136	; 0x470
    a696:	ed83 7b02 	vstr	d7, [r3, #8]
  t36.re = t297.re;
    a69a:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a69e:	e001      	b.n	a6a4 <G_q+0x25b4>
    a6a0:	ffffec48 	.word	0xffffec48
    a6a4:	e9d3 3400 	ldrd	r3, r4, [r3]
    a6a8:	f507 628c 	add.w	r2, r7, #1120	; 0x460
    a6ac:	e9c2 3400 	strd	r3, r4, [r2]
  t36.im = theta3;
    a6b0:	f507 628c 	add.w	r2, r7, #1120	; 0x460
    a6b4:	4bc4      	ldr	r3, [pc, #784]	; (a9c8 <G_q+0x28d8>)
    a6b6:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a6ba:	4439      	add	r1, r7
    a6bc:	440b      	add	r3, r1
    a6be:	e9d3 3400 	ldrd	r3, r4, [r3]
    a6c2:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t35.re = -t297.re;
    a6c6:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a6ca:	ed93 7b00 	vldr	d7, [r3]
    a6ce:	eeb1 7b47 	vneg.f64	d7, d7
    a6d2:	f507 638a 	add.w	r3, r7, #1104	; 0x450
    a6d6:	ed83 7b00 	vstr	d7, [r3]
  t35.im = -theta3;
    a6da:	4bbb      	ldr	r3, [pc, #748]	; (a9c8 <G_q+0x28d8>)
    a6dc:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a6e0:	443a      	add	r2, r7
    a6e2:	4413      	add	r3, r2
    a6e4:	ed93 7b00 	vldr	d7, [r3]
    a6e8:	eeb1 7b47 	vneg.f64	d7, d7
    a6ec:	f507 638a 	add.w	r3, r7, #1104	; 0x450
    a6f0:	ed83 7b02 	vstr	d7, [r3, #8]
  t32.re = t297.re;
    a6f4:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a6f8:	e9d3 3400 	ldrd	r3, r4, [r3]
    a6fc:	f507 6288 	add.w	r2, r7, #1088	; 0x440
    a700:	e9c2 3400 	strd	r3, r4, [r2]
  t32.im = theta3;
    a704:	f507 6288 	add.w	r2, r7, #1088	; 0x440
    a708:	4baf      	ldr	r3, [pc, #700]	; (a9c8 <G_q+0x28d8>)
    a70a:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a70e:	4439      	add	r1, r7
    a710:	440b      	add	r3, r1
    a712:	e9d3 3400 	ldrd	r3, r4, [r3]
    a716:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t31.re = -t297.re;
    a71a:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a71e:	ed93 7b00 	vldr	d7, [r3]
    a722:	eeb1 7b47 	vneg.f64	d7, d7
    a726:	f507 6386 	add.w	r3, r7, #1072	; 0x430
    a72a:	ed83 7b00 	vstr	d7, [r3]
  t31.im = -theta3;
    a72e:	4ba6      	ldr	r3, [pc, #664]	; (a9c8 <G_q+0x28d8>)
    a730:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a734:	443a      	add	r2, r7
    a736:	4413      	add	r3, r2
    a738:	ed93 7b00 	vldr	d7, [r3]
    a73c:	eeb1 7b47 	vneg.f64	d7, d7
    a740:	f507 6386 	add.w	r3, r7, #1072	; 0x430
    a744:	ed83 7b02 	vstr	d7, [r3, #8]
  t28.re = t297.re;
    a748:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a74c:	e9d3 3400 	ldrd	r3, r4, [r3]
    a750:	f507 6284 	add.w	r2, r7, #1056	; 0x420
    a754:	e9c2 3400 	strd	r3, r4, [r2]
  t28.im = theta3;
    a758:	f507 6284 	add.w	r2, r7, #1056	; 0x420
    a75c:	4b9a      	ldr	r3, [pc, #616]	; (a9c8 <G_q+0x28d8>)
    a75e:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a762:	4439      	add	r1, r7
    a764:	440b      	add	r3, r1
    a766:	e9d3 3400 	ldrd	r3, r4, [r3]
    a76a:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t27.re = -t297.re;
    a76e:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a772:	ed93 7b00 	vldr	d7, [r3]
    a776:	eeb1 7b47 	vneg.f64	d7, d7
    a77a:	f507 6382 	add.w	r3, r7, #1040	; 0x410
    a77e:	ed83 7b00 	vstr	d7, [r3]
  t27.im = -theta3;
    a782:	4b91      	ldr	r3, [pc, #580]	; (a9c8 <G_q+0x28d8>)
    a784:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a788:	443a      	add	r2, r7
    a78a:	4413      	add	r3, r2
    a78c:	ed93 7b00 	vldr	d7, [r3]
    a790:	eeb1 7b47 	vneg.f64	d7, d7
    a794:	f507 6382 	add.w	r3, r7, #1040	; 0x410
    a798:	ed83 7b02 	vstr	d7, [r3, #8]
  t17.re = t297.re;
    a79c:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a7a0:	e9d3 3400 	ldrd	r3, r4, [r3]
    a7a4:	f507 6280 	add.w	r2, r7, #1024	; 0x400
    a7a8:	e9c2 3400 	strd	r3, r4, [r2]
  t17.im = theta3;
    a7ac:	f507 6280 	add.w	r2, r7, #1024	; 0x400
    a7b0:	4b85      	ldr	r3, [pc, #532]	; (a9c8 <G_q+0x28d8>)
    a7b2:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a7b6:	4439      	add	r1, r7
    a7b8:	440b      	add	r3, r1
    a7ba:	e9d3 3400 	ldrd	r3, r4, [r3]
    a7be:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t16.re = -t297.re;
    a7c2:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a7c6:	ed93 7b00 	vldr	d7, [r3]
    a7ca:	eeb1 7b47 	vneg.f64	d7, d7
    a7ce:	f507 737c 	add.w	r3, r7, #1008	; 0x3f0
    a7d2:	ed83 7b00 	vstr	d7, [r3]
  t16.im = -theta3;
    a7d6:	4b7c      	ldr	r3, [pc, #496]	; (a9c8 <G_q+0x28d8>)
    a7d8:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a7dc:	443a      	add	r2, r7
    a7de:	4413      	add	r3, r2
    a7e0:	ed93 7b00 	vldr	d7, [r3]
    a7e4:	eeb1 7b47 	vneg.f64	d7, d7
    a7e8:	f507 737c 	add.w	r3, r7, #1008	; 0x3f0
    a7ec:	ed83 7b02 	vstr	d7, [r3, #8]
  t13.re = t297.re;
    a7f0:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a7f4:	e9d3 3400 	ldrd	r3, r4, [r3]
    a7f8:	f507 7278 	add.w	r2, r7, #992	; 0x3e0
    a7fc:	e9c2 3400 	strd	r3, r4, [r2]
  t13.im = theta3;
    a800:	f507 7278 	add.w	r2, r7, #992	; 0x3e0
    a804:	4b70      	ldr	r3, [pc, #448]	; (a9c8 <G_q+0x28d8>)
    a806:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a80a:	4439      	add	r1, r7
    a80c:	440b      	add	r3, r1
    a80e:	e9d3 3400 	ldrd	r3, r4, [r3]
    a812:	e9c2 3402 	strd	r3, r4, [r2, #8]
  t12.re = -t297.re;
    a816:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a81a:	ed93 7b00 	vldr	d7, [r3]
    a81e:	eeb1 7b47 	vneg.f64	d7, d7
    a822:	f507 7374 	add.w	r3, r7, #976	; 0x3d0
    a826:	ed83 7b00 	vstr	d7, [r3]
  t12.im = -theta3;
    a82a:	4b67      	ldr	r3, [pc, #412]	; (a9c8 <G_q+0x28d8>)
    a82c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a830:	443a      	add	r2, r7
    a832:	4413      	add	r3, r2
    a834:	ed93 7b00 	vldr	d7, [r3]
    a838:	eeb1 7b47 	vneg.f64	d7, d7
    a83c:	f507 7374 	add.w	r3, r7, #976	; 0x3d0
    a840:	ed83 7b02 	vstr	d7, [r3, #8]
  t9.re = t297.re;
    a844:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a848:	e9d3 1200 	ldrd	r1, r2, [r3]
    a84c:	4b5f      	ldr	r3, [pc, #380]	; (a9cc <G_q+0x28dc>)
    a84e:	f241 30d0 	movw	r0, #5072	; 0x13d0
    a852:	4438      	add	r0, r7
    a854:	4403      	add	r3, r0
    a856:	e9c3 1200 	strd	r1, r2, [r3]
  t9.im = theta3;
    a85a:	4b5c      	ldr	r3, [pc, #368]	; (a9cc <G_q+0x28dc>)
    a85c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a860:	443a      	add	r2, r7
    a862:	4413      	add	r3, r2
    a864:	4a58      	ldr	r2, [pc, #352]	; (a9c8 <G_q+0x28d8>)
    a866:	f241 31d0 	movw	r1, #5072	; 0x13d0
    a86a:	4439      	add	r1, r7
    a86c:	440a      	add	r2, r1
    a86e:	e9d2 1200 	ldrd	r1, r2, [r2]
    a872:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t8.re = -t297.re;
    a876:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    a87a:	ed93 7b00 	vldr	d7, [r3]
    a87e:	eeb1 7b47 	vneg.f64	d7, d7
    a882:	f507 736c 	add.w	r3, r7, #944	; 0x3b0
    a886:	ed83 7b00 	vstr	d7, [r3]
  t8.im = -theta3;
    a88a:	4b4f      	ldr	r3, [pc, #316]	; (a9c8 <G_q+0x28d8>)
    a88c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a890:	443a      	add	r2, r7
    a892:	4413      	add	r3, r2
    a894:	ed93 7b00 	vldr	d7, [r3]
    a898:	eeb1 7b47 	vneg.f64	d7, d7
    a89c:	f507 736c 	add.w	r3, r7, #944	; 0x3b0
    a8a0:	ed83 7b02 	vstr	d7, [r3, #8]
  b_exp(&t8);
    a8a4:	f507 736c 	add.w	r3, r7, #944	; 0x3b0
    a8a8:	4618      	mov	r0, r3
    a8aa:	f00d fd39 	bl	18320 <b_exp>
  t285.re = theta4 * 0.0;
    a8ae:	f107 0310 	add.w	r3, r7, #16
    a8b2:	ed93 7b00 	vldr	d7, [r3]
    a8b6:	ed9f 6b42 	vldr	d6, [pc, #264]	; a9c0 <G_q+0x28d0>
    a8ba:	ee27 7b06 	vmul.f64	d7, d7, d6
    a8be:	4b44      	ldr	r3, [pc, #272]	; (a9d0 <G_q+0x28e0>)
    a8c0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a8c4:	443a      	add	r2, r7
    a8c6:	4413      	add	r3, r2
    a8c8:	ed83 7b00 	vstr	d7, [r3]
  t285.im = theta4;
    a8cc:	4b40      	ldr	r3, [pc, #256]	; (a9d0 <G_q+0x28e0>)
    a8ce:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a8d2:	443a      	add	r2, r7
    a8d4:	4413      	add	r3, r2
    a8d6:	f107 0210 	add.w	r2, r7, #16
    a8da:	e9d2 1200 	ldrd	r1, r2, [r2]
    a8de:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t284.re = -t285.re;
    a8e2:	4b3b      	ldr	r3, [pc, #236]	; (a9d0 <G_q+0x28e0>)
    a8e4:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a8e8:	443a      	add	r2, r7
    a8ea:	4413      	add	r3, r2
    a8ec:	ed93 7b00 	vldr	d7, [r3]
    a8f0:	eeb1 7b47 	vneg.f64	d7, d7
    a8f4:	f507 7364 	add.w	r3, r7, #912	; 0x390
    a8f8:	ed83 7b00 	vstr	d7, [r3]
  t284.im = -theta4;
    a8fc:	f107 0310 	add.w	r3, r7, #16
    a900:	ed93 7b00 	vldr	d7, [r3]
    a904:	eeb1 7b47 	vneg.f64	d7, d7
    a908:	f507 7364 	add.w	r3, r7, #912	; 0x390
    a90c:	ed83 7b02 	vstr	d7, [r3, #8]
  t279.re = t285.re;
    a910:	4b2f      	ldr	r3, [pc, #188]	; (a9d0 <G_q+0x28e0>)
    a912:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a916:	443a      	add	r2, r7
    a918:	4413      	add	r3, r2
    a91a:	e9d3 1200 	ldrd	r1, r2, [r3]
    a91e:	4b2d      	ldr	r3, [pc, #180]	; (a9d4 <G_q+0x28e4>)
    a920:	f241 30d0 	movw	r0, #5072	; 0x13d0
    a924:	4438      	add	r0, r7
    a926:	4403      	add	r3, r0
    a928:	e9c3 1200 	strd	r1, r2, [r3]
  t279.im = theta4;
    a92c:	4b29      	ldr	r3, [pc, #164]	; (a9d4 <G_q+0x28e4>)
    a92e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a932:	443a      	add	r2, r7
    a934:	4413      	add	r3, r2
    a936:	f107 0210 	add.w	r2, r7, #16
    a93a:	e9d2 1200 	ldrd	r1, r2, [r2]
    a93e:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t278.re = -t285.re;
    a942:	4b23      	ldr	r3, [pc, #140]	; (a9d0 <G_q+0x28e0>)
    a944:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a948:	443a      	add	r2, r7
    a94a:	4413      	add	r3, r2
    a94c:	ed93 7b00 	vldr	d7, [r3]
    a950:	eeb1 7b47 	vneg.f64	d7, d7
    a954:	f507 735c 	add.w	r3, r7, #880	; 0x370
    a958:	ed83 7b00 	vstr	d7, [r3]
  t278.im = -theta4;
    a95c:	f107 0310 	add.w	r3, r7, #16
    a960:	ed93 7b00 	vldr	d7, [r3]
    a964:	eeb1 7b47 	vneg.f64	d7, d7
    a968:	f507 735c 	add.w	r3, r7, #880	; 0x370
    a96c:	ed83 7b02 	vstr	d7, [r3, #8]
  t255.re = t285.re;
    a970:	4b17      	ldr	r3, [pc, #92]	; (a9d0 <G_q+0x28e0>)
    a972:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a976:	443a      	add	r2, r7
    a978:	4413      	add	r3, r2
    a97a:	e9d3 1200 	ldrd	r1, r2, [r3]
    a97e:	4b16      	ldr	r3, [pc, #88]	; (a9d8 <G_q+0x28e8>)
    a980:	f241 30d0 	movw	r0, #5072	; 0x13d0
    a984:	4438      	add	r0, r7
    a986:	4403      	add	r3, r0
    a988:	e9c3 1200 	strd	r1, r2, [r3]
  t255.im = theta4;
    a98c:	4b12      	ldr	r3, [pc, #72]	; (a9d8 <G_q+0x28e8>)
    a98e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a992:	443a      	add	r2, r7
    a994:	4413      	add	r3, r2
    a996:	f107 0210 	add.w	r2, r7, #16
    a99a:	e9d2 1200 	ldrd	r1, r2, [r2]
    a99e:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t254.re = -t285.re;
    a9a2:	4b0b      	ldr	r3, [pc, #44]	; (a9d0 <G_q+0x28e0>)
    a9a4:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a9a8:	443a      	add	r2, r7
    a9aa:	4413      	add	r3, r2
    a9ac:	ed93 7b00 	vldr	d7, [r3]
    a9b0:	eeb1 7b47 	vneg.f64	d7, d7
    a9b4:	f507 7354 	add.w	r3, r7, #848	; 0x350
    a9b8:	ed83 7b00 	vstr	d7, [r3]
    a9bc:	e00e      	b.n	a9dc <G_q+0x28ec>
    a9be:	bf00      	nop
	...
    a9c8:	ffffec48 	.word	0xffffec48
    a9cc:	ffffeff0 	.word	0xffffeff0
    a9d0:	ffffefd0 	.word	0xffffefd0
    a9d4:	ffffefb0 	.word	0xffffefb0
    a9d8:	ffffef90 	.word	0xffffef90
  t254.im = -theta4;
    a9dc:	f107 0310 	add.w	r3, r7, #16
    a9e0:	ed93 7b00 	vldr	d7, [r3]
    a9e4:	eeb1 7b47 	vneg.f64	d7, d7
    a9e8:	f507 7354 	add.w	r3, r7, #848	; 0x350
    a9ec:	ed83 7b02 	vstr	d7, [r3, #8]
  t243.re = t285.re;
    a9f0:	4bbd      	ldr	r3, [pc, #756]	; (ace8 <G_q+0x2bf8>)
    a9f2:	f241 32d0 	movw	r2, #5072	; 0x13d0
    a9f6:	443a      	add	r2, r7
    a9f8:	4413      	add	r3, r2
    a9fa:	e9d3 1200 	ldrd	r1, r2, [r3]
    a9fe:	4bbb      	ldr	r3, [pc, #748]	; (acec <G_q+0x2bfc>)
    aa00:	f241 30d0 	movw	r0, #5072	; 0x13d0
    aa04:	4438      	add	r0, r7
    aa06:	4403      	add	r3, r0
    aa08:	e9c3 1200 	strd	r1, r2, [r3]
  t243.im = theta4;
    aa0c:	4bb7      	ldr	r3, [pc, #732]	; (acec <G_q+0x2bfc>)
    aa0e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    aa12:	443a      	add	r2, r7
    aa14:	4413      	add	r3, r2
    aa16:	f107 0210 	add.w	r2, r7, #16
    aa1a:	e9d2 1200 	ldrd	r1, r2, [r2]
    aa1e:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t242.re = -t285.re;
    aa22:	4bb1      	ldr	r3, [pc, #708]	; (ace8 <G_q+0x2bf8>)
    aa24:	f241 32d0 	movw	r2, #5072	; 0x13d0
    aa28:	443a      	add	r2, r7
    aa2a:	4413      	add	r3, r2
    aa2c:	ed93 7b00 	vldr	d7, [r3]
    aa30:	eeb1 7b47 	vneg.f64	d7, d7
    aa34:	f507 734c 	add.w	r3, r7, #816	; 0x330
    aa38:	ed83 7b00 	vstr	d7, [r3]
  t242.im = -theta4;
    aa3c:	f107 0310 	add.w	r3, r7, #16
    aa40:	ed93 7b00 	vldr	d7, [r3]
    aa44:	eeb1 7b47 	vneg.f64	d7, d7
    aa48:	f507 734c 	add.w	r3, r7, #816	; 0x330
    aa4c:	ed83 7b02 	vstr	d7, [r3, #8]
  t231.re = t285.re;
    aa50:	4ba5      	ldr	r3, [pc, #660]	; (ace8 <G_q+0x2bf8>)
    aa52:	f241 32d0 	movw	r2, #5072	; 0x13d0
    aa56:	443a      	add	r2, r7
    aa58:	4413      	add	r3, r2
    aa5a:	e9d3 1200 	ldrd	r1, r2, [r3]
    aa5e:	4ba4      	ldr	r3, [pc, #656]	; (acf0 <G_q+0x2c00>)
    aa60:	f241 30d0 	movw	r0, #5072	; 0x13d0
    aa64:	4438      	add	r0, r7
    aa66:	4403      	add	r3, r0
    aa68:	e9c3 1200 	strd	r1, r2, [r3]
  t231.im = theta4;
    aa6c:	4ba0      	ldr	r3, [pc, #640]	; (acf0 <G_q+0x2c00>)
    aa6e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    aa72:	443a      	add	r2, r7
    aa74:	4413      	add	r3, r2
    aa76:	f107 0210 	add.w	r2, r7, #16
    aa7a:	e9d2 1200 	ldrd	r1, r2, [r2]
    aa7e:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t230.re = -t285.re;
    aa82:	4b99      	ldr	r3, [pc, #612]	; (ace8 <G_q+0x2bf8>)
    aa84:	f241 32d0 	movw	r2, #5072	; 0x13d0
    aa88:	443a      	add	r2, r7
    aa8a:	4413      	add	r3, r2
    aa8c:	ed93 7b00 	vldr	d7, [r3]
    aa90:	eeb1 7b47 	vneg.f64	d7, d7
    aa94:	f507 7344 	add.w	r3, r7, #784	; 0x310
    aa98:	ed83 7b00 	vstr	d7, [r3]
  t230.im = -theta4;
    aa9c:	f107 0310 	add.w	r3, r7, #16
    aaa0:	ed93 7b00 	vldr	d7, [r3]
    aaa4:	eeb1 7b47 	vneg.f64	d7, d7
    aaa8:	f507 7344 	add.w	r3, r7, #784	; 0x310
    aaac:	ed83 7b02 	vstr	d7, [r3, #8]
  t229.re = t285.re;
    aab0:	4b8d      	ldr	r3, [pc, #564]	; (ace8 <G_q+0x2bf8>)
    aab2:	f241 32d0 	movw	r2, #5072	; 0x13d0
    aab6:	443a      	add	r2, r7
    aab8:	4413      	add	r3, r2
    aaba:	e9d3 1200 	ldrd	r1, r2, [r3]
    aabe:	4b8d      	ldr	r3, [pc, #564]	; (acf4 <G_q+0x2c04>)
    aac0:	f241 30d0 	movw	r0, #5072	; 0x13d0
    aac4:	4438      	add	r0, r7
    aac6:	4403      	add	r3, r0
    aac8:	e9c3 1200 	strd	r1, r2, [r3]
  t229.im = theta4;
    aacc:	4b89      	ldr	r3, [pc, #548]	; (acf4 <G_q+0x2c04>)
    aace:	f241 32d0 	movw	r2, #5072	; 0x13d0
    aad2:	443a      	add	r2, r7
    aad4:	4413      	add	r3, r2
    aad6:	f107 0210 	add.w	r2, r7, #16
    aada:	e9d2 1200 	ldrd	r1, r2, [r2]
    aade:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t228.re = -t285.re;
    aae2:	4b81      	ldr	r3, [pc, #516]	; (ace8 <G_q+0x2bf8>)
    aae4:	f241 32d0 	movw	r2, #5072	; 0x13d0
    aae8:	443a      	add	r2, r7
    aaea:	4413      	add	r3, r2
    aaec:	ed93 7b00 	vldr	d7, [r3]
    aaf0:	eeb1 7b47 	vneg.f64	d7, d7
    aaf4:	f507 733c 	add.w	r3, r7, #752	; 0x2f0
    aaf8:	ed83 7b00 	vstr	d7, [r3]
  t228.im = -theta4;
    aafc:	f107 0310 	add.w	r3, r7, #16
    ab00:	ed93 7b00 	vldr	d7, [r3]
    ab04:	eeb1 7b47 	vneg.f64	d7, d7
    ab08:	f507 733c 	add.w	r3, r7, #752	; 0x2f0
    ab0c:	ed83 7b02 	vstr	d7, [r3, #8]
  t209.re = t285.re;
    ab10:	4b75      	ldr	r3, [pc, #468]	; (ace8 <G_q+0x2bf8>)
    ab12:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ab16:	443a      	add	r2, r7
    ab18:	4413      	add	r3, r2
    ab1a:	e9d3 1200 	ldrd	r1, r2, [r3]
    ab1e:	4b76      	ldr	r3, [pc, #472]	; (acf8 <G_q+0x2c08>)
    ab20:	f241 30d0 	movw	r0, #5072	; 0x13d0
    ab24:	4438      	add	r0, r7
    ab26:	4403      	add	r3, r0
    ab28:	e9c3 1200 	strd	r1, r2, [r3]
  t209.im = theta4;
    ab2c:	4b72      	ldr	r3, [pc, #456]	; (acf8 <G_q+0x2c08>)
    ab2e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ab32:	443a      	add	r2, r7
    ab34:	4413      	add	r3, r2
    ab36:	f107 0210 	add.w	r2, r7, #16
    ab3a:	e9d2 1200 	ldrd	r1, r2, [r2]
    ab3e:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t208.re = -t285.re;
    ab42:	4b69      	ldr	r3, [pc, #420]	; (ace8 <G_q+0x2bf8>)
    ab44:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ab48:	443a      	add	r2, r7
    ab4a:	4413      	add	r3, r2
    ab4c:	ed93 7b00 	vldr	d7, [r3]
    ab50:	eeb1 7b47 	vneg.f64	d7, d7
    ab54:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
    ab58:	ed83 7b00 	vstr	d7, [r3]
  t208.im = -theta4;
    ab5c:	f107 0310 	add.w	r3, r7, #16
    ab60:	ed93 7b00 	vldr	d7, [r3]
    ab64:	eeb1 7b47 	vneg.f64	d7, d7
    ab68:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
    ab6c:	ed83 7b02 	vstr	d7, [r3, #8]
  t197.re = t285.re;
    ab70:	4b5d      	ldr	r3, [pc, #372]	; (ace8 <G_q+0x2bf8>)
    ab72:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ab76:	443a      	add	r2, r7
    ab78:	4413      	add	r3, r2
    ab7a:	e9d3 1200 	ldrd	r1, r2, [r3]
    ab7e:	4b5f      	ldr	r3, [pc, #380]	; (acfc <G_q+0x2c0c>)
    ab80:	f241 30d0 	movw	r0, #5072	; 0x13d0
    ab84:	4438      	add	r0, r7
    ab86:	4403      	add	r3, r0
    ab88:	e9c3 1200 	strd	r1, r2, [r3]
  t197.im = theta4;
    ab8c:	4b5b      	ldr	r3, [pc, #364]	; (acfc <G_q+0x2c0c>)
    ab8e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ab92:	443a      	add	r2, r7
    ab94:	4413      	add	r3, r2
    ab96:	f107 0210 	add.w	r2, r7, #16
    ab9a:	e9d2 1200 	ldrd	r1, r2, [r2]
    ab9e:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t196.re = -t285.re;
    aba2:	4b51      	ldr	r3, [pc, #324]	; (ace8 <G_q+0x2bf8>)
    aba4:	f241 32d0 	movw	r2, #5072	; 0x13d0
    aba8:	443a      	add	r2, r7
    abaa:	4413      	add	r3, r2
    abac:	ed93 7b00 	vldr	d7, [r3]
    abb0:	eeb1 7b47 	vneg.f64	d7, d7
    abb4:	f507 732c 	add.w	r3, r7, #688	; 0x2b0
    abb8:	ed83 7b00 	vstr	d7, [r3]
  t196.im = -theta4;
    abbc:	f107 0310 	add.w	r3, r7, #16
    abc0:	ed93 7b00 	vldr	d7, [r3]
    abc4:	eeb1 7b47 	vneg.f64	d7, d7
    abc8:	f507 732c 	add.w	r3, r7, #688	; 0x2b0
    abcc:	ed83 7b02 	vstr	d7, [r3, #8]
  t185.re = t285.re;
    abd0:	4b45      	ldr	r3, [pc, #276]	; (ace8 <G_q+0x2bf8>)
    abd2:	f241 32d0 	movw	r2, #5072	; 0x13d0
    abd6:	443a      	add	r2, r7
    abd8:	4413      	add	r3, r2
    abda:	e9d3 1200 	ldrd	r1, r2, [r3]
    abde:	4b48      	ldr	r3, [pc, #288]	; (ad00 <G_q+0x2c10>)
    abe0:	f241 30d0 	movw	r0, #5072	; 0x13d0
    abe4:	4438      	add	r0, r7
    abe6:	4403      	add	r3, r0
    abe8:	e9c3 1200 	strd	r1, r2, [r3]
  t185.im = theta4;
    abec:	4b44      	ldr	r3, [pc, #272]	; (ad00 <G_q+0x2c10>)
    abee:	f241 32d0 	movw	r2, #5072	; 0x13d0
    abf2:	443a      	add	r2, r7
    abf4:	4413      	add	r3, r2
    abf6:	f107 0210 	add.w	r2, r7, #16
    abfa:	e9d2 1200 	ldrd	r1, r2, [r2]
    abfe:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t184.re = -t285.re;
    ac02:	4b39      	ldr	r3, [pc, #228]	; (ace8 <G_q+0x2bf8>)
    ac04:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ac08:	443a      	add	r2, r7
    ac0a:	4413      	add	r3, r2
    ac0c:	ed93 7b00 	vldr	d7, [r3]
    ac10:	eeb1 7b47 	vneg.f64	d7, d7
    ac14:	f507 7324 	add.w	r3, r7, #656	; 0x290
    ac18:	ed83 7b00 	vstr	d7, [r3]
  t184.im = -theta4;
    ac1c:	f107 0310 	add.w	r3, r7, #16
    ac20:	ed93 7b00 	vldr	d7, [r3]
    ac24:	eeb1 7b47 	vneg.f64	d7, d7
    ac28:	f507 7324 	add.w	r3, r7, #656	; 0x290
    ac2c:	ed83 7b02 	vstr	d7, [r3, #8]
  t173.re = t285.re;
    ac30:	4b2d      	ldr	r3, [pc, #180]	; (ace8 <G_q+0x2bf8>)
    ac32:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ac36:	443a      	add	r2, r7
    ac38:	4413      	add	r3, r2
    ac3a:	e9d3 1200 	ldrd	r1, r2, [r3]
    ac3e:	4b31      	ldr	r3, [pc, #196]	; (ad04 <G_q+0x2c14>)
    ac40:	f241 30d0 	movw	r0, #5072	; 0x13d0
    ac44:	4438      	add	r0, r7
    ac46:	4403      	add	r3, r0
    ac48:	e9c3 1200 	strd	r1, r2, [r3]
  t173.im = theta4;
    ac4c:	4b2d      	ldr	r3, [pc, #180]	; (ad04 <G_q+0x2c14>)
    ac4e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ac52:	443a      	add	r2, r7
    ac54:	4413      	add	r3, r2
    ac56:	f107 0210 	add.w	r2, r7, #16
    ac5a:	e9d2 1200 	ldrd	r1, r2, [r2]
    ac5e:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t172.re = -t285.re;
    ac62:	4b21      	ldr	r3, [pc, #132]	; (ace8 <G_q+0x2bf8>)
    ac64:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ac68:	443a      	add	r2, r7
    ac6a:	4413      	add	r3, r2
    ac6c:	ed93 7b00 	vldr	d7, [r3]
    ac70:	eeb1 7b47 	vneg.f64	d7, d7
    ac74:	f507 731c 	add.w	r3, r7, #624	; 0x270
    ac78:	ed83 7b00 	vstr	d7, [r3]
  t172.im = -theta4;
    ac7c:	f107 0310 	add.w	r3, r7, #16
    ac80:	ed93 7b00 	vldr	d7, [r3]
    ac84:	eeb1 7b47 	vneg.f64	d7, d7
    ac88:	f507 731c 	add.w	r3, r7, #624	; 0x270
    ac8c:	ed83 7b02 	vstr	d7, [r3, #8]
  t159.re = t285.re;
    ac90:	4b15      	ldr	r3, [pc, #84]	; (ace8 <G_q+0x2bf8>)
    ac92:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ac96:	443a      	add	r2, r7
    ac98:	4413      	add	r3, r2
    ac9a:	e9d3 1200 	ldrd	r1, r2, [r3]
    ac9e:	4b1a      	ldr	r3, [pc, #104]	; (ad08 <G_q+0x2c18>)
    aca0:	f241 30d0 	movw	r0, #5072	; 0x13d0
    aca4:	4438      	add	r0, r7
    aca6:	4403      	add	r3, r0
    aca8:	e9c3 1200 	strd	r1, r2, [r3]
  t159.im = theta4;
    acac:	4b16      	ldr	r3, [pc, #88]	; (ad08 <G_q+0x2c18>)
    acae:	f241 32d0 	movw	r2, #5072	; 0x13d0
    acb2:	443a      	add	r2, r7
    acb4:	4413      	add	r3, r2
    acb6:	f107 0210 	add.w	r2, r7, #16
    acba:	e9d2 1200 	ldrd	r1, r2, [r2]
    acbe:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t158.re = -t285.re;
    acc2:	4b09      	ldr	r3, [pc, #36]	; (ace8 <G_q+0x2bf8>)
    acc4:	f241 32d0 	movw	r2, #5072	; 0x13d0
    acc8:	443a      	add	r2, r7
    acca:	4413      	add	r3, r2
    accc:	ed93 7b00 	vldr	d7, [r3]
    acd0:	eeb1 7b47 	vneg.f64	d7, d7
    acd4:	f507 7314 	add.w	r3, r7, #592	; 0x250
    acd8:	ed83 7b00 	vstr	d7, [r3]
  t158.im = -theta4;
    acdc:	f107 0310 	add.w	r3, r7, #16
    ace0:	ed93 7b00 	vldr	d7, [r3]
    ace4:	e012      	b.n	ad0c <G_q+0x2c1c>
    ace6:	bf00      	nop
    ace8:	ffffefd0 	.word	0xffffefd0
    acec:	ffffef70 	.word	0xffffef70
    acf0:	ffffef50 	.word	0xffffef50
    acf4:	ffffef30 	.word	0xffffef30
    acf8:	ffffef10 	.word	0xffffef10
    acfc:	ffffeef0 	.word	0xffffeef0
    ad00:	ffffeed0 	.word	0xffffeed0
    ad04:	ffffeeb0 	.word	0xffffeeb0
    ad08:	ffffee90 	.word	0xffffee90
    ad0c:	eeb1 7b47 	vneg.f64	d7, d7
    ad10:	f507 7314 	add.w	r3, r7, #592	; 0x250
    ad14:	ed83 7b02 	vstr	d7, [r3, #8]
  t153.re = t285.re;
    ad18:	4bbd      	ldr	r3, [pc, #756]	; (b010 <G_q+0x2f20>)
    ad1a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ad1e:	443a      	add	r2, r7
    ad20:	4413      	add	r3, r2
    ad22:	e9d3 1200 	ldrd	r1, r2, [r3]
    ad26:	4bbb      	ldr	r3, [pc, #748]	; (b014 <G_q+0x2f24>)
    ad28:	f241 30d0 	movw	r0, #5072	; 0x13d0
    ad2c:	4438      	add	r0, r7
    ad2e:	4403      	add	r3, r0
    ad30:	e9c3 1200 	strd	r1, r2, [r3]
  t153.im = theta4;
    ad34:	4bb7      	ldr	r3, [pc, #732]	; (b014 <G_q+0x2f24>)
    ad36:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ad3a:	443a      	add	r2, r7
    ad3c:	4413      	add	r3, r2
    ad3e:	f107 0210 	add.w	r2, r7, #16
    ad42:	e9d2 1200 	ldrd	r1, r2, [r2]
    ad46:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t152.re = -t285.re;
    ad4a:	4bb1      	ldr	r3, [pc, #708]	; (b010 <G_q+0x2f20>)
    ad4c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ad50:	443a      	add	r2, r7
    ad52:	4413      	add	r3, r2
    ad54:	ed93 7b00 	vldr	d7, [r3]
    ad58:	eeb1 7b47 	vneg.f64	d7, d7
    ad5c:	f507 730c 	add.w	r3, r7, #560	; 0x230
    ad60:	ed83 7b00 	vstr	d7, [r3]
  t152.im = -theta4;
    ad64:	f107 0310 	add.w	r3, r7, #16
    ad68:	ed93 7b00 	vldr	d7, [r3]
    ad6c:	eeb1 7b47 	vneg.f64	d7, d7
    ad70:	f507 730c 	add.w	r3, r7, #560	; 0x230
    ad74:	ed83 7b02 	vstr	d7, [r3, #8]
  t135.re = t285.re;
    ad78:	4ba5      	ldr	r3, [pc, #660]	; (b010 <G_q+0x2f20>)
    ad7a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ad7e:	443a      	add	r2, r7
    ad80:	4413      	add	r3, r2
    ad82:	e9d3 1200 	ldrd	r1, r2, [r3]
    ad86:	4ba4      	ldr	r3, [pc, #656]	; (b018 <G_q+0x2f28>)
    ad88:	f241 30d0 	movw	r0, #5072	; 0x13d0
    ad8c:	4438      	add	r0, r7
    ad8e:	4403      	add	r3, r0
    ad90:	e9c3 1200 	strd	r1, r2, [r3]
  t135.im = theta4;
    ad94:	4ba0      	ldr	r3, [pc, #640]	; (b018 <G_q+0x2f28>)
    ad96:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ad9a:	443a      	add	r2, r7
    ad9c:	4413      	add	r3, r2
    ad9e:	f107 0210 	add.w	r2, r7, #16
    ada2:	e9d2 1200 	ldrd	r1, r2, [r2]
    ada6:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t134.re = -t285.re;
    adaa:	4b99      	ldr	r3, [pc, #612]	; (b010 <G_q+0x2f20>)
    adac:	f241 32d0 	movw	r2, #5072	; 0x13d0
    adb0:	443a      	add	r2, r7
    adb2:	4413      	add	r3, r2
    adb4:	ed93 7b00 	vldr	d7, [r3]
    adb8:	eeb1 7b47 	vneg.f64	d7, d7
    adbc:	f507 7304 	add.w	r3, r7, #528	; 0x210
    adc0:	ed83 7b00 	vstr	d7, [r3]
  t134.im = -theta4;
    adc4:	f107 0310 	add.w	r3, r7, #16
    adc8:	ed93 7b00 	vldr	d7, [r3]
    adcc:	eeb1 7b47 	vneg.f64	d7, d7
    add0:	f507 7304 	add.w	r3, r7, #528	; 0x210
    add4:	ed83 7b02 	vstr	d7, [r3, #8]
  t123.re = t285.re;
    add8:	4b8d      	ldr	r3, [pc, #564]	; (b010 <G_q+0x2f20>)
    adda:	f241 32d0 	movw	r2, #5072	; 0x13d0
    adde:	443a      	add	r2, r7
    ade0:	4413      	add	r3, r2
    ade2:	e9d3 1200 	ldrd	r1, r2, [r3]
    ade6:	4b8d      	ldr	r3, [pc, #564]	; (b01c <G_q+0x2f2c>)
    ade8:	f241 30d0 	movw	r0, #5072	; 0x13d0
    adec:	4438      	add	r0, r7
    adee:	4403      	add	r3, r0
    adf0:	e9c3 1200 	strd	r1, r2, [r3]
  t123.im = theta4;
    adf4:	4b89      	ldr	r3, [pc, #548]	; (b01c <G_q+0x2f2c>)
    adf6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    adfa:	443a      	add	r2, r7
    adfc:	4413      	add	r3, r2
    adfe:	f107 0210 	add.w	r2, r7, #16
    ae02:	e9d2 1200 	ldrd	r1, r2, [r2]
    ae06:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t122.re = -t285.re;
    ae0a:	4b81      	ldr	r3, [pc, #516]	; (b010 <G_q+0x2f20>)
    ae0c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ae10:	443a      	add	r2, r7
    ae12:	4413      	add	r3, r2
    ae14:	ed93 7b00 	vldr	d7, [r3]
    ae18:	eeb1 7b47 	vneg.f64	d7, d7
    ae1c:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
    ae20:	ed83 7b00 	vstr	d7, [r3]
  t122.im = -theta4;
    ae24:	f107 0310 	add.w	r3, r7, #16
    ae28:	ed93 7b00 	vldr	d7, [r3]
    ae2c:	eeb1 7b47 	vneg.f64	d7, d7
    ae30:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
    ae34:	ed83 7b02 	vstr	d7, [r3, #8]
  t103.re = t285.re;
    ae38:	4b75      	ldr	r3, [pc, #468]	; (b010 <G_q+0x2f20>)
    ae3a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ae3e:	443a      	add	r2, r7
    ae40:	4413      	add	r3, r2
    ae42:	e9d3 1200 	ldrd	r1, r2, [r3]
    ae46:	4b76      	ldr	r3, [pc, #472]	; (b020 <G_q+0x2f30>)
    ae48:	f241 30d0 	movw	r0, #5072	; 0x13d0
    ae4c:	4438      	add	r0, r7
    ae4e:	4403      	add	r3, r0
    ae50:	e9c3 1200 	strd	r1, r2, [r3]
  t103.im = theta4;
    ae54:	4b72      	ldr	r3, [pc, #456]	; (b020 <G_q+0x2f30>)
    ae56:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ae5a:	443a      	add	r2, r7
    ae5c:	4413      	add	r3, r2
    ae5e:	f107 0210 	add.w	r2, r7, #16
    ae62:	e9d2 1200 	ldrd	r1, r2, [r2]
    ae66:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t102.re = -t285.re;
    ae6a:	4b69      	ldr	r3, [pc, #420]	; (b010 <G_q+0x2f20>)
    ae6c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ae70:	443a      	add	r2, r7
    ae72:	4413      	add	r3, r2
    ae74:	ed93 7b00 	vldr	d7, [r3]
    ae78:	eeb1 7b47 	vneg.f64	d7, d7
    ae7c:	f507 73e8 	add.w	r3, r7, #464	; 0x1d0
    ae80:	ed83 7b00 	vstr	d7, [r3]
  t102.im = -theta4;
    ae84:	f107 0310 	add.w	r3, r7, #16
    ae88:	ed93 7b00 	vldr	d7, [r3]
    ae8c:	eeb1 7b47 	vneg.f64	d7, d7
    ae90:	f507 73e8 	add.w	r3, r7, #464	; 0x1d0
    ae94:	ed83 7b02 	vstr	d7, [r3, #8]
  t101.re = t285.re;
    ae98:	4b5d      	ldr	r3, [pc, #372]	; (b010 <G_q+0x2f20>)
    ae9a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ae9e:	443a      	add	r2, r7
    aea0:	4413      	add	r3, r2
    aea2:	e9d3 1200 	ldrd	r1, r2, [r3]
    aea6:	4b5f      	ldr	r3, [pc, #380]	; (b024 <G_q+0x2f34>)
    aea8:	f241 30d0 	movw	r0, #5072	; 0x13d0
    aeac:	4438      	add	r0, r7
    aeae:	4403      	add	r3, r0
    aeb0:	e9c3 1200 	strd	r1, r2, [r3]
  t101.im = theta4;
    aeb4:	4b5b      	ldr	r3, [pc, #364]	; (b024 <G_q+0x2f34>)
    aeb6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    aeba:	443a      	add	r2, r7
    aebc:	4413      	add	r3, r2
    aebe:	f107 0210 	add.w	r2, r7, #16
    aec2:	e9d2 1200 	ldrd	r1, r2, [r2]
    aec6:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t100.re = -t285.re;
    aeca:	4b51      	ldr	r3, [pc, #324]	; (b010 <G_q+0x2f20>)
    aecc:	f241 32d0 	movw	r2, #5072	; 0x13d0
    aed0:	443a      	add	r2, r7
    aed2:	4413      	add	r3, r2
    aed4:	ed93 7b00 	vldr	d7, [r3]
    aed8:	eeb1 7b47 	vneg.f64	d7, d7
    aedc:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
    aee0:	ed83 7b00 	vstr	d7, [r3]
  t100.im = -theta4;
    aee4:	f107 0310 	add.w	r3, r7, #16
    aee8:	ed93 7b00 	vldr	d7, [r3]
    aeec:	eeb1 7b47 	vneg.f64	d7, d7
    aef0:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
    aef4:	ed83 7b02 	vstr	d7, [r3, #8]
  t87.re = t285.re;
    aef8:	4b45      	ldr	r3, [pc, #276]	; (b010 <G_q+0x2f20>)
    aefa:	f241 32d0 	movw	r2, #5072	; 0x13d0
    aefe:	443a      	add	r2, r7
    af00:	4413      	add	r3, r2
    af02:	e9d3 1200 	ldrd	r1, r2, [r3]
    af06:	4b48      	ldr	r3, [pc, #288]	; (b028 <G_q+0x2f38>)
    af08:	f241 30d0 	movw	r0, #5072	; 0x13d0
    af0c:	4438      	add	r0, r7
    af0e:	4403      	add	r3, r0
    af10:	e9c3 1200 	strd	r1, r2, [r3]
  t87.im = theta4;
    af14:	4b44      	ldr	r3, [pc, #272]	; (b028 <G_q+0x2f38>)
    af16:	f241 32d0 	movw	r2, #5072	; 0x13d0
    af1a:	443a      	add	r2, r7
    af1c:	4413      	add	r3, r2
    af1e:	f107 0210 	add.w	r2, r7, #16
    af22:	e9d2 1200 	ldrd	r1, r2, [r2]
    af26:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t86.re = -t285.re;
    af2a:	4b39      	ldr	r3, [pc, #228]	; (b010 <G_q+0x2f20>)
    af2c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    af30:	443a      	add	r2, r7
    af32:	4413      	add	r3, r2
    af34:	ed93 7b00 	vldr	d7, [r3]
    af38:	eeb1 7b47 	vneg.f64	d7, d7
    af3c:	f507 73c8 	add.w	r3, r7, #400	; 0x190
    af40:	ed83 7b00 	vstr	d7, [r3]
  t86.im = -theta4;
    af44:	f107 0310 	add.w	r3, r7, #16
    af48:	ed93 7b00 	vldr	d7, [r3]
    af4c:	eeb1 7b47 	vneg.f64	d7, d7
    af50:	f507 73c8 	add.w	r3, r7, #400	; 0x190
    af54:	ed83 7b02 	vstr	d7, [r3, #8]
  t59.re = t285.re;
    af58:	4b2d      	ldr	r3, [pc, #180]	; (b010 <G_q+0x2f20>)
    af5a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    af5e:	443a      	add	r2, r7
    af60:	4413      	add	r3, r2
    af62:	e9d3 1200 	ldrd	r1, r2, [r3]
    af66:	4b31      	ldr	r3, [pc, #196]	; (b02c <G_q+0x2f3c>)
    af68:	f241 30d0 	movw	r0, #5072	; 0x13d0
    af6c:	4438      	add	r0, r7
    af6e:	4403      	add	r3, r0
    af70:	e9c3 1200 	strd	r1, r2, [r3]
  t59.im = theta4;
    af74:	4b2d      	ldr	r3, [pc, #180]	; (b02c <G_q+0x2f3c>)
    af76:	f241 32d0 	movw	r2, #5072	; 0x13d0
    af7a:	443a      	add	r2, r7
    af7c:	4413      	add	r3, r2
    af7e:	f107 0210 	add.w	r2, r7, #16
    af82:	e9d2 1200 	ldrd	r1, r2, [r2]
    af86:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t58.re = -t285.re;
    af8a:	4b21      	ldr	r3, [pc, #132]	; (b010 <G_q+0x2f20>)
    af8c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    af90:	443a      	add	r2, r7
    af92:	4413      	add	r3, r2
    af94:	ed93 7b00 	vldr	d7, [r3]
    af98:	eeb1 7b47 	vneg.f64	d7, d7
    af9c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
    afa0:	ed83 7b00 	vstr	d7, [r3]
  t58.im = -theta4;
    afa4:	f107 0310 	add.w	r3, r7, #16
    afa8:	ed93 7b00 	vldr	d7, [r3]
    afac:	eeb1 7b47 	vneg.f64	d7, d7
    afb0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
    afb4:	ed83 7b02 	vstr	d7, [r3, #8]
  t42.re = t285.re;
    afb8:	4b15      	ldr	r3, [pc, #84]	; (b010 <G_q+0x2f20>)
    afba:	f241 32d0 	movw	r2, #5072	; 0x13d0
    afbe:	443a      	add	r2, r7
    afc0:	4413      	add	r3, r2
    afc2:	e9d3 1200 	ldrd	r1, r2, [r3]
    afc6:	4b1a      	ldr	r3, [pc, #104]	; (b030 <G_q+0x2f40>)
    afc8:	f241 30d0 	movw	r0, #5072	; 0x13d0
    afcc:	4438      	add	r0, r7
    afce:	4403      	add	r3, r0
    afd0:	e9c3 1200 	strd	r1, r2, [r3]
  t42.im = theta4;
    afd4:	4b16      	ldr	r3, [pc, #88]	; (b030 <G_q+0x2f40>)
    afd6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    afda:	443a      	add	r2, r7
    afdc:	4413      	add	r3, r2
    afde:	f107 0210 	add.w	r2, r7, #16
    afe2:	e9d2 1200 	ldrd	r1, r2, [r2]
    afe6:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t41.re = -t285.re;
    afea:	4b09      	ldr	r3, [pc, #36]	; (b010 <G_q+0x2f20>)
    afec:	f241 32d0 	movw	r2, #5072	; 0x13d0
    aff0:	443a      	add	r2, r7
    aff2:	4413      	add	r3, r2
    aff4:	ed93 7b00 	vldr	d7, [r3]
    aff8:	eeb1 7b47 	vneg.f64	d7, d7
    affc:	f507 73a8 	add.w	r3, r7, #336	; 0x150
    b000:	ed83 7b00 	vstr	d7, [r3]
  t41.im = -theta4;
    b004:	f107 0310 	add.w	r3, r7, #16
    b008:	ed93 7b00 	vldr	d7, [r3]
    b00c:	e012      	b.n	b034 <G_q+0x2f44>
    b00e:	bf00      	nop
    b010:	ffffefd0 	.word	0xffffefd0
    b014:	ffffee70 	.word	0xffffee70
    b018:	ffffee50 	.word	0xffffee50
    b01c:	ffffee30 	.word	0xffffee30
    b020:	ffffee10 	.word	0xffffee10
    b024:	ffffedf0 	.word	0xffffedf0
    b028:	ffffedd0 	.word	0xffffedd0
    b02c:	ffffedb0 	.word	0xffffedb0
    b030:	ffffed90 	.word	0xffffed90
    b034:	eeb1 7b47 	vneg.f64	d7, d7
    b038:	f507 73a8 	add.w	r3, r7, #336	; 0x150
    b03c:	ed83 7b02 	vstr	d7, [r3, #8]
  t22.re = t285.re;
    b040:	4bbd      	ldr	r3, [pc, #756]	; (b338 <G_q+0x3248>)
    b042:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b046:	443a      	add	r2, r7
    b048:	4413      	add	r3, r2
    b04a:	e9d3 1200 	ldrd	r1, r2, [r3]
    b04e:	4bbb      	ldr	r3, [pc, #748]	; (b33c <G_q+0x324c>)
    b050:	f241 30d0 	movw	r0, #5072	; 0x13d0
    b054:	4438      	add	r0, r7
    b056:	4403      	add	r3, r0
    b058:	e9c3 1200 	strd	r1, r2, [r3]
  t22.im = theta4;
    b05c:	4bb7      	ldr	r3, [pc, #732]	; (b33c <G_q+0x324c>)
    b05e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b062:	443a      	add	r2, r7
    b064:	4413      	add	r3, r2
    b066:	f107 0210 	add.w	r2, r7, #16
    b06a:	e9d2 1200 	ldrd	r1, r2, [r2]
    b06e:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t21.re = -t285.re;
    b072:	4bb1      	ldr	r3, [pc, #708]	; (b338 <G_q+0x3248>)
    b074:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b078:	443a      	add	r2, r7
    b07a:	4413      	add	r3, r2
    b07c:	ed93 7b00 	vldr	d7, [r3]
    b080:	eeb1 7b47 	vneg.f64	d7, d7
    b084:	f507 7398 	add.w	r3, r7, #304	; 0x130
    b088:	ed83 7b00 	vstr	d7, [r3]
  t21.im = -theta4;
    b08c:	f107 0310 	add.w	r3, r7, #16
    b090:	ed93 7b00 	vldr	d7, [r3]
    b094:	eeb1 7b47 	vneg.f64	d7, d7
    b098:	f507 7398 	add.w	r3, r7, #304	; 0x130
    b09c:	ed83 7b02 	vstr	d7, [r3, #8]
  t20.re = t285.re;
    b0a0:	4ba5      	ldr	r3, [pc, #660]	; (b338 <G_q+0x3248>)
    b0a2:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b0a6:	443a      	add	r2, r7
    b0a8:	4413      	add	r3, r2
    b0aa:	e9d3 1200 	ldrd	r1, r2, [r3]
    b0ae:	4ba4      	ldr	r3, [pc, #656]	; (b340 <G_q+0x3250>)
    b0b0:	f241 30d0 	movw	r0, #5072	; 0x13d0
    b0b4:	4438      	add	r0, r7
    b0b6:	4403      	add	r3, r0
    b0b8:	e9c3 1200 	strd	r1, r2, [r3]
  t20.im = theta4;
    b0bc:	4ba0      	ldr	r3, [pc, #640]	; (b340 <G_q+0x3250>)
    b0be:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b0c2:	443a      	add	r2, r7
    b0c4:	4413      	add	r3, r2
    b0c6:	f107 0210 	add.w	r2, r7, #16
    b0ca:	e9d2 1200 	ldrd	r1, r2, [r2]
    b0ce:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t19.re = -t285.re;
    b0d2:	4b99      	ldr	r3, [pc, #612]	; (b338 <G_q+0x3248>)
    b0d4:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b0d8:	443a      	add	r2, r7
    b0da:	4413      	add	r3, r2
    b0dc:	ed93 7b00 	vldr	d7, [r3]
    b0e0:	eeb1 7b47 	vneg.f64	d7, d7
    b0e4:	f507 7388 	add.w	r3, r7, #272	; 0x110
    b0e8:	ed83 7b00 	vstr	d7, [r3]
  t19.im = -theta4;
    b0ec:	f107 0310 	add.w	r3, r7, #16
    b0f0:	ed93 7b00 	vldr	d7, [r3]
    b0f4:	eeb1 7b47 	vneg.f64	d7, d7
    b0f8:	f507 7388 	add.w	r3, r7, #272	; 0x110
    b0fc:	ed83 7b02 	vstr	d7, [r3, #8]
  b_exp(&t19);
    b100:	f507 7388 	add.w	r3, r7, #272	; 0x110
    b104:	4618      	mov	r0, r3
    b106:	f00d f90b 	bl	18320 <b_exp>
  t267.re = theta5 * 0.0;
    b10a:	4b8e      	ldr	r3, [pc, #568]	; (b344 <G_q+0x3254>)
    b10c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b110:	443a      	add	r2, r7
    b112:	4413      	add	r3, r2
    b114:	ed93 7b00 	vldr	d7, [r3]
    b118:	ed9f 6b85 	vldr	d6, [pc, #532]	; b330 <G_q+0x3240>
    b11c:	ee27 7b06 	vmul.f64	d7, d7, d6
    b120:	4b89      	ldr	r3, [pc, #548]	; (b348 <G_q+0x3258>)
    b122:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b126:	443a      	add	r2, r7
    b128:	4413      	add	r3, r2
    b12a:	ed83 7b00 	vstr	d7, [r3]
  t267.im = theta5;
    b12e:	4b86      	ldr	r3, [pc, #536]	; (b348 <G_q+0x3258>)
    b130:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b134:	443a      	add	r2, r7
    b136:	4413      	add	r3, r2
    b138:	4a82      	ldr	r2, [pc, #520]	; (b344 <G_q+0x3254>)
    b13a:	f241 31d0 	movw	r1, #5072	; 0x13d0
    b13e:	4439      	add	r1, r7
    b140:	440a      	add	r2, r1
    b142:	e9d2 1200 	ldrd	r1, r2, [r2]
    b146:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t266.re = -t267.re;
    b14a:	4b7f      	ldr	r3, [pc, #508]	; (b348 <G_q+0x3258>)
    b14c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b150:	443a      	add	r2, r7
    b152:	4413      	add	r3, r2
    b154:	ed93 7b00 	vldr	d7, [r3]
    b158:	eeb1 7b47 	vneg.f64	d7, d7
    b15c:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
    b160:	ed83 7b00 	vstr	d7, [r3]
  t266.im = -theta5;
    b164:	4b77      	ldr	r3, [pc, #476]	; (b344 <G_q+0x3254>)
    b166:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b16a:	443a      	add	r2, r7
    b16c:	4413      	add	r3, r2
    b16e:	ed93 7b00 	vldr	d7, [r3]
    b172:	eeb1 7b47 	vneg.f64	d7, d7
    b176:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
    b17a:	ed83 7b02 	vstr	d7, [r3, #8]
  t265.re = t267.re;
    b17e:	4b72      	ldr	r3, [pc, #456]	; (b348 <G_q+0x3258>)
    b180:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b184:	443a      	add	r2, r7
    b186:	4413      	add	r3, r2
    b188:	e9d3 1200 	ldrd	r1, r2, [r3]
    b18c:	4b6f      	ldr	r3, [pc, #444]	; (b34c <G_q+0x325c>)
    b18e:	f241 30d0 	movw	r0, #5072	; 0x13d0
    b192:	4438      	add	r0, r7
    b194:	4403      	add	r3, r0
    b196:	e9c3 1200 	strd	r1, r2, [r3]
  t265.im = theta5;
    b19a:	4b6c      	ldr	r3, [pc, #432]	; (b34c <G_q+0x325c>)
    b19c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b1a0:	443a      	add	r2, r7
    b1a2:	4413      	add	r3, r2
    b1a4:	4a67      	ldr	r2, [pc, #412]	; (b344 <G_q+0x3254>)
    b1a6:	f241 31d0 	movw	r1, #5072	; 0x13d0
    b1aa:	4439      	add	r1, r7
    b1ac:	440a      	add	r2, r1
    b1ae:	e9d2 1200 	ldrd	r1, r2, [r2]
    b1b2:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t264.re = -t267.re;
    b1b6:	4b64      	ldr	r3, [pc, #400]	; (b348 <G_q+0x3258>)
    b1b8:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b1bc:	443a      	add	r2, r7
    b1be:	4413      	add	r3, r2
    b1c0:	ed93 7b00 	vldr	d7, [r3]
    b1c4:	eeb1 7b47 	vneg.f64	d7, d7
    b1c8:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
    b1cc:	ed83 7b00 	vstr	d7, [r3]
  t264.im = -theta5;
    b1d0:	4b5c      	ldr	r3, [pc, #368]	; (b344 <G_q+0x3254>)
    b1d2:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b1d6:	443a      	add	r2, r7
    b1d8:	4413      	add	r3, r2
    b1da:	ed93 7b00 	vldr	d7, [r3]
    b1de:	eeb1 7b47 	vneg.f64	d7, d7
    b1e2:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
    b1e6:	ed83 7b02 	vstr	d7, [r3, #8]
  t219.re = t267.re;
    b1ea:	4b57      	ldr	r3, [pc, #348]	; (b348 <G_q+0x3258>)
    b1ec:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b1f0:	443a      	add	r2, r7
    b1f2:	4413      	add	r3, r2
    b1f4:	e9d3 1200 	ldrd	r1, r2, [r3]
    b1f8:	4b55      	ldr	r3, [pc, #340]	; (b350 <G_q+0x3260>)
    b1fa:	f241 30d0 	movw	r0, #5072	; 0x13d0
    b1fe:	4438      	add	r0, r7
    b200:	4403      	add	r3, r0
    b202:	e9c3 1200 	strd	r1, r2, [r3]
  t219.im = theta5;
    b206:	4b52      	ldr	r3, [pc, #328]	; (b350 <G_q+0x3260>)
    b208:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b20c:	443a      	add	r2, r7
    b20e:	4413      	add	r3, r2
    b210:	4a4c      	ldr	r2, [pc, #304]	; (b344 <G_q+0x3254>)
    b212:	f241 31d0 	movw	r1, #5072	; 0x13d0
    b216:	4439      	add	r1, r7
    b218:	440a      	add	r2, r1
    b21a:	e9d2 1200 	ldrd	r1, r2, [r2]
    b21e:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t218.re = -t267.re;
    b222:	4b49      	ldr	r3, [pc, #292]	; (b348 <G_q+0x3258>)
    b224:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b228:	443a      	add	r2, r7
    b22a:	4413      	add	r3, r2
    b22c:	ed93 7b00 	vldr	d7, [r3]
    b230:	eeb1 7b47 	vneg.f64	d7, d7
    b234:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
    b238:	ed83 7b00 	vstr	d7, [r3]
  t218.im = -theta5;
    b23c:	4b41      	ldr	r3, [pc, #260]	; (b344 <G_q+0x3254>)
    b23e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b242:	443a      	add	r2, r7
    b244:	4413      	add	r3, r2
    b246:	ed93 7b00 	vldr	d7, [r3]
    b24a:	eeb1 7b47 	vneg.f64	d7, d7
    b24e:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
    b252:	ed83 7b02 	vstr	d7, [r3, #8]
  t195.re = t267.re;
    b256:	4b3c      	ldr	r3, [pc, #240]	; (b348 <G_q+0x3258>)
    b258:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b25c:	443a      	add	r2, r7
    b25e:	4413      	add	r3, r2
    b260:	e9d3 1200 	ldrd	r1, r2, [r3]
    b264:	4b3b      	ldr	r3, [pc, #236]	; (b354 <G_q+0x3264>)
    b266:	f241 30d0 	movw	r0, #5072	; 0x13d0
    b26a:	4438      	add	r0, r7
    b26c:	4403      	add	r3, r0
    b26e:	e9c3 1200 	strd	r1, r2, [r3]
  t195.im = theta5;
    b272:	4b38      	ldr	r3, [pc, #224]	; (b354 <G_q+0x3264>)
    b274:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b278:	443a      	add	r2, r7
    b27a:	4413      	add	r3, r2
    b27c:	4a31      	ldr	r2, [pc, #196]	; (b344 <G_q+0x3254>)
    b27e:	f241 31d0 	movw	r1, #5072	; 0x13d0
    b282:	4439      	add	r1, r7
    b284:	440a      	add	r2, r1
    b286:	e9d2 1200 	ldrd	r1, r2, [r2]
    b28a:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t194.re = -t267.re;
    b28e:	4b2e      	ldr	r3, [pc, #184]	; (b348 <G_q+0x3258>)
    b290:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b294:	443a      	add	r2, r7
    b296:	4413      	add	r3, r2
    b298:	ed93 7b00 	vldr	d7, [r3]
    b29c:	eeb1 7b47 	vneg.f64	d7, d7
    b2a0:	f107 0390 	add.w	r3, r7, #144	; 0x90
    b2a4:	ed83 7b00 	vstr	d7, [r3]
  t194.im = -theta5;
    b2a8:	4b26      	ldr	r3, [pc, #152]	; (b344 <G_q+0x3254>)
    b2aa:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b2ae:	443a      	add	r2, r7
    b2b0:	4413      	add	r3, r2
    b2b2:	ed93 7b00 	vldr	d7, [r3]
    b2b6:	eeb1 7b47 	vneg.f64	d7, d7
    b2ba:	f107 0390 	add.w	r3, r7, #144	; 0x90
    b2be:	ed83 7b02 	vstr	d7, [r3, #8]
  t125.re = t267.re;
    b2c2:	4b21      	ldr	r3, [pc, #132]	; (b348 <G_q+0x3258>)
    b2c4:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b2c8:	443a      	add	r2, r7
    b2ca:	4413      	add	r3, r2
    b2cc:	e9d3 1200 	ldrd	r1, r2, [r3]
    b2d0:	4b21      	ldr	r3, [pc, #132]	; (b358 <G_q+0x3268>)
    b2d2:	f241 30d0 	movw	r0, #5072	; 0x13d0
    b2d6:	4438      	add	r0, r7
    b2d8:	4403      	add	r3, r0
    b2da:	e9c3 1200 	strd	r1, r2, [r3]
  t125.im = theta5;
    b2de:	4b1e      	ldr	r3, [pc, #120]	; (b358 <G_q+0x3268>)
    b2e0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b2e4:	443a      	add	r2, r7
    b2e6:	4413      	add	r3, r2
    b2e8:	4a16      	ldr	r2, [pc, #88]	; (b344 <G_q+0x3254>)
    b2ea:	f241 31d0 	movw	r1, #5072	; 0x13d0
    b2ee:	4439      	add	r1, r7
    b2f0:	440a      	add	r2, r1
    b2f2:	e9d2 1200 	ldrd	r1, r2, [r2]
    b2f6:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t124.re = -t267.re;
    b2fa:	4b13      	ldr	r3, [pc, #76]	; (b348 <G_q+0x3258>)
    b2fc:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b300:	443a      	add	r2, r7
    b302:	4413      	add	r3, r2
    b304:	ed93 7b00 	vldr	d7, [r3]
    b308:	eeb1 7b47 	vneg.f64	d7, d7
    b30c:	f107 0370 	add.w	r3, r7, #112	; 0x70
    b310:	ed83 7b00 	vstr	d7, [r3]
  t124.im = -theta5;
    b314:	4b0b      	ldr	r3, [pc, #44]	; (b344 <G_q+0x3254>)
    b316:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b31a:	443a      	add	r2, r7
    b31c:	4413      	add	r3, r2
    b31e:	ed93 7b00 	vldr	d7, [r3]
    b322:	eeb1 7b47 	vneg.f64	d7, d7
    b326:	f107 0370 	add.w	r3, r7, #112	; 0x70
    b32a:	e017      	b.n	b35c <G_q+0x326c>
    b32c:	f3af 8000 	nop.w
	...
    b338:	ffffefd0 	.word	0xffffefd0
    b33c:	ffffed70 	.word	0xffffed70
    b340:	ffffed50 	.word	0xffffed50
    b344:	ffffec38 	.word	0xffffec38
    b348:	ffffed30 	.word	0xffffed30
    b34c:	ffffed10 	.word	0xffffed10
    b350:	ffffecf0 	.word	0xffffecf0
    b354:	ffffecd0 	.word	0xffffecd0
    b358:	ffffecb0 	.word	0xffffecb0
    b35c:	ed83 7b02 	vstr	d7, [r3, #8]
  t113.re = t267.re;
    b360:	4be2      	ldr	r3, [pc, #904]	; (b6ec <G_q+0x35fc>)
    b362:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b366:	443a      	add	r2, r7
    b368:	4413      	add	r3, r2
    b36a:	e9d3 1200 	ldrd	r1, r2, [r3]
    b36e:	4be0      	ldr	r3, [pc, #896]	; (b6f0 <G_q+0x3600>)
    b370:	f241 30d0 	movw	r0, #5072	; 0x13d0
    b374:	4438      	add	r0, r7
    b376:	4403      	add	r3, r0
    b378:	e9c3 1200 	strd	r1, r2, [r3]
  t113.im = theta5;
    b37c:	4bdc      	ldr	r3, [pc, #880]	; (b6f0 <G_q+0x3600>)
    b37e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b382:	443a      	add	r2, r7
    b384:	4413      	add	r3, r2
    b386:	4adb      	ldr	r2, [pc, #876]	; (b6f4 <G_q+0x3604>)
    b388:	f241 31d0 	movw	r1, #5072	; 0x13d0
    b38c:	4439      	add	r1, r7
    b38e:	440a      	add	r2, r1
    b390:	e9d2 1200 	ldrd	r1, r2, [r2]
    b394:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t112.re = -t267.re;
    b398:	4bd4      	ldr	r3, [pc, #848]	; (b6ec <G_q+0x35fc>)
    b39a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b39e:	443a      	add	r2, r7
    b3a0:	4413      	add	r3, r2
    b3a2:	ed93 7b00 	vldr	d7, [r3]
    b3a6:	eeb1 7b47 	vneg.f64	d7, d7
    b3aa:	f107 0350 	add.w	r3, r7, #80	; 0x50
    b3ae:	ed83 7b00 	vstr	d7, [r3]
  t112.im = -theta5;
    b3b2:	4bd0      	ldr	r3, [pc, #832]	; (b6f4 <G_q+0x3604>)
    b3b4:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b3b8:	443a      	add	r2, r7
    b3ba:	4413      	add	r3, r2
    b3bc:	ed93 7b00 	vldr	d7, [r3]
    b3c0:	eeb1 7b47 	vneg.f64	d7, d7
    b3c4:	f107 0350 	add.w	r3, r7, #80	; 0x50
    b3c8:	ed83 7b02 	vstr	d7, [r3, #8]
  t55.re = t267.re;
    b3cc:	4bc7      	ldr	r3, [pc, #796]	; (b6ec <G_q+0x35fc>)
    b3ce:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b3d2:	443a      	add	r2, r7
    b3d4:	4413      	add	r3, r2
    b3d6:	e9d3 1200 	ldrd	r1, r2, [r3]
    b3da:	4bc7      	ldr	r3, [pc, #796]	; (b6f8 <G_q+0x3608>)
    b3dc:	f241 30d0 	movw	r0, #5072	; 0x13d0
    b3e0:	4438      	add	r0, r7
    b3e2:	4403      	add	r3, r0
    b3e4:	e9c3 1200 	strd	r1, r2, [r3]
  t55.im = theta5;
    b3e8:	4bc3      	ldr	r3, [pc, #780]	; (b6f8 <G_q+0x3608>)
    b3ea:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b3ee:	443a      	add	r2, r7
    b3f0:	4413      	add	r3, r2
    b3f2:	4ac0      	ldr	r2, [pc, #768]	; (b6f4 <G_q+0x3604>)
    b3f4:	f241 31d0 	movw	r1, #5072	; 0x13d0
    b3f8:	4439      	add	r1, r7
    b3fa:	440a      	add	r2, r1
    b3fc:	e9d2 1200 	ldrd	r1, r2, [r2]
    b400:	e9c3 1202 	strd	r1, r2, [r3, #8]
  t54.re = -t267.re;
    b404:	4bb9      	ldr	r3, [pc, #740]	; (b6ec <G_q+0x35fc>)
    b406:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b40a:	443a      	add	r2, r7
    b40c:	4413      	add	r3, r2
    b40e:	ed93 7b00 	vldr	d7, [r3]
    b412:	eeb1 7b47 	vneg.f64	d7, d7
    b416:	f107 0330 	add.w	r3, r7, #48	; 0x30
    b41a:	ed83 7b00 	vstr	d7, [r3]
  t54.im = -theta5;
    b41e:	4bb5      	ldr	r3, [pc, #724]	; (b6f4 <G_q+0x3604>)
    b420:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b424:	443a      	add	r2, r7
    b426:	4413      	add	r3, r2
    b428:	ed93 7b00 	vldr	d7, [r3]
    b42c:	eeb1 7b47 	vneg.f64	d7, d7
    b430:	f107 0330 	add.w	r3, r7, #48	; 0x30
    b434:	ed83 7b02 	vstr	d7, [r3, #8]
  b_exp(&t54);
    b438:	f107 0330 	add.w	r3, r7, #48	; 0x30
    b43c:	4618      	mov	r0, r3
    b43e:	f00c ff6f 	bl	18320 <b_exp>
  b_exp(&t87);
    b442:	4bae      	ldr	r3, [pc, #696]	; (b6fc <G_q+0x360c>)
    b444:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b448:	443a      	add	r2, r7
    b44a:	4413      	add	r3, r2
    b44c:	4618      	mov	r0, r3
    b44e:	f00c ff67 	bl	18320 <b_exp>
  b_exp(&t83);
    b452:	f507 634c 	add.w	r3, r7, #3264	; 0xcc0
    b456:	4618      	mov	r0, r3
    b458:	f00c ff62 	bl	18320 <b_exp>
  b_exp(&t85);
    b45c:	f507 63b0 	add.w	r3, r7, #1408	; 0x580
    b460:	4618      	mov	r0, r3
    b462:	f00c ff5d 	bl	18320 <b_exp>
  b_exp(&t55);
    b466:	4ba4      	ldr	r3, [pc, #656]	; (b6f8 <G_q+0x3608>)
    b468:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b46c:	443a      	add	r2, r7
    b46e:	4413      	add	r3, r2
    b470:	4618      	mov	r0, r3
    b472:	f00c ff55 	bl	18320 <b_exp>
  b_exp(&t33);
    b476:	f507 6333 	add.w	r3, r7, #2864	; 0xb30
    b47a:	4618      	mov	r0, r3
    b47c:	f00c ff50 	bl	18320 <b_exp>
  b_exp(&t34);
    b480:	f507 6334 	add.w	r3, r7, #2880	; 0xb40
    b484:	4618      	mov	r0, r3
    b486:	f00c ff4b 	bl	18320 <b_exp>
  b_exp(&t35);
    b48a:	f507 638a 	add.w	r3, r7, #1104	; 0x450
    b48e:	4618      	mov	r0, r3
    b490:	f00c ff46 	bl	18320 <b_exp>
  b_exp(&t36);
    b494:	f507 638c 	add.w	r3, r7, #1120	; 0x460
    b498:	4618      	mov	r0, r3
    b49a:	f00c ff41 	bl	18320 <b_exp>
  b_exp(&t37);
    b49e:	f507 638e 	add.w	r3, r7, #1136	; 0x470
    b4a2:	4618      	mov	r0, r3
    b4a4:	f00c ff3c 	bl	18320 <b_exp>
  b_exp(&t38);
    b4a8:	f507 6390 	add.w	r3, r7, #1152	; 0x480
    b4ac:	4618      	mov	r0, r3
    b4ae:	f00c ff37 	bl	18320 <b_exp>
  b_exp(&t39);
    b4b2:	f507 6335 	add.w	r3, r7, #2896	; 0xb50
    b4b6:	4618      	mov	r0, r3
    b4b8:	f00c ff32 	bl	18320 <b_exp>
  b_exp(&t40);
    b4bc:	f507 6336 	add.w	r3, r7, #2912	; 0xb60
    b4c0:	4618      	mov	r0, r3
    b4c2:	f00c ff2d 	bl	18320 <b_exp>
  b_exp(&t10);
    b4c6:	f507 6329 	add.w	r3, r7, #2704	; 0xa90
    b4ca:	4618      	mov	r0, r3
    b4cc:	f00c ff28 	bl	18320 <b_exp>
  b_exp(&t11);
    b4d0:	f507 632a 	add.w	r3, r7, #2720	; 0xaa0
    b4d4:	4618      	mov	r0, r3
    b4d6:	f00c ff23 	bl	18320 <b_exp>
  b_exp(&t12);
    b4da:	f507 7374 	add.w	r3, r7, #976	; 0x3d0
    b4de:	4618      	mov	r0, r3
    b4e0:	f00c ff1e 	bl	18320 <b_exp>
  b_exp(&t13);
    b4e4:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
    b4e8:	4618      	mov	r0, r3
    b4ea:	f00c ff19 	bl	18320 <b_exp>
  b_exp(&t14);
    b4ee:	f507 632b 	add.w	r3, r7, #2736	; 0xab0
    b4f2:	4618      	mov	r0, r3
    b4f4:	f00c ff14 	bl	18320 <b_exp>
  b_exp(&t15);
    b4f8:	f507 632c 	add.w	r3, r7, #2752	; 0xac0
    b4fc:	4618      	mov	r0, r3
    b4fe:	f00c ff0f 	bl	18320 <b_exp>
  b_exp(&t16);
    b502:	f507 737c 	add.w	r3, r7, #1008	; 0x3f0
    b506:	4618      	mov	r0, r3
    b508:	f00c ff0a 	bl	18320 <b_exp>
  b_exp(&t17);
    b50c:	f507 6380 	add.w	r3, r7, #1024	; 0x400
    b510:	4618      	mov	r0, r3
    b512:	f00c ff05 	bl	18320 <b_exp>
  b_exp(&t20);
    b516:	4b7a      	ldr	r3, [pc, #488]	; (b700 <G_q+0x3610>)
    b518:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b51c:	443a      	add	r2, r7
    b51e:	4413      	add	r3, r2
    b520:	4618      	mov	r0, r3
    b522:	f00c fefd 	bl	18320 <b_exp>
  b_exp(&t21);
    b526:	f507 7398 	add.w	r3, r7, #304	; 0x130
    b52a:	4618      	mov	r0, r3
    b52c:	f00c fef8 	bl	18320 <b_exp>
  b_exp(&t22);
    b530:	4b74      	ldr	r3, [pc, #464]	; (b704 <G_q+0x3614>)
    b532:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b536:	443a      	add	r2, r7
    b538:	4413      	add	r3, r2
    b53a:	4618      	mov	r0, r3
    b53c:	f00c fef0 	bl	18320 <b_exp>
  b_exp(&t23);
    b540:	f507 632d 	add.w	r3, r7, #2768	; 0xad0
    b544:	4618      	mov	r0, r3
    b546:	f00c feeb 	bl	18320 <b_exp>
  b_exp(&t24);
    b54a:	f507 632e 	add.w	r3, r7, #2784	; 0xae0
    b54e:	4618      	mov	r0, r3
    b550:	f00c fee6 	bl	18320 <b_exp>
  b_exp(&t27);
    b554:	f507 6382 	add.w	r3, r7, #1040	; 0x410
    b558:	4618      	mov	r0, r3
    b55a:	f00c fee1 	bl	18320 <b_exp>
  b_exp(&t28);
    b55e:	f507 6384 	add.w	r3, r7, #1056	; 0x420
    b562:	4618      	mov	r0, r3
    b564:	f00c fedc 	bl	18320 <b_exp>
  b_exp(&t25);
    b568:	f507 632f 	add.w	r3, r7, #2800	; 0xaf0
    b56c:	4618      	mov	r0, r3
    b56e:	f00c fed7 	bl	18320 <b_exp>
  b_exp(&t26);
    b572:	f507 6330 	add.w	r3, r7, #2816	; 0xb00
    b576:	4618      	mov	r0, r3
    b578:	f00c fed2 	bl	18320 <b_exp>
  b_exp(&t31);
    b57c:	f507 6386 	add.w	r3, r7, #1072	; 0x430
    b580:	4618      	mov	r0, r3
    b582:	f00c fecd 	bl	18320 <b_exp>
  b_exp(&t32);
    b586:	f507 6388 	add.w	r3, r7, #1088	; 0x440
    b58a:	4618      	mov	r0, r3
    b58c:	f00c fec8 	bl	18320 <b_exp>
  b_exp(&t29);
    b590:	f507 6331 	add.w	r3, r7, #2832	; 0xb10
    b594:	4618      	mov	r0, r3
    b596:	f00c fec3 	bl	18320 <b_exp>
  b_exp(&t30);
    b59a:	f507 6332 	add.w	r3, r7, #2848	; 0xb20
    b59e:	4618      	mov	r0, r3
    b5a0:	f00c febe 	bl	18320 <b_exp>
  b_exp(&t9);
    b5a4:	4b58      	ldr	r3, [pc, #352]	; (b708 <G_q+0x3618>)
    b5a6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b5aa:	443a      	add	r2, r7
    b5ac:	4413      	add	r3, r2
    b5ae:	4618      	mov	r0, r3
    b5b0:	f00c feb6 	bl	18320 <b_exp>
  b_exp(&t5);
    b5b4:	f507 6327 	add.w	r3, r7, #2672	; 0xa70
    b5b8:	4618      	mov	r0, r3
    b5ba:	f00c feb1 	bl	18320 <b_exp>
  b_exp(&t6);
    b5be:	f507 6328 	add.w	r3, r7, #2688	; 0xa80
    b5c2:	4618      	mov	r0, r3
    b5c4:	f00c feac 	bl	18320 <b_exp>
  b_exp(&t4);
    b5c8:	f507 6326 	add.w	r3, r7, #2656	; 0xa60
    b5cc:	4618      	mov	r0, r3
    b5ce:	f00c fea7 	bl	18320 <b_exp>
  b_exp(&t41);
    b5d2:	f507 73a8 	add.w	r3, r7, #336	; 0x150
    b5d6:	4618      	mov	r0, r3
    b5d8:	f00c fea2 	bl	18320 <b_exp>
  b_exp(&t42);
    b5dc:	4b4b      	ldr	r3, [pc, #300]	; (b70c <G_q+0x361c>)
    b5de:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b5e2:	443a      	add	r2, r7
    b5e4:	4413      	add	r3, r2
    b5e6:	4618      	mov	r0, r3
    b5e8:	f00c fe9a 	bl	18320 <b_exp>
  b_exp(&t43);
    b5ec:	f507 6337 	add.w	r3, r7, #2928	; 0xb70
    b5f0:	4618      	mov	r0, r3
    b5f2:	f00c fe95 	bl	18320 <b_exp>
  b_exp(&t44);
    b5f6:	f507 6338 	add.w	r3, r7, #2944	; 0xb80
    b5fa:	4618      	mov	r0, r3
    b5fc:	f00c fe90 	bl	18320 <b_exp>
  b_exp(&t47);
    b600:	f507 6392 	add.w	r3, r7, #1168	; 0x490
    b604:	4618      	mov	r0, r3
    b606:	f00c fe8b 	bl	18320 <b_exp>
  b_exp(&t48);
    b60a:	f507 6394 	add.w	r3, r7, #1184	; 0x4a0
    b60e:	4618      	mov	r0, r3
    b610:	f00c fe86 	bl	18320 <b_exp>
  b_exp(&t45);
    b614:	f507 6339 	add.w	r3, r7, #2960	; 0xb90
    b618:	4618      	mov	r0, r3
    b61a:	f00c fe81 	bl	18320 <b_exp>
  b_exp(&t46);
    b61e:	f507 633a 	add.w	r3, r7, #2976	; 0xba0
    b622:	4618      	mov	r0, r3
    b624:	f00c fe7c 	bl	18320 <b_exp>
  b_exp(&t51);
    b628:	f507 6396 	add.w	r3, r7, #1200	; 0x4b0
    b62c:	4618      	mov	r0, r3
    b62e:	f00c fe77 	bl	18320 <b_exp>
  b_exp(&t52);
    b632:	f507 6398 	add.w	r3, r7, #1216	; 0x4c0
    b636:	4618      	mov	r0, r3
    b638:	f00c fe72 	bl	18320 <b_exp>
  b_exp(&t49);
    b63c:	f507 633b 	add.w	r3, r7, #2992	; 0xbb0
    b640:	4618      	mov	r0, r3
    b642:	f00c fe6d 	bl	18320 <b_exp>
  b_exp(&t50);
    b646:	f507 633c 	add.w	r3, r7, #3008	; 0xbc0
    b64a:	4618      	mov	r0, r3
    b64c:	f00c fe68 	bl	18320 <b_exp>
  b_exp(&t56);
    b650:	f507 633d 	add.w	r3, r7, #3024	; 0xbd0
    b654:	4618      	mov	r0, r3
    b656:	f00c fe63 	bl	18320 <b_exp>
  b_exp(&t57);
    b65a:	f507 633e 	add.w	r3, r7, #3040	; 0xbe0
    b65e:	4618      	mov	r0, r3
    b660:	f00c fe5e 	bl	18320 <b_exp>
  b_exp(&t70);
    b664:	f507 6345 	add.w	r3, r7, #3152	; 0xc50
    b668:	4618      	mov	r0, r3
    b66a:	f00c fe59 	bl	18320 <b_exp>
  b_exp(&t71);
    b66e:	f507 6346 	add.w	r3, r7, #3168	; 0xc60
    b672:	4618      	mov	r0, r3
    b674:	f00c fe54 	bl	18320 <b_exp>
  b_exp(&t72);
    b678:	f507 63a2 	add.w	r3, r7, #1296	; 0x510
    b67c:	4618      	mov	r0, r3
    b67e:	f00c fe4f 	bl	18320 <b_exp>
  b_exp(&t73);
    b682:	f507 63a4 	add.w	r3, r7, #1312	; 0x520
    b686:	4618      	mov	r0, r3
    b688:	f00c fe4a 	bl	18320 <b_exp>
  b_exp(&t74);
    b68c:	f507 63a6 	add.w	r3, r7, #1328	; 0x530
    b690:	4618      	mov	r0, r3
    b692:	f00c fe45 	bl	18320 <b_exp>
  b_exp(&t75);
    b696:	f507 63a8 	add.w	r3, r7, #1344	; 0x540
    b69a:	4618      	mov	r0, r3
    b69c:	f00c fe40 	bl	18320 <b_exp>
  b_exp(&t76);
    b6a0:	f507 6347 	add.w	r3, r7, #3184	; 0xc70
    b6a4:	4618      	mov	r0, r3
    b6a6:	f00c fe3b 	bl	18320 <b_exp>
  b_exp(&t77);
    b6aa:	f507 6348 	add.w	r3, r7, #3200	; 0xc80
    b6ae:	4618      	mov	r0, r3
    b6b0:	f00c fe36 	bl	18320 <b_exp>
  b_exp(&t58);
    b6b4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
    b6b8:	4618      	mov	r0, r3
    b6ba:	f00c fe31 	bl	18320 <b_exp>
  b_exp(&t59);
    b6be:	4b14      	ldr	r3, [pc, #80]	; (b710 <G_q+0x3620>)
    b6c0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b6c4:	443a      	add	r2, r7
    b6c6:	4413      	add	r3, r2
    b6c8:	4618      	mov	r0, r3
    b6ca:	f00c fe29 	bl	18320 <b_exp>
  b_exp(&t60);
    b6ce:	f507 633f 	add.w	r3, r7, #3056	; 0xbf0
    b6d2:	4618      	mov	r0, r3
    b6d4:	f00c fe24 	bl	18320 <b_exp>
  b_exp(&t61);
    b6d8:	f507 6340 	add.w	r3, r7, #3072	; 0xc00
    b6dc:	4618      	mov	r0, r3
    b6de:	f00c fe1f 	bl	18320 <b_exp>
  b_exp(&t64);
    b6e2:	f507 639a 	add.w	r3, r7, #1232	; 0x4d0
    b6e6:	4618      	mov	r0, r3
    b6e8:	e014      	b.n	b714 <G_q+0x3624>
    b6ea:	bf00      	nop
    b6ec:	ffffed30 	.word	0xffffed30
    b6f0:	ffffec90 	.word	0xffffec90
    b6f4:	ffffec38 	.word	0xffffec38
    b6f8:	ffffec70 	.word	0xffffec70
    b6fc:	ffffedd0 	.word	0xffffedd0
    b700:	ffffed50 	.word	0xffffed50
    b704:	ffffed70 	.word	0xffffed70
    b708:	ffffeff0 	.word	0xffffeff0
    b70c:	ffffed90 	.word	0xffffed90
    b710:	ffffedb0 	.word	0xffffedb0
    b714:	f00c fe04 	bl	18320 <b_exp>
  b_exp(&t65);
    b718:	f507 639c 	add.w	r3, r7, #1248	; 0x4e0
    b71c:	4618      	mov	r0, r3
    b71e:	f00c fdff 	bl	18320 <b_exp>
  b_exp(&t62);
    b722:	f507 6341 	add.w	r3, r7, #3088	; 0xc10
    b726:	4618      	mov	r0, r3
    b728:	f00c fdfa 	bl	18320 <b_exp>
  b_exp(&t63);
    b72c:	f507 6342 	add.w	r3, r7, #3104	; 0xc20
    b730:	4618      	mov	r0, r3
    b732:	f00c fdf5 	bl	18320 <b_exp>
  b_exp(&t68);
    b736:	f507 639e 	add.w	r3, r7, #1264	; 0x4f0
    b73a:	4618      	mov	r0, r3
    b73c:	f00c fdf0 	bl	18320 <b_exp>
  b_exp(&t69);
    b740:	f507 63a0 	add.w	r3, r7, #1280	; 0x500
    b744:	4618      	mov	r0, r3
    b746:	f00c fdeb 	bl	18320 <b_exp>
  b_exp(&t66);
    b74a:	f507 6343 	add.w	r3, r7, #3120	; 0xc30
    b74e:	4618      	mov	r0, r3
    b750:	f00c fde6 	bl	18320 <b_exp>
  b_exp(&t67);
    b754:	f507 6344 	add.w	r3, r7, #3136	; 0xc40
    b758:	4618      	mov	r0, r3
    b75a:	f00c fde1 	bl	18320 <b_exp>
  b_exp(&t78);
    b75e:	f507 6349 	add.w	r3, r7, #3216	; 0xc90
    b762:	4618      	mov	r0, r3
    b764:	f00c fddc 	bl	18320 <b_exp>
  b_exp(&t79);
    b768:	f507 634a 	add.w	r3, r7, #3232	; 0xca0
    b76c:	4618      	mov	r0, r3
    b76e:	f00c fdd7 	bl	18320 <b_exp>
  b_exp(&t80);
    b772:	f507 63aa 	add.w	r3, r7, #1360	; 0x550
    b776:	4618      	mov	r0, r3
    b778:	f00c fdd2 	bl	18320 <b_exp>
  b_exp(&t81);
    b77c:	f507 63ac 	add.w	r3, r7, #1376	; 0x560
    b780:	4618      	mov	r0, r3
    b782:	f00c fdcd 	bl	18320 <b_exp>
  b_exp(&t82);
    b786:	f507 634b 	add.w	r3, r7, #3248	; 0xcb0
    b78a:	4618      	mov	r0, r3
    b78c:	f00c fdc8 	bl	18320 <b_exp>
  b_exp(&t84);
    b790:	f507 63ae 	add.w	r3, r7, #1392	; 0x570
    b794:	4618      	mov	r0, r3
    b796:	f00c fdc3 	bl	18320 <b_exp>
  b_exp(&t86);
    b79a:	f507 73c8 	add.w	r3, r7, #400	; 0x190
    b79e:	4618      	mov	r0, r3
    b7a0:	f00c fdbe 	bl	18320 <b_exp>
  b_exp(&t154);
    b7a4:	f507 63e2 	add.w	r3, r7, #1808	; 0x710
    b7a8:	4618      	mov	r0, r3
    b7aa:	f00c fdb9 	bl	18320 <b_exp>
  b_exp(&t155);
    b7ae:	f507 63e4 	add.w	r3, r7, #1824	; 0x720
    b7b2:	4618      	mov	r0, r3
    b7b4:	f00c fdb4 	bl	18320 <b_exp>
  b_exp(&t156);
    b7b8:	f507 6365 	add.w	r3, r7, #3664	; 0xe50
    b7bc:	4618      	mov	r0, r3
    b7be:	f00c fdaf 	bl	18320 <b_exp>
  b_exp(&t157);
    b7c2:	f507 6366 	add.w	r3, r7, #3680	; 0xe60
    b7c6:	4618      	mov	r0, r3
    b7c8:	f00c fdaa 	bl	18320 <b_exp>
  b_exp(&t112);
    b7cc:	f107 0350 	add.w	r3, r7, #80	; 0x50
    b7d0:	4618      	mov	r0, r3
    b7d2:	f00c fda5 	bl	18320 <b_exp>
  b_exp(&t113);
    b7d6:	4bf3      	ldr	r3, [pc, #972]	; (bba4 <G_q+0x3ab4>)
    b7d8:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b7dc:	443a      	add	r2, r7
    b7de:	4413      	add	r3, r2
    b7e0:	4618      	mov	r0, r3
    b7e2:	f00c fd9d 	bl	18320 <b_exp>
  b_exp(&t98);
    b7e6:	f507 63b6 	add.w	r3, r7, #1456	; 0x5b0
    b7ea:	4618      	mov	r0, r3
    b7ec:	f00c fd98 	bl	18320 <b_exp>
  b_exp(&t99);
    b7f0:	f507 63b8 	add.w	r3, r7, #1472	; 0x5c0
    b7f4:	4618      	mov	r0, r3
    b7f6:	f00c fd93 	bl	18320 <b_exp>
  b_exp(&t96);
    b7fa:	f507 634f 	add.w	r3, r7, #3312	; 0xcf0
    b7fe:	4618      	mov	r0, r3
    b800:	f00c fd8e 	bl	18320 <b_exp>
  b_exp(&t97);
    b804:	f507 6350 	add.w	r3, r7, #3328	; 0xd00
    b808:	4618      	mov	r0, r3
    b80a:	f00c fd89 	bl	18320 <b_exp>
  b_exp(&t92);
    b80e:	f507 63b2 	add.w	r3, r7, #1424	; 0x590
    b812:	4618      	mov	r0, r3
    b814:	f00c fd84 	bl	18320 <b_exp>
  b_exp(&t93);
    b818:	f507 63b4 	add.w	r3, r7, #1440	; 0x5a0
    b81c:	4618      	mov	r0, r3
    b81e:	f00c fd7f 	bl	18320 <b_exp>
  b_exp(&t94);
    b822:	f507 634d 	add.w	r3, r7, #3280	; 0xcd0
    b826:	4618      	mov	r0, r3
    b828:	f00c fd7a 	bl	18320 <b_exp>
  b_exp(&t95);
    b82c:	f507 634e 	add.w	r3, r7, #3296	; 0xce0
    b830:	4618      	mov	r0, r3
    b832:	f00c fd75 	bl	18320 <b_exp>
  b_exp(&t100);
    b836:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
    b83a:	4618      	mov	r0, r3
    b83c:	f00c fd70 	bl	18320 <b_exp>
  b_exp(&t101);
    b840:	4bd9      	ldr	r3, [pc, #868]	; (bba8 <G_q+0x3ab8>)
    b842:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b846:	443a      	add	r2, r7
    b848:	4413      	add	r3, r2
    b84a:	4618      	mov	r0, r3
    b84c:	f00c fd68 	bl	18320 <b_exp>
  b_exp(&t104);
    b850:	f507 6351 	add.w	r3, r7, #3344	; 0xd10
    b854:	4618      	mov	r0, r3
    b856:	f00c fd63 	bl	18320 <b_exp>
  b_exp(&t105);
    b85a:	f507 6352 	add.w	r3, r7, #3360	; 0xd20
    b85e:	4618      	mov	r0, r3
    b860:	f00c fd5e 	bl	18320 <b_exp>
  b_exp(&t106);
    b864:	f507 63ba 	add.w	r3, r7, #1488	; 0x5d0
    b868:	4618      	mov	r0, r3
    b86a:	f00c fd59 	bl	18320 <b_exp>
  b_exp(&t107);
    b86e:	f507 63bc 	add.w	r3, r7, #1504	; 0x5e0
    b872:	4618      	mov	r0, r3
    b874:	f00c fd54 	bl	18320 <b_exp>
  b_exp(&t108);
    b878:	f507 63be 	add.w	r3, r7, #1520	; 0x5f0
    b87c:	4618      	mov	r0, r3
    b87e:	f00c fd4f 	bl	18320 <b_exp>
  b_exp(&t109);
    b882:	f507 63c0 	add.w	r3, r7, #1536	; 0x600
    b886:	4618      	mov	r0, r3
    b888:	f00c fd4a 	bl	18320 <b_exp>
  b_exp(&t110);
    b88c:	f507 6353 	add.w	r3, r7, #3376	; 0xd30
    b890:	4618      	mov	r0, r3
    b892:	f00c fd45 	bl	18320 <b_exp>
  b_exp(&t111);
    b896:	f507 6354 	add.w	r3, r7, #3392	; 0xd40
    b89a:	4618      	mov	r0, r3
    b89c:	f00c fd40 	bl	18320 <b_exp>
  b_exp(&t102);
    b8a0:	f507 73e8 	add.w	r3, r7, #464	; 0x1d0
    b8a4:	4618      	mov	r0, r3
    b8a6:	f00c fd3b 	bl	18320 <b_exp>
  b_exp(&t103);
    b8aa:	4bc0      	ldr	r3, [pc, #768]	; (bbac <G_q+0x3abc>)
    b8ac:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b8b0:	443a      	add	r2, r7
    b8b2:	4413      	add	r3, r2
    b8b4:	4618      	mov	r0, r3
    b8b6:	f00c fd33 	bl	18320 <b_exp>
  b_exp(&t124);
    b8ba:	f107 0370 	add.w	r3, r7, #112	; 0x70
    b8be:	4618      	mov	r0, r3
    b8c0:	f00c fd2e 	bl	18320 <b_exp>
  b_exp(&t125);
    b8c4:	4bba      	ldr	r3, [pc, #744]	; (bbb0 <G_q+0x3ac0>)
    b8c6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b8ca:	443a      	add	r2, r7
    b8cc:	4413      	add	r3, r2
    b8ce:	4618      	mov	r0, r3
    b8d0:	f00c fd26 	bl	18320 <b_exp>
  b_exp(&t136);
    b8d4:	f507 63d2 	add.w	r3, r7, #1680	; 0x690
    b8d8:	4618      	mov	r0, r3
    b8da:	f00c fd21 	bl	18320 <b_exp>
  b_exp(&t137);
    b8de:	f507 63d4 	add.w	r3, r7, #1696	; 0x6a0
    b8e2:	4618      	mov	r0, r3
    b8e4:	f00c fd1c 	bl	18320 <b_exp>
  b_exp(&t138);
    b8e8:	f507 635d 	add.w	r3, r7, #3536	; 0xdd0
    b8ec:	4618      	mov	r0, r3
    b8ee:	f00c fd17 	bl	18320 <b_exp>
  b_exp(&t139);
    b8f2:	f507 635e 	add.w	r3, r7, #3552	; 0xde0
    b8f6:	4618      	mov	r0, r3
    b8f8:	f00c fd12 	bl	18320 <b_exp>
  b_exp(&t152);
    b8fc:	f507 730c 	add.w	r3, r7, #560	; 0x230
    b900:	4618      	mov	r0, r3
    b902:	f00c fd0d 	bl	18320 <b_exp>
  b_exp(&t153);
    b906:	4bab      	ldr	r3, [pc, #684]	; (bbb4 <G_q+0x3ac4>)
    b908:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b90c:	443a      	add	r2, r7
    b90e:	4413      	add	r3, r2
    b910:	4618      	mov	r0, r3
    b912:	f00c fd05 	bl	18320 <b_exp>
  b_exp(&t150);
    b916:	f507 63de 	add.w	r3, r7, #1776	; 0x6f0
    b91a:	4618      	mov	r0, r3
    b91c:	f00c fd00 	bl	18320 <b_exp>
  b_exp(&t151);
    b920:	f507 63e0 	add.w	r3, r7, #1792	; 0x700
    b924:	4618      	mov	r0, r3
    b926:	f00c fcfb 	bl	18320 <b_exp>
  b_exp(&t148);
    b92a:	f507 6363 	add.w	r3, r7, #3632	; 0xe30
    b92e:	4618      	mov	r0, r3
    b930:	f00c fcf6 	bl	18320 <b_exp>
  b_exp(&t149);
    b934:	f507 6364 	add.w	r3, r7, #3648	; 0xe40
    b938:	4618      	mov	r0, r3
    b93a:	f00c fcf1 	bl	18320 <b_exp>
  b_exp(&t144);
    b93e:	f507 63da 	add.w	r3, r7, #1744	; 0x6d0
    b942:	4618      	mov	r0, r3
    b944:	f00c fcec 	bl	18320 <b_exp>
  b_exp(&t145);
    b948:	f507 63dc 	add.w	r3, r7, #1760	; 0x6e0
    b94c:	4618      	mov	r0, r3
    b94e:	f00c fce7 	bl	18320 <b_exp>
  b_exp(&t146);
    b952:	f507 6361 	add.w	r3, r7, #3600	; 0xe10
    b956:	4618      	mov	r0, r3
    b958:	f00c fce2 	bl	18320 <b_exp>
  b_exp(&t147);
    b95c:	f507 6362 	add.w	r3, r7, #3616	; 0xe20
    b960:	4618      	mov	r0, r3
    b962:	f00c fcdd 	bl	18320 <b_exp>
  b_exp(&t134);
    b966:	f507 7304 	add.w	r3, r7, #528	; 0x210
    b96a:	4618      	mov	r0, r3
    b96c:	f00c fcd8 	bl	18320 <b_exp>
  b_exp(&t135);
    b970:	4b91      	ldr	r3, [pc, #580]	; (bbb8 <G_q+0x3ac8>)
    b972:	f241 32d0 	movw	r2, #5072	; 0x13d0
    b976:	443a      	add	r2, r7
    b978:	4413      	add	r3, r2
    b97a:	4618      	mov	r0, r3
    b97c:	f00c fcd0 	bl	18320 <b_exp>
  b_exp(&t126);
    b980:	f507 6359 	add.w	r3, r7, #3472	; 0xd90
    b984:	4618      	mov	r0, r3
    b986:	f00c fccb 	bl	18320 <b_exp>
  b_exp(&t127);
    b98a:	f507 635a 	add.w	r3, r7, #3488	; 0xda0
    b98e:	4618      	mov	r0, r3
    b990:	f00c fcc6 	bl	18320 <b_exp>
  b_exp(&t128);
    b994:	f507 63ca 	add.w	r3, r7, #1616	; 0x650
    b998:	4618      	mov	r0, r3
    b99a:	f00c fcc1 	bl	18320 <b_exp>
  b_exp(&t129);
    b99e:	f507 63cc 	add.w	r3, r7, #1632	; 0x660
    b9a2:	4618      	mov	r0, r3
    b9a4:	f00c fcbc 	bl	18320 <b_exp>
  b_exp(&t130);
    b9a8:	f507 63ce 	add.w	r3, r7, #1648	; 0x670
    b9ac:	4618      	mov	r0, r3
    b9ae:	f00c fcb7 	bl	18320 <b_exp>
  b_exp(&t131);
    b9b2:	f507 63d0 	add.w	r3, r7, #1664	; 0x680
    b9b6:	4618      	mov	r0, r3
    b9b8:	f00c fcb2 	bl	18320 <b_exp>
  b_exp(&t132);
    b9bc:	f507 635b 	add.w	r3, r7, #3504	; 0xdb0
    b9c0:	4618      	mov	r0, r3
    b9c2:	f00c fcad 	bl	18320 <b_exp>
  b_exp(&t133);
    b9c6:	f507 635c 	add.w	r3, r7, #3520	; 0xdc0
    b9ca:	4618      	mov	r0, r3
    b9cc:	f00c fca8 	bl	18320 <b_exp>
  b_exp(&t140);
    b9d0:	f507 63d6 	add.w	r3, r7, #1712	; 0x6b0
    b9d4:	4618      	mov	r0, r3
    b9d6:	f00c fca3 	bl	18320 <b_exp>
  b_exp(&t141);
    b9da:	f507 63d8 	add.w	r3, r7, #1728	; 0x6c0
    b9de:	4618      	mov	r0, r3
    b9e0:	f00c fc9e 	bl	18320 <b_exp>
  b_exp(&t142);
    b9e4:	f507 635f 	add.w	r3, r7, #3568	; 0xdf0
    b9e8:	4618      	mov	r0, r3
    b9ea:	f00c fc99 	bl	18320 <b_exp>
  b_exp(&t143);
    b9ee:	f507 6360 	add.w	r3, r7, #3584	; 0xe00
    b9f2:	4618      	mov	r0, r3
    b9f4:	f00c fc94 	bl	18320 <b_exp>
  b_exp(&t168);
    b9f8:	f507 63ee 	add.w	r3, r7, #1904	; 0x770
    b9fc:	4618      	mov	r0, r3
    b9fe:	f00c fc8f 	bl	18320 <b_exp>
  b_exp(&t169);
    ba02:	f507 63f0 	add.w	r3, r7, #1920	; 0x780
    ba06:	4618      	mov	r0, r3
    ba08:	f00c fc8a 	bl	18320 <b_exp>
  b_exp(&t170);
    ba0c:	f507 636b 	add.w	r3, r7, #3760	; 0xeb0
    ba10:	4618      	mov	r0, r3
    ba12:	f00c fc85 	bl	18320 <b_exp>
  b_exp(&t171);
    ba16:	f507 636c 	add.w	r3, r7, #3776	; 0xec0
    ba1a:	4618      	mov	r0, r3
    ba1c:	f00c fc80 	bl	18320 <b_exp>
  b_exp(&t120);
    ba20:	f507 63c6 	add.w	r3, r7, #1584	; 0x630
    ba24:	4618      	mov	r0, r3
    ba26:	f00c fc7b 	bl	18320 <b_exp>
  b_exp(&t121);
    ba2a:	f507 63c8 	add.w	r3, r7, #1600	; 0x640
    ba2e:	4618      	mov	r0, r3
    ba30:	f00c fc76 	bl	18320 <b_exp>
  b_exp(&t118);
    ba34:	f507 6357 	add.w	r3, r7, #3440	; 0xd70
    ba38:	4618      	mov	r0, r3
    ba3a:	f00c fc71 	bl	18320 <b_exp>
  b_exp(&t119);
    ba3e:	f507 6358 	add.w	r3, r7, #3456	; 0xd80
    ba42:	4618      	mov	r0, r3
    ba44:	f00c fc6c 	bl	18320 <b_exp>
  b_exp(&t114);
    ba48:	f507 63c2 	add.w	r3, r7, #1552	; 0x610
    ba4c:	4618      	mov	r0, r3
    ba4e:	f00c fc67 	bl	18320 <b_exp>
  b_exp(&t115);
    ba52:	f507 63c4 	add.w	r3, r7, #1568	; 0x620
    ba56:	4618      	mov	r0, r3
    ba58:	f00c fc62 	bl	18320 <b_exp>
  b_exp(&t116);
    ba5c:	f507 6355 	add.w	r3, r7, #3408	; 0xd50
    ba60:	4618      	mov	r0, r3
    ba62:	f00c fc5d 	bl	18320 <b_exp>
  b_exp(&t117);
    ba66:	f507 6356 	add.w	r3, r7, #3424	; 0xd60
    ba6a:	4618      	mov	r0, r3
    ba6c:	f00c fc58 	bl	18320 <b_exp>
  b_exp(&t122);
    ba70:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
    ba74:	4618      	mov	r0, r3
    ba76:	f00c fc53 	bl	18320 <b_exp>
  b_exp(&t123);
    ba7a:	4b50      	ldr	r3, [pc, #320]	; (bbbc <G_q+0x3acc>)
    ba7c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ba80:	443a      	add	r2, r7
    ba82:	4413      	add	r3, r2
    ba84:	4618      	mov	r0, r3
    ba86:	f00c fc4b 	bl	18320 <b_exp>
  b_exp(&t160);
    ba8a:	f507 6367 	add.w	r3, r7, #3696	; 0xe70
    ba8e:	4618      	mov	r0, r3
    ba90:	f00c fc46 	bl	18320 <b_exp>
  b_exp(&t161);
    ba94:	f507 6368 	add.w	r3, r7, #3712	; 0xe80
    ba98:	4618      	mov	r0, r3
    ba9a:	f00c fc41 	bl	18320 <b_exp>
  b_exp(&t162);
    ba9e:	f507 63e6 	add.w	r3, r7, #1840	; 0x730
    baa2:	4618      	mov	r0, r3
    baa4:	f00c fc3c 	bl	18320 <b_exp>
  b_exp(&t163);
    baa8:	f507 63e8 	add.w	r3, r7, #1856	; 0x740
    baac:	4618      	mov	r0, r3
    baae:	f00c fc37 	bl	18320 <b_exp>
  b_exp(&t164);
    bab2:	f507 63ea 	add.w	r3, r7, #1872	; 0x750
    bab6:	4618      	mov	r0, r3
    bab8:	f00c fc32 	bl	18320 <b_exp>
  b_exp(&t165);
    babc:	f507 63ec 	add.w	r3, r7, #1888	; 0x760
    bac0:	4618      	mov	r0, r3
    bac2:	f00c fc2d 	bl	18320 <b_exp>
  b_exp(&t166);
    bac6:	f507 6369 	add.w	r3, r7, #3728	; 0xe90
    baca:	4618      	mov	r0, r3
    bacc:	f00c fc28 	bl	18320 <b_exp>
  b_exp(&t167);
    bad0:	f507 636a 	add.w	r3, r7, #3744	; 0xea0
    bad4:	4618      	mov	r0, r3
    bad6:	f00c fc23 	bl	18320 <b_exp>
  b_exp(&t158);
    bada:	f507 7314 	add.w	r3, r7, #592	; 0x250
    bade:	4618      	mov	r0, r3
    bae0:	f00c fc1e 	bl	18320 <b_exp>
  b_exp(&t159);
    bae4:	4b36      	ldr	r3, [pc, #216]	; (bbc0 <G_q+0x3ad0>)
    bae6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    baea:	443a      	add	r2, r7
    baec:	4413      	add	r3, r2
    baee:	4618      	mov	r0, r3
    baf0:	f00c fc16 	bl	18320 <b_exp>
  b_exp(&t194);
    baf4:	f107 0390 	add.w	r3, r7, #144	; 0x90
    baf8:	4618      	mov	r0, r3
    bafa:	f00c fc11 	bl	18320 <b_exp>
  b_exp(&t195);
    bafe:	4b31      	ldr	r3, [pc, #196]	; (bbc4 <G_q+0x3ad4>)
    bb00:	f241 32d0 	movw	r2, #5072	; 0x13d0
    bb04:	443a      	add	r2, r7
    bb06:	4413      	add	r3, r2
    bb08:	4618      	mov	r0, r3
    bb0a:	f00c fc09 	bl	18320 <b_exp>
  b_exp(&t172);
    bb0e:	f507 731c 	add.w	r3, r7, #624	; 0x270
    bb12:	4618      	mov	r0, r3
    bb14:	f00c fc04 	bl	18320 <b_exp>
  b_exp(&t173);
    bb18:	4b2b      	ldr	r3, [pc, #172]	; (bbc8 <G_q+0x3ad8>)
    bb1a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    bb1e:	443a      	add	r2, r7
    bb20:	4413      	add	r3, r2
    bb22:	4618      	mov	r0, r3
    bb24:	f00c fbfc 	bl	18320 <b_exp>
  b_exp(&t174);
    bb28:	f507 636d 	add.w	r3, r7, #3792	; 0xed0
    bb2c:	4618      	mov	r0, r3
    bb2e:	f00c fbf7 	bl	18320 <b_exp>
  b_exp(&t175);
    bb32:	f507 636e 	add.w	r3, r7, #3808	; 0xee0
    bb36:	4618      	mov	r0, r3
    bb38:	f00c fbf2 	bl	18320 <b_exp>
  b_exp(&t182);
    bb3c:	f507 63f6 	add.w	r3, r7, #1968	; 0x7b0
    bb40:	4618      	mov	r0, r3
    bb42:	f00c fbed 	bl	18320 <b_exp>
  b_exp(&t183);
    bb46:	f507 63f8 	add.w	r3, r7, #1984	; 0x7c0
    bb4a:	4618      	mov	r0, r3
    bb4c:	f00c fbe8 	bl	18320 <b_exp>
  b_exp(&t180);
    bb50:	f507 6371 	add.w	r3, r7, #3856	; 0xf10
    bb54:	4618      	mov	r0, r3
    bb56:	f00c fbe3 	bl	18320 <b_exp>
  b_exp(&t181);
    bb5a:	f507 6372 	add.w	r3, r7, #3872	; 0xf20
    bb5e:	4618      	mov	r0, r3
    bb60:	f00c fbde 	bl	18320 <b_exp>
  b_exp(&t176);
    bb64:	f507 63f2 	add.w	r3, r7, #1936	; 0x790
    bb68:	4618      	mov	r0, r3
    bb6a:	f00c fbd9 	bl	18320 <b_exp>
  b_exp(&t177);
    bb6e:	f507 63f4 	add.w	r3, r7, #1952	; 0x7a0
    bb72:	4618      	mov	r0, r3
    bb74:	f00c fbd4 	bl	18320 <b_exp>
  b_exp(&t178);
    bb78:	f507 636f 	add.w	r3, r7, #3824	; 0xef0
    bb7c:	4618      	mov	r0, r3
    bb7e:	f00c fbcf 	bl	18320 <b_exp>
  b_exp(&t179);
    bb82:	f507 6370 	add.w	r3, r7, #3840	; 0xf00
    bb86:	4618      	mov	r0, r3
    bb88:	f00c fbca 	bl	18320 <b_exp>
  b_exp(&t186);
    bb8c:	f507 63fa 	add.w	r3, r7, #2000	; 0x7d0
    bb90:	4618      	mov	r0, r3
    bb92:	f00c fbc5 	bl	18320 <b_exp>
  b_exp(&t187);
    bb96:	f507 63fc 	add.w	r3, r7, #2016	; 0x7e0
    bb9a:	4618      	mov	r0, r3
    bb9c:	f00c fbc0 	bl	18320 <b_exp>
    bba0:	e014      	b.n	bbcc <G_q+0x3adc>
    bba2:	bf00      	nop
    bba4:	ffffec90 	.word	0xffffec90
    bba8:	ffffedf0 	.word	0xffffedf0
    bbac:	ffffee10 	.word	0xffffee10
    bbb0:	ffffecb0 	.word	0xffffecb0
    bbb4:	ffffee70 	.word	0xffffee70
    bbb8:	ffffee50 	.word	0xffffee50
    bbbc:	ffffee30 	.word	0xffffee30
    bbc0:	ffffee90 	.word	0xffffee90
    bbc4:	ffffecd0 	.word	0xffffecd0
    bbc8:	ffffeeb0 	.word	0xffffeeb0
  b_exp(&t188);
    bbcc:	f507 6373 	add.w	r3, r7, #3888	; 0xf30
    bbd0:	4618      	mov	r0, r3
    bbd2:	f00c fba5 	bl	18320 <b_exp>
  b_exp(&t189);
    bbd6:	f507 6374 	add.w	r3, r7, #3904	; 0xf40
    bbda:	4618      	mov	r0, r3
    bbdc:	f00c fba0 	bl	18320 <b_exp>
  b_exp(&t190);
    bbe0:	f507 63fe 	add.w	r3, r7, #2032	; 0x7f0
    bbe4:	4618      	mov	r0, r3
    bbe6:	f00c fb9b 	bl	18320 <b_exp>
  b_exp(&t191);
    bbea:	f507 6300 	add.w	r3, r7, #2048	; 0x800
    bbee:	4618      	mov	r0, r3
    bbf0:	f00c fb96 	bl	18320 <b_exp>
  b_exp(&t192);
    bbf4:	f507 6375 	add.w	r3, r7, #3920	; 0xf50
    bbf8:	4618      	mov	r0, r3
    bbfa:	f00c fb91 	bl	18320 <b_exp>
  b_exp(&t193);
    bbfe:	f507 6376 	add.w	r3, r7, #3936	; 0xf60
    bc02:	4618      	mov	r0, r3
    bc04:	f00c fb8c 	bl	18320 <b_exp>
  b_exp(&t184);
    bc08:	f507 7324 	add.w	r3, r7, #656	; 0x290
    bc0c:	4618      	mov	r0, r3
    bc0e:	f00c fb87 	bl	18320 <b_exp>
  b_exp(&t185);
    bc12:	4bec      	ldr	r3, [pc, #944]	; (bfc4 <G_q+0x3ed4>)
    bc14:	f241 32d0 	movw	r2, #5072	; 0x13d0
    bc18:	443a      	add	r2, r7
    bc1a:	4413      	add	r3, r2
    bc1c:	4618      	mov	r0, r3
    bc1e:	f00c fb7f 	bl	18320 <b_exp>
  b_exp(&t196);
    bc22:	f507 732c 	add.w	r3, r7, #688	; 0x2b0
    bc26:	4618      	mov	r0, r3
    bc28:	f00c fb7a 	bl	18320 <b_exp>
  b_exp(&t197);
    bc2c:	4be6      	ldr	r3, [pc, #920]	; (bfc8 <G_q+0x3ed8>)
    bc2e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    bc32:	443a      	add	r2, r7
    bc34:	4413      	add	r3, r2
    bc36:	4618      	mov	r0, r3
    bc38:	f00c fb72 	bl	18320 <b_exp>
  b_exp(&t198);
    bc3c:	f507 6377 	add.w	r3, r7, #3952	; 0xf70
    bc40:	4618      	mov	r0, r3
    bc42:	f00c fb6d 	bl	18320 <b_exp>
  b_exp(&t199);
    bc46:	f507 6378 	add.w	r3, r7, #3968	; 0xf80
    bc4a:	4618      	mov	r0, r3
    bc4c:	f00c fb68 	bl	18320 <b_exp>
  b_exp(&t206);
    bc50:	f507 6303 	add.w	r3, r7, #2096	; 0x830
    bc54:	4618      	mov	r0, r3
    bc56:	f00c fb63 	bl	18320 <b_exp>
  b_exp(&t207);
    bc5a:	f507 6304 	add.w	r3, r7, #2112	; 0x840
    bc5e:	4618      	mov	r0, r3
    bc60:	f00c fb5e 	bl	18320 <b_exp>
  b_exp(&t204);
    bc64:	f507 637b 	add.w	r3, r7, #4016	; 0xfb0
    bc68:	4618      	mov	r0, r3
    bc6a:	f00c fb59 	bl	18320 <b_exp>
  b_exp(&t205);
    bc6e:	f507 637c 	add.w	r3, r7, #4032	; 0xfc0
    bc72:	4618      	mov	r0, r3
    bc74:	f00c fb54 	bl	18320 <b_exp>
  b_exp(&t200);
    bc78:	f507 6301 	add.w	r3, r7, #2064	; 0x810
    bc7c:	4618      	mov	r0, r3
    bc7e:	f00c fb4f 	bl	18320 <b_exp>
  b_exp(&t201);
    bc82:	f507 6302 	add.w	r3, r7, #2080	; 0x820
    bc86:	4618      	mov	r0, r3
    bc88:	f00c fb4a 	bl	18320 <b_exp>
  b_exp(&t202);
    bc8c:	f507 6379 	add.w	r3, r7, #3984	; 0xf90
    bc90:	4618      	mov	r0, r3
    bc92:	f00c fb45 	bl	18320 <b_exp>
  b_exp(&t203);
    bc96:	f507 637a 	add.w	r3, r7, #4000	; 0xfa0
    bc9a:	4618      	mov	r0, r3
    bc9c:	f00c fb40 	bl	18320 <b_exp>
  b_exp(&t210);
    bca0:	f507 6305 	add.w	r3, r7, #2128	; 0x850
    bca4:	4618      	mov	r0, r3
    bca6:	f00c fb3b 	bl	18320 <b_exp>
  b_exp(&t211);
    bcaa:	f507 6306 	add.w	r3, r7, #2144	; 0x860
    bcae:	4618      	mov	r0, r3
    bcb0:	f00c fb36 	bl	18320 <b_exp>
  b_exp(&t212);
    bcb4:	f507 637d 	add.w	r3, r7, #4048	; 0xfd0
    bcb8:	4618      	mov	r0, r3
    bcba:	f00c fb31 	bl	18320 <b_exp>
  b_exp(&t213);
    bcbe:	f507 637e 	add.w	r3, r7, #4064	; 0xfe0
    bcc2:	4618      	mov	r0, r3
    bcc4:	f00c fb2c 	bl	18320 <b_exp>
  b_exp(&t214);
    bcc8:	f507 6307 	add.w	r3, r7, #2160	; 0x870
    bccc:	4618      	mov	r0, r3
    bcce:	f00c fb27 	bl	18320 <b_exp>
  b_exp(&t215);
    bcd2:	f507 6308 	add.w	r3, r7, #2176	; 0x880
    bcd6:	4618      	mov	r0, r3
    bcd8:	f00c fb22 	bl	18320 <b_exp>
  b_exp(&t216);
    bcdc:	f507 637f 	add.w	r3, r7, #4080	; 0xff0
    bce0:	4618      	mov	r0, r3
    bce2:	f00c fb1d 	bl	18320 <b_exp>
  b_exp(&t217);
    bce6:	f507 5380 	add.w	r3, r7, #4096	; 0x1000
    bcea:	4618      	mov	r0, r3
    bcec:	f00c fb18 	bl	18320 <b_exp>
  b_exp(&t208);
    bcf0:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
    bcf4:	4618      	mov	r0, r3
    bcf6:	f00c fb13 	bl	18320 <b_exp>
  b_exp(&t209);
    bcfa:	4bb4      	ldr	r3, [pc, #720]	; (bfcc <G_q+0x3edc>)
    bcfc:	f241 32d0 	movw	r2, #5072	; 0x13d0
    bd00:	443a      	add	r2, r7
    bd02:	4413      	add	r3, r2
    bd04:	4618      	mov	r0, r3
    bd06:	f00c fb0b 	bl	18320 <b_exp>
  b_exp(&t230);
    bd0a:	f507 7344 	add.w	r3, r7, #784	; 0x310
    bd0e:	4618      	mov	r0, r3
    bd10:	f00c fb06 	bl	18320 <b_exp>
  b_exp(&t231);
    bd14:	4bae      	ldr	r3, [pc, #696]	; (bfd0 <G_q+0x3ee0>)
    bd16:	f241 32d0 	movw	r2, #5072	; 0x13d0
    bd1a:	443a      	add	r2, r7
    bd1c:	4413      	add	r3, r2
    bd1e:	4618      	mov	r0, r3
    bd20:	f00c fafe 	bl	18320 <b_exp>
  b_exp(&t232);
    bd24:	f241 0350 	movw	r3, #4176	; 0x1050
    bd28:	443b      	add	r3, r7
    bd2a:	4618      	mov	r0, r3
    bd2c:	f00c faf8 	bl	18320 <b_exp>
  b_exp(&t233);
    bd30:	f507 5383 	add.w	r3, r7, #4192	; 0x1060
    bd34:	4618      	mov	r0, r3
    bd36:	f00c faf3 	bl	18320 <b_exp>
  b_exp(&t240);
    bd3a:	f507 630f 	add.w	r3, r7, #2288	; 0x8f0
    bd3e:	4618      	mov	r0, r3
    bd40:	f00c faee 	bl	18320 <b_exp>
  b_exp(&t241);
    bd44:	f507 6310 	add.w	r3, r7, #2304	; 0x900
    bd48:	4618      	mov	r0, r3
    bd4a:	f00c fae9 	bl	18320 <b_exp>
  b_exp(&t238);
    bd4e:	f241 0390 	movw	r3, #4240	; 0x1090
    bd52:	443b      	add	r3, r7
    bd54:	4618      	mov	r0, r3
    bd56:	f00c fae3 	bl	18320 <b_exp>
  b_exp(&t239);
    bd5a:	f507 5385 	add.w	r3, r7, #4256	; 0x10a0
    bd5e:	4618      	mov	r0, r3
    bd60:	f00c fade 	bl	18320 <b_exp>
  b_exp(&t234);
    bd64:	f507 630d 	add.w	r3, r7, #2256	; 0x8d0
    bd68:	4618      	mov	r0, r3
    bd6a:	f00c fad9 	bl	18320 <b_exp>
  b_exp(&t235);
    bd6e:	f507 630e 	add.w	r3, r7, #2272	; 0x8e0
    bd72:	4618      	mov	r0, r3
    bd74:	f00c fad4 	bl	18320 <b_exp>
  b_exp(&t236);
    bd78:	f241 0370 	movw	r3, #4208	; 0x1070
    bd7c:	443b      	add	r3, r7
    bd7e:	4618      	mov	r0, r3
    bd80:	f00c face 	bl	18320 <b_exp>
  b_exp(&t237);
    bd84:	f507 5384 	add.w	r3, r7, #4224	; 0x1080
    bd88:	4618      	mov	r0, r3
    bd8a:	f00c fac9 	bl	18320 <b_exp>
  b_exp(&t228);
    bd8e:	f507 733c 	add.w	r3, r7, #752	; 0x2f0
    bd92:	4618      	mov	r0, r3
    bd94:	f00c fac4 	bl	18320 <b_exp>
  b_exp(&t229);
    bd98:	4b8e      	ldr	r3, [pc, #568]	; (bfd4 <G_q+0x3ee4>)
    bd9a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    bd9e:	443a      	add	r2, r7
    bda0:	4413      	add	r3, r2
    bda2:	4618      	mov	r0, r3
    bda4:	f00c fabc 	bl	18320 <b_exp>
  b_exp(&t220);
    bda8:	f507 6309 	add.w	r3, r7, #2192	; 0x890
    bdac:	4618      	mov	r0, r3
    bdae:	f00c fab7 	bl	18320 <b_exp>
  b_exp(&t221);
    bdb2:	f507 630a 	add.w	r3, r7, #2208	; 0x8a0
    bdb6:	4618      	mov	r0, r3
    bdb8:	f00c fab2 	bl	18320 <b_exp>
  b_exp(&t222);
    bdbc:	f241 0310 	movw	r3, #4112	; 0x1010
    bdc0:	443b      	add	r3, r7
    bdc2:	4618      	mov	r0, r3
    bdc4:	f00c faac 	bl	18320 <b_exp>
  b_exp(&t223);
    bdc8:	f507 5381 	add.w	r3, r7, #4128	; 0x1020
    bdcc:	4618      	mov	r0, r3
    bdce:	f00c faa7 	bl	18320 <b_exp>
  b_exp(&t224);
    bdd2:	f507 630b 	add.w	r3, r7, #2224	; 0x8b0
    bdd6:	4618      	mov	r0, r3
    bdd8:	f00c faa2 	bl	18320 <b_exp>
  b_exp(&t225);
    bddc:	f507 630c 	add.w	r3, r7, #2240	; 0x8c0
    bde0:	4618      	mov	r0, r3
    bde2:	f00c fa9d 	bl	18320 <b_exp>
  b_exp(&t226);
    bde6:	f241 0330 	movw	r3, #4144	; 0x1030
    bdea:	443b      	add	r3, r7
    bdec:	4618      	mov	r0, r3
    bdee:	f00c fa97 	bl	18320 <b_exp>
  b_exp(&t227);
    bdf2:	f507 5382 	add.w	r3, r7, #4160	; 0x1040
    bdf6:	4618      	mov	r0, r3
    bdf8:	f00c fa92 	bl	18320 <b_exp>
  b_exp(&t218);
    bdfc:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
    be00:	4618      	mov	r0, r3
    be02:	f00c fa8d 	bl	18320 <b_exp>
  b_exp(&t219);
    be06:	4b74      	ldr	r3, [pc, #464]	; (bfd8 <G_q+0x3ee8>)
    be08:	f241 32d0 	movw	r2, #5072	; 0x13d0
    be0c:	443a      	add	r2, r7
    be0e:	4413      	add	r3, r2
    be10:	4618      	mov	r0, r3
    be12:	f00c fa85 	bl	18320 <b_exp>
  b_exp(&t264);
    be16:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
    be1a:	4618      	mov	r0, r3
    be1c:	f00c fa80 	bl	18320 <b_exp>
  b_exp(&t265);
    be20:	4b6e      	ldr	r3, [pc, #440]	; (bfdc <G_q+0x3eec>)
    be22:	f241 32d0 	movw	r2, #5072	; 0x13d0
    be26:	443a      	add	r2, r7
    be28:	4413      	add	r3, r2
    be2a:	4618      	mov	r0, r3
    be2c:	f00c fa78 	bl	18320 <b_exp>
  b_exp(&t242);
    be30:	f507 734c 	add.w	r3, r7, #816	; 0x330
    be34:	4618      	mov	r0, r3
    be36:	f00c fa73 	bl	18320 <b_exp>
  b_exp(&t243);
    be3a:	4b69      	ldr	r3, [pc, #420]	; (bfe0 <G_q+0x3ef0>)
    be3c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    be40:	443a      	add	r2, r7
    be42:	4413      	add	r3, r2
    be44:	4618      	mov	r0, r3
    be46:	f00c fa6b 	bl	18320 <b_exp>
  b_exp(&t244);
    be4a:	f241 03b0 	movw	r3, #4272	; 0x10b0
    be4e:	443b      	add	r3, r7
    be50:	4618      	mov	r0, r3
    be52:	f00c fa65 	bl	18320 <b_exp>
  b_exp(&t245);
    be56:	f507 5386 	add.w	r3, r7, #4288	; 0x10c0
    be5a:	4618      	mov	r0, r3
    be5c:	f00c fa60 	bl	18320 <b_exp>
  b_exp(&t252);
    be60:	f507 6313 	add.w	r3, r7, #2352	; 0x930
    be64:	4618      	mov	r0, r3
    be66:	f00c fa5b 	bl	18320 <b_exp>
  b_exp(&t253);
    be6a:	f507 6314 	add.w	r3, r7, #2368	; 0x940
    be6e:	4618      	mov	r0, r3
    be70:	f00c fa56 	bl	18320 <b_exp>
  b_exp(&t250);
    be74:	f241 03f0 	movw	r3, #4336	; 0x10f0
    be78:	443b      	add	r3, r7
    be7a:	4618      	mov	r0, r3
    be7c:	f00c fa50 	bl	18320 <b_exp>
  b_exp(&t251);
    be80:	f507 5388 	add.w	r3, r7, #4352	; 0x1100
    be84:	4618      	mov	r0, r3
    be86:	f00c fa4b 	bl	18320 <b_exp>
  b_exp(&t246);
    be8a:	f507 6311 	add.w	r3, r7, #2320	; 0x910
    be8e:	4618      	mov	r0, r3
    be90:	f00c fa46 	bl	18320 <b_exp>
  b_exp(&t247);
    be94:	f507 6312 	add.w	r3, r7, #2336	; 0x920
    be98:	4618      	mov	r0, r3
    be9a:	f00c fa41 	bl	18320 <b_exp>
  b_exp(&t248);
    be9e:	f241 03d0 	movw	r3, #4304	; 0x10d0
    bea2:	443b      	add	r3, r7
    bea4:	4618      	mov	r0, r3
    bea6:	f00c fa3b 	bl	18320 <b_exp>
  b_exp(&t249);
    beaa:	f507 5387 	add.w	r3, r7, #4320	; 0x10e0
    beae:	4618      	mov	r0, r3
    beb0:	f00c fa36 	bl	18320 <b_exp>
  b_exp(&t256);
    beb4:	f507 6315 	add.w	r3, r7, #2384	; 0x950
    beb8:	4618      	mov	r0, r3
    beba:	f00c fa31 	bl	18320 <b_exp>
  b_exp(&t257);
    bebe:	f507 6316 	add.w	r3, r7, #2400	; 0x960
    bec2:	4618      	mov	r0, r3
    bec4:	f00c fa2c 	bl	18320 <b_exp>
  b_exp(&t258);
    bec8:	f241 1310 	movw	r3, #4368	; 0x1110
    becc:	443b      	add	r3, r7
    bece:	4618      	mov	r0, r3
    bed0:	f00c fa26 	bl	18320 <b_exp>
  b_exp(&t259);
    bed4:	f507 5389 	add.w	r3, r7, #4384	; 0x1120
    bed8:	4618      	mov	r0, r3
    beda:	f00c fa21 	bl	18320 <b_exp>
  b_exp(&t260);
    bede:	f507 6317 	add.w	r3, r7, #2416	; 0x970
    bee2:	4618      	mov	r0, r3
    bee4:	f00c fa1c 	bl	18320 <b_exp>
  b_exp(&t261);
    bee8:	f507 6318 	add.w	r3, r7, #2432	; 0x980
    beec:	4618      	mov	r0, r3
    beee:	f00c fa17 	bl	18320 <b_exp>
  b_exp(&t262);
    bef2:	f241 1330 	movw	r3, #4400	; 0x1130
    bef6:	443b      	add	r3, r7
    bef8:	4618      	mov	r0, r3
    befa:	f00c fa11 	bl	18320 <b_exp>
  b_exp(&t263);
    befe:	f507 538a 	add.w	r3, r7, #4416	; 0x1140
    bf02:	4618      	mov	r0, r3
    bf04:	f00c fa0c 	bl	18320 <b_exp>
  b_exp(&t254);
    bf08:	f507 7354 	add.w	r3, r7, #848	; 0x350
    bf0c:	4618      	mov	r0, r3
    bf0e:	f00c fa07 	bl	18320 <b_exp>
  b_exp(&t255);
    bf12:	4b34      	ldr	r3, [pc, #208]	; (bfe4 <G_q+0x3ef4>)
    bf14:	f241 32d0 	movw	r2, #5072	; 0x13d0
    bf18:	443a      	add	r2, r7
    bf1a:	4413      	add	r3, r2
    bf1c:	4618      	mov	r0, r3
    bf1e:	f00c f9ff 	bl	18320 <b_exp>
  b_exp(&t266);
    bf22:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
    bf26:	4618      	mov	r0, r3
    bf28:	f00c f9fa 	bl	18320 <b_exp>
  b_exp(&t267);
    bf2c:	4b2e      	ldr	r3, [pc, #184]	; (bfe8 <G_q+0x3ef8>)
    bf2e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    bf32:	443a      	add	r2, r7
    bf34:	4413      	add	r3, r2
    bf36:	4618      	mov	r0, r3
    bf38:	f00c f9f2 	bl	18320 <b_exp>
  b_exp(&t268);
    bf3c:	f241 1350 	movw	r3, #4432	; 0x1150
    bf40:	443b      	add	r3, r7
    bf42:	4618      	mov	r0, r3
    bf44:	f00c f9ec 	bl	18320 <b_exp>
  b_exp(&t269);
    bf48:	f507 538b 	add.w	r3, r7, #4448	; 0x1160
    bf4c:	4618      	mov	r0, r3
    bf4e:	f00c f9e7 	bl	18320 <b_exp>
  b_exp(&t280);
    bf52:	f241 13b0 	movw	r3, #4528	; 0x11b0
    bf56:	443b      	add	r3, r7
    bf58:	4618      	mov	r0, r3
    bf5a:	f00c f9e1 	bl	18320 <b_exp>
  b_exp(&t281);
    bf5e:	f507 538e 	add.w	r3, r7, #4544	; 0x11c0
    bf62:	4618      	mov	r0, r3
    bf64:	f00c f9dc 	bl	18320 <b_exp>
  b_exp(&t282);
    bf68:	f507 631d 	add.w	r3, r7, #2512	; 0x9d0
    bf6c:	4618      	mov	r0, r3
    bf6e:	f00c f9d7 	bl	18320 <b_exp>
  b_exp(&t283);
    bf72:	f507 631e 	add.w	r3, r7, #2528	; 0x9e0
    bf76:	4618      	mov	r0, r3
    bf78:	f00c f9d2 	bl	18320 <b_exp>
  b_exp(&t284);
    bf7c:	f507 7364 	add.w	r3, r7, #912	; 0x390
    bf80:	4618      	mov	r0, r3
    bf82:	f00c f9cd 	bl	18320 <b_exp>
  b_exp(&t285);
    bf86:	4b19      	ldr	r3, [pc, #100]	; (bfec <G_q+0x3efc>)
    bf88:	f241 32d0 	movw	r2, #5072	; 0x13d0
    bf8c:	443a      	add	r2, r7
    bf8e:	4413      	add	r3, r2
    bf90:	4618      	mov	r0, r3
    bf92:	f00c f9c5 	bl	18320 <b_exp>
  b_exp(&t286);
    bf96:	f241 13d0 	movw	r3, #4560	; 0x11d0
    bf9a:	443b      	add	r3, r7
    bf9c:	4618      	mov	r0, r3
    bf9e:	f00c f9bf 	bl	18320 <b_exp>
  b_exp(&t287);
    bfa2:	f507 538f 	add.w	r3, r7, #4576	; 0x11e0
    bfa6:	4618      	mov	r0, r3
    bfa8:	f00c f9ba 	bl	18320 <b_exp>
  b_exp(&t294);
    bfac:	f507 6321 	add.w	r3, r7, #2576	; 0xa10
    bfb0:	4618      	mov	r0, r3
    bfb2:	f00c f9b5 	bl	18320 <b_exp>
  b_exp(&t295);
    bfb6:	f507 6322 	add.w	r3, r7, #2592	; 0xa20
    bfba:	4618      	mov	r0, r3
    bfbc:	f00c f9b0 	bl	18320 <b_exp>
    bfc0:	e016      	b.n	bff0 <G_q+0x3f00>
    bfc2:	bf00      	nop
    bfc4:	ffffeed0 	.word	0xffffeed0
    bfc8:	ffffeef0 	.word	0xffffeef0
    bfcc:	ffffef10 	.word	0xffffef10
    bfd0:	ffffef50 	.word	0xffffef50
    bfd4:	ffffef30 	.word	0xffffef30
    bfd8:	ffffecf0 	.word	0xffffecf0
    bfdc:	ffffed10 	.word	0xffffed10
    bfe0:	ffffef70 	.word	0xffffef70
    bfe4:	ffffef90 	.word	0xffffef90
    bfe8:	ffffed30 	.word	0xffffed30
    bfec:	ffffefd0 	.word	0xffffefd0
  b_exp(&t292);
    bff0:	f241 2310 	movw	r3, #4624	; 0x1210
    bff4:	443b      	add	r3, r7
    bff6:	4618      	mov	r0, r3
    bff8:	f00c f992 	bl	18320 <b_exp>
  b_exp(&t293);
    bffc:	f507 5391 	add.w	r3, r7, #4640	; 0x1220
    c000:	4618      	mov	r0, r3
    c002:	f00c f98d 	bl	18320 <b_exp>
  b_exp(&t288);
    c006:	f507 631f 	add.w	r3, r7, #2544	; 0x9f0
    c00a:	4618      	mov	r0, r3
    c00c:	f00c f988 	bl	18320 <b_exp>
  b_exp(&t289);
    c010:	f507 6320 	add.w	r3, r7, #2560	; 0xa00
    c014:	4618      	mov	r0, r3
    c016:	f00c f983 	bl	18320 <b_exp>
  b_exp(&t290);
    c01a:	f241 13f0 	movw	r3, #4592	; 0x11f0
    c01e:	443b      	add	r3, r7
    c020:	4618      	mov	r0, r3
    c022:	f00c f97d 	bl	18320 <b_exp>
  b_exp(&t291);
    c026:	f507 5390 	add.w	r3, r7, #4608	; 0x1200
    c02a:	4618      	mov	r0, r3
    c02c:	f00c f978 	bl	18320 <b_exp>
  b_exp(&t278);
    c030:	f507 735c 	add.w	r3, r7, #880	; 0x370
    c034:	4618      	mov	r0, r3
    c036:	f00c f973 	bl	18320 <b_exp>
  b_exp(&t279);
    c03a:	4bd5      	ldr	r3, [pc, #852]	; (c390 <G_q+0x42a0>)
    c03c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    c040:	443a      	add	r2, r7
    c042:	4413      	add	r3, r2
    c044:	4618      	mov	r0, r3
    c046:	f00c f96b 	bl	18320 <b_exp>
  b_exp(&t270);
    c04a:	f507 6319 	add.w	r3, r7, #2448	; 0x990
    c04e:	4618      	mov	r0, r3
    c050:	f00c f966 	bl	18320 <b_exp>
  b_exp(&t271);
    c054:	f507 631a 	add.w	r3, r7, #2464	; 0x9a0
    c058:	4618      	mov	r0, r3
    c05a:	f00c f961 	bl	18320 <b_exp>
  b_exp(&t272);
    c05e:	f241 1370 	movw	r3, #4464	; 0x1170
    c062:	443b      	add	r3, r7
    c064:	4618      	mov	r0, r3
    c066:	f00c f95b 	bl	18320 <b_exp>
  b_exp(&t273);
    c06a:	f507 538c 	add.w	r3, r7, #4480	; 0x1180
    c06e:	4618      	mov	r0, r3
    c070:	f00c f956 	bl	18320 <b_exp>
  b_exp(&t274);
    c074:	f507 631b 	add.w	r3, r7, #2480	; 0x9b0
    c078:	4618      	mov	r0, r3
    c07a:	f00c f951 	bl	18320 <b_exp>
  b_exp(&t275);
    c07e:	f507 631c 	add.w	r3, r7, #2496	; 0x9c0
    c082:	4618      	mov	r0, r3
    c084:	f00c f94c 	bl	18320 <b_exp>
  b_exp(&t276);
    c088:	f241 1390 	movw	r3, #4496	; 0x1190
    c08c:	443b      	add	r3, r7
    c08e:	4618      	mov	r0, r3
    c090:	f00c f946 	bl	18320 <b_exp>
  b_exp(&t277);
    c094:	f507 538d 	add.w	r3, r7, #4512	; 0x11a0
    c098:	4618      	mov	r0, r3
    c09a:	f00c f941 	bl	18320 <b_exp>
  b_exp(&t296);
    c09e:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
    c0a2:	4618      	mov	r0, r3
    c0a4:	f00c f93c 	bl	18320 <b_exp>
  b_exp(&t297);
    c0a8:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
    c0ac:	4618      	mov	r0, r3
    c0ae:	f00c f937 	bl	18320 <b_exp>
  b_exp(&t298);
    c0b2:	f241 2330 	movw	r3, #4656	; 0x1230
    c0b6:	443b      	add	r3, r7
    c0b8:	4618      	mov	r0, r3
    c0ba:	f00c f931 	bl	18320 <b_exp>
  b_exp(&t299);
    c0be:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
    c0c2:	4618      	mov	r0, r3
    c0c4:	f00c f92c 	bl	18320 <b_exp>
  b_G_q[0].re = 0.0;
    c0c8:	4bb2      	ldr	r3, [pc, #712]	; (c394 <G_q+0x42a4>)
    c0ca:	f241 32d0 	movw	r2, #5072	; 0x13d0
    c0ce:	443a      	add	r2, r7
    c0d0:	4413      	add	r3, r2
    c0d2:	681a      	ldr	r2, [r3, #0]
    c0d4:	f04f 0300 	mov.w	r3, #0
    c0d8:	f04f 0400 	mov.w	r4, #0
    c0dc:	e9c2 3400 	strd	r3, r4, [r2]
  b_G_q[0].im = 0.0;
    c0e0:	4bac      	ldr	r3, [pc, #688]	; (c394 <G_q+0x42a4>)
    c0e2:	f241 32d0 	movw	r2, #5072	; 0x13d0
    c0e6:	443a      	add	r2, r7
    c0e8:	4413      	add	r3, r2
    c0ea:	681a      	ldr	r2, [r3, #0]
    c0ec:	f04f 0300 	mov.w	r3, #0
    c0f0:	f04f 0400 	mov.w	r4, #0
    c0f4:	e9c2 3402 	strd	r3, r4, [r2, #8]
  if (t33.im == 0.0) {
    c0f8:	f507 6333 	add.w	r3, r7, #2864	; 0xb30
    c0fc:	ed93 7b02 	vldr	d7, [r3, #8]
    c100:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c104:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c108:	d115      	bne.n	c136 <G_q+0x4046>
    t33_re = t33.re / 2.0;
    c10a:	f507 6333 	add.w	r3, r7, #2864	; 0xb30
    c10e:	ed93 6b00 	vldr	d6, [r3]
    c112:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c116:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c11a:	f241 33c8 	movw	r3, #5064	; 0x13c8
    c11e:	443b      	add	r3, r7
    c120:	ed83 7b00 	vstr	d7, [r3]
    t33_im = 0.0;
    c124:	f04f 0300 	mov.w	r3, #0
    c128:	f04f 0400 	mov.w	r4, #0
    c12c:	f507 529e 	add.w	r2, r7, #5056	; 0x13c0
    c130:	e9c2 3400 	strd	r3, r4, [r2]
    c134:	e037      	b.n	c1a6 <G_q+0x40b6>
  } else if (t33.re == 0.0) {
    c136:	f507 6333 	add.w	r3, r7, #2864	; 0xb30
    c13a:	ed93 7b00 	vldr	d7, [r3]
    c13e:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c142:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c146:	d115      	bne.n	c174 <G_q+0x4084>
    t33_re = 0.0;
    c148:	f04f 0300 	mov.w	r3, #0
    c14c:	f04f 0400 	mov.w	r4, #0
    c150:	f241 32c8 	movw	r2, #5064	; 0x13c8
    c154:	443a      	add	r2, r7
    c156:	e9c2 3400 	strd	r3, r4, [r2]
    t33_im = t33.im / 2.0;
    c15a:	f507 6333 	add.w	r3, r7, #2864	; 0xb30
    c15e:	ed93 6b02 	vldr	d6, [r3, #8]
    c162:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c166:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c16a:	f507 539e 	add.w	r3, r7, #5056	; 0x13c0
    c16e:	ed83 7b00 	vstr	d7, [r3]
    c172:	e018      	b.n	c1a6 <G_q+0x40b6>
  } else {
    t33_re = t33.re / 2.0;
    c174:	f507 6333 	add.w	r3, r7, #2864	; 0xb30
    c178:	ed93 6b00 	vldr	d6, [r3]
    c17c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c180:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c184:	f241 33c8 	movw	r3, #5064	; 0x13c8
    c188:	443b      	add	r3, r7
    c18a:	ed83 7b00 	vstr	d7, [r3]
    t33_im = t33.im / 2.0;
    c18e:	f507 6333 	add.w	r3, r7, #2864	; 0xb30
    c192:	ed93 6b02 	vldr	d6, [r3, #8]
    c196:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c19a:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c19e:	f507 539e 	add.w	r3, r7, #5056	; 0x13c0
    c1a2:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t34.im == 0.0) {
    c1a6:	f507 6334 	add.w	r3, r7, #2880	; 0xb40
    c1aa:	ed93 7b02 	vldr	d7, [r3, #8]
    c1ae:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c1b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c1b6:	d116      	bne.n	c1e6 <G_q+0x40f6>
    t34_re = t34.re / 2.0;
    c1b8:	f507 6334 	add.w	r3, r7, #2880	; 0xb40
    c1bc:	ed93 6b00 	vldr	d6, [r3]
    c1c0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c1c4:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c1c8:	f241 33b8 	movw	r3, #5048	; 0x13b8
    c1cc:	443b      	add	r3, r7
    c1ce:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
    c1d2:	f04f 0300 	mov.w	r3, #0
    c1d6:	f04f 0400 	mov.w	r4, #0
    c1da:	f241 32b0 	movw	r2, #5040	; 0x13b0
    c1de:	443a      	add	r2, r7
    c1e0:	e9c2 3400 	strd	r3, r4, [r2]
    c1e4:	e039      	b.n	c25a <G_q+0x416a>
  } else if (t34.re == 0.0) {
    c1e6:	f507 6334 	add.w	r3, r7, #2880	; 0xb40
    c1ea:	ed93 7b00 	vldr	d7, [r3]
    c1ee:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c1f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c1f6:	d116      	bne.n	c226 <G_q+0x4136>
    t34_re = 0.0;
    c1f8:	f04f 0300 	mov.w	r3, #0
    c1fc:	f04f 0400 	mov.w	r4, #0
    c200:	f241 32b8 	movw	r2, #5048	; 0x13b8
    c204:	443a      	add	r2, r7
    c206:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t34.im / 2.0;
    c20a:	f507 6334 	add.w	r3, r7, #2880	; 0xb40
    c20e:	ed93 6b02 	vldr	d6, [r3, #8]
    c212:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c216:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c21a:	f241 33b0 	movw	r3, #5040	; 0x13b0
    c21e:	443b      	add	r3, r7
    c220:	ed83 7b00 	vstr	d7, [r3]
    c224:	e019      	b.n	c25a <G_q+0x416a>
  } else {
    t34_re = t34.re / 2.0;
    c226:	f507 6334 	add.w	r3, r7, #2880	; 0xb40
    c22a:	ed93 6b00 	vldr	d6, [r3]
    c22e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c232:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c236:	f241 33b8 	movw	r3, #5048	; 0x13b8
    c23a:	443b      	add	r3, r7
    c23c:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t34.im / 2.0;
    c240:	f507 6334 	add.w	r3, r7, #2880	; 0xb40
    c244:	ed93 6b02 	vldr	d6, [r3, #8]
    c248:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c24c:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c250:	f241 33b0 	movw	r3, #5040	; 0x13b0
    c254:	443b      	add	r3, r7
    c256:	ed83 7b00 	vstr	d7, [r3]
  }

  t33_re += t34_re;
    c25a:	f241 33c8 	movw	r3, #5064	; 0x13c8
    c25e:	443b      	add	r3, r7
    c260:	ed93 6b00 	vldr	d6, [r3]
    c264:	f241 33b8 	movw	r3, #5048	; 0x13b8
    c268:	443b      	add	r3, r7
    c26a:	ed93 7b00 	vldr	d7, [r3]
    c26e:	ee36 7b07 	vadd.f64	d7, d6, d7
    c272:	f241 33c8 	movw	r3, #5064	; 0x13c8
    c276:	443b      	add	r3, r7
    c278:	ed83 7b00 	vstr	d7, [r3]
  t33_im += t34_im;
    c27c:	f507 539e 	add.w	r3, r7, #5056	; 0x13c0
    c280:	ed93 6b00 	vldr	d6, [r3]
    c284:	f241 33b0 	movw	r3, #5040	; 0x13b0
    c288:	443b      	add	r3, r7
    c28a:	ed93 7b00 	vldr	d7, [r3]
    c28e:	ee36 7b07 	vadd.f64	d7, d6, d7
    c292:	f507 539e 	add.w	r3, r7, #5056	; 0x13c0
    c296:	ed83 7b00 	vstr	d7, [r3]
  t35_re = (t35.re * 0.0 - t35.im * 0.5) - (t36.re * 0.0 - t36.im * 0.5);
    c29a:	f507 638a 	add.w	r3, r7, #1104	; 0x450
    c29e:	ed93 7b00 	vldr	d7, [r3]
    c2a2:	ed9f 6b39 	vldr	d6, [pc, #228]	; c388 <G_q+0x4298>
    c2a6:	ee27 6b06 	vmul.f64	d6, d7, d6
    c2aa:	f507 638a 	add.w	r3, r7, #1104	; 0x450
    c2ae:	ed93 7b02 	vldr	d7, [r3, #8]
    c2b2:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    c2b6:	ee27 7b05 	vmul.f64	d7, d7, d5
    c2ba:	ee36 6b47 	vsub.f64	d6, d6, d7
    c2be:	f507 638c 	add.w	r3, r7, #1120	; 0x460
    c2c2:	ed93 7b00 	vldr	d7, [r3]
    c2c6:	ed9f 5b30 	vldr	d5, [pc, #192]	; c388 <G_q+0x4298>
    c2ca:	ee27 5b05 	vmul.f64	d5, d7, d5
    c2ce:	f507 638c 	add.w	r3, r7, #1120	; 0x460
    c2d2:	ed93 7b02 	vldr	d7, [r3, #8]
    c2d6:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    c2da:	ee27 7b04 	vmul.f64	d7, d7, d4
    c2de:	ee35 7b47 	vsub.f64	d7, d5, d7
    c2e2:	f241 2398 	movw	r3, #4760	; 0x1298
    c2e6:	443b      	add	r3, r7
    c2e8:	ee36 7b47 	vsub.f64	d7, d6, d7
    c2ec:	ed83 7b00 	vstr	d7, [r3]
  t35_im = (t35.re * 0.5 + t35.im * 0.0) - (t36.re * 0.5 + t36.im * 0.0);
    c2f0:	f507 638a 	add.w	r3, r7, #1104	; 0x450
    c2f4:	ed93 7b00 	vldr	d7, [r3]
    c2f8:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    c2fc:	ee27 6b06 	vmul.f64	d6, d7, d6
    c300:	f507 638a 	add.w	r3, r7, #1104	; 0x450
    c304:	ed93 7b02 	vldr	d7, [r3, #8]
    c308:	ed9f 5b1f 	vldr	d5, [pc, #124]	; c388 <G_q+0x4298>
    c30c:	ee27 7b05 	vmul.f64	d7, d7, d5
    c310:	ee36 6b07 	vadd.f64	d6, d6, d7
    c314:	f507 638c 	add.w	r3, r7, #1120	; 0x460
    c318:	ed93 7b00 	vldr	d7, [r3]
    c31c:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    c320:	ee27 5b05 	vmul.f64	d5, d7, d5
    c324:	f507 638c 	add.w	r3, r7, #1120	; 0x460
    c328:	ed93 7b02 	vldr	d7, [r3, #8]
    c32c:	ed9f 4b16 	vldr	d4, [pc, #88]	; c388 <G_q+0x4298>
    c330:	ee27 7b04 	vmul.f64	d7, d7, d4
    c334:	ee35 7b07 	vadd.f64	d7, d5, d7
    c338:	f241 2390 	movw	r3, #4752	; 0x1290
    c33c:	443b      	add	r3, r7
    c33e:	ee36 7b47 	vsub.f64	d7, d6, d7
    c342:	ed83 7b00 	vstr	d7, [r3]
  if (t37.im == 0.0) {
    c346:	f507 638e 	add.w	r3, r7, #1136	; 0x470
    c34a:	ed93 7b02 	vldr	d7, [r3, #8]
    c34e:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c352:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c356:	d11f      	bne.n	c398 <G_q+0x42a8>
    t37_re = t37.re / 2.0;
    c358:	f507 638e 	add.w	r3, r7, #1136	; 0x470
    c35c:	ed93 6b00 	vldr	d6, [r3]
    c360:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c364:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c368:	f241 33a8 	movw	r3, #5032	; 0x13a8
    c36c:	443b      	add	r3, r7
    c36e:	ed83 7b00 	vstr	d7, [r3]
    t37_im = 0.0;
    c372:	f04f 0300 	mov.w	r3, #0
    c376:	f04f 0400 	mov.w	r4, #0
    c37a:	f507 529d 	add.w	r2, r7, #5024	; 0x13a0
    c37e:	e9c2 3400 	strd	r3, r4, [r2]
    c382:	e041      	b.n	c408 <G_q+0x4318>
    c384:	f3af 8000 	nop.w
	...
    c390:	ffffefb0 	.word	0xffffefb0
    c394:	ffffec34 	.word	0xffffec34
  } else if (t37.re == 0.0) {
    c398:	f507 638e 	add.w	r3, r7, #1136	; 0x470
    c39c:	ed93 7b00 	vldr	d7, [r3]
    c3a0:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c3a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c3a8:	d115      	bne.n	c3d6 <G_q+0x42e6>
    t37_re = 0.0;
    c3aa:	f04f 0300 	mov.w	r3, #0
    c3ae:	f04f 0400 	mov.w	r4, #0
    c3b2:	f241 32a8 	movw	r2, #5032	; 0x13a8
    c3b6:	443a      	add	r2, r7
    c3b8:	e9c2 3400 	strd	r3, r4, [r2]
    t37_im = t37.im / 2.0;
    c3bc:	f507 638e 	add.w	r3, r7, #1136	; 0x470
    c3c0:	ed93 6b02 	vldr	d6, [r3, #8]
    c3c4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c3c8:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c3cc:	f507 539d 	add.w	r3, r7, #5024	; 0x13a0
    c3d0:	ed83 7b00 	vstr	d7, [r3]
    c3d4:	e018      	b.n	c408 <G_q+0x4318>
  } else {
    t37_re = t37.re / 2.0;
    c3d6:	f507 638e 	add.w	r3, r7, #1136	; 0x470
    c3da:	ed93 6b00 	vldr	d6, [r3]
    c3de:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c3e2:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c3e6:	f241 33a8 	movw	r3, #5032	; 0x13a8
    c3ea:	443b      	add	r3, r7
    c3ec:	ed83 7b00 	vstr	d7, [r3]
    t37_im = t37.im / 2.0;
    c3f0:	f507 638e 	add.w	r3, r7, #1136	; 0x470
    c3f4:	ed93 6b02 	vldr	d6, [r3, #8]
    c3f8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c3fc:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c400:	f507 539d 	add.w	r3, r7, #5024	; 0x13a0
    c404:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t38.im == 0.0) {
    c408:	f507 6390 	add.w	r3, r7, #1152	; 0x480
    c40c:	ed93 7b02 	vldr	d7, [r3, #8]
    c410:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c418:	d116      	bne.n	c448 <G_q+0x4358>
    t34_re = t38.re / 2.0;
    c41a:	f507 6390 	add.w	r3, r7, #1152	; 0x480
    c41e:	ed93 6b00 	vldr	d6, [r3]
    c422:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c426:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c42a:	f241 33b8 	movw	r3, #5048	; 0x13b8
    c42e:	443b      	add	r3, r7
    c430:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
    c434:	f04f 0300 	mov.w	r3, #0
    c438:	f04f 0400 	mov.w	r4, #0
    c43c:	f241 32b0 	movw	r2, #5040	; 0x13b0
    c440:	443a      	add	r2, r7
    c442:	e9c2 3400 	strd	r3, r4, [r2]
    c446:	e039      	b.n	c4bc <G_q+0x43cc>
  } else if (t38.re == 0.0) {
    c448:	f507 6390 	add.w	r3, r7, #1152	; 0x480
    c44c:	ed93 7b00 	vldr	d7, [r3]
    c450:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c458:	d116      	bne.n	c488 <G_q+0x4398>
    t34_re = 0.0;
    c45a:	f04f 0300 	mov.w	r3, #0
    c45e:	f04f 0400 	mov.w	r4, #0
    c462:	f241 32b8 	movw	r2, #5048	; 0x13b8
    c466:	443a      	add	r2, r7
    c468:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t38.im / 2.0;
    c46c:	f507 6390 	add.w	r3, r7, #1152	; 0x480
    c470:	ed93 6b02 	vldr	d6, [r3, #8]
    c474:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c478:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c47c:	f241 33b0 	movw	r3, #5040	; 0x13b0
    c480:	443b      	add	r3, r7
    c482:	ed83 7b00 	vstr	d7, [r3]
    c486:	e019      	b.n	c4bc <G_q+0x43cc>
  } else {
    t34_re = t38.re / 2.0;
    c488:	f507 6390 	add.w	r3, r7, #1152	; 0x480
    c48c:	ed93 6b00 	vldr	d6, [r3]
    c490:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c494:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c498:	f241 33b8 	movw	r3, #5048	; 0x13b8
    c49c:	443b      	add	r3, r7
    c49e:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t38.im / 2.0;
    c4a2:	f507 6390 	add.w	r3, r7, #1152	; 0x480
    c4a6:	ed93 6b02 	vldr	d6, [r3, #8]
    c4aa:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c4ae:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c4b2:	f241 33b0 	movw	r3, #5040	; 0x13b0
    c4b6:	443b      	add	r3, r7
    c4b8:	ed83 7b00 	vstr	d7, [r3]
  }

  t37_re += t34_re;
    c4bc:	f241 33a8 	movw	r3, #5032	; 0x13a8
    c4c0:	443b      	add	r3, r7
    c4c2:	ed93 6b00 	vldr	d6, [r3]
    c4c6:	f241 33b8 	movw	r3, #5048	; 0x13b8
    c4ca:	443b      	add	r3, r7
    c4cc:	ed93 7b00 	vldr	d7, [r3]
    c4d0:	ee36 7b07 	vadd.f64	d7, d6, d7
    c4d4:	f241 33a8 	movw	r3, #5032	; 0x13a8
    c4d8:	443b      	add	r3, r7
    c4da:	ed83 7b00 	vstr	d7, [r3]
  t37_im += t34_im;
    c4de:	f507 539d 	add.w	r3, r7, #5024	; 0x13a0
    c4e2:	ed93 6b00 	vldr	d6, [r3]
    c4e6:	f241 33b0 	movw	r3, #5040	; 0x13b0
    c4ea:	443b      	add	r3, r7
    c4ec:	ed93 7b00 	vldr	d7, [r3]
    c4f0:	ee36 7b07 	vadd.f64	d7, d6, d7
    c4f4:	f507 539d 	add.w	r3, r7, #5024	; 0x13a0
    c4f8:	ed83 7b00 	vstr	d7, [r3]
  t39_re = (t39.re * 0.0 - t39.im * 0.5) - (t40.re * 0.0 - t40.im * 0.5);
    c4fc:	f507 6335 	add.w	r3, r7, #2896	; 0xb50
    c500:	ed93 7b00 	vldr	d7, [r3]
    c504:	ed9f 6bce 	vldr	d6, [pc, #824]	; c840 <G_q+0x4750>
    c508:	ee27 6b06 	vmul.f64	d6, d7, d6
    c50c:	f507 6335 	add.w	r3, r7, #2896	; 0xb50
    c510:	ed93 7b02 	vldr	d7, [r3, #8]
    c514:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    c518:	ee27 7b05 	vmul.f64	d7, d7, d5
    c51c:	ee36 6b47 	vsub.f64	d6, d6, d7
    c520:	f507 6336 	add.w	r3, r7, #2912	; 0xb60
    c524:	ed93 7b00 	vldr	d7, [r3]
    c528:	ed9f 5bc5 	vldr	d5, [pc, #788]	; c840 <G_q+0x4750>
    c52c:	ee27 5b05 	vmul.f64	d5, d7, d5
    c530:	f507 6336 	add.w	r3, r7, #2912	; 0xb60
    c534:	ed93 7b02 	vldr	d7, [r3, #8]
    c538:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    c53c:	ee27 7b04 	vmul.f64	d7, d7, d4
    c540:	ee35 7b47 	vsub.f64	d7, d5, d7
    c544:	f241 2388 	movw	r3, #4744	; 0x1288
    c548:	443b      	add	r3, r7
    c54a:	ee36 7b47 	vsub.f64	d7, d6, d7
    c54e:	ed83 7b00 	vstr	d7, [r3]
  t39_im = (t39.re * 0.5 + t39.im * 0.0) - (t40.re * 0.5 + t40.im * 0.0);
    c552:	f507 6335 	add.w	r3, r7, #2896	; 0xb50
    c556:	ed93 7b00 	vldr	d7, [r3]
    c55a:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    c55e:	ee27 6b06 	vmul.f64	d6, d7, d6
    c562:	f507 6335 	add.w	r3, r7, #2896	; 0xb50
    c566:	ed93 7b02 	vldr	d7, [r3, #8]
    c56a:	ed9f 5bb5 	vldr	d5, [pc, #724]	; c840 <G_q+0x4750>
    c56e:	ee27 7b05 	vmul.f64	d7, d7, d5
    c572:	ee36 6b07 	vadd.f64	d6, d6, d7
    c576:	f507 6336 	add.w	r3, r7, #2912	; 0xb60
    c57a:	ed93 7b00 	vldr	d7, [r3]
    c57e:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    c582:	ee27 5b05 	vmul.f64	d5, d7, d5
    c586:	f507 6336 	add.w	r3, r7, #2912	; 0xb60
    c58a:	ed93 7b02 	vldr	d7, [r3, #8]
    c58e:	ed9f 4bac 	vldr	d4, [pc, #688]	; c840 <G_q+0x4750>
    c592:	ee27 7b04 	vmul.f64	d7, d7, d4
    c596:	ee35 7b07 	vadd.f64	d7, d5, d7
    c59a:	f507 5394 	add.w	r3, r7, #4736	; 0x1280
    c59e:	ee36 7b47 	vsub.f64	d7, d6, d7
    c5a2:	ed83 7b00 	vstr	d7, [r3]
  if (t10.im == 0.0) {
    c5a6:	f507 6329 	add.w	r3, r7, #2704	; 0xa90
    c5aa:	ed93 7b02 	vldr	d7, [r3, #8]
    c5ae:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c5b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c5b6:	d116      	bne.n	c5e6 <G_q+0x44f6>
    t10_re = t10.re / 2.0;
    c5b8:	f507 6329 	add.w	r3, r7, #2704	; 0xa90
    c5bc:	ed93 6b00 	vldr	d6, [r3]
    c5c0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c5c4:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c5c8:	f241 3398 	movw	r3, #5016	; 0x1398
    c5cc:	443b      	add	r3, r7
    c5ce:	ed83 7b00 	vstr	d7, [r3]
    t10_im = 0.0;
    c5d2:	f04f 0300 	mov.w	r3, #0
    c5d6:	f04f 0400 	mov.w	r4, #0
    c5da:	f241 3290 	movw	r2, #5008	; 0x1390
    c5de:	443a      	add	r2, r7
    c5e0:	e9c2 3400 	strd	r3, r4, [r2]
    c5e4:	e039      	b.n	c65a <G_q+0x456a>
  } else if (t10.re == 0.0) {
    c5e6:	f507 6329 	add.w	r3, r7, #2704	; 0xa90
    c5ea:	ed93 7b00 	vldr	d7, [r3]
    c5ee:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c5f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c5f6:	d116      	bne.n	c626 <G_q+0x4536>
    t10_re = 0.0;
    c5f8:	f04f 0300 	mov.w	r3, #0
    c5fc:	f04f 0400 	mov.w	r4, #0
    c600:	f241 3298 	movw	r2, #5016	; 0x1398
    c604:	443a      	add	r2, r7
    c606:	e9c2 3400 	strd	r3, r4, [r2]
    t10_im = t10.im / 2.0;
    c60a:	f507 6329 	add.w	r3, r7, #2704	; 0xa90
    c60e:	ed93 6b02 	vldr	d6, [r3, #8]
    c612:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c616:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c61a:	f241 3390 	movw	r3, #5008	; 0x1390
    c61e:	443b      	add	r3, r7
    c620:	ed83 7b00 	vstr	d7, [r3]
    c624:	e019      	b.n	c65a <G_q+0x456a>
  } else {
    t10_re = t10.re / 2.0;
    c626:	f507 6329 	add.w	r3, r7, #2704	; 0xa90
    c62a:	ed93 6b00 	vldr	d6, [r3]
    c62e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c632:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c636:	f241 3398 	movw	r3, #5016	; 0x1398
    c63a:	443b      	add	r3, r7
    c63c:	ed83 7b00 	vstr	d7, [r3]
    t10_im = t10.im / 2.0;
    c640:	f507 6329 	add.w	r3, r7, #2704	; 0xa90
    c644:	ed93 6b02 	vldr	d6, [r3, #8]
    c648:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c64c:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c650:	f241 3390 	movw	r3, #5008	; 0x1390
    c654:	443b      	add	r3, r7
    c656:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t11.im == 0.0) {
    c65a:	f507 632a 	add.w	r3, r7, #2720	; 0xaa0
    c65e:	ed93 7b02 	vldr	d7, [r3, #8]
    c662:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c666:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c66a:	d116      	bne.n	c69a <G_q+0x45aa>
    t34_re = t11.re / 2.0;
    c66c:	f507 632a 	add.w	r3, r7, #2720	; 0xaa0
    c670:	ed93 6b00 	vldr	d6, [r3]
    c674:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c678:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c67c:	f241 33b8 	movw	r3, #5048	; 0x13b8
    c680:	443b      	add	r3, r7
    c682:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
    c686:	f04f 0300 	mov.w	r3, #0
    c68a:	f04f 0400 	mov.w	r4, #0
    c68e:	f241 32b0 	movw	r2, #5040	; 0x13b0
    c692:	443a      	add	r2, r7
    c694:	e9c2 3400 	strd	r3, r4, [r2]
    c698:	e039      	b.n	c70e <G_q+0x461e>
  } else if (t11.re == 0.0) {
    c69a:	f507 632a 	add.w	r3, r7, #2720	; 0xaa0
    c69e:	ed93 7b00 	vldr	d7, [r3]
    c6a2:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c6a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c6aa:	d116      	bne.n	c6da <G_q+0x45ea>
    t34_re = 0.0;
    c6ac:	f04f 0300 	mov.w	r3, #0
    c6b0:	f04f 0400 	mov.w	r4, #0
    c6b4:	f241 32b8 	movw	r2, #5048	; 0x13b8
    c6b8:	443a      	add	r2, r7
    c6ba:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t11.im / 2.0;
    c6be:	f507 632a 	add.w	r3, r7, #2720	; 0xaa0
    c6c2:	ed93 6b02 	vldr	d6, [r3, #8]
    c6c6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c6ca:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c6ce:	f241 33b0 	movw	r3, #5040	; 0x13b0
    c6d2:	443b      	add	r3, r7
    c6d4:	ed83 7b00 	vstr	d7, [r3]
    c6d8:	e019      	b.n	c70e <G_q+0x461e>
  } else {
    t34_re = t11.re / 2.0;
    c6da:	f507 632a 	add.w	r3, r7, #2720	; 0xaa0
    c6de:	ed93 6b00 	vldr	d6, [r3]
    c6e2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c6e6:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c6ea:	f241 33b8 	movw	r3, #5048	; 0x13b8
    c6ee:	443b      	add	r3, r7
    c6f0:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t11.im / 2.0;
    c6f4:	f507 632a 	add.w	r3, r7, #2720	; 0xaa0
    c6f8:	ed93 6b02 	vldr	d6, [r3, #8]
    c6fc:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c700:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c704:	f241 33b0 	movw	r3, #5040	; 0x13b0
    c708:	443b      	add	r3, r7
    c70a:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t12.im == 0.0) {
    c70e:	f507 7374 	add.w	r3, r7, #976	; 0x3d0
    c712:	ed93 7b02 	vldr	d7, [r3, #8]
    c716:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c71a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c71e:	d115      	bne.n	c74c <G_q+0x465c>
    t12_re = t12.re / 2.0;
    c720:	f507 7374 	add.w	r3, r7, #976	; 0x3d0
    c724:	ed93 6b00 	vldr	d6, [r3]
    c728:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c72c:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c730:	f241 3388 	movw	r3, #5000	; 0x1388
    c734:	443b      	add	r3, r7
    c736:	ed83 7b00 	vstr	d7, [r3]
    t12_im = 0.0;
    c73a:	f04f 0300 	mov.w	r3, #0
    c73e:	f04f 0400 	mov.w	r4, #0
    c742:	f507 529c 	add.w	r2, r7, #4992	; 0x1380
    c746:	e9c2 3400 	strd	r3, r4, [r2]
    c74a:	e037      	b.n	c7bc <G_q+0x46cc>
  } else if (t12.re == 0.0) {
    c74c:	f507 7374 	add.w	r3, r7, #976	; 0x3d0
    c750:	ed93 7b00 	vldr	d7, [r3]
    c754:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c758:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c75c:	d115      	bne.n	c78a <G_q+0x469a>
    t12_re = 0.0;
    c75e:	f04f 0300 	mov.w	r3, #0
    c762:	f04f 0400 	mov.w	r4, #0
    c766:	f241 3288 	movw	r2, #5000	; 0x1388
    c76a:	443a      	add	r2, r7
    c76c:	e9c2 3400 	strd	r3, r4, [r2]
    t12_im = t12.im / 2.0;
    c770:	f507 7374 	add.w	r3, r7, #976	; 0x3d0
    c774:	ed93 6b02 	vldr	d6, [r3, #8]
    c778:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c77c:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c780:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    c784:	ed83 7b00 	vstr	d7, [r3]
    c788:	e018      	b.n	c7bc <G_q+0x46cc>
  } else {
    t12_re = t12.re / 2.0;
    c78a:	f507 7374 	add.w	r3, r7, #976	; 0x3d0
    c78e:	ed93 6b00 	vldr	d6, [r3]
    c792:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c796:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c79a:	f241 3388 	movw	r3, #5000	; 0x1388
    c79e:	443b      	add	r3, r7
    c7a0:	ed83 7b00 	vstr	d7, [r3]
    t12_im = t12.im / 2.0;
    c7a4:	f507 7374 	add.w	r3, r7, #976	; 0x3d0
    c7a8:	ed93 6b02 	vldr	d6, [r3, #8]
    c7ac:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c7b0:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c7b4:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    c7b8:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t13.im == 0.0) {
    c7bc:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
    c7c0:	ed93 7b02 	vldr	d7, [r3, #8]
    c7c4:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c7c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c7cc:	d116      	bne.n	c7fc <G_q+0x470c>
    t13_re = t13.re / 2.0;
    c7ce:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
    c7d2:	ed93 6b00 	vldr	d6, [r3]
    c7d6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c7da:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c7de:	f241 3378 	movw	r3, #4984	; 0x1378
    c7e2:	443b      	add	r3, r7
    c7e4:	ed83 7b00 	vstr	d7, [r3]
    t13_im = 0.0;
    c7e8:	f04f 0300 	mov.w	r3, #0
    c7ec:	f04f 0400 	mov.w	r4, #0
    c7f0:	f241 3270 	movw	r2, #4976	; 0x1370
    c7f4:	443a      	add	r2, r7
    c7f6:	e9c2 3400 	strd	r3, r4, [r2]
    c7fa:	e03f      	b.n	c87c <G_q+0x478c>
  } else if (t13.re == 0.0) {
    c7fc:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
    c800:	ed93 7b00 	vldr	d7, [r3]
    c804:	eeb5 7b40 	vcmp.f64	d7, #0.0
    c808:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c80c:	d11c      	bne.n	c848 <G_q+0x4758>
    t13_re = 0.0;
    c80e:	f04f 0300 	mov.w	r3, #0
    c812:	f04f 0400 	mov.w	r4, #0
    c816:	f241 3278 	movw	r2, #4984	; 0x1378
    c81a:	443a      	add	r2, r7
    c81c:	e9c2 3400 	strd	r3, r4, [r2]
    t13_im = t13.im / 2.0;
    c820:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
    c824:	ed93 6b02 	vldr	d6, [r3, #8]
    c828:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c82c:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c830:	f241 3370 	movw	r3, #4976	; 0x1370
    c834:	443b      	add	r3, r7
    c836:	ed83 7b00 	vstr	d7, [r3]
    c83a:	e01f      	b.n	c87c <G_q+0x478c>
    c83c:	f3af 8000 	nop.w
	...
  } else {
    t13_re = t13.re / 2.0;
    c848:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
    c84c:	ed93 6b00 	vldr	d6, [r3]
    c850:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c854:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c858:	f241 3378 	movw	r3, #4984	; 0x1378
    c85c:	443b      	add	r3, r7
    c85e:	ed83 7b00 	vstr	d7, [r3]
    t13_im = t13.im / 2.0;
    c862:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
    c866:	ed93 6b02 	vldr	d6, [r3, #8]
    c86a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    c86e:	ee86 7b05 	vdiv.f64	d7, d6, d5
    c872:	f241 3370 	movw	r3, #4976	; 0x1370
    c876:	443b      	add	r3, r7
    c878:	ed83 7b00 	vstr	d7, [r3]
  }

  t10_re += t34_re;
    c87c:	f241 3398 	movw	r3, #5016	; 0x1398
    c880:	443b      	add	r3, r7
    c882:	ed93 6b00 	vldr	d6, [r3]
    c886:	f241 33b8 	movw	r3, #5048	; 0x13b8
    c88a:	443b      	add	r3, r7
    c88c:	ed93 7b00 	vldr	d7, [r3]
    c890:	ee36 7b07 	vadd.f64	d7, d6, d7
    c894:	f241 3398 	movw	r3, #5016	; 0x1398
    c898:	443b      	add	r3, r7
    c89a:	ed83 7b00 	vstr	d7, [r3]
  t10_im += t34_im;
    c89e:	f241 3390 	movw	r3, #5008	; 0x1390
    c8a2:	443b      	add	r3, r7
    c8a4:	ed93 6b00 	vldr	d6, [r3]
    c8a8:	f241 33b0 	movw	r3, #5040	; 0x13b0
    c8ac:	443b      	add	r3, r7
    c8ae:	ed93 7b00 	vldr	d7, [r3]
    c8b2:	ee36 7b07 	vadd.f64	d7, d6, d7
    c8b6:	f241 3390 	movw	r3, #5008	; 0x1390
    c8ba:	443b      	add	r3, r7
    c8bc:	ed83 7b00 	vstr	d7, [r3]
  t12_re += t13_re;
    c8c0:	f241 3388 	movw	r3, #5000	; 0x1388
    c8c4:	443b      	add	r3, r7
    c8c6:	ed93 6b00 	vldr	d6, [r3]
    c8ca:	f241 3378 	movw	r3, #4984	; 0x1378
    c8ce:	443b      	add	r3, r7
    c8d0:	ed93 7b00 	vldr	d7, [r3]
    c8d4:	ee36 7b07 	vadd.f64	d7, d6, d7
    c8d8:	f241 3388 	movw	r3, #5000	; 0x1388
    c8dc:	443b      	add	r3, r7
    c8de:	ed83 7b00 	vstr	d7, [r3]
  t12_im += t13_im;
    c8e2:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    c8e6:	ed93 6b00 	vldr	d6, [r3]
    c8ea:	f241 3370 	movw	r3, #4976	; 0x1370
    c8ee:	443b      	add	r3, r7
    c8f0:	ed93 7b00 	vldr	d7, [r3]
    c8f4:	ee36 7b07 	vadd.f64	d7, d6, d7
    c8f8:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    c8fc:	ed83 7b00 	vstr	d7, [r3]
  t34_re = (t14.re * 0.0 - t14.im * 0.5) - (t15.re * 0.0 - t15.im * 0.5);
    c900:	f507 632b 	add.w	r3, r7, #2736	; 0xab0
    c904:	ed93 7b00 	vldr	d7, [r3]
    c908:	ed1f 6b33 	vldr	d6, [pc, #-204]	; c840 <G_q+0x4750>
    c90c:	ee27 6b06 	vmul.f64	d6, d7, d6
    c910:	f507 632b 	add.w	r3, r7, #2736	; 0xab0
    c914:	ed93 7b02 	vldr	d7, [r3, #8]
    c918:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    c91c:	ee27 7b05 	vmul.f64	d7, d7, d5
    c920:	ee36 6b47 	vsub.f64	d6, d6, d7
    c924:	f507 632c 	add.w	r3, r7, #2752	; 0xac0
    c928:	ed93 7b00 	vldr	d7, [r3]
    c92c:	ed1f 5b3c 	vldr	d5, [pc, #-240]	; c840 <G_q+0x4750>
    c930:	ee27 5b05 	vmul.f64	d5, d7, d5
    c934:	f507 632c 	add.w	r3, r7, #2752	; 0xac0
    c938:	ed93 7b02 	vldr	d7, [r3, #8]
    c93c:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    c940:	ee27 7b04 	vmul.f64	d7, d7, d4
    c944:	ee35 7b47 	vsub.f64	d7, d5, d7
    c948:	ee36 7b47 	vsub.f64	d7, d6, d7
    c94c:	f241 33b8 	movw	r3, #5048	; 0x13b8
    c950:	443b      	add	r3, r7
    c952:	ed83 7b00 	vstr	d7, [r3]
  t34_im = (t14.re * 0.5 + t14.im * 0.0) - (t15.re * 0.5 + t15.im * 0.0);
    c956:	f507 632b 	add.w	r3, r7, #2736	; 0xab0
    c95a:	ed93 7b00 	vldr	d7, [r3]
    c95e:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    c962:	ee27 6b06 	vmul.f64	d6, d7, d6
    c966:	f507 632b 	add.w	r3, r7, #2736	; 0xab0
    c96a:	ed93 7b02 	vldr	d7, [r3, #8]
    c96e:	ed1f 5b4c 	vldr	d5, [pc, #-304]	; c840 <G_q+0x4750>
    c972:	ee27 7b05 	vmul.f64	d7, d7, d5
    c976:	ee36 6b07 	vadd.f64	d6, d6, d7
    c97a:	f507 632c 	add.w	r3, r7, #2752	; 0xac0
    c97e:	ed93 7b00 	vldr	d7, [r3]
    c982:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    c986:	ee27 5b05 	vmul.f64	d5, d7, d5
    c98a:	f507 632c 	add.w	r3, r7, #2752	; 0xac0
    c98e:	ed93 7b02 	vldr	d7, [r3, #8]
    c992:	ed1f 4b55 	vldr	d4, [pc, #-340]	; c840 <G_q+0x4750>
    c996:	ee27 7b04 	vmul.f64	d7, d7, d4
    c99a:	ee35 7b07 	vadd.f64	d7, d5, d7
    c99e:	ee36 7b47 	vsub.f64	d7, d6, d7
    c9a2:	f241 33b0 	movw	r3, #5040	; 0x13b0
    c9a6:	443b      	add	r3, r7
    c9a8:	ed83 7b00 	vstr	d7, [r3]
  t16_re = (t16.re * 0.0 - t16.im * 0.5) - (t17.re * 0.0 - t17.im * 0.5);
    c9ac:	f507 737c 	add.w	r3, r7, #1008	; 0x3f0
    c9b0:	ed93 7b00 	vldr	d7, [r3]
    c9b4:	ed1f 6b5e 	vldr	d6, [pc, #-376]	; c840 <G_q+0x4750>
    c9b8:	ee27 6b06 	vmul.f64	d6, d7, d6
    c9bc:	f507 737c 	add.w	r3, r7, #1008	; 0x3f0
    c9c0:	ed93 7b02 	vldr	d7, [r3, #8]
    c9c4:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    c9c8:	ee27 7b05 	vmul.f64	d7, d7, d5
    c9cc:	ee36 6b47 	vsub.f64	d6, d6, d7
    c9d0:	f507 6380 	add.w	r3, r7, #1024	; 0x400
    c9d4:	ed93 7b00 	vldr	d7, [r3]
    c9d8:	ed1f 5b67 	vldr	d5, [pc, #-412]	; c840 <G_q+0x4750>
    c9dc:	ee27 5b05 	vmul.f64	d5, d7, d5
    c9e0:	f507 6380 	add.w	r3, r7, #1024	; 0x400
    c9e4:	ed93 7b02 	vldr	d7, [r3, #8]
    c9e8:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    c9ec:	ee27 7b04 	vmul.f64	d7, d7, d4
    c9f0:	ee35 7b47 	vsub.f64	d7, d5, d7
    c9f4:	ee36 7b47 	vsub.f64	d7, d6, d7
    c9f8:	f241 3368 	movw	r3, #4968	; 0x1368
    c9fc:	443b      	add	r3, r7
    c9fe:	ed83 7b00 	vstr	d7, [r3]
  t16_im = (t16.re * 0.5 + t16.im * 0.0) - (t17.re * 0.5 + t17.im * 0.0);
    ca02:	f507 737c 	add.w	r3, r7, #1008	; 0x3f0
    ca06:	ed93 7b00 	vldr	d7, [r3]
    ca0a:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    ca0e:	ee27 6b06 	vmul.f64	d6, d7, d6
    ca12:	f507 737c 	add.w	r3, r7, #1008	; 0x3f0
    ca16:	ed93 7b02 	vldr	d7, [r3, #8]
    ca1a:	ed1f 5b77 	vldr	d5, [pc, #-476]	; c840 <G_q+0x4750>
    ca1e:	ee27 7b05 	vmul.f64	d7, d7, d5
    ca22:	ee36 6b07 	vadd.f64	d6, d6, d7
    ca26:	f507 6380 	add.w	r3, r7, #1024	; 0x400
    ca2a:	ed93 7b00 	vldr	d7, [r3]
    ca2e:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    ca32:	ee27 5b05 	vmul.f64	d5, d7, d5
    ca36:	f507 6380 	add.w	r3, r7, #1024	; 0x400
    ca3a:	ed93 7b02 	vldr	d7, [r3, #8]
    ca3e:	ed1f 4b80 	vldr	d4, [pc, #-512]	; c840 <G_q+0x4750>
    ca42:	ee27 7b04 	vmul.f64	d7, d7, d4
    ca46:	ee35 7b07 	vadd.f64	d7, d5, d7
    ca4a:	ee36 7b47 	vsub.f64	d7, d6, d7
    ca4e:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    ca52:	ed83 7b00 	vstr	d7, [r3]
  if (t19.im == 0.0) {
    ca56:	f507 7388 	add.w	r3, r7, #272	; 0x110
    ca5a:	ed93 7b02 	vldr	d7, [r3, #8]
    ca5e:	eeb5 7b40 	vcmp.f64	d7, #0.0
    ca62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ca66:	d116      	bne.n	ca96 <G_q+0x49a6>
    t19_re = t19.re / 2.0;
    ca68:	f507 7388 	add.w	r3, r7, #272	; 0x110
    ca6c:	ed93 6b00 	vldr	d6, [r3]
    ca70:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ca74:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ca78:	f241 3358 	movw	r3, #4952	; 0x1358
    ca7c:	443b      	add	r3, r7
    ca7e:	ed83 7b00 	vstr	d7, [r3]
    t19_im = 0.0;
    ca82:	f04f 0300 	mov.w	r3, #0
    ca86:	f04f 0400 	mov.w	r4, #0
    ca8a:	f241 3250 	movw	r2, #4944	; 0x1350
    ca8e:	443a      	add	r2, r7
    ca90:	e9c2 3400 	strd	r3, r4, [r2]
    ca94:	e039      	b.n	cb0a <G_q+0x4a1a>
  } else if (t19.re == 0.0) {
    ca96:	f507 7388 	add.w	r3, r7, #272	; 0x110
    ca9a:	ed93 7b00 	vldr	d7, [r3]
    ca9e:	eeb5 7b40 	vcmp.f64	d7, #0.0
    caa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    caa6:	d116      	bne.n	cad6 <G_q+0x49e6>
    t19_re = 0.0;
    caa8:	f04f 0300 	mov.w	r3, #0
    caac:	f04f 0400 	mov.w	r4, #0
    cab0:	f241 3258 	movw	r2, #4952	; 0x1358
    cab4:	443a      	add	r2, r7
    cab6:	e9c2 3400 	strd	r3, r4, [r2]
    t19_im = t19.im / 2.0;
    caba:	f507 7388 	add.w	r3, r7, #272	; 0x110
    cabe:	ed93 6b02 	vldr	d6, [r3, #8]
    cac2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    cac6:	ee86 7b05 	vdiv.f64	d7, d6, d5
    caca:	f241 3350 	movw	r3, #4944	; 0x1350
    cace:	443b      	add	r3, r7
    cad0:	ed83 7b00 	vstr	d7, [r3]
    cad4:	e019      	b.n	cb0a <G_q+0x4a1a>
  } else {
    t19_re = t19.re / 2.0;
    cad6:	f507 7388 	add.w	r3, r7, #272	; 0x110
    cada:	ed93 6b00 	vldr	d6, [r3]
    cade:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    cae2:	ee86 7b05 	vdiv.f64	d7, d6, d5
    cae6:	f241 3358 	movw	r3, #4952	; 0x1358
    caea:	443b      	add	r3, r7
    caec:	ed83 7b00 	vstr	d7, [r3]
    t19_im = t19.im / 2.0;
    caf0:	f507 7388 	add.w	r3, r7, #272	; 0x110
    caf4:	ed93 6b02 	vldr	d6, [r3, #8]
    caf8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    cafc:	ee86 7b05 	vdiv.f64	d7, d6, d5
    cb00:	f241 3350 	movw	r3, #4944	; 0x1350
    cb04:	443b      	add	r3, r7
    cb06:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t20.im == 0.0) {
    cb0a:	4bcb      	ldr	r3, [pc, #812]	; (ce38 <G_q+0x4d48>)
    cb0c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    cb10:	443a      	add	r2, r7
    cb12:	4413      	add	r3, r2
    cb14:	ed93 7b02 	vldr	d7, [r3, #8]
    cb18:	eeb5 7b40 	vcmp.f64	d7, #0.0
    cb1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    cb20:	d118      	bne.n	cb54 <G_q+0x4a64>
    t20_re = t20.re / 2.0;
    cb22:	4bc5      	ldr	r3, [pc, #788]	; (ce38 <G_q+0x4d48>)
    cb24:	f241 32d0 	movw	r2, #5072	; 0x13d0
    cb28:	443a      	add	r2, r7
    cb2a:	4413      	add	r3, r2
    cb2c:	ed93 6b00 	vldr	d6, [r3]
    cb30:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    cb34:	ee86 7b05 	vdiv.f64	d7, d6, d5
    cb38:	f241 3348 	movw	r3, #4936	; 0x1348
    cb3c:	443b      	add	r3, r7
    cb3e:	ed83 7b00 	vstr	d7, [r3]
    t20_im = 0.0;
    cb42:	f04f 0300 	mov.w	r3, #0
    cb46:	f04f 0400 	mov.w	r4, #0
    cb4a:	f507 529a 	add.w	r2, r7, #4928	; 0x1340
    cb4e:	e9c2 3400 	strd	r3, r4, [r2]
    cb52:	e043      	b.n	cbdc <G_q+0x4aec>
  } else if (t20.re == 0.0) {
    cb54:	4bb8      	ldr	r3, [pc, #736]	; (ce38 <G_q+0x4d48>)
    cb56:	f241 32d0 	movw	r2, #5072	; 0x13d0
    cb5a:	443a      	add	r2, r7
    cb5c:	4413      	add	r3, r2
    cb5e:	ed93 7b00 	vldr	d7, [r3]
    cb62:	eeb5 7b40 	vcmp.f64	d7, #0.0
    cb66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    cb6a:	d118      	bne.n	cb9e <G_q+0x4aae>
    t20_re = 0.0;
    cb6c:	f04f 0300 	mov.w	r3, #0
    cb70:	f04f 0400 	mov.w	r4, #0
    cb74:	f241 3248 	movw	r2, #4936	; 0x1348
    cb78:	443a      	add	r2, r7
    cb7a:	e9c2 3400 	strd	r3, r4, [r2]
    t20_im = t20.im / 2.0;
    cb7e:	4bae      	ldr	r3, [pc, #696]	; (ce38 <G_q+0x4d48>)
    cb80:	f241 32d0 	movw	r2, #5072	; 0x13d0
    cb84:	443a      	add	r2, r7
    cb86:	4413      	add	r3, r2
    cb88:	ed93 6b02 	vldr	d6, [r3, #8]
    cb8c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    cb90:	ee86 7b05 	vdiv.f64	d7, d6, d5
    cb94:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    cb98:	ed83 7b00 	vstr	d7, [r3]
    cb9c:	e01e      	b.n	cbdc <G_q+0x4aec>
  } else {
    t20_re = t20.re / 2.0;
    cb9e:	4ba6      	ldr	r3, [pc, #664]	; (ce38 <G_q+0x4d48>)
    cba0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    cba4:	443a      	add	r2, r7
    cba6:	4413      	add	r3, r2
    cba8:	ed93 6b00 	vldr	d6, [r3]
    cbac:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    cbb0:	ee86 7b05 	vdiv.f64	d7, d6, d5
    cbb4:	f241 3348 	movw	r3, #4936	; 0x1348
    cbb8:	443b      	add	r3, r7
    cbba:	ed83 7b00 	vstr	d7, [r3]
    t20_im = t20.im / 2.0;
    cbbe:	4b9e      	ldr	r3, [pc, #632]	; (ce38 <G_q+0x4d48>)
    cbc0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    cbc4:	443a      	add	r2, r7
    cbc6:	4413      	add	r3, r2
    cbc8:	ed93 6b02 	vldr	d6, [r3, #8]
    cbcc:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    cbd0:	ee86 7b05 	vdiv.f64	d7, d6, d5
    cbd4:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    cbd8:	ed83 7b00 	vstr	d7, [r3]
  }

  b_t10_re = (t10_re * t12_re - t10_im * t12_im) + (t34_re * t16_re - t34_im *
    cbdc:	f241 3398 	movw	r3, #5016	; 0x1398
    cbe0:	443b      	add	r3, r7
    cbe2:	ed93 6b00 	vldr	d6, [r3]
    cbe6:	f241 3388 	movw	r3, #5000	; 0x1388
    cbea:	443b      	add	r3, r7
    cbec:	ed93 7b00 	vldr	d7, [r3]
    cbf0:	ee26 6b07 	vmul.f64	d6, d6, d7
    cbf4:	f241 3390 	movw	r3, #5008	; 0x1390
    cbf8:	443b      	add	r3, r7
    cbfa:	ed93 5b00 	vldr	d5, [r3]
    cbfe:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    cc02:	ed93 7b00 	vldr	d7, [r3]
    cc06:	ee25 7b07 	vmul.f64	d7, d5, d7
    cc0a:	ee36 6b47 	vsub.f64	d6, d6, d7
    cc0e:	f241 33b8 	movw	r3, #5048	; 0x13b8
    cc12:	443b      	add	r3, r7
    cc14:	ed93 5b00 	vldr	d5, [r3]
    cc18:	f241 3368 	movw	r3, #4968	; 0x1368
    cc1c:	443b      	add	r3, r7
    cc1e:	ed93 7b00 	vldr	d7, [r3]
    cc22:	ee25 5b07 	vmul.f64	d5, d5, d7
    cc26:	f241 33b0 	movw	r3, #5040	; 0x13b0
    cc2a:	443b      	add	r3, r7
    cc2c:	ed93 4b00 	vldr	d4, [r3]
    cc30:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    cc34:	ed93 7b00 	vldr	d7, [r3]
    cc38:	ee24 7b07 	vmul.f64	d7, d4, d7
    cc3c:	ee35 7b47 	vsub.f64	d7, d5, d7
    cc40:	ee36 7b07 	vadd.f64	d7, d6, d7
    cc44:	f241 3338 	movw	r3, #4920	; 0x1338
    cc48:	443b      	add	r3, r7
    cc4a:	ed83 7b00 	vstr	d7, [r3]
    t16_im);
  t10_im = (t10_re * t12_im + t10_im * t12_re) + (t34_re * t16_im + t34_im *
    cc4e:	f241 3398 	movw	r3, #5016	; 0x1398
    cc52:	443b      	add	r3, r7
    cc54:	ed93 6b00 	vldr	d6, [r3]
    cc58:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    cc5c:	ed93 7b00 	vldr	d7, [r3]
    cc60:	ee26 6b07 	vmul.f64	d6, d6, d7
    cc64:	f241 3390 	movw	r3, #5008	; 0x1390
    cc68:	443b      	add	r3, r7
    cc6a:	ed93 5b00 	vldr	d5, [r3]
    cc6e:	f241 3388 	movw	r3, #5000	; 0x1388
    cc72:	443b      	add	r3, r7
    cc74:	ed93 7b00 	vldr	d7, [r3]
    cc78:	ee25 7b07 	vmul.f64	d7, d5, d7
    cc7c:	ee36 6b07 	vadd.f64	d6, d6, d7
    cc80:	f241 33b8 	movw	r3, #5048	; 0x13b8
    cc84:	443b      	add	r3, r7
    cc86:	ed93 5b00 	vldr	d5, [r3]
    cc8a:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    cc8e:	ed93 7b00 	vldr	d7, [r3]
    cc92:	ee25 5b07 	vmul.f64	d5, d5, d7
    cc96:	f241 33b0 	movw	r3, #5040	; 0x13b0
    cc9a:	443b      	add	r3, r7
    cc9c:	ed93 4b00 	vldr	d4, [r3]
    cca0:	f241 3368 	movw	r3, #4968	; 0x1368
    cca4:	443b      	add	r3, r7
    cca6:	ed93 7b00 	vldr	d7, [r3]
    ccaa:	ee24 7b07 	vmul.f64	d7, d4, d7
    ccae:	ee35 7b07 	vadd.f64	d7, d5, d7
    ccb2:	ee36 7b07 	vadd.f64	d7, d6, d7
    ccb6:	f241 3390 	movw	r3, #5008	; 0x1390
    ccba:	443b      	add	r3, r7
    ccbc:	ed83 7b00 	vstr	d7, [r3]
    t16_re);
  t19_re += t20_re;
    ccc0:	f241 3358 	movw	r3, #4952	; 0x1358
    ccc4:	443b      	add	r3, r7
    ccc6:	ed93 6b00 	vldr	d6, [r3]
    ccca:	f241 3348 	movw	r3, #4936	; 0x1348
    ccce:	443b      	add	r3, r7
    ccd0:	ed93 7b00 	vldr	d7, [r3]
    ccd4:	ee36 7b07 	vadd.f64	d7, d6, d7
    ccd8:	f241 3358 	movw	r3, #4952	; 0x1358
    ccdc:	443b      	add	r3, r7
    ccde:	ed83 7b00 	vstr	d7, [r3]
  t19_im += t20_im;
    cce2:	f241 3350 	movw	r3, #4944	; 0x1350
    cce6:	443b      	add	r3, r7
    cce8:	ed93 6b00 	vldr	d6, [r3]
    ccec:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    ccf0:	ed93 7b00 	vldr	d7, [r3]
    ccf4:	ee36 7b07 	vadd.f64	d7, d6, d7
    ccf8:	f241 3350 	movw	r3, #4944	; 0x1350
    ccfc:	443b      	add	r3, r7
    ccfe:	ed83 7b00 	vstr	d7, [r3]
  if (t25.im == 0.0) {
    cd02:	f507 632f 	add.w	r3, r7, #2800	; 0xaf0
    cd06:	ed93 7b02 	vldr	d7, [r3, #8]
    cd0a:	eeb5 7b40 	vcmp.f64	d7, #0.0
    cd0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    cd12:	d116      	bne.n	cd42 <G_q+0x4c52>
    t13_re = t25.re / 2.0;
    cd14:	f507 632f 	add.w	r3, r7, #2800	; 0xaf0
    cd18:	ed93 6b00 	vldr	d6, [r3]
    cd1c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    cd20:	ee86 7b05 	vdiv.f64	d7, d6, d5
    cd24:	f241 3378 	movw	r3, #4984	; 0x1378
    cd28:	443b      	add	r3, r7
    cd2a:	ed83 7b00 	vstr	d7, [r3]
    t13_im = 0.0;
    cd2e:	f04f 0300 	mov.w	r3, #0
    cd32:	f04f 0400 	mov.w	r4, #0
    cd36:	f241 3270 	movw	r2, #4976	; 0x1370
    cd3a:	443a      	add	r2, r7
    cd3c:	e9c2 3400 	strd	r3, r4, [r2]
    cd40:	e039      	b.n	cdb6 <G_q+0x4cc6>
  } else if (t25.re == 0.0) {
    cd42:	f507 632f 	add.w	r3, r7, #2800	; 0xaf0
    cd46:	ed93 7b00 	vldr	d7, [r3]
    cd4a:	eeb5 7b40 	vcmp.f64	d7, #0.0
    cd4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    cd52:	d116      	bne.n	cd82 <G_q+0x4c92>
    t13_re = 0.0;
    cd54:	f04f 0300 	mov.w	r3, #0
    cd58:	f04f 0400 	mov.w	r4, #0
    cd5c:	f241 3278 	movw	r2, #4984	; 0x1378
    cd60:	443a      	add	r2, r7
    cd62:	e9c2 3400 	strd	r3, r4, [r2]
    t13_im = t25.im / 2.0;
    cd66:	f507 632f 	add.w	r3, r7, #2800	; 0xaf0
    cd6a:	ed93 6b02 	vldr	d6, [r3, #8]
    cd6e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    cd72:	ee86 7b05 	vdiv.f64	d7, d6, d5
    cd76:	f241 3370 	movw	r3, #4976	; 0x1370
    cd7a:	443b      	add	r3, r7
    cd7c:	ed83 7b00 	vstr	d7, [r3]
    cd80:	e019      	b.n	cdb6 <G_q+0x4cc6>
  } else {
    t13_re = t25.re / 2.0;
    cd82:	f507 632f 	add.w	r3, r7, #2800	; 0xaf0
    cd86:	ed93 6b00 	vldr	d6, [r3]
    cd8a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    cd8e:	ee86 7b05 	vdiv.f64	d7, d6, d5
    cd92:	f241 3378 	movw	r3, #4984	; 0x1378
    cd96:	443b      	add	r3, r7
    cd98:	ed83 7b00 	vstr	d7, [r3]
    t13_im = t25.im / 2.0;
    cd9c:	f507 632f 	add.w	r3, r7, #2800	; 0xaf0
    cda0:	ed93 6b02 	vldr	d6, [r3, #8]
    cda4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    cda8:	ee86 7b05 	vdiv.f64	d7, d6, d5
    cdac:	f241 3370 	movw	r3, #4976	; 0x1370
    cdb0:	443b      	add	r3, r7
    cdb2:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t26.im == 0.0) {
    cdb6:	f507 6330 	add.w	r3, r7, #2816	; 0xb00
    cdba:	ed93 7b02 	vldr	d7, [r3, #8]
    cdbe:	eeb5 7b40 	vcmp.f64	d7, #0.0
    cdc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    cdc6:	d116      	bne.n	cdf6 <G_q+0x4d06>
    t34_re = t26.re / 2.0;
    cdc8:	f507 6330 	add.w	r3, r7, #2816	; 0xb00
    cdcc:	ed93 6b00 	vldr	d6, [r3]
    cdd0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    cdd4:	ee86 7b05 	vdiv.f64	d7, d6, d5
    cdd8:	f241 33b8 	movw	r3, #5048	; 0x13b8
    cddc:	443b      	add	r3, r7
    cdde:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
    cde2:	f04f 0300 	mov.w	r3, #0
    cde6:	f04f 0400 	mov.w	r4, #0
    cdea:	f241 32b0 	movw	r2, #5040	; 0x13b0
    cdee:	443a      	add	r2, r7
    cdf0:	e9c2 3400 	strd	r3, r4, [r2]
    cdf4:	e03c      	b.n	ce70 <G_q+0x4d80>
  } else if (t26.re == 0.0) {
    cdf6:	f507 6330 	add.w	r3, r7, #2816	; 0xb00
    cdfa:	ed93 7b00 	vldr	d7, [r3]
    cdfe:	eeb5 7b40 	vcmp.f64	d7, #0.0
    ce02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ce06:	d119      	bne.n	ce3c <G_q+0x4d4c>
    t34_re = 0.0;
    ce08:	f04f 0300 	mov.w	r3, #0
    ce0c:	f04f 0400 	mov.w	r4, #0
    ce10:	f241 32b8 	movw	r2, #5048	; 0x13b8
    ce14:	443a      	add	r2, r7
    ce16:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t26.im / 2.0;
    ce1a:	f507 6330 	add.w	r3, r7, #2816	; 0xb00
    ce1e:	ed93 6b02 	vldr	d6, [r3, #8]
    ce22:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ce26:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ce2a:	f241 33b0 	movw	r3, #5040	; 0x13b0
    ce2e:	443b      	add	r3, r7
    ce30:	ed83 7b00 	vstr	d7, [r3]
    ce34:	e01c      	b.n	ce70 <G_q+0x4d80>
    ce36:	bf00      	nop
    ce38:	ffffed50 	.word	0xffffed50
  } else {
    t34_re = t26.re / 2.0;
    ce3c:	f507 6330 	add.w	r3, r7, #2816	; 0xb00
    ce40:	ed93 6b00 	vldr	d6, [r3]
    ce44:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ce48:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ce4c:	f241 33b8 	movw	r3, #5048	; 0x13b8
    ce50:	443b      	add	r3, r7
    ce52:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t26.im / 2.0;
    ce56:	f507 6330 	add.w	r3, r7, #2816	; 0xb00
    ce5a:	ed93 6b02 	vldr	d6, [r3, #8]
    ce5e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ce62:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ce66:	f241 33b0 	movw	r3, #5040	; 0x13b0
    ce6a:	443b      	add	r3, r7
    ce6c:	ed83 7b00 	vstr	d7, [r3]
  }

  t16_re = (t27.re * 0.0 - t27.im * 3.061616997868383E-17) - (t28.re * 0.0 -
    ce70:	f507 6382 	add.w	r3, r7, #1040	; 0x410
    ce74:	ed93 7b00 	vldr	d7, [r3]
    ce78:	ed9f 6bf1 	vldr	d6, [pc, #964]	; d240 <G_q+0x5150>
    ce7c:	ee27 6b06 	vmul.f64	d6, d7, d6
    ce80:	f507 6382 	add.w	r3, r7, #1040	; 0x410
    ce84:	ed93 7b02 	vldr	d7, [r3, #8]
    ce88:	ed9f 5bef 	vldr	d5, [pc, #956]	; d248 <G_q+0x5158>
    ce8c:	ee27 7b05 	vmul.f64	d7, d7, d5
    ce90:	ee36 6b47 	vsub.f64	d6, d6, d7
    ce94:	f507 6384 	add.w	r3, r7, #1056	; 0x420
    ce98:	ed93 7b00 	vldr	d7, [r3]
    ce9c:	ed9f 5be8 	vldr	d5, [pc, #928]	; d240 <G_q+0x5150>
    cea0:	ee27 5b05 	vmul.f64	d5, d7, d5
    t28.im * 3.061616997868383E-17);
    cea4:	f507 6384 	add.w	r3, r7, #1056	; 0x420
    cea8:	ed93 7b02 	vldr	d7, [r3, #8]
    ceac:	ed9f 4be6 	vldr	d4, [pc, #920]	; d248 <G_q+0x5158>
    ceb0:	ee27 7b04 	vmul.f64	d7, d7, d4
  t16_re = (t27.re * 0.0 - t27.im * 3.061616997868383E-17) - (t28.re * 0.0 -
    ceb4:	ee35 7b47 	vsub.f64	d7, d5, d7
    ceb8:	ee36 7b47 	vsub.f64	d7, d6, d7
    cebc:	f241 3368 	movw	r3, #4968	; 0x1368
    cec0:	443b      	add	r3, r7
    cec2:	ed83 7b00 	vstr	d7, [r3]
  t16_im = (t27.re * 3.061616997868383E-17 + t27.im * 0.0) - (t28.re *
    cec6:	f507 6382 	add.w	r3, r7, #1040	; 0x410
    ceca:	ed93 7b00 	vldr	d7, [r3]
    cece:	ed9f 6bde 	vldr	d6, [pc, #888]	; d248 <G_q+0x5158>
    ced2:	ee27 6b06 	vmul.f64	d6, d7, d6
    ced6:	f507 6382 	add.w	r3, r7, #1040	; 0x410
    ceda:	ed93 7b02 	vldr	d7, [r3, #8]
    cede:	ed9f 5bd8 	vldr	d5, [pc, #864]	; d240 <G_q+0x5150>
    cee2:	ee27 7b05 	vmul.f64	d7, d7, d5
    cee6:	ee36 6b07 	vadd.f64	d6, d6, d7
    ceea:	f507 6384 	add.w	r3, r7, #1056	; 0x420
    ceee:	ed93 7b00 	vldr	d7, [r3]
    cef2:	ed9f 5bd5 	vldr	d5, [pc, #852]	; d248 <G_q+0x5158>
    cef6:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t28.im * 0.0);
    cefa:	f507 6384 	add.w	r3, r7, #1056	; 0x420
    cefe:	ed93 7b02 	vldr	d7, [r3, #8]
    cf02:	ed9f 4bcf 	vldr	d4, [pc, #828]	; d240 <G_q+0x5150>
    cf06:	ee27 7b04 	vmul.f64	d7, d7, d4
    cf0a:	ee35 7b07 	vadd.f64	d7, d5, d7
  t16_im = (t27.re * 3.061616997868383E-17 + t27.im * 0.0) - (t28.re *
    cf0e:	ee36 7b47 	vsub.f64	d7, d6, d7
    cf12:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    cf16:	ed83 7b00 	vstr	d7, [r3]
  t13_re += t34_re;
    cf1a:	f241 3378 	movw	r3, #4984	; 0x1378
    cf1e:	443b      	add	r3, r7
    cf20:	ed93 6b00 	vldr	d6, [r3]
    cf24:	f241 33b8 	movw	r3, #5048	; 0x13b8
    cf28:	443b      	add	r3, r7
    cf2a:	ed93 7b00 	vldr	d7, [r3]
    cf2e:	ee36 7b07 	vadd.f64	d7, d6, d7
    cf32:	f241 3378 	movw	r3, #4984	; 0x1378
    cf36:	443b      	add	r3, r7
    cf38:	ed83 7b00 	vstr	d7, [r3]
  t13_im += t34_im;
    cf3c:	f241 3370 	movw	r3, #4976	; 0x1370
    cf40:	443b      	add	r3, r7
    cf42:	ed93 6b00 	vldr	d6, [r3]
    cf46:	f241 33b0 	movw	r3, #5040	; 0x13b0
    cf4a:	443b      	add	r3, r7
    cf4c:	ed93 7b00 	vldr	d7, [r3]
    cf50:	ee36 7b07 	vadd.f64	d7, d6, d7
    cf54:	f241 3370 	movw	r3, #4976	; 0x1370
    cf58:	443b      	add	r3, r7
    cf5a:	ed83 7b00 	vstr	d7, [r3]
  t34_re = t31.re * 3.061616997868383E-17 + t32.re * 3.061616997868383E-17;
    cf5e:	f507 6386 	add.w	r3, r7, #1072	; 0x430
    cf62:	ed93 7b00 	vldr	d7, [r3]
    cf66:	ed9f 6bb8 	vldr	d6, [pc, #736]	; d248 <G_q+0x5158>
    cf6a:	ee27 6b06 	vmul.f64	d6, d7, d6
    cf6e:	f507 6388 	add.w	r3, r7, #1088	; 0x440
    cf72:	ed93 7b00 	vldr	d7, [r3]
    cf76:	ed9f 5bb4 	vldr	d5, [pc, #720]	; d248 <G_q+0x5158>
    cf7a:	ee27 7b05 	vmul.f64	d7, d7, d5
    cf7e:	ee36 7b07 	vadd.f64	d7, d6, d7
    cf82:	f241 33b8 	movw	r3, #5048	; 0x13b8
    cf86:	443b      	add	r3, r7
    cf88:	ed83 7b00 	vstr	d7, [r3]
  t34_im = t31.im * 3.061616997868383E-17 + t32.im * 3.061616997868383E-17;
    cf8c:	f507 6386 	add.w	r3, r7, #1072	; 0x430
    cf90:	ed93 7b02 	vldr	d7, [r3, #8]
    cf94:	ed9f 6bac 	vldr	d6, [pc, #688]	; d248 <G_q+0x5158>
    cf98:	ee27 6b06 	vmul.f64	d6, d7, d6
    cf9c:	f507 6388 	add.w	r3, r7, #1088	; 0x440
    cfa0:	ed93 7b02 	vldr	d7, [r3, #8]
    cfa4:	ed9f 5ba8 	vldr	d5, [pc, #672]	; d248 <G_q+0x5158>
    cfa8:	ee27 7b05 	vmul.f64	d7, d7, d5
    cfac:	ee36 7b07 	vadd.f64	d7, d6, d7
    cfb0:	f241 33b0 	movw	r3, #5040	; 0x13b0
    cfb4:	443b      	add	r3, r7
    cfb6:	ed83 7b00 	vstr	d7, [r3]
  t12_re = (t29.re * 0.0 - t29.im * 0.5) - (t30.re * 0.0 - t30.im * 0.5);
    cfba:	f507 6331 	add.w	r3, r7, #2832	; 0xb10
    cfbe:	ed93 7b00 	vldr	d7, [r3]
    cfc2:	ed9f 6b9f 	vldr	d6, [pc, #636]	; d240 <G_q+0x5150>
    cfc6:	ee27 6b06 	vmul.f64	d6, d7, d6
    cfca:	f507 6331 	add.w	r3, r7, #2832	; 0xb10
    cfce:	ed93 7b02 	vldr	d7, [r3, #8]
    cfd2:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    cfd6:	ee27 7b05 	vmul.f64	d7, d7, d5
    cfda:	ee36 6b47 	vsub.f64	d6, d6, d7
    cfde:	f507 6332 	add.w	r3, r7, #2848	; 0xb20
    cfe2:	ed93 7b00 	vldr	d7, [r3]
    cfe6:	ed9f 5b96 	vldr	d5, [pc, #600]	; d240 <G_q+0x5150>
    cfea:	ee27 5b05 	vmul.f64	d5, d7, d5
    cfee:	f507 6332 	add.w	r3, r7, #2848	; 0xb20
    cff2:	ed93 7b02 	vldr	d7, [r3, #8]
    cff6:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    cffa:	ee27 7b04 	vmul.f64	d7, d7, d4
    cffe:	ee35 7b47 	vsub.f64	d7, d5, d7
    d002:	ee36 7b47 	vsub.f64	d7, d6, d7
    d006:	f241 3388 	movw	r3, #5000	; 0x1388
    d00a:	443b      	add	r3, r7
    d00c:	ed83 7b00 	vstr	d7, [r3]
  t12_im = (t29.re * 0.5 + t29.im * 0.0) - (t30.re * 0.5 + t30.im * 0.0);
    d010:	f507 6331 	add.w	r3, r7, #2832	; 0xb10
    d014:	ed93 7b00 	vldr	d7, [r3]
    d018:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    d01c:	ee27 6b06 	vmul.f64	d6, d7, d6
    d020:	f507 6331 	add.w	r3, r7, #2832	; 0xb10
    d024:	ed93 7b02 	vldr	d7, [r3, #8]
    d028:	ed9f 5b85 	vldr	d5, [pc, #532]	; d240 <G_q+0x5150>
    d02c:	ee27 7b05 	vmul.f64	d7, d7, d5
    d030:	ee36 6b07 	vadd.f64	d6, d6, d7
    d034:	f507 6332 	add.w	r3, r7, #2848	; 0xb20
    d038:	ed93 7b00 	vldr	d7, [r3]
    d03c:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    d040:	ee27 5b05 	vmul.f64	d5, d7, d5
    d044:	f507 6332 	add.w	r3, r7, #2848	; 0xb20
    d048:	ed93 7b02 	vldr	d7, [r3, #8]
    d04c:	ed9f 4b7c 	vldr	d4, [pc, #496]	; d240 <G_q+0x5150>
    d050:	ee27 7b04 	vmul.f64	d7, d7, d4
    d054:	ee35 7b07 	vadd.f64	d7, d5, d7
    d058:	ee36 7b47 	vsub.f64	d7, d6, d7
    d05c:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    d060:	ed83 7b00 	vstr	d7, [r3]
  t20_re = (t21.re * 0.0 - t21.im * 0.5) - (t22.re * 0.0 - t22.im * 0.5);
    d064:	f507 7398 	add.w	r3, r7, #304	; 0x130
    d068:	ed93 7b00 	vldr	d7, [r3]
    d06c:	ed9f 6b74 	vldr	d6, [pc, #464]	; d240 <G_q+0x5150>
    d070:	ee27 6b06 	vmul.f64	d6, d7, d6
    d074:	f507 7398 	add.w	r3, r7, #304	; 0x130
    d078:	ed93 7b02 	vldr	d7, [r3, #8]
    d07c:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    d080:	ee27 7b05 	vmul.f64	d7, d7, d5
    d084:	ee36 6b47 	vsub.f64	d6, d6, d7
    d088:	4b73      	ldr	r3, [pc, #460]	; (d258 <G_q+0x5168>)
    d08a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d08e:	443a      	add	r2, r7
    d090:	4413      	add	r3, r2
    d092:	ed93 7b00 	vldr	d7, [r3]
    d096:	ed9f 5b6a 	vldr	d5, [pc, #424]	; d240 <G_q+0x5150>
    d09a:	ee27 5b05 	vmul.f64	d5, d7, d5
    d09e:	4b6e      	ldr	r3, [pc, #440]	; (d258 <G_q+0x5168>)
    d0a0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d0a4:	443a      	add	r2, r7
    d0a6:	4413      	add	r3, r2
    d0a8:	ed93 7b02 	vldr	d7, [r3, #8]
    d0ac:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    d0b0:	ee27 7b04 	vmul.f64	d7, d7, d4
    d0b4:	ee35 7b47 	vsub.f64	d7, d5, d7
    d0b8:	ee36 7b47 	vsub.f64	d7, d6, d7
    d0bc:	f241 3348 	movw	r3, #4936	; 0x1348
    d0c0:	443b      	add	r3, r7
    d0c2:	ed83 7b00 	vstr	d7, [r3]
  t20_im = (t21.re * 0.5 + t21.im * 0.0) - (t22.re * 0.5 + t22.im * 0.0);
    d0c6:	f507 7398 	add.w	r3, r7, #304	; 0x130
    d0ca:	ed93 7b00 	vldr	d7, [r3]
    d0ce:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    d0d2:	ee27 6b06 	vmul.f64	d6, d7, d6
    d0d6:	f507 7398 	add.w	r3, r7, #304	; 0x130
    d0da:	ed93 7b02 	vldr	d7, [r3, #8]
    d0de:	ed9f 5b58 	vldr	d5, [pc, #352]	; d240 <G_q+0x5150>
    d0e2:	ee27 7b05 	vmul.f64	d7, d7, d5
    d0e6:	ee36 6b07 	vadd.f64	d6, d6, d7
    d0ea:	4b5b      	ldr	r3, [pc, #364]	; (d258 <G_q+0x5168>)
    d0ec:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d0f0:	443a      	add	r2, r7
    d0f2:	4413      	add	r3, r2
    d0f4:	ed93 7b00 	vldr	d7, [r3]
    d0f8:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    d0fc:	ee27 5b05 	vmul.f64	d5, d7, d5
    d100:	4b55      	ldr	r3, [pc, #340]	; (d258 <G_q+0x5168>)
    d102:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d106:	443a      	add	r2, r7
    d108:	4413      	add	r3, r2
    d10a:	ed93 7b02 	vldr	d7, [r3, #8]
    d10e:	ed9f 4b4c 	vldr	d4, [pc, #304]	; d240 <G_q+0x5150>
    d112:	ee27 7b04 	vmul.f64	d7, d7, d4
    d116:	ee35 7b07 	vadd.f64	d7, d5, d7
    d11a:	ee36 7b47 	vsub.f64	d7, d6, d7
    d11e:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    d122:	ed83 7b00 	vstr	d7, [r3]
  t23_re = (((t23.re * 0.0 - t23.im * 6.123233995736766E-17) - (t24.re * 0.0 -
    d126:	f507 632d 	add.w	r3, r7, #2768	; 0xad0
    d12a:	ed93 7b00 	vldr	d7, [r3]
    d12e:	ed9f 6b44 	vldr	d6, [pc, #272]	; d240 <G_q+0x5150>
    d132:	ee27 6b06 	vmul.f64	d6, d7, d6
    d136:	f507 632d 	add.w	r3, r7, #2768	; 0xad0
    d13a:	ed93 7b02 	vldr	d7, [r3, #8]
    d13e:	ed9f 5b44 	vldr	d5, [pc, #272]	; d250 <G_q+0x5160>
    d142:	ee27 7b05 	vmul.f64	d7, d7, d5
    d146:	ee36 6b47 	vsub.f64	d6, d6, d7
    d14a:	f507 632e 	add.w	r3, r7, #2784	; 0xae0
    d14e:	ed93 7b00 	vldr	d7, [r3]
    d152:	ed9f 5b3b 	vldr	d5, [pc, #236]	; d240 <G_q+0x5150>
    d156:	ee27 5b05 	vmul.f64	d5, d7, d5
              t24.im * 6.123233995736766E-17)) - (t16_re * t13_re - t16_im *
    d15a:	f507 632e 	add.w	r3, r7, #2784	; 0xae0
    d15e:	ed93 7b02 	vldr	d7, [r3, #8]
    d162:	ed9f 4b3b 	vldr	d4, [pc, #236]	; d250 <G_q+0x5160>
    d166:	ee27 7b04 	vmul.f64	d7, d7, d4
  t23_re = (((t23.re * 0.0 - t23.im * 6.123233995736766E-17) - (t24.re * 0.0 -
    d16a:	ee35 7b47 	vsub.f64	d7, d5, d7
    d16e:	ee36 6b47 	vsub.f64	d6, d6, d7
              t24.im * 6.123233995736766E-17)) - (t16_re * t13_re - t16_im *
    d172:	f241 3368 	movw	r3, #4968	; 0x1368
    d176:	443b      	add	r3, r7
    d178:	ed93 5b00 	vldr	d5, [r3]
    d17c:	f241 3378 	movw	r3, #4984	; 0x1378
    d180:	443b      	add	r3, r7
    d182:	ed93 7b00 	vldr	d7, [r3]
    d186:	ee25 5b07 	vmul.f64	d5, d5, d7
    d18a:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    d18e:	ed93 4b00 	vldr	d4, [r3]
    d192:	f241 3370 	movw	r3, #4976	; 0x1370
    d196:	443b      	add	r3, r7
    d198:	ed93 7b00 	vldr	d7, [r3]
    d19c:	ee24 7b07 	vmul.f64	d7, d4, d7
    d1a0:	ee35 7b47 	vsub.f64	d7, d5, d7
    d1a4:	ee36 6b47 	vsub.f64	d6, d6, d7
             t13_im)) + (t34_re * t12_re - t34_im * t12_im);
    d1a8:	f241 33b8 	movw	r3, #5048	; 0x13b8
    d1ac:	443b      	add	r3, r7
    d1ae:	ed93 5b00 	vldr	d5, [r3]
    d1b2:	f241 3388 	movw	r3, #5000	; 0x1388
    d1b6:	443b      	add	r3, r7
    d1b8:	ed93 7b00 	vldr	d7, [r3]
    d1bc:	ee25 5b07 	vmul.f64	d5, d5, d7
    d1c0:	f241 33b0 	movw	r3, #5040	; 0x13b0
    d1c4:	443b      	add	r3, r7
    d1c6:	ed93 4b00 	vldr	d4, [r3]
    d1ca:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    d1ce:	ed93 7b00 	vldr	d7, [r3]
    d1d2:	ee24 7b07 	vmul.f64	d7, d4, d7
    d1d6:	ee35 7b47 	vsub.f64	d7, d5, d7
  t23_re = (((t23.re * 0.0 - t23.im * 6.123233995736766E-17) - (t24.re * 0.0 -
    d1da:	ee36 7b07 	vadd.f64	d7, d6, d7
    d1de:	f241 3330 	movw	r3, #4912	; 0x1330
    d1e2:	443b      	add	r3, r7
    d1e4:	ed83 7b00 	vstr	d7, [r3]
  t34_re = (((t23.re * 6.123233995736766E-17 + t23.im * 0.0) - (t24.re *
    d1e8:	f507 632d 	add.w	r3, r7, #2768	; 0xad0
    d1ec:	ed93 7b00 	vldr	d7, [r3]
    d1f0:	ed9f 6b17 	vldr	d6, [pc, #92]	; d250 <G_q+0x5160>
    d1f4:	ee27 6b06 	vmul.f64	d6, d7, d6
    d1f8:	f507 632d 	add.w	r3, r7, #2768	; 0xad0
    d1fc:	ed93 7b02 	vldr	d7, [r3, #8]
    d200:	ed9f 5b0f 	vldr	d5, [pc, #60]	; d240 <G_q+0x5150>
    d204:	ee27 7b05 	vmul.f64	d7, d7, d5
    d208:	ee36 6b07 	vadd.f64	d6, d6, d7
    d20c:	f507 632e 	add.w	r3, r7, #2784	; 0xae0
    d210:	ed93 7b00 	vldr	d7, [r3]
    d214:	ed9f 5b0e 	vldr	d5, [pc, #56]	; d250 <G_q+0x5160>
    d218:	ee27 5b05 	vmul.f64	d5, d7, d5
              6.123233995736766E-17 + t24.im * 0.0)) - (t16_re * t13_im + t16_im
    d21c:	f507 632e 	add.w	r3, r7, #2784	; 0xae0
    d220:	ed93 7b02 	vldr	d7, [r3, #8]
    d224:	ed9f 4b06 	vldr	d4, [pc, #24]	; d240 <G_q+0x5150>
    d228:	ee27 7b04 	vmul.f64	d7, d7, d4
    d22c:	ee35 7b07 	vadd.f64	d7, d5, d7
  t34_re = (((t23.re * 6.123233995736766E-17 + t23.im * 0.0) - (t24.re *
    d230:	ee36 6b47 	vsub.f64	d6, d6, d7
              6.123233995736766E-17 + t24.im * 0.0)) - (t16_re * t13_im + t16_im
    d234:	f241 3368 	movw	r3, #4968	; 0x1368
    d238:	e010      	b.n	d25c <G_q+0x516c>
    d23a:	bf00      	nop
    d23c:	f3af 8000 	nop.w
	...
    d248:	33145c07 	.word	0x33145c07
    d24c:	3c81a626 	.word	0x3c81a626
    d250:	33145c07 	.word	0x33145c07
    d254:	3c91a626 	.word	0x3c91a626
    d258:	ffffed70 	.word	0xffffed70
    d25c:	443b      	add	r3, r7
    d25e:	ed93 5b00 	vldr	d5, [r3]
    d262:	f241 3370 	movw	r3, #4976	; 0x1370
    d266:	443b      	add	r3, r7
    d268:	ed93 7b00 	vldr	d7, [r3]
    d26c:	ee25 5b07 	vmul.f64	d5, d5, d7
             * t13_re)) + (t34_re * t12_im + t34_im * t12_re);
    d270:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    d274:	ed93 4b00 	vldr	d4, [r3]
    d278:	f241 3378 	movw	r3, #4984	; 0x1378
    d27c:	443b      	add	r3, r7
    d27e:	ed93 7b00 	vldr	d7, [r3]
    d282:	ee24 7b07 	vmul.f64	d7, d4, d7
              6.123233995736766E-17 + t24.im * 0.0)) - (t16_re * t13_im + t16_im
    d286:	ee35 7b07 	vadd.f64	d7, d5, d7
    d28a:	ee36 6b47 	vsub.f64	d6, d6, d7
             * t13_re)) + (t34_re * t12_im + t34_im * t12_re);
    d28e:	f241 33b8 	movw	r3, #5048	; 0x13b8
    d292:	443b      	add	r3, r7
    d294:	ed93 5b00 	vldr	d5, [r3]
    d298:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    d29c:	ed93 7b00 	vldr	d7, [r3]
    d2a0:	ee25 5b07 	vmul.f64	d5, d5, d7
    d2a4:	f241 33b0 	movw	r3, #5040	; 0x13b0
    d2a8:	443b      	add	r3, r7
    d2aa:	ed93 4b00 	vldr	d4, [r3]
    d2ae:	f241 3388 	movw	r3, #5000	; 0x1388
    d2b2:	443b      	add	r3, r7
    d2b4:	ed93 7b00 	vldr	d7, [r3]
    d2b8:	ee24 7b07 	vmul.f64	d7, d4, d7
    d2bc:	ee35 7b07 	vadd.f64	d7, d5, d7
  t34_re = (((t23.re * 6.123233995736766E-17 + t23.im * 0.0) - (t24.re *
    d2c0:	ee36 7b07 	vadd.f64	d7, d6, d7
    d2c4:	f241 33b8 	movw	r3, #5048	; 0x13b8
    d2c8:	443b      	add	r3, r7
    d2ca:	ed83 7b00 	vstr	d7, [r3]
  t54_re = (t54.re * 0.0 - t54.im * 0.5) - (t55.re * 0.0 - t55.im * 0.5);
    d2ce:	f107 0330 	add.w	r3, r7, #48	; 0x30
    d2d2:	ed93 7b00 	vldr	d7, [r3]
    d2d6:	ed9f 6be4 	vldr	d6, [pc, #912]	; d668 <G_q+0x5578>
    d2da:	ee27 6b06 	vmul.f64	d6, d7, d6
    d2de:	f107 0330 	add.w	r3, r7, #48	; 0x30
    d2e2:	ed93 7b02 	vldr	d7, [r3, #8]
    d2e6:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    d2ea:	ee27 7b05 	vmul.f64	d7, d7, d5
    d2ee:	ee36 6b47 	vsub.f64	d6, d6, d7
    d2f2:	4bdf      	ldr	r3, [pc, #892]	; (d670 <G_q+0x5580>)
    d2f4:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d2f8:	443a      	add	r2, r7
    d2fa:	4413      	add	r3, r2
    d2fc:	ed93 7b00 	vldr	d7, [r3]
    d300:	ed9f 5bd9 	vldr	d5, [pc, #868]	; d668 <G_q+0x5578>
    d304:	ee27 5b05 	vmul.f64	d5, d7, d5
    d308:	4bd9      	ldr	r3, [pc, #868]	; (d670 <G_q+0x5580>)
    d30a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d30e:	443a      	add	r2, r7
    d310:	4413      	add	r3, r2
    d312:	ed93 7b02 	vldr	d7, [r3, #8]
    d316:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    d31a:	ee27 7b04 	vmul.f64	d7, d7, d4
    d31e:	ee35 7b47 	vsub.f64	d7, d5, d7
    d322:	ee36 7b47 	vsub.f64	d7, d6, d7
    d326:	f241 3328 	movw	r3, #4904	; 0x1328
    d32a:	443b      	add	r3, r7
    d32c:	ed83 7b00 	vstr	d7, [r3]
  t54_im = (t54.re * 0.5 + t54.im * 0.0) - (t55.re * 0.5 + t55.im * 0.0);
    d330:	f107 0330 	add.w	r3, r7, #48	; 0x30
    d334:	ed93 7b00 	vldr	d7, [r3]
    d338:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    d33c:	ee27 6b06 	vmul.f64	d6, d7, d6
    d340:	f107 0330 	add.w	r3, r7, #48	; 0x30
    d344:	ed93 7b02 	vldr	d7, [r3, #8]
    d348:	ed9f 5bc7 	vldr	d5, [pc, #796]	; d668 <G_q+0x5578>
    d34c:	ee27 7b05 	vmul.f64	d7, d7, d5
    d350:	ee36 6b07 	vadd.f64	d6, d6, d7
    d354:	4bc6      	ldr	r3, [pc, #792]	; (d670 <G_q+0x5580>)
    d356:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d35a:	443a      	add	r2, r7
    d35c:	4413      	add	r3, r2
    d35e:	ed93 7b00 	vldr	d7, [r3]
    d362:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    d366:	ee27 5b05 	vmul.f64	d5, d7, d5
    d36a:	4bc1      	ldr	r3, [pc, #772]	; (d670 <G_q+0x5580>)
    d36c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d370:	443a      	add	r2, r7
    d372:	4413      	add	r3, r2
    d374:	ed93 7b02 	vldr	d7, [r3, #8]
    d378:	ed9f 4bbb 	vldr	d4, [pc, #748]	; d668 <G_q+0x5578>
    d37c:	ee27 7b04 	vmul.f64	d7, d7, d4
    d380:	ee35 7b07 	vadd.f64	d7, d5, d7
    d384:	f241 2378 	movw	r3, #4728	; 0x1278
    d388:	443b      	add	r3, r7
    d38a:	ee36 7b47 	vsub.f64	d7, d6, d7
    d38e:	ed83 7b00 	vstr	d7, [r3]
  t10_re = (b_t10_re * t19_re - t10_im * t19_im) + (t20_re * t23_re - t20_im *
    d392:	f241 3338 	movw	r3, #4920	; 0x1338
    d396:	443b      	add	r3, r7
    d398:	ed93 6b00 	vldr	d6, [r3]
    d39c:	f241 3358 	movw	r3, #4952	; 0x1358
    d3a0:	443b      	add	r3, r7
    d3a2:	ed93 7b00 	vldr	d7, [r3]
    d3a6:	ee26 6b07 	vmul.f64	d6, d6, d7
    d3aa:	f241 3390 	movw	r3, #5008	; 0x1390
    d3ae:	443b      	add	r3, r7
    d3b0:	ed93 5b00 	vldr	d5, [r3]
    d3b4:	f241 3350 	movw	r3, #4944	; 0x1350
    d3b8:	443b      	add	r3, r7
    d3ba:	ed93 7b00 	vldr	d7, [r3]
    d3be:	ee25 7b07 	vmul.f64	d7, d5, d7
    d3c2:	ee36 6b47 	vsub.f64	d6, d6, d7
    d3c6:	f241 3348 	movw	r3, #4936	; 0x1348
    d3ca:	443b      	add	r3, r7
    d3cc:	ed93 5b00 	vldr	d5, [r3]
    d3d0:	f241 3330 	movw	r3, #4912	; 0x1330
    d3d4:	443b      	add	r3, r7
    d3d6:	ed93 7b00 	vldr	d7, [r3]
    d3da:	ee25 5b07 	vmul.f64	d5, d5, d7
    d3de:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    d3e2:	ed93 4b00 	vldr	d4, [r3]
    d3e6:	f241 33b8 	movw	r3, #5048	; 0x13b8
    d3ea:	443b      	add	r3, r7
    d3ec:	ed93 7b00 	vldr	d7, [r3]
    d3f0:	ee24 7b07 	vmul.f64	d7, d4, d7
    d3f4:	ee35 7b47 	vsub.f64	d7, d5, d7
    d3f8:	ee36 7b07 	vadd.f64	d7, d6, d7
    d3fc:	f241 3398 	movw	r3, #5016	; 0x1398
    d400:	443b      	add	r3, r7
    d402:	ed83 7b00 	vstr	d7, [r3]
    t34_re);
  t10_im = (b_t10_re * t19_im + t10_im * t19_re) + (t20_re * t34_re + t20_im *
    d406:	f241 3338 	movw	r3, #4920	; 0x1338
    d40a:	443b      	add	r3, r7
    d40c:	ed93 6b00 	vldr	d6, [r3]
    d410:	f241 3350 	movw	r3, #4944	; 0x1350
    d414:	443b      	add	r3, r7
    d416:	ed93 7b00 	vldr	d7, [r3]
    d41a:	ee26 6b07 	vmul.f64	d6, d6, d7
    d41e:	f241 3390 	movw	r3, #5008	; 0x1390
    d422:	443b      	add	r3, r7
    d424:	ed93 5b00 	vldr	d5, [r3]
    d428:	f241 3358 	movw	r3, #4952	; 0x1358
    d42c:	443b      	add	r3, r7
    d42e:	ed93 7b00 	vldr	d7, [r3]
    d432:	ee25 7b07 	vmul.f64	d7, d5, d7
    d436:	ee36 6b07 	vadd.f64	d6, d6, d7
    d43a:	f241 3348 	movw	r3, #4936	; 0x1348
    d43e:	443b      	add	r3, r7
    d440:	ed93 5b00 	vldr	d5, [r3]
    d444:	f241 33b8 	movw	r3, #5048	; 0x13b8
    d448:	443b      	add	r3, r7
    d44a:	ed93 7b00 	vldr	d7, [r3]
    d44e:	ee25 5b07 	vmul.f64	d5, d5, d7
    d452:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    d456:	ed93 4b00 	vldr	d4, [r3]
    d45a:	f241 3330 	movw	r3, #4912	; 0x1330
    d45e:	443b      	add	r3, r7
    d460:	ed93 7b00 	vldr	d7, [r3]
    d464:	ee24 7b07 	vmul.f64	d7, d4, d7
    d468:	ee35 7b07 	vadd.f64	d7, d5, d7
    d46c:	ee36 7b07 	vadd.f64	d7, d6, d7
    d470:	f241 3390 	movw	r3, #5008	; 0x1390
    d474:	443b      	add	r3, r7
    d476:	ed83 7b00 	vstr	d7, [r3]
    t23_re);
  t13_re = (t8.re * 0.0 - t8.im * 0.5) - (t9.re * 0.0 - t9.im * 0.5);
    d47a:	f507 736c 	add.w	r3, r7, #944	; 0x3b0
    d47e:	ed93 7b00 	vldr	d7, [r3]
    d482:	ed9f 6b79 	vldr	d6, [pc, #484]	; d668 <G_q+0x5578>
    d486:	ee27 6b06 	vmul.f64	d6, d7, d6
    d48a:	f507 736c 	add.w	r3, r7, #944	; 0x3b0
    d48e:	ed93 7b02 	vldr	d7, [r3, #8]
    d492:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    d496:	ee27 7b05 	vmul.f64	d7, d7, d5
    d49a:	ee36 6b47 	vsub.f64	d6, d6, d7
    d49e:	4b75      	ldr	r3, [pc, #468]	; (d674 <G_q+0x5584>)
    d4a0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d4a4:	443a      	add	r2, r7
    d4a6:	4413      	add	r3, r2
    d4a8:	ed93 7b00 	vldr	d7, [r3]
    d4ac:	ed9f 5b6e 	vldr	d5, [pc, #440]	; d668 <G_q+0x5578>
    d4b0:	ee27 5b05 	vmul.f64	d5, d7, d5
    d4b4:	4b6f      	ldr	r3, [pc, #444]	; (d674 <G_q+0x5584>)
    d4b6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d4ba:	443a      	add	r2, r7
    d4bc:	4413      	add	r3, r2
    d4be:	ed93 7b02 	vldr	d7, [r3, #8]
    d4c2:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    d4c6:	ee27 7b04 	vmul.f64	d7, d7, d4
    d4ca:	ee35 7b47 	vsub.f64	d7, d5, d7
    d4ce:	ee36 7b47 	vsub.f64	d7, d6, d7
    d4d2:	f241 3378 	movw	r3, #4984	; 0x1378
    d4d6:	443b      	add	r3, r7
    d4d8:	ed83 7b00 	vstr	d7, [r3]
  t8_im = (t8.re * 0.5 + t8.im * 0.0) - (t9.re * 0.5 + t9.im * 0.0);
    d4dc:	f507 736c 	add.w	r3, r7, #944	; 0x3b0
    d4e0:	ed93 7b00 	vldr	d7, [r3]
    d4e4:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    d4e8:	ee27 6b06 	vmul.f64	d6, d7, d6
    d4ec:	f507 736c 	add.w	r3, r7, #944	; 0x3b0
    d4f0:	ed93 7b02 	vldr	d7, [r3, #8]
    d4f4:	ed9f 5b5c 	vldr	d5, [pc, #368]	; d668 <G_q+0x5578>
    d4f8:	ee27 7b05 	vmul.f64	d7, d7, d5
    d4fc:	ee36 6b07 	vadd.f64	d6, d6, d7
    d500:	4b5c      	ldr	r3, [pc, #368]	; (d674 <G_q+0x5584>)
    d502:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d506:	443a      	add	r2, r7
    d508:	4413      	add	r3, r2
    d50a:	ed93 7b00 	vldr	d7, [r3]
    d50e:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    d512:	ee27 5b05 	vmul.f64	d5, d7, d5
    d516:	4b57      	ldr	r3, [pc, #348]	; (d674 <G_q+0x5584>)
    d518:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d51c:	443a      	add	r2, r7
    d51e:	4413      	add	r3, r2
    d520:	ed93 7b02 	vldr	d7, [r3, #8]
    d524:	ed9f 4b50 	vldr	d4, [pc, #320]	; d668 <G_q+0x5578>
    d528:	ee27 7b04 	vmul.f64	d7, d7, d4
    d52c:	ee35 7b07 	vadd.f64	d7, d5, d7
    d530:	ee36 7b47 	vsub.f64	d7, d6, d7
    d534:	f507 5399 	add.w	r3, r7, #4896	; 0x1320
    d538:	ed83 7b00 	vstr	d7, [r3]
  t13_im = (t5.re * 0.0 - t5.im * 0.5) - (t6.re * 0.0 - t6.im * 0.5);
    d53c:	f507 6327 	add.w	r3, r7, #2672	; 0xa70
    d540:	ed93 7b00 	vldr	d7, [r3]
    d544:	ed9f 6b48 	vldr	d6, [pc, #288]	; d668 <G_q+0x5578>
    d548:	ee27 6b06 	vmul.f64	d6, d7, d6
    d54c:	f507 6327 	add.w	r3, r7, #2672	; 0xa70
    d550:	ed93 7b02 	vldr	d7, [r3, #8]
    d554:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    d558:	ee27 7b05 	vmul.f64	d7, d7, d5
    d55c:	ee36 6b47 	vsub.f64	d6, d6, d7
    d560:	f507 6328 	add.w	r3, r7, #2688	; 0xa80
    d564:	ed93 7b00 	vldr	d7, [r3]
    d568:	ed9f 5b3f 	vldr	d5, [pc, #252]	; d668 <G_q+0x5578>
    d56c:	ee27 5b05 	vmul.f64	d5, d7, d5
    d570:	f507 6328 	add.w	r3, r7, #2688	; 0xa80
    d574:	ed93 7b02 	vldr	d7, [r3, #8]
    d578:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    d57c:	ee27 7b04 	vmul.f64	d7, d7, d4
    d580:	ee35 7b47 	vsub.f64	d7, d5, d7
    d584:	ee36 7b47 	vsub.f64	d7, d6, d7
    d588:	f241 3370 	movw	r3, #4976	; 0x1370
    d58c:	443b      	add	r3, r7
    d58e:	ed83 7b00 	vstr	d7, [r3]
  t16_re = (t5.re * 0.5 + t5.im * 0.0) - (t6.re * 0.5 + t6.im * 0.0);
    d592:	f507 6327 	add.w	r3, r7, #2672	; 0xa70
    d596:	ed93 7b00 	vldr	d7, [r3]
    d59a:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    d59e:	ee27 6b06 	vmul.f64	d6, d7, d6
    d5a2:	f507 6327 	add.w	r3, r7, #2672	; 0xa70
    d5a6:	ed93 7b02 	vldr	d7, [r3, #8]
    d5aa:	ed9f 5b2f 	vldr	d5, [pc, #188]	; d668 <G_q+0x5578>
    d5ae:	ee27 7b05 	vmul.f64	d7, d7, d5
    d5b2:	ee36 6b07 	vadd.f64	d6, d6, d7
    d5b6:	f507 6328 	add.w	r3, r7, #2688	; 0xa80
    d5ba:	ed93 7b00 	vldr	d7, [r3]
    d5be:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    d5c2:	ee27 5b05 	vmul.f64	d5, d7, d5
    d5c6:	f507 6328 	add.w	r3, r7, #2688	; 0xa80
    d5ca:	ed93 7b02 	vldr	d7, [r3, #8]
    d5ce:	ed9f 4b26 	vldr	d4, [pc, #152]	; d668 <G_q+0x5578>
    d5d2:	ee27 7b04 	vmul.f64	d7, d7, d4
    d5d6:	ee35 7b07 	vadd.f64	d7, d5, d7
    d5da:	ee36 7b47 	vsub.f64	d7, d6, d7
    d5de:	f241 3368 	movw	r3, #4968	; 0x1368
    d5e2:	443b      	add	r3, r7
    d5e4:	ed83 7b00 	vstr	d7, [r3]
  if (t8.im == 0.0) {
    d5e8:	f507 736c 	add.w	r3, r7, #944	; 0x3b0
    d5ec:	ed93 7b02 	vldr	d7, [r3, #8]
    d5f0:	eeb5 7b40 	vcmp.f64	d7, #0.0
    d5f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    d5f8:	d115      	bne.n	d626 <G_q+0x5536>
    t16_im = t8.re / 2.0;
    d5fa:	f507 736c 	add.w	r3, r7, #944	; 0x3b0
    d5fe:	ed93 6b00 	vldr	d6, [r3]
    d602:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d606:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d60a:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    d60e:	ed83 7b00 	vstr	d7, [r3]
    t20_re = 0.0;
    d612:	f04f 0300 	mov.w	r3, #0
    d616:	f04f 0400 	mov.w	r4, #0
    d61a:	f241 3248 	movw	r2, #4936	; 0x1348
    d61e:	443a      	add	r2, r7
    d620:	e9c2 3400 	strd	r3, r4, [r2]
    d624:	e041      	b.n	d6aa <G_q+0x55ba>
  } else if (t8.re == 0.0) {
    d626:	f507 736c 	add.w	r3, r7, #944	; 0x3b0
    d62a:	ed93 7b00 	vldr	d7, [r3]
    d62e:	eeb5 7b40 	vcmp.f64	d7, #0.0
    d632:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    d636:	d11f      	bne.n	d678 <G_q+0x5588>
    t16_im = 0.0;
    d638:	f04f 0300 	mov.w	r3, #0
    d63c:	f04f 0400 	mov.w	r4, #0
    d640:	f507 529b 	add.w	r2, r7, #4960	; 0x1360
    d644:	e9c2 3400 	strd	r3, r4, [r2]
    t20_re = t8.im / 2.0;
    d648:	f507 736c 	add.w	r3, r7, #944	; 0x3b0
    d64c:	ed93 6b02 	vldr	d6, [r3, #8]
    d650:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d654:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d658:	f241 3348 	movw	r3, #4936	; 0x1348
    d65c:	443b      	add	r3, r7
    d65e:	ed83 7b00 	vstr	d7, [r3]
    d662:	e022      	b.n	d6aa <G_q+0x55ba>
    d664:	f3af 8000 	nop.w
	...
    d670:	ffffec70 	.word	0xffffec70
    d674:	ffffeff0 	.word	0xffffeff0
  } else {
    t16_im = t8.re / 2.0;
    d678:	f507 736c 	add.w	r3, r7, #944	; 0x3b0
    d67c:	ed93 6b00 	vldr	d6, [r3]
    d680:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d684:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d688:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    d68c:	ed83 7b00 	vstr	d7, [r3]
    t20_re = t8.im / 2.0;
    d690:	f507 736c 	add.w	r3, r7, #944	; 0x3b0
    d694:	ed93 6b02 	vldr	d6, [r3, #8]
    d698:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d69c:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d6a0:	f241 3348 	movw	r3, #4936	; 0x1348
    d6a4:	443b      	add	r3, r7
    d6a6:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t85.im == 0.0) {
    d6aa:	f507 63b0 	add.w	r3, r7, #1408	; 0x580
    d6ae:	ed93 7b02 	vldr	d7, [r3, #8]
    d6b2:	eeb5 7b40 	vcmp.f64	d7, #0.0
    d6b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    d6ba:	d115      	bne.n	d6e8 <G_q+0x55f8>
    t12_im = t85.re / 2.0;
    d6bc:	f507 63b0 	add.w	r3, r7, #1408	; 0x580
    d6c0:	ed93 6b00 	vldr	d6, [r3]
    d6c4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d6c8:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d6cc:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    d6d0:	ed83 7b00 	vstr	d7, [r3]
    t85_im = 0.0;
    d6d4:	f04f 0300 	mov.w	r3, #0
    d6d8:	f04f 0400 	mov.w	r4, #0
    d6dc:	f241 3218 	movw	r2, #4888	; 0x1318
    d6e0:	443a      	add	r2, r7
    d6e2:	e9c2 3400 	strd	r3, r4, [r2]
    d6e6:	e037      	b.n	d758 <G_q+0x5668>
  } else if (t85.re == 0.0) {
    d6e8:	f507 63b0 	add.w	r3, r7, #1408	; 0x580
    d6ec:	ed93 7b00 	vldr	d7, [r3]
    d6f0:	eeb5 7b40 	vcmp.f64	d7, #0.0
    d6f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    d6f8:	d115      	bne.n	d726 <G_q+0x5636>
    t12_im = 0.0;
    d6fa:	f04f 0300 	mov.w	r3, #0
    d6fe:	f04f 0400 	mov.w	r4, #0
    d702:	f507 529c 	add.w	r2, r7, #4992	; 0x1380
    d706:	e9c2 3400 	strd	r3, r4, [r2]
    t85_im = t85.im / 2.0;
    d70a:	f507 63b0 	add.w	r3, r7, #1408	; 0x580
    d70e:	ed93 6b02 	vldr	d6, [r3, #8]
    d712:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d716:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d71a:	f241 3318 	movw	r3, #4888	; 0x1318
    d71e:	443b      	add	r3, r7
    d720:	ed83 7b00 	vstr	d7, [r3]
    d724:	e018      	b.n	d758 <G_q+0x5668>
  } else {
    t12_im = t85.re / 2.0;
    d726:	f507 63b0 	add.w	r3, r7, #1408	; 0x580
    d72a:	ed93 6b00 	vldr	d6, [r3]
    d72e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d732:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d736:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    d73a:	ed83 7b00 	vstr	d7, [r3]
    t85_im = t85.im / 2.0;
    d73e:	f507 63b0 	add.w	r3, r7, #1408	; 0x580
    d742:	ed93 6b02 	vldr	d6, [r3, #8]
    d746:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d74a:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d74e:	f241 3318 	movw	r3, #4888	; 0x1318
    d752:	443b      	add	r3, r7
    d754:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t3.im == 0.0) {
    d758:	f507 6325 	add.w	r3, r7, #2640	; 0xa50
    d75c:	ed93 7b02 	vldr	d7, [r3, #8]
    d760:	eeb5 7b40 	vcmp.f64	d7, #0.0
    d764:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    d768:	d115      	bne.n	d796 <G_q+0x56a6>
    t20_im = t3.re / 2.0;
    d76a:	f507 6325 	add.w	r3, r7, #2640	; 0xa50
    d76e:	ed93 6b00 	vldr	d6, [r3]
    d772:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d776:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d77a:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    d77e:	ed83 7b00 	vstr	d7, [r3]
    t3_im = 0.0;
    d782:	f04f 0300 	mov.w	r3, #0
    d786:	f04f 0400 	mov.w	r4, #0
    d78a:	f241 3210 	movw	r2, #4880	; 0x1310
    d78e:	443a      	add	r2, r7
    d790:	e9c2 3400 	strd	r3, r4, [r2]
    d794:	e037      	b.n	d806 <G_q+0x5716>
  } else if (t3.re == 0.0) {
    d796:	f507 6325 	add.w	r3, r7, #2640	; 0xa50
    d79a:	ed93 7b00 	vldr	d7, [r3]
    d79e:	eeb5 7b40 	vcmp.f64	d7, #0.0
    d7a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    d7a6:	d115      	bne.n	d7d4 <G_q+0x56e4>
    t20_im = 0.0;
    d7a8:	f04f 0300 	mov.w	r3, #0
    d7ac:	f04f 0400 	mov.w	r4, #0
    d7b0:	f507 529a 	add.w	r2, r7, #4928	; 0x1340
    d7b4:	e9c2 3400 	strd	r3, r4, [r2]
    t3_im = t3.im / 2.0;
    d7b8:	f507 6325 	add.w	r3, r7, #2640	; 0xa50
    d7bc:	ed93 6b02 	vldr	d6, [r3, #8]
    d7c0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d7c4:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d7c8:	f241 3310 	movw	r3, #4880	; 0x1310
    d7cc:	443b      	add	r3, r7
    d7ce:	ed83 7b00 	vstr	d7, [r3]
    d7d2:	e018      	b.n	d806 <G_q+0x5716>
  } else {
    t20_im = t3.re / 2.0;
    d7d4:	f507 6325 	add.w	r3, r7, #2640	; 0xa50
    d7d8:	ed93 6b00 	vldr	d6, [r3]
    d7dc:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d7e0:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d7e4:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    d7e8:	ed83 7b00 	vstr	d7, [r3]
    t3_im = t3.im / 2.0;
    d7ec:	f507 6325 	add.w	r3, r7, #2640	; 0xa50
    d7f0:	ed93 6b02 	vldr	d6, [r3, #8]
    d7f4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d7f8:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d7fc:	f241 3310 	movw	r3, #4880	; 0x1310
    d800:	443b      	add	r3, r7
    d802:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t4.im == 0.0) {
    d806:	f507 6326 	add.w	r3, r7, #2656	; 0xa60
    d80a:	ed93 7b02 	vldr	d7, [r3, #8]
    d80e:	eeb5 7b40 	vcmp.f64	d7, #0.0
    d812:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    d816:	d116      	bne.n	d846 <G_q+0x5756>
    t34_re = t4.re / 2.0;
    d818:	f507 6326 	add.w	r3, r7, #2656	; 0xa60
    d81c:	ed93 6b00 	vldr	d6, [r3]
    d820:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d824:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d828:	f241 33b8 	movw	r3, #5048	; 0x13b8
    d82c:	443b      	add	r3, r7
    d82e:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
    d832:	f04f 0300 	mov.w	r3, #0
    d836:	f04f 0400 	mov.w	r4, #0
    d83a:	f241 32b0 	movw	r2, #5040	; 0x13b0
    d83e:	443a      	add	r2, r7
    d840:	e9c2 3400 	strd	r3, r4, [r2]
    d844:	e039      	b.n	d8ba <G_q+0x57ca>
  } else if (t4.re == 0.0) {
    d846:	f507 6326 	add.w	r3, r7, #2656	; 0xa60
    d84a:	ed93 7b00 	vldr	d7, [r3]
    d84e:	eeb5 7b40 	vcmp.f64	d7, #0.0
    d852:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    d856:	d116      	bne.n	d886 <G_q+0x5796>
    t34_re = 0.0;
    d858:	f04f 0300 	mov.w	r3, #0
    d85c:	f04f 0400 	mov.w	r4, #0
    d860:	f241 32b8 	movw	r2, #5048	; 0x13b8
    d864:	443a      	add	r2, r7
    d866:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t4.im / 2.0;
    d86a:	f507 6326 	add.w	r3, r7, #2656	; 0xa60
    d86e:	ed93 6b02 	vldr	d6, [r3, #8]
    d872:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d876:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d87a:	f241 33b0 	movw	r3, #5040	; 0x13b0
    d87e:	443b      	add	r3, r7
    d880:	ed83 7b00 	vstr	d7, [r3]
    d884:	e019      	b.n	d8ba <G_q+0x57ca>
  } else {
    t34_re = t4.re / 2.0;
    d886:	f507 6326 	add.w	r3, r7, #2656	; 0xa60
    d88a:	ed93 6b00 	vldr	d6, [r3]
    d88e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d892:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d896:	f241 33b8 	movw	r3, #5048	; 0x13b8
    d89a:	443b      	add	r3, r7
    d89c:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t4.im / 2.0;
    d8a0:	f507 6326 	add.w	r3, r7, #2656	; 0xa60
    d8a4:	ed93 6b02 	vldr	d6, [r3, #8]
    d8a8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    d8ac:	ee86 7b05 	vdiv.f64	d7, d6, d5
    d8b0:	f241 33b0 	movw	r3, #5040	; 0x13b0
    d8b4:	443b      	add	r3, r7
    d8b6:	ed83 7b00 	vstr	d7, [r3]
  }

  t16_im += t12_im;
    d8ba:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    d8be:	ed93 6b00 	vldr	d6, [r3]
    d8c2:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    d8c6:	ed93 7b00 	vldr	d7, [r3]
    d8ca:	ee36 7b07 	vadd.f64	d7, d6, d7
    d8ce:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    d8d2:	ed83 7b00 	vstr	d7, [r3]
  t20_re += t85_im;
    d8d6:	f241 3348 	movw	r3, #4936	; 0x1348
    d8da:	443b      	add	r3, r7
    d8dc:	ed93 6b00 	vldr	d6, [r3]
    d8e0:	f241 3318 	movw	r3, #4888	; 0x1318
    d8e4:	443b      	add	r3, r7
    d8e6:	ed93 7b00 	vldr	d7, [r3]
    d8ea:	ee36 7b07 	vadd.f64	d7, d6, d7
    d8ee:	f241 3348 	movw	r3, #4936	; 0x1348
    d8f2:	443b      	add	r3, r7
    d8f4:	ed83 7b00 	vstr	d7, [r3]
  t20_im += t34_re;
    d8f8:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    d8fc:	ed93 6b00 	vldr	d6, [r3]
    d900:	f241 33b8 	movw	r3, #5048	; 0x13b8
    d904:	443b      	add	r3, r7
    d906:	ed93 7b00 	vldr	d7, [r3]
    d90a:	ee36 7b07 	vadd.f64	d7, d6, d7
    d90e:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    d912:	ed83 7b00 	vstr	d7, [r3]
  t3_im += t34_im;
    d916:	f241 3310 	movw	r3, #4880	; 0x1310
    d91a:	443b      	add	r3, r7
    d91c:	ed93 6b00 	vldr	d6, [r3]
    d920:	f241 33b0 	movw	r3, #5040	; 0x13b0
    d924:	443b      	add	r3, r7
    d926:	ed93 7b00 	vldr	d7, [r3]
    d92a:	ee36 7b07 	vadd.f64	d7, d6, d7
    d92e:	f241 3310 	movw	r3, #4880	; 0x1310
    d932:	443b      	add	r3, r7
    d934:	ed83 7b00 	vstr	d7, [r3]
  t19_re_tmp = t87.re * 0.0;
    d938:	4bc5      	ldr	r3, [pc, #788]	; (dc50 <G_q+0x5b60>)
    d93a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d93e:	443a      	add	r2, r7
    d940:	4413      	add	r3, r2
    d942:	ed93 7b00 	vldr	d7, [r3]
    d946:	f241 2370 	movw	r3, #4720	; 0x1270
    d94a:	443b      	add	r3, r7
    d94c:	ed9f 6bbe 	vldr	d6, [pc, #760]	; dc48 <G_q+0x5b58>
    d950:	ee27 7b06 	vmul.f64	d7, d7, d6
    d954:	ed83 7b00 	vstr	d7, [r3]
  t19_re = (t19.re * 0.0 - t19.im * 0.5) - (t19_re_tmp - t87.im * 0.5);
    d958:	f507 7388 	add.w	r3, r7, #272	; 0x110
    d95c:	ed93 7b00 	vldr	d7, [r3]
    d960:	ed9f 6bb9 	vldr	d6, [pc, #740]	; dc48 <G_q+0x5b58>
    d964:	ee27 6b06 	vmul.f64	d6, d7, d6
    d968:	f507 7388 	add.w	r3, r7, #272	; 0x110
    d96c:	ed93 7b02 	vldr	d7, [r3, #8]
    d970:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    d974:	ee27 7b05 	vmul.f64	d7, d7, d5
    d978:	ee36 6b47 	vsub.f64	d6, d6, d7
    d97c:	4bb4      	ldr	r3, [pc, #720]	; (dc50 <G_q+0x5b60>)
    d97e:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d982:	443a      	add	r2, r7
    d984:	4413      	add	r3, r2
    d986:	ed93 7b02 	vldr	d7, [r3, #8]
    d98a:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    d98e:	ee27 7b05 	vmul.f64	d7, d7, d5
    d992:	f241 2370 	movw	r3, #4720	; 0x1270
    d996:	443b      	add	r3, r7
    d998:	ed93 5b00 	vldr	d5, [r3]
    d99c:	ee35 7b47 	vsub.f64	d7, d5, d7
    d9a0:	ee36 7b47 	vsub.f64	d7, d6, d7
    d9a4:	f241 3358 	movw	r3, #4952	; 0x1358
    d9a8:	443b      	add	r3, r7
    d9aa:	ed83 7b00 	vstr	d7, [r3]
  t19_im_tmp = t87.im * 0.0;
    d9ae:	4ba8      	ldr	r3, [pc, #672]	; (dc50 <G_q+0x5b60>)
    d9b0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d9b4:	443a      	add	r2, r7
    d9b6:	4413      	add	r3, r2
    d9b8:	ed93 7b02 	vldr	d7, [r3, #8]
    d9bc:	f241 2368 	movw	r3, #4712	; 0x1268
    d9c0:	443b      	add	r3, r7
    d9c2:	ed9f 6ba1 	vldr	d6, [pc, #644]	; dc48 <G_q+0x5b58>
    d9c6:	ee27 7b06 	vmul.f64	d7, d7, d6
    d9ca:	ed83 7b00 	vstr	d7, [r3]
  t19_im = (t19.re * 0.5 + t19.im * 0.0) - (t87.re * 0.5 + t19_im_tmp);
    d9ce:	f507 7388 	add.w	r3, r7, #272	; 0x110
    d9d2:	ed93 7b00 	vldr	d7, [r3]
    d9d6:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    d9da:	ee27 6b06 	vmul.f64	d6, d7, d6
    d9de:	f507 7388 	add.w	r3, r7, #272	; 0x110
    d9e2:	ed93 7b02 	vldr	d7, [r3, #8]
    d9e6:	ed9f 5b98 	vldr	d5, [pc, #608]	; dc48 <G_q+0x5b58>
    d9ea:	ee27 7b05 	vmul.f64	d7, d7, d5
    d9ee:	ee36 6b07 	vadd.f64	d6, d6, d7
    d9f2:	4b97      	ldr	r3, [pc, #604]	; (dc50 <G_q+0x5b60>)
    d9f4:	f241 32d0 	movw	r2, #5072	; 0x13d0
    d9f8:	443a      	add	r2, r7
    d9fa:	4413      	add	r3, r2
    d9fc:	ed93 7b00 	vldr	d7, [r3]
    da00:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    da04:	ee27 5b05 	vmul.f64	d5, d7, d5
    da08:	f241 2368 	movw	r3, #4712	; 0x1268
    da0c:	443b      	add	r3, r7
    da0e:	ed93 7b00 	vldr	d7, [r3]
    da12:	ee35 7b07 	vadd.f64	d7, d5, d7
    da16:	ee36 7b47 	vsub.f64	d7, d6, d7
    da1a:	f241 3350 	movw	r3, #4944	; 0x1350
    da1e:	443b      	add	r3, r7
    da20:	ed83 7b00 	vstr	d7, [r3]
  t8_re = (t13_re * t13_im - t8_im * t16_re) + (t16_im * t20_im - t20_re * t3_im);
    da24:	f241 3378 	movw	r3, #4984	; 0x1378
    da28:	443b      	add	r3, r7
    da2a:	ed93 6b00 	vldr	d6, [r3]
    da2e:	f241 3370 	movw	r3, #4976	; 0x1370
    da32:	443b      	add	r3, r7
    da34:	ed93 7b00 	vldr	d7, [r3]
    da38:	ee26 6b07 	vmul.f64	d6, d6, d7
    da3c:	f507 5399 	add.w	r3, r7, #4896	; 0x1320
    da40:	ed93 5b00 	vldr	d5, [r3]
    da44:	f241 3368 	movw	r3, #4968	; 0x1368
    da48:	443b      	add	r3, r7
    da4a:	ed93 7b00 	vldr	d7, [r3]
    da4e:	ee25 7b07 	vmul.f64	d7, d5, d7
    da52:	ee36 6b47 	vsub.f64	d6, d6, d7
    da56:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    da5a:	ed93 5b00 	vldr	d5, [r3]
    da5e:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    da62:	ed93 7b00 	vldr	d7, [r3]
    da66:	ee25 5b07 	vmul.f64	d5, d5, d7
    da6a:	f241 3348 	movw	r3, #4936	; 0x1348
    da6e:	443b      	add	r3, r7
    da70:	ed93 4b00 	vldr	d4, [r3]
    da74:	f241 3310 	movw	r3, #4880	; 0x1310
    da78:	443b      	add	r3, r7
    da7a:	ed93 7b00 	vldr	d7, [r3]
    da7e:	ee24 7b07 	vmul.f64	d7, d4, d7
    da82:	ee35 7b47 	vsub.f64	d7, d5, d7
    da86:	f507 5393 	add.w	r3, r7, #4704	; 0x1260
    da8a:	ee36 7b07 	vadd.f64	d7, d6, d7
    da8e:	ed83 7b00 	vstr	d7, [r3]
  t8_im = (t13_re * t16_re + t8_im * t13_im) + (t16_im * t3_im + t20_re * t20_im);
    da92:	f241 3378 	movw	r3, #4984	; 0x1378
    da96:	443b      	add	r3, r7
    da98:	ed93 6b00 	vldr	d6, [r3]
    da9c:	f241 3368 	movw	r3, #4968	; 0x1368
    daa0:	443b      	add	r3, r7
    daa2:	ed93 7b00 	vldr	d7, [r3]
    daa6:	ee26 6b07 	vmul.f64	d6, d6, d7
    daaa:	f507 5399 	add.w	r3, r7, #4896	; 0x1320
    daae:	ed93 5b00 	vldr	d5, [r3]
    dab2:	f241 3370 	movw	r3, #4976	; 0x1370
    dab6:	443b      	add	r3, r7
    dab8:	ed93 7b00 	vldr	d7, [r3]
    dabc:	ee25 7b07 	vmul.f64	d7, d5, d7
    dac0:	ee36 6b07 	vadd.f64	d6, d6, d7
    dac4:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    dac8:	ed93 5b00 	vldr	d5, [r3]
    dacc:	f241 3310 	movw	r3, #4880	; 0x1310
    dad0:	443b      	add	r3, r7
    dad2:	ed93 7b00 	vldr	d7, [r3]
    dad6:	ee25 5b07 	vmul.f64	d5, d5, d7
    dada:	f241 3348 	movw	r3, #4936	; 0x1348
    dade:	443b      	add	r3, r7
    dae0:	ed93 4b00 	vldr	d4, [r3]
    dae4:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    dae8:	ed93 7b00 	vldr	d7, [r3]
    daec:	ee24 7b07 	vmul.f64	d7, d4, d7
    daf0:	ee35 7b07 	vadd.f64	d7, d5, d7
    daf4:	ee36 7b07 	vadd.f64	d7, d6, d7
    daf8:	f507 5399 	add.w	r3, r7, #4896	; 0x1320
    dafc:	ed83 7b00 	vstr	d7, [r3]
  if (t41.im == 0.0) {
    db00:	f507 73a8 	add.w	r3, r7, #336	; 0x150
    db04:	ed93 7b02 	vldr	d7, [r3, #8]
    db08:	eeb5 7b40 	vcmp.f64	d7, #0.0
    db0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    db10:	d115      	bne.n	db3e <G_q+0x5a4e>
    t41_re = t41.re / 2.0;
    db12:	f507 73a8 	add.w	r3, r7, #336	; 0x150
    db16:	ed93 6b00 	vldr	d6, [r3]
    db1a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    db1e:	ee86 7b05 	vdiv.f64	d7, d6, d5
    db22:	f241 3308 	movw	r3, #4872	; 0x1308
    db26:	443b      	add	r3, r7
    db28:	ed83 7b00 	vstr	d7, [r3]
    t41_im = 0.0;
    db2c:	f04f 0300 	mov.w	r3, #0
    db30:	f04f 0400 	mov.w	r4, #0
    db34:	f507 5298 	add.w	r2, r7, #4864	; 0x1300
    db38:	e9c2 3400 	strd	r3, r4, [r2]
    db3c:	e037      	b.n	dbae <G_q+0x5abe>
  } else if (t41.re == 0.0) {
    db3e:	f507 73a8 	add.w	r3, r7, #336	; 0x150
    db42:	ed93 7b00 	vldr	d7, [r3]
    db46:	eeb5 7b40 	vcmp.f64	d7, #0.0
    db4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    db4e:	d115      	bne.n	db7c <G_q+0x5a8c>
    t41_re = 0.0;
    db50:	f04f 0300 	mov.w	r3, #0
    db54:	f04f 0400 	mov.w	r4, #0
    db58:	f241 3208 	movw	r2, #4872	; 0x1308
    db5c:	443a      	add	r2, r7
    db5e:	e9c2 3400 	strd	r3, r4, [r2]
    t41_im = t41.im / 2.0;
    db62:	f507 73a8 	add.w	r3, r7, #336	; 0x150
    db66:	ed93 6b02 	vldr	d6, [r3, #8]
    db6a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    db6e:	ee86 7b05 	vdiv.f64	d7, d6, d5
    db72:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
    db76:	ed83 7b00 	vstr	d7, [r3]
    db7a:	e018      	b.n	dbae <G_q+0x5abe>
  } else {
    t41_re = t41.re / 2.0;
    db7c:	f507 73a8 	add.w	r3, r7, #336	; 0x150
    db80:	ed93 6b00 	vldr	d6, [r3]
    db84:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    db88:	ee86 7b05 	vdiv.f64	d7, d6, d5
    db8c:	f241 3308 	movw	r3, #4872	; 0x1308
    db90:	443b      	add	r3, r7
    db92:	ed83 7b00 	vstr	d7, [r3]
    t41_im = t41.im / 2.0;
    db96:	f507 73a8 	add.w	r3, r7, #336	; 0x150
    db9a:	ed93 6b02 	vldr	d6, [r3, #8]
    db9e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    dba2:	ee86 7b05 	vdiv.f64	d7, d6, d5
    dba6:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
    dbaa:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t42.im == 0.0) {
    dbae:	4b29      	ldr	r3, [pc, #164]	; (dc54 <G_q+0x5b64>)
    dbb0:	f241 32d0 	movw	r2, #5072	; 0x13d0
    dbb4:	443a      	add	r2, r7
    dbb6:	4413      	add	r3, r2
    dbb8:	ed93 7b02 	vldr	d7, [r3, #8]
    dbbc:	eeb5 7b40 	vcmp.f64	d7, #0.0
    dbc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dbc4:	d118      	bne.n	dbf8 <G_q+0x5b08>
    t16_re = t42.re / 2.0;
    dbc6:	4b23      	ldr	r3, [pc, #140]	; (dc54 <G_q+0x5b64>)
    dbc8:	f241 32d0 	movw	r2, #5072	; 0x13d0
    dbcc:	443a      	add	r2, r7
    dbce:	4413      	add	r3, r2
    dbd0:	ed93 6b00 	vldr	d6, [r3]
    dbd4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    dbd8:	ee86 7b05 	vdiv.f64	d7, d6, d5
    dbdc:	f241 3368 	movw	r3, #4968	; 0x1368
    dbe0:	443b      	add	r3, r7
    dbe2:	ed83 7b00 	vstr	d7, [r3]
    t16_im = 0.0;
    dbe6:	f04f 0300 	mov.w	r3, #0
    dbea:	f04f 0400 	mov.w	r4, #0
    dbee:	f507 529b 	add.w	r2, r7, #4960	; 0x1360
    dbf2:	e9c2 3400 	strd	r3, r4, [r2]
    dbf6:	e04e      	b.n	dc96 <G_q+0x5ba6>
  } else if (t42.re == 0.0) {
    dbf8:	4b16      	ldr	r3, [pc, #88]	; (dc54 <G_q+0x5b64>)
    dbfa:	f241 32d0 	movw	r2, #5072	; 0x13d0
    dbfe:	443a      	add	r2, r7
    dc00:	4413      	add	r3, r2
    dc02:	ed93 7b00 	vldr	d7, [r3]
    dc06:	eeb5 7b40 	vcmp.f64	d7, #0.0
    dc0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dc0e:	d123      	bne.n	dc58 <G_q+0x5b68>
    t16_re = 0.0;
    dc10:	f04f 0300 	mov.w	r3, #0
    dc14:	f04f 0400 	mov.w	r4, #0
    dc18:	f241 3268 	movw	r2, #4968	; 0x1368
    dc1c:	443a      	add	r2, r7
    dc1e:	e9c2 3400 	strd	r3, r4, [r2]
    t16_im = t42.im / 2.0;
    dc22:	4b0c      	ldr	r3, [pc, #48]	; (dc54 <G_q+0x5b64>)
    dc24:	f241 32d0 	movw	r2, #5072	; 0x13d0
    dc28:	443a      	add	r2, r7
    dc2a:	4413      	add	r3, r2
    dc2c:	ed93 6b02 	vldr	d6, [r3, #8]
    dc30:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    dc34:	ee86 7b05 	vdiv.f64	d7, d6, d5
    dc38:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    dc3c:	ed83 7b00 	vstr	d7, [r3]
    dc40:	e029      	b.n	dc96 <G_q+0x5ba6>
    dc42:	bf00      	nop
    dc44:	f3af 8000 	nop.w
	...
    dc50:	ffffedd0 	.word	0xffffedd0
    dc54:	ffffed90 	.word	0xffffed90
  } else {
    t16_re = t42.re / 2.0;
    dc58:	4b5a      	ldr	r3, [pc, #360]	; (ddc4 <G_q+0x5cd4>)
    dc5a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    dc5e:	443a      	add	r2, r7
    dc60:	4413      	add	r3, r2
    dc62:	ed93 6b00 	vldr	d6, [r3]
    dc66:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    dc6a:	ee86 7b05 	vdiv.f64	d7, d6, d5
    dc6e:	f241 3368 	movw	r3, #4968	; 0x1368
    dc72:	443b      	add	r3, r7
    dc74:	ed83 7b00 	vstr	d7, [r3]
    t16_im = t42.im / 2.0;
    dc78:	4b52      	ldr	r3, [pc, #328]	; (ddc4 <G_q+0x5cd4>)
    dc7a:	f241 32d0 	movw	r2, #5072	; 0x13d0
    dc7e:	443a      	add	r2, r7
    dc80:	4413      	add	r3, r2
    dc82:	ed93 6b02 	vldr	d6, [r3, #8]
    dc86:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    dc8a:	ee86 7b05 	vdiv.f64	d7, d6, d5
    dc8e:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    dc92:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t45.im == 0.0) {
    dc96:	f507 6339 	add.w	r3, r7, #2960	; 0xb90
    dc9a:	ed93 7b02 	vldr	d7, [r3, #8]
    dc9e:	eeb5 7b40 	vcmp.f64	d7, #0.0
    dca2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dca6:	d115      	bne.n	dcd4 <G_q+0x5be4>
    t20_re = t45.re / 2.0;
    dca8:	f507 6339 	add.w	r3, r7, #2960	; 0xb90
    dcac:	ed93 6b00 	vldr	d6, [r3]
    dcb0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    dcb4:	ee86 7b05 	vdiv.f64	d7, d6, d5
    dcb8:	f241 3348 	movw	r3, #4936	; 0x1348
    dcbc:	443b      	add	r3, r7
    dcbe:	ed83 7b00 	vstr	d7, [r3]
    t20_im = 0.0;
    dcc2:	f04f 0300 	mov.w	r3, #0
    dcc6:	f04f 0400 	mov.w	r4, #0
    dcca:	f507 529a 	add.w	r2, r7, #4928	; 0x1340
    dcce:	e9c2 3400 	strd	r3, r4, [r2]
    dcd2:	e037      	b.n	dd44 <G_q+0x5c54>
  } else if (t45.re == 0.0) {
    dcd4:	f507 6339 	add.w	r3, r7, #2960	; 0xb90
    dcd8:	ed93 7b00 	vldr	d7, [r3]
    dcdc:	eeb5 7b40 	vcmp.f64	d7, #0.0
    dce0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dce4:	d115      	bne.n	dd12 <G_q+0x5c22>
    t20_re = 0.0;
    dce6:	f04f 0300 	mov.w	r3, #0
    dcea:	f04f 0400 	mov.w	r4, #0
    dcee:	f241 3248 	movw	r2, #4936	; 0x1348
    dcf2:	443a      	add	r2, r7
    dcf4:	e9c2 3400 	strd	r3, r4, [r2]
    t20_im = t45.im / 2.0;
    dcf8:	f507 6339 	add.w	r3, r7, #2960	; 0xb90
    dcfc:	ed93 6b02 	vldr	d6, [r3, #8]
    dd00:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    dd04:	ee86 7b05 	vdiv.f64	d7, d6, d5
    dd08:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    dd0c:	ed83 7b00 	vstr	d7, [r3]
    dd10:	e018      	b.n	dd44 <G_q+0x5c54>
  } else {
    t20_re = t45.re / 2.0;
    dd12:	f507 6339 	add.w	r3, r7, #2960	; 0xb90
    dd16:	ed93 6b00 	vldr	d6, [r3]
    dd1a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    dd1e:	ee86 7b05 	vdiv.f64	d7, d6, d5
    dd22:	f241 3348 	movw	r3, #4936	; 0x1348
    dd26:	443b      	add	r3, r7
    dd28:	ed83 7b00 	vstr	d7, [r3]
    t20_im = t45.im / 2.0;
    dd2c:	f507 6339 	add.w	r3, r7, #2960	; 0xb90
    dd30:	ed93 6b02 	vldr	d6, [r3, #8]
    dd34:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    dd38:	ee86 7b05 	vdiv.f64	d7, d6, d5
    dd3c:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    dd40:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t46.im == 0.0) {
    dd44:	f507 633a 	add.w	r3, r7, #2976	; 0xba0
    dd48:	ed93 7b02 	vldr	d7, [r3, #8]
    dd4c:	eeb5 7b40 	vcmp.f64	d7, #0.0
    dd50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dd54:	d116      	bne.n	dd84 <G_q+0x5c94>
    t34_re = t46.re / 2.0;
    dd56:	f507 633a 	add.w	r3, r7, #2976	; 0xba0
    dd5a:	ed93 6b00 	vldr	d6, [r3]
    dd5e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    dd62:	ee86 7b05 	vdiv.f64	d7, d6, d5
    dd66:	f241 33b8 	movw	r3, #5048	; 0x13b8
    dd6a:	443b      	add	r3, r7
    dd6c:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
    dd70:	f04f 0300 	mov.w	r3, #0
    dd74:	f04f 0400 	mov.w	r4, #0
    dd78:	f241 32b0 	movw	r2, #5040	; 0x13b0
    dd7c:	443a      	add	r2, r7
    dd7e:	e9c2 3400 	strd	r3, r4, [r2]
    dd82:	e03b      	b.n	ddfc <G_q+0x5d0c>
  } else if (t46.re == 0.0) {
    dd84:	f507 633a 	add.w	r3, r7, #2976	; 0xba0
    dd88:	ed93 7b00 	vldr	d7, [r3]
    dd8c:	eeb5 7b40 	vcmp.f64	d7, #0.0
    dd90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dd94:	d118      	bne.n	ddc8 <G_q+0x5cd8>
    t34_re = 0.0;
    dd96:	f04f 0300 	mov.w	r3, #0
    dd9a:	f04f 0400 	mov.w	r4, #0
    dd9e:	f241 32b8 	movw	r2, #5048	; 0x13b8
    dda2:	443a      	add	r2, r7
    dda4:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t46.im / 2.0;
    dda8:	f507 633a 	add.w	r3, r7, #2976	; 0xba0
    ddac:	ed93 6b02 	vldr	d6, [r3, #8]
    ddb0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ddb4:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ddb8:	f241 33b0 	movw	r3, #5040	; 0x13b0
    ddbc:	443b      	add	r3, r7
    ddbe:	ed83 7b00 	vstr	d7, [r3]
    ddc2:	e01b      	b.n	ddfc <G_q+0x5d0c>
    ddc4:	ffffed90 	.word	0xffffed90
  } else {
    t34_re = t46.re / 2.0;
    ddc8:	f507 633a 	add.w	r3, r7, #2976	; 0xba0
    ddcc:	ed93 6b00 	vldr	d6, [r3]
    ddd0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ddd4:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ddd8:	f241 33b8 	movw	r3, #5048	; 0x13b8
    dddc:	443b      	add	r3, r7
    ddde:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t46.im / 2.0;
    dde2:	f507 633a 	add.w	r3, r7, #2976	; 0xba0
    dde6:	ed93 6b02 	vldr	d6, [r3, #8]
    ddea:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ddee:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ddf2:	f241 33b0 	movw	r3, #5040	; 0x13b0
    ddf6:	443b      	add	r3, r7
    ddf8:	ed83 7b00 	vstr	d7, [r3]
  }

  t12_re = (t47.re * 0.0 - t47.im * 3.061616997868383E-17) - (t48.re * 0.0 -
    ddfc:	f507 6392 	add.w	r3, r7, #1168	; 0x490
    de00:	ed93 7b00 	vldr	d7, [r3]
    de04:	ed9f 6bf0 	vldr	d6, [pc, #960]	; e1c8 <G_q+0x60d8>
    de08:	ee27 6b06 	vmul.f64	d6, d7, d6
    de0c:	f507 6392 	add.w	r3, r7, #1168	; 0x490
    de10:	ed93 7b02 	vldr	d7, [r3, #8]
    de14:	ed9f 5bee 	vldr	d5, [pc, #952]	; e1d0 <G_q+0x60e0>
    de18:	ee27 7b05 	vmul.f64	d7, d7, d5
    de1c:	ee36 6b47 	vsub.f64	d6, d6, d7
    de20:	f507 6394 	add.w	r3, r7, #1184	; 0x4a0
    de24:	ed93 7b00 	vldr	d7, [r3]
    de28:	ed9f 5be7 	vldr	d5, [pc, #924]	; e1c8 <G_q+0x60d8>
    de2c:	ee27 5b05 	vmul.f64	d5, d7, d5
    t48.im * 3.061616997868383E-17);
    de30:	f507 6394 	add.w	r3, r7, #1184	; 0x4a0
    de34:	ed93 7b02 	vldr	d7, [r3, #8]
    de38:	ed9f 4be5 	vldr	d4, [pc, #916]	; e1d0 <G_q+0x60e0>
    de3c:	ee27 7b04 	vmul.f64	d7, d7, d4
  t12_re = (t47.re * 0.0 - t47.im * 3.061616997868383E-17) - (t48.re * 0.0 -
    de40:	ee35 7b47 	vsub.f64	d7, d5, d7
    de44:	ee36 7b47 	vsub.f64	d7, d6, d7
    de48:	f241 3388 	movw	r3, #5000	; 0x1388
    de4c:	443b      	add	r3, r7
    de4e:	ed83 7b00 	vstr	d7, [r3]
  t12_im = (t47.re * 3.061616997868383E-17 + t47.im * 0.0) - (t48.re *
    de52:	f507 6392 	add.w	r3, r7, #1168	; 0x490
    de56:	ed93 7b00 	vldr	d7, [r3]
    de5a:	ed9f 6bdd 	vldr	d6, [pc, #884]	; e1d0 <G_q+0x60e0>
    de5e:	ee27 6b06 	vmul.f64	d6, d7, d6
    de62:	f507 6392 	add.w	r3, r7, #1168	; 0x490
    de66:	ed93 7b02 	vldr	d7, [r3, #8]
    de6a:	ed9f 5bd7 	vldr	d5, [pc, #860]	; e1c8 <G_q+0x60d8>
    de6e:	ee27 7b05 	vmul.f64	d7, d7, d5
    de72:	ee36 6b07 	vadd.f64	d6, d6, d7
    de76:	f507 6394 	add.w	r3, r7, #1184	; 0x4a0
    de7a:	ed93 7b00 	vldr	d7, [r3]
    de7e:	ed9f 5bd4 	vldr	d5, [pc, #848]	; e1d0 <G_q+0x60e0>
    de82:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t48.im * 0.0);
    de86:	f507 6394 	add.w	r3, r7, #1184	; 0x4a0
    de8a:	ed93 7b02 	vldr	d7, [r3, #8]
    de8e:	ed9f 4bce 	vldr	d4, [pc, #824]	; e1c8 <G_q+0x60d8>
    de92:	ee27 7b04 	vmul.f64	d7, d7, d4
    de96:	ee35 7b07 	vadd.f64	d7, d5, d7
  t12_im = (t47.re * 3.061616997868383E-17 + t47.im * 0.0) - (t48.re *
    de9a:	ee36 7b47 	vsub.f64	d7, d6, d7
    de9e:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    dea2:	ed83 7b00 	vstr	d7, [r3]
  t20_re += t34_re;
    dea6:	f241 3348 	movw	r3, #4936	; 0x1348
    deaa:	443b      	add	r3, r7
    deac:	ed93 6b00 	vldr	d6, [r3]
    deb0:	f241 33b8 	movw	r3, #5048	; 0x13b8
    deb4:	443b      	add	r3, r7
    deb6:	ed93 7b00 	vldr	d7, [r3]
    deba:	ee36 7b07 	vadd.f64	d7, d6, d7
    debe:	f241 3348 	movw	r3, #4936	; 0x1348
    dec2:	443b      	add	r3, r7
    dec4:	ed83 7b00 	vstr	d7, [r3]
  t20_im += t34_im;
    dec8:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    decc:	ed93 6b00 	vldr	d6, [r3]
    ded0:	f241 33b0 	movw	r3, #5040	; 0x13b0
    ded4:	443b      	add	r3, r7
    ded6:	ed93 7b00 	vldr	d7, [r3]
    deda:	ee36 7b07 	vadd.f64	d7, d6, d7
    dede:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    dee2:	ed83 7b00 	vstr	d7, [r3]
  t34_re = t51.re * 3.061616997868383E-17 + t52.re * 3.061616997868383E-17;
    dee6:	f507 6396 	add.w	r3, r7, #1200	; 0x4b0
    deea:	ed93 7b00 	vldr	d7, [r3]
    deee:	ed9f 6bb8 	vldr	d6, [pc, #736]	; e1d0 <G_q+0x60e0>
    def2:	ee27 6b06 	vmul.f64	d6, d7, d6
    def6:	f507 6398 	add.w	r3, r7, #1216	; 0x4c0
    defa:	ed93 7b00 	vldr	d7, [r3]
    defe:	ed9f 5bb4 	vldr	d5, [pc, #720]	; e1d0 <G_q+0x60e0>
    df02:	ee27 7b05 	vmul.f64	d7, d7, d5
    df06:	ee36 7b07 	vadd.f64	d7, d6, d7
    df0a:	f241 33b8 	movw	r3, #5048	; 0x13b8
    df0e:	443b      	add	r3, r7
    df10:	ed83 7b00 	vstr	d7, [r3]
  t34_im = t51.im * 3.061616997868383E-17 + t52.im * 3.061616997868383E-17;
    df14:	f507 6396 	add.w	r3, r7, #1200	; 0x4b0
    df18:	ed93 7b02 	vldr	d7, [r3, #8]
    df1c:	ed9f 6bac 	vldr	d6, [pc, #688]	; e1d0 <G_q+0x60e0>
    df20:	ee27 6b06 	vmul.f64	d6, d7, d6
    df24:	f507 6398 	add.w	r3, r7, #1216	; 0x4c0
    df28:	ed93 7b02 	vldr	d7, [r3, #8]
    df2c:	ed9f 5ba8 	vldr	d5, [pc, #672]	; e1d0 <G_q+0x60e0>
    df30:	ee27 7b05 	vmul.f64	d7, d7, d5
    df34:	ee36 7b07 	vadd.f64	d7, d6, d7
    df38:	f241 33b0 	movw	r3, #5040	; 0x13b0
    df3c:	443b      	add	r3, r7
    df3e:	ed83 7b00 	vstr	d7, [r3]
  t13_re = (t49.re * 0.0 - t49.im * 0.5) - (t50.re * 0.0 - t50.im * 0.5);
    df42:	f507 633b 	add.w	r3, r7, #2992	; 0xbb0
    df46:	ed93 7b00 	vldr	d7, [r3]
    df4a:	ed9f 6b9f 	vldr	d6, [pc, #636]	; e1c8 <G_q+0x60d8>
    df4e:	ee27 6b06 	vmul.f64	d6, d7, d6
    df52:	f507 633b 	add.w	r3, r7, #2992	; 0xbb0
    df56:	ed93 7b02 	vldr	d7, [r3, #8]
    df5a:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    df5e:	ee27 7b05 	vmul.f64	d7, d7, d5
    df62:	ee36 6b47 	vsub.f64	d6, d6, d7
    df66:	f507 633c 	add.w	r3, r7, #3008	; 0xbc0
    df6a:	ed93 7b00 	vldr	d7, [r3]
    df6e:	ed9f 5b96 	vldr	d5, [pc, #600]	; e1c8 <G_q+0x60d8>
    df72:	ee27 5b05 	vmul.f64	d5, d7, d5
    df76:	f507 633c 	add.w	r3, r7, #3008	; 0xbc0
    df7a:	ed93 7b02 	vldr	d7, [r3, #8]
    df7e:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    df82:	ee27 7b04 	vmul.f64	d7, d7, d4
    df86:	ee35 7b47 	vsub.f64	d7, d5, d7
    df8a:	ee36 7b47 	vsub.f64	d7, d6, d7
    df8e:	f241 3378 	movw	r3, #4984	; 0x1378
    df92:	443b      	add	r3, r7
    df94:	ed83 7b00 	vstr	d7, [r3]
  t13_im = (t49.re * 0.5 + t49.im * 0.0) - (t50.re * 0.5 + t50.im * 0.0);
    df98:	f507 633b 	add.w	r3, r7, #2992	; 0xbb0
    df9c:	ed93 7b00 	vldr	d7, [r3]
    dfa0:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    dfa4:	ee27 6b06 	vmul.f64	d6, d7, d6
    dfa8:	f507 633b 	add.w	r3, r7, #2992	; 0xbb0
    dfac:	ed93 7b02 	vldr	d7, [r3, #8]
    dfb0:	ed9f 5b85 	vldr	d5, [pc, #532]	; e1c8 <G_q+0x60d8>
    dfb4:	ee27 7b05 	vmul.f64	d7, d7, d5
    dfb8:	ee36 6b07 	vadd.f64	d6, d6, d7
    dfbc:	f507 633c 	add.w	r3, r7, #3008	; 0xbc0
    dfc0:	ed93 7b00 	vldr	d7, [r3]
    dfc4:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    dfc8:	ee27 5b05 	vmul.f64	d5, d7, d5
    dfcc:	f507 633c 	add.w	r3, r7, #3008	; 0xbc0
    dfd0:	ed93 7b02 	vldr	d7, [r3, #8]
    dfd4:	ed9f 4b7c 	vldr	d4, [pc, #496]	; e1c8 <G_q+0x60d8>
    dfd8:	ee27 7b04 	vmul.f64	d7, d7, d4
    dfdc:	ee35 7b07 	vadd.f64	d7, d5, d7
    dfe0:	ee36 7b47 	vsub.f64	d7, d6, d7
    dfe4:	f241 3370 	movw	r3, #4976	; 0x1370
    dfe8:	443b      	add	r3, r7
    dfea:	ed83 7b00 	vstr	d7, [r3]
  t41_re += t16_re;
    dfee:	f241 3308 	movw	r3, #4872	; 0x1308
    dff2:	443b      	add	r3, r7
    dff4:	ed93 6b00 	vldr	d6, [r3]
    dff8:	f241 3368 	movw	r3, #4968	; 0x1368
    dffc:	443b      	add	r3, r7
    dffe:	ed93 7b00 	vldr	d7, [r3]
    e002:	ee36 7b07 	vadd.f64	d7, d6, d7
    e006:	f241 3308 	movw	r3, #4872	; 0x1308
    e00a:	443b      	add	r3, r7
    e00c:	ed83 7b00 	vstr	d7, [r3]
  t41_im += t16_im;
    e010:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
    e014:	ed93 6b00 	vldr	d6, [r3]
    e018:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    e01c:	ed93 7b00 	vldr	d7, [r3]
    e020:	ee36 7b07 	vadd.f64	d7, d6, d7
    e024:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
    e028:	ed83 7b00 	vstr	d7, [r3]
  t43_re = (((t43.re * 0.0 - t43.im * 6.123233995736766E-17) - (t44.re * 0.0 -
    e02c:	f507 6337 	add.w	r3, r7, #2928	; 0xb70
    e030:	ed93 7b00 	vldr	d7, [r3]
    e034:	ed9f 6b64 	vldr	d6, [pc, #400]	; e1c8 <G_q+0x60d8>
    e038:	ee27 6b06 	vmul.f64	d6, d7, d6
    e03c:	f507 6337 	add.w	r3, r7, #2928	; 0xb70
    e040:	ed93 7b02 	vldr	d7, [r3, #8]
    e044:	ed9f 5b64 	vldr	d5, [pc, #400]	; e1d8 <G_q+0x60e8>
    e048:	ee27 7b05 	vmul.f64	d7, d7, d5
    e04c:	ee36 6b47 	vsub.f64	d6, d6, d7
    e050:	f507 6338 	add.w	r3, r7, #2944	; 0xb80
    e054:	ed93 7b00 	vldr	d7, [r3]
    e058:	ed9f 5b5b 	vldr	d5, [pc, #364]	; e1c8 <G_q+0x60d8>
    e05c:	ee27 5b05 	vmul.f64	d5, d7, d5
              t44.im * 6.123233995736766E-17)) - (t12_re * t20_re - t12_im *
    e060:	f507 6338 	add.w	r3, r7, #2944	; 0xb80
    e064:	ed93 7b02 	vldr	d7, [r3, #8]
    e068:	ed9f 4b5b 	vldr	d4, [pc, #364]	; e1d8 <G_q+0x60e8>
    e06c:	ee27 7b04 	vmul.f64	d7, d7, d4
  t43_re = (((t43.re * 0.0 - t43.im * 6.123233995736766E-17) - (t44.re * 0.0 -
    e070:	ee35 7b47 	vsub.f64	d7, d5, d7
    e074:	ee36 6b47 	vsub.f64	d6, d6, d7
              t44.im * 6.123233995736766E-17)) - (t12_re * t20_re - t12_im *
    e078:	f241 3388 	movw	r3, #5000	; 0x1388
    e07c:	443b      	add	r3, r7
    e07e:	ed93 5b00 	vldr	d5, [r3]
    e082:	f241 3348 	movw	r3, #4936	; 0x1348
    e086:	443b      	add	r3, r7
    e088:	ed93 7b00 	vldr	d7, [r3]
    e08c:	ee25 5b07 	vmul.f64	d5, d5, d7
    e090:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    e094:	ed93 4b00 	vldr	d4, [r3]
    e098:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    e09c:	ed93 7b00 	vldr	d7, [r3]
    e0a0:	ee24 7b07 	vmul.f64	d7, d4, d7
    e0a4:	ee35 7b47 	vsub.f64	d7, d5, d7
    e0a8:	ee36 6b47 	vsub.f64	d6, d6, d7
             t20_im)) + (t34_re * t13_re - t34_im * t13_im);
    e0ac:	f241 33b8 	movw	r3, #5048	; 0x13b8
    e0b0:	443b      	add	r3, r7
    e0b2:	ed93 5b00 	vldr	d5, [r3]
    e0b6:	f241 3378 	movw	r3, #4984	; 0x1378
    e0ba:	443b      	add	r3, r7
    e0bc:	ed93 7b00 	vldr	d7, [r3]
    e0c0:	ee25 5b07 	vmul.f64	d5, d5, d7
    e0c4:	f241 33b0 	movw	r3, #5040	; 0x13b0
    e0c8:	443b      	add	r3, r7
    e0ca:	ed93 4b00 	vldr	d4, [r3]
    e0ce:	f241 3370 	movw	r3, #4976	; 0x1370
    e0d2:	443b      	add	r3, r7
    e0d4:	ed93 7b00 	vldr	d7, [r3]
    e0d8:	ee24 7b07 	vmul.f64	d7, d4, d7
    e0dc:	ee35 7b47 	vsub.f64	d7, d5, d7
  t43_re = (((t43.re * 0.0 - t43.im * 6.123233995736766E-17) - (t44.re * 0.0 -
    e0e0:	f241 2358 	movw	r3, #4696	; 0x1258
    e0e4:	443b      	add	r3, r7
    e0e6:	ee36 7b07 	vadd.f64	d7, d6, d7
    e0ea:	ed83 7b00 	vstr	d7, [r3]
  t43_im = (((t43.re * 6.123233995736766E-17 + t43.im * 0.0) - (t44.re *
    e0ee:	f507 6337 	add.w	r3, r7, #2928	; 0xb70
    e0f2:	ed93 7b00 	vldr	d7, [r3]
    e0f6:	ed9f 6b38 	vldr	d6, [pc, #224]	; e1d8 <G_q+0x60e8>
    e0fa:	ee27 6b06 	vmul.f64	d6, d7, d6
    e0fe:	f507 6337 	add.w	r3, r7, #2928	; 0xb70
    e102:	ed93 7b02 	vldr	d7, [r3, #8]
    e106:	ed9f 5b30 	vldr	d5, [pc, #192]	; e1c8 <G_q+0x60d8>
    e10a:	ee27 7b05 	vmul.f64	d7, d7, d5
    e10e:	ee36 6b07 	vadd.f64	d6, d6, d7
    e112:	f507 6338 	add.w	r3, r7, #2944	; 0xb80
    e116:	ed93 7b00 	vldr	d7, [r3]
    e11a:	ed9f 5b2f 	vldr	d5, [pc, #188]	; e1d8 <G_q+0x60e8>
    e11e:	ee27 5b05 	vmul.f64	d5, d7, d5
              6.123233995736766E-17 + t44.im * 0.0)) - (t12_re * t20_im + t12_im
    e122:	f507 6338 	add.w	r3, r7, #2944	; 0xb80
    e126:	ed93 7b02 	vldr	d7, [r3, #8]
    e12a:	ed9f 4b27 	vldr	d4, [pc, #156]	; e1c8 <G_q+0x60d8>
    e12e:	ee27 7b04 	vmul.f64	d7, d7, d4
    e132:	ee35 7b07 	vadd.f64	d7, d5, d7
  t43_im = (((t43.re * 6.123233995736766E-17 + t43.im * 0.0) - (t44.re *
    e136:	ee36 6b47 	vsub.f64	d6, d6, d7
              6.123233995736766E-17 + t44.im * 0.0)) - (t12_re * t20_im + t12_im
    e13a:	f241 3388 	movw	r3, #5000	; 0x1388
    e13e:	443b      	add	r3, r7
    e140:	ed93 5b00 	vldr	d5, [r3]
    e144:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    e148:	ed93 7b00 	vldr	d7, [r3]
    e14c:	ee25 5b07 	vmul.f64	d5, d5, d7
             * t20_re)) + (t34_re * t13_im + t34_im * t13_re);
    e150:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    e154:	ed93 4b00 	vldr	d4, [r3]
    e158:	f241 3348 	movw	r3, #4936	; 0x1348
    e15c:	443b      	add	r3, r7
    e15e:	ed93 7b00 	vldr	d7, [r3]
    e162:	ee24 7b07 	vmul.f64	d7, d4, d7
              6.123233995736766E-17 + t44.im * 0.0)) - (t12_re * t20_im + t12_im
    e166:	ee35 7b07 	vadd.f64	d7, d5, d7
    e16a:	ee36 6b47 	vsub.f64	d6, d6, d7
             * t20_re)) + (t34_re * t13_im + t34_im * t13_re);
    e16e:	f241 33b8 	movw	r3, #5048	; 0x13b8
    e172:	443b      	add	r3, r7
    e174:	ed93 5b00 	vldr	d5, [r3]
    e178:	f241 3370 	movw	r3, #4976	; 0x1370
    e17c:	443b      	add	r3, r7
    e17e:	ed93 7b00 	vldr	d7, [r3]
    e182:	ee25 5b07 	vmul.f64	d5, d5, d7
    e186:	f241 33b0 	movw	r3, #5040	; 0x13b0
    e18a:	443b      	add	r3, r7
    e18c:	ed93 4b00 	vldr	d4, [r3]
    e190:	f241 3378 	movw	r3, #4984	; 0x1378
    e194:	443b      	add	r3, r7
    e196:	ed93 7b00 	vldr	d7, [r3]
    e19a:	ee24 7b07 	vmul.f64	d7, d4, d7
    e19e:	ee35 7b07 	vadd.f64	d7, d5, d7
  t43_im = (((t43.re * 6.123233995736766E-17 + t43.im * 0.0) - (t44.re *
    e1a2:	ee36 7b07 	vadd.f64	d7, d6, d7
    e1a6:	f241 23f8 	movw	r3, #4856	; 0x12f8
    e1aa:	443b      	add	r3, r7
    e1ac:	ed83 7b00 	vstr	d7, [r3]
  if (t54.im == 0.0) {
    e1b0:	f107 0330 	add.w	r3, r7, #48	; 0x30
    e1b4:	ed93 7b02 	vldr	d7, [r3, #8]
    e1b8:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e1bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e1c0:	d125      	bne.n	e20e <G_q+0x611e>
    e1c2:	e00d      	b.n	e1e0 <G_q+0x60f0>
    e1c4:	f3af 8000 	nop.w
	...
    e1d0:	33145c07 	.word	0x33145c07
    e1d4:	3c81a626 	.word	0x3c81a626
    e1d8:	33145c07 	.word	0x33145c07
    e1dc:	3c91a626 	.word	0x3c91a626
    b_t54_re = t54.re / 2.0;
    e1e0:	f107 0330 	add.w	r3, r7, #48	; 0x30
    e1e4:	ed93 6b00 	vldr	d6, [r3]
    e1e8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e1ec:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e1f0:	f241 23f0 	movw	r3, #4848	; 0x12f0
    e1f4:	443b      	add	r3, r7
    e1f6:	ed83 7b00 	vstr	d7, [r3]
    b_t54_im = 0.0;
    e1fa:	f04f 0300 	mov.w	r3, #0
    e1fe:	f04f 0400 	mov.w	r4, #0
    e202:	f241 22e8 	movw	r2, #4840	; 0x12e8
    e206:	443a      	add	r2, r7
    e208:	e9c2 3400 	strd	r3, r4, [r2]
    e20c:	e039      	b.n	e282 <G_q+0x6192>
  } else if (t54.re == 0.0) {
    e20e:	f107 0330 	add.w	r3, r7, #48	; 0x30
    e212:	ed93 7b00 	vldr	d7, [r3]
    e216:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e21a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e21e:	d116      	bne.n	e24e <G_q+0x615e>
    b_t54_re = 0.0;
    e220:	f04f 0300 	mov.w	r3, #0
    e224:	f04f 0400 	mov.w	r4, #0
    e228:	f241 22f0 	movw	r2, #4848	; 0x12f0
    e22c:	443a      	add	r2, r7
    e22e:	e9c2 3400 	strd	r3, r4, [r2]
    b_t54_im = t54.im / 2.0;
    e232:	f107 0330 	add.w	r3, r7, #48	; 0x30
    e236:	ed93 6b02 	vldr	d6, [r3, #8]
    e23a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e23e:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e242:	f241 23e8 	movw	r3, #4840	; 0x12e8
    e246:	443b      	add	r3, r7
    e248:	ed83 7b00 	vstr	d7, [r3]
    e24c:	e019      	b.n	e282 <G_q+0x6192>
  } else {
    b_t54_re = t54.re / 2.0;
    e24e:	f107 0330 	add.w	r3, r7, #48	; 0x30
    e252:	ed93 6b00 	vldr	d6, [r3]
    e256:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e25a:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e25e:	f241 23f0 	movw	r3, #4848	; 0x12f0
    e262:	443b      	add	r3, r7
    e264:	ed83 7b00 	vstr	d7, [r3]
    b_t54_im = t54.im / 2.0;
    e268:	f107 0330 	add.w	r3, r7, #48	; 0x30
    e26c:	ed93 6b02 	vldr	d6, [r3, #8]
    e270:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e274:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e278:	f241 23e8 	movw	r3, #4840	; 0x12e8
    e27c:	443b      	add	r3, r7
    e27e:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t55.im == 0.0) {
    e282:	4bdd      	ldr	r3, [pc, #884]	; (e5f8 <G_q+0x6508>)
    e284:	f241 32d0 	movw	r2, #5072	; 0x13d0
    e288:	443a      	add	r2, r7
    e28a:	4413      	add	r3, r2
    e28c:	ed93 7b02 	vldr	d7, [r3, #8]
    e290:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e294:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e298:	d118      	bne.n	e2cc <G_q+0x61dc>
    t55_re = t55.re / 2.0;
    e29a:	4bd7      	ldr	r3, [pc, #860]	; (e5f8 <G_q+0x6508>)
    e29c:	f241 32d0 	movw	r2, #5072	; 0x13d0
    e2a0:	443a      	add	r2, r7
    e2a2:	4413      	add	r3, r2
    e2a4:	ed93 6b00 	vldr	d6, [r3]
    e2a8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e2ac:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e2b0:	f507 5397 	add.w	r3, r7, #4832	; 0x12e0
    e2b4:	ed83 7b00 	vstr	d7, [r3]
    t55_im = 0.0;
    e2b8:	f04f 0300 	mov.w	r3, #0
    e2bc:	f04f 0400 	mov.w	r4, #0
    e2c0:	f241 22d8 	movw	r2, #4824	; 0x12d8
    e2c4:	443a      	add	r2, r7
    e2c6:	e9c2 3400 	strd	r3, r4, [r2]
    e2ca:	e043      	b.n	e354 <G_q+0x6264>
  } else if (t55.re == 0.0) {
    e2cc:	4bca      	ldr	r3, [pc, #808]	; (e5f8 <G_q+0x6508>)
    e2ce:	f241 32d0 	movw	r2, #5072	; 0x13d0
    e2d2:	443a      	add	r2, r7
    e2d4:	4413      	add	r3, r2
    e2d6:	ed93 7b00 	vldr	d7, [r3]
    e2da:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e2de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e2e2:	d118      	bne.n	e316 <G_q+0x6226>
    t55_re = 0.0;
    e2e4:	f04f 0300 	mov.w	r3, #0
    e2e8:	f04f 0400 	mov.w	r4, #0
    e2ec:	f507 5297 	add.w	r2, r7, #4832	; 0x12e0
    e2f0:	e9c2 3400 	strd	r3, r4, [r2]
    t55_im = t55.im / 2.0;
    e2f4:	4bc0      	ldr	r3, [pc, #768]	; (e5f8 <G_q+0x6508>)
    e2f6:	f241 32d0 	movw	r2, #5072	; 0x13d0
    e2fa:	443a      	add	r2, r7
    e2fc:	4413      	add	r3, r2
    e2fe:	ed93 6b02 	vldr	d6, [r3, #8]
    e302:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e306:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e30a:	f241 23d8 	movw	r3, #4824	; 0x12d8
    e30e:	443b      	add	r3, r7
    e310:	ed83 7b00 	vstr	d7, [r3]
    e314:	e01e      	b.n	e354 <G_q+0x6264>
  } else {
    t55_re = t55.re / 2.0;
    e316:	4bb8      	ldr	r3, [pc, #736]	; (e5f8 <G_q+0x6508>)
    e318:	f241 32d0 	movw	r2, #5072	; 0x13d0
    e31c:	443a      	add	r2, r7
    e31e:	4413      	add	r3, r2
    e320:	ed93 6b00 	vldr	d6, [r3]
    e324:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e328:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e32c:	f507 5397 	add.w	r3, r7, #4832	; 0x12e0
    e330:	ed83 7b00 	vstr	d7, [r3]
    t55_im = t55.im / 2.0;
    e334:	4bb0      	ldr	r3, [pc, #704]	; (e5f8 <G_q+0x6508>)
    e336:	f241 32d0 	movw	r2, #5072	; 0x13d0
    e33a:	443a      	add	r2, r7
    e33c:	4413      	add	r3, r2
    e33e:	ed93 6b02 	vldr	d6, [r3, #8]
    e342:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e346:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e34a:	f241 23d8 	movw	r3, #4824	; 0x12d8
    e34e:	443b      	add	r3, r7
    e350:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t70.im == 0.0) {
    e354:	f507 6345 	add.w	r3, r7, #3152	; 0xc50
    e358:	ed93 7b02 	vldr	d7, [r3, #8]
    e35c:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e360:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e364:	d116      	bne.n	e394 <G_q+0x62a4>
    t70_re = t70.re / 2.0;
    e366:	f507 6345 	add.w	r3, r7, #3152	; 0xc50
    e36a:	ed93 6b00 	vldr	d6, [r3]
    e36e:	f241 23d0 	movw	r3, #4816	; 0x12d0
    e372:	443b      	add	r3, r7
    e374:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e378:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e37c:	ed83 7b00 	vstr	d7, [r3]
    t70_im = 0.0;
    e380:	f241 22c8 	movw	r2, #4808	; 0x12c8
    e384:	443a      	add	r2, r7
    e386:	f04f 0300 	mov.w	r3, #0
    e38a:	f04f 0400 	mov.w	r4, #0
    e38e:	e9c2 3400 	strd	r3, r4, [r2]
    e392:	e039      	b.n	e408 <G_q+0x6318>
  } else if (t70.re == 0.0) {
    e394:	f507 6345 	add.w	r3, r7, #3152	; 0xc50
    e398:	ed93 7b00 	vldr	d7, [r3]
    e39c:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e3a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e3a4:	d116      	bne.n	e3d4 <G_q+0x62e4>
    t70_re = 0.0;
    e3a6:	f241 22d0 	movw	r2, #4816	; 0x12d0
    e3aa:	443a      	add	r2, r7
    e3ac:	f04f 0300 	mov.w	r3, #0
    e3b0:	f04f 0400 	mov.w	r4, #0
    e3b4:	e9c2 3400 	strd	r3, r4, [r2]
    t70_im = t70.im / 2.0;
    e3b8:	f507 6345 	add.w	r3, r7, #3152	; 0xc50
    e3bc:	ed93 6b02 	vldr	d6, [r3, #8]
    e3c0:	f241 23c8 	movw	r3, #4808	; 0x12c8
    e3c4:	443b      	add	r3, r7
    e3c6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e3ca:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e3ce:	ed83 7b00 	vstr	d7, [r3]
    e3d2:	e019      	b.n	e408 <G_q+0x6318>
  } else {
    t70_re = t70.re / 2.0;
    e3d4:	f507 6345 	add.w	r3, r7, #3152	; 0xc50
    e3d8:	ed93 6b00 	vldr	d6, [r3]
    e3dc:	f241 23d0 	movw	r3, #4816	; 0x12d0
    e3e0:	443b      	add	r3, r7
    e3e2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e3e6:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e3ea:	ed83 7b00 	vstr	d7, [r3]
    t70_im = t70.im / 2.0;
    e3ee:	f507 6345 	add.w	r3, r7, #3152	; 0xc50
    e3f2:	ed93 6b02 	vldr	d6, [r3, #8]
    e3f6:	f241 23c8 	movw	r3, #4808	; 0x12c8
    e3fa:	443b      	add	r3, r7
    e3fc:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e400:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e404:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t71.im == 0.0) {
    e408:	f507 6346 	add.w	r3, r7, #3168	; 0xc60
    e40c:	ed93 7b02 	vldr	d7, [r3, #8]
    e410:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e418:	d116      	bne.n	e448 <G_q+0x6358>
    t34_re = t71.re / 2.0;
    e41a:	f507 6346 	add.w	r3, r7, #3168	; 0xc60
    e41e:	ed93 6b00 	vldr	d6, [r3]
    e422:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e426:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e42a:	f241 33b8 	movw	r3, #5048	; 0x13b8
    e42e:	443b      	add	r3, r7
    e430:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
    e434:	f04f 0300 	mov.w	r3, #0
    e438:	f04f 0400 	mov.w	r4, #0
    e43c:	f241 32b0 	movw	r2, #5040	; 0x13b0
    e440:	443a      	add	r2, r7
    e442:	e9c2 3400 	strd	r3, r4, [r2]
    e446:	e039      	b.n	e4bc <G_q+0x63cc>
  } else if (t71.re == 0.0) {
    e448:	f507 6346 	add.w	r3, r7, #3168	; 0xc60
    e44c:	ed93 7b00 	vldr	d7, [r3]
    e450:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e458:	d116      	bne.n	e488 <G_q+0x6398>
    t34_re = 0.0;
    e45a:	f04f 0300 	mov.w	r3, #0
    e45e:	f04f 0400 	mov.w	r4, #0
    e462:	f241 32b8 	movw	r2, #5048	; 0x13b8
    e466:	443a      	add	r2, r7
    e468:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t71.im / 2.0;
    e46c:	f507 6346 	add.w	r3, r7, #3168	; 0xc60
    e470:	ed93 6b02 	vldr	d6, [r3, #8]
    e474:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e478:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e47c:	f241 33b0 	movw	r3, #5040	; 0x13b0
    e480:	443b      	add	r3, r7
    e482:	ed83 7b00 	vstr	d7, [r3]
    e486:	e019      	b.n	e4bc <G_q+0x63cc>
  } else {
    t34_re = t71.re / 2.0;
    e488:	f507 6346 	add.w	r3, r7, #3168	; 0xc60
    e48c:	ed93 6b00 	vldr	d6, [r3]
    e490:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e494:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e498:	f241 33b8 	movw	r3, #5048	; 0x13b8
    e49c:	443b      	add	r3, r7
    e49e:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t71.im / 2.0;
    e4a2:	f507 6346 	add.w	r3, r7, #3168	; 0xc60
    e4a6:	ed93 6b02 	vldr	d6, [r3, #8]
    e4aa:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e4ae:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e4b2:	f241 33b0 	movw	r3, #5040	; 0x13b0
    e4b6:	443b      	add	r3, r7
    e4b8:	ed83 7b00 	vstr	d7, [r3]
  }

  t70_re += t34_re;
    e4bc:	f241 23d0 	movw	r3, #4816	; 0x12d0
    e4c0:	443b      	add	r3, r7
    e4c2:	f241 22d0 	movw	r2, #4816	; 0x12d0
    e4c6:	443a      	add	r2, r7
    e4c8:	ed92 6b00 	vldr	d6, [r2]
    e4cc:	f241 32b8 	movw	r2, #5048	; 0x13b8
    e4d0:	443a      	add	r2, r7
    e4d2:	ed92 7b00 	vldr	d7, [r2]
    e4d6:	ee36 7b07 	vadd.f64	d7, d6, d7
    e4da:	ed83 7b00 	vstr	d7, [r3]
  t70_im += t34_im;
    e4de:	f241 23c8 	movw	r3, #4808	; 0x12c8
    e4e2:	443b      	add	r3, r7
    e4e4:	f241 22c8 	movw	r2, #4808	; 0x12c8
    e4e8:	443a      	add	r2, r7
    e4ea:	ed92 6b00 	vldr	d6, [r2]
    e4ee:	f241 32b0 	movw	r2, #5040	; 0x13b0
    e4f2:	443a      	add	r2, r7
    e4f4:	ed92 7b00 	vldr	d7, [r2]
    e4f8:	ee36 7b07 	vadd.f64	d7, d6, d7
    e4fc:	ed83 7b00 	vstr	d7, [r3]
  t72_re = (t72.re * 0.0 - t72.im * 0.5) - (t73.re * 0.0 - t73.im * 0.5);
    e500:	f507 63a2 	add.w	r3, r7, #1296	; 0x510
    e504:	ed93 7b00 	vldr	d7, [r3]
    e508:	ed9f 6b39 	vldr	d6, [pc, #228]	; e5f0 <G_q+0x6500>
    e50c:	ee27 6b06 	vmul.f64	d6, d7, d6
    e510:	f507 63a2 	add.w	r3, r7, #1296	; 0x510
    e514:	ed93 7b02 	vldr	d7, [r3, #8]
    e518:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    e51c:	ee27 7b05 	vmul.f64	d7, d7, d5
    e520:	ee36 6b47 	vsub.f64	d6, d6, d7
    e524:	f507 63a4 	add.w	r3, r7, #1312	; 0x520
    e528:	ed93 7b00 	vldr	d7, [r3]
    e52c:	ed9f 5b30 	vldr	d5, [pc, #192]	; e5f0 <G_q+0x6500>
    e530:	ee27 5b05 	vmul.f64	d5, d7, d5
    e534:	f507 63a4 	add.w	r3, r7, #1312	; 0x520
    e538:	ed93 7b02 	vldr	d7, [r3, #8]
    e53c:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    e540:	ee27 7b04 	vmul.f64	d7, d7, d4
    e544:	ee35 7b47 	vsub.f64	d7, d5, d7
    e548:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
    e54c:	ee36 7b47 	vsub.f64	d7, d6, d7
    e550:	ed83 7b00 	vstr	d7, [r3]
  b_t10_re = (t72.re * 0.5 + t72.im * 0.0) - (t73.re * 0.5 + t73.im * 0.0);
    e554:	f507 63a2 	add.w	r3, r7, #1296	; 0x510
    e558:	ed93 7b00 	vldr	d7, [r3]
    e55c:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    e560:	ee27 6b06 	vmul.f64	d6, d7, d6
    e564:	f507 63a2 	add.w	r3, r7, #1296	; 0x510
    e568:	ed93 7b02 	vldr	d7, [r3, #8]
    e56c:	ed9f 5b20 	vldr	d5, [pc, #128]	; e5f0 <G_q+0x6500>
    e570:	ee27 7b05 	vmul.f64	d7, d7, d5
    e574:	ee36 6b07 	vadd.f64	d6, d6, d7
    e578:	f507 63a4 	add.w	r3, r7, #1312	; 0x520
    e57c:	ed93 7b00 	vldr	d7, [r3]
    e580:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    e584:	ee27 5b05 	vmul.f64	d5, d7, d5
    e588:	f507 63a4 	add.w	r3, r7, #1312	; 0x520
    e58c:	ed93 7b02 	vldr	d7, [r3, #8]
    e590:	ed9f 4b17 	vldr	d4, [pc, #92]	; e5f0 <G_q+0x6500>
    e594:	ee27 7b04 	vmul.f64	d7, d7, d4
    e598:	ee35 7b07 	vadd.f64	d7, d5, d7
    e59c:	ee36 7b47 	vsub.f64	d7, d6, d7
    e5a0:	f241 3338 	movw	r3, #4920	; 0x1338
    e5a4:	443b      	add	r3, r7
    e5a6:	ed83 7b00 	vstr	d7, [r3]
  if (t74.im == 0.0) {
    e5aa:	f507 63a6 	add.w	r3, r7, #1328	; 0x530
    e5ae:	ed93 7b02 	vldr	d7, [r3, #8]
    e5b2:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e5b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e5ba:	d11f      	bne.n	e5fc <G_q+0x650c>
    t74_re = t74.re / 2.0;
    e5bc:	f507 63a6 	add.w	r3, r7, #1328	; 0x530
    e5c0:	ed93 6b00 	vldr	d6, [r3]
    e5c4:	f241 23b8 	movw	r3, #4792	; 0x12b8
    e5c8:	443b      	add	r3, r7
    e5ca:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e5ce:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e5d2:	ed83 7b00 	vstr	d7, [r3]
    t74_im = 0.0;
    e5d6:	f241 22b0 	movw	r2, #4784	; 0x12b0
    e5da:	443a      	add	r2, r7
    e5dc:	f04f 0300 	mov.w	r3, #0
    e5e0:	f04f 0400 	mov.w	r4, #0
    e5e4:	e9c2 3400 	strd	r3, r4, [r2]
    e5e8:	e042      	b.n	e670 <G_q+0x6580>
    e5ea:	bf00      	nop
    e5ec:	f3af 8000 	nop.w
	...
    e5f8:	ffffec70 	.word	0xffffec70
  } else if (t74.re == 0.0) {
    e5fc:	f507 63a6 	add.w	r3, r7, #1328	; 0x530
    e600:	ed93 7b00 	vldr	d7, [r3]
    e604:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e608:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e60c:	d116      	bne.n	e63c <G_q+0x654c>
    t74_re = 0.0;
    e60e:	f241 22b8 	movw	r2, #4792	; 0x12b8
    e612:	443a      	add	r2, r7
    e614:	f04f 0300 	mov.w	r3, #0
    e618:	f04f 0400 	mov.w	r4, #0
    e61c:	e9c2 3400 	strd	r3, r4, [r2]
    t74_im = t74.im / 2.0;
    e620:	f507 63a6 	add.w	r3, r7, #1328	; 0x530
    e624:	ed93 6b02 	vldr	d6, [r3, #8]
    e628:	f241 23b0 	movw	r3, #4784	; 0x12b0
    e62c:	443b      	add	r3, r7
    e62e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e632:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e636:	ed83 7b00 	vstr	d7, [r3]
    e63a:	e019      	b.n	e670 <G_q+0x6580>
  } else {
    t74_re = t74.re / 2.0;
    e63c:	f507 63a6 	add.w	r3, r7, #1328	; 0x530
    e640:	ed93 6b00 	vldr	d6, [r3]
    e644:	f241 23b8 	movw	r3, #4792	; 0x12b8
    e648:	443b      	add	r3, r7
    e64a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e64e:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e652:	ed83 7b00 	vstr	d7, [r3]
    t74_im = t74.im / 2.0;
    e656:	f507 63a6 	add.w	r3, r7, #1328	; 0x530
    e65a:	ed93 6b02 	vldr	d6, [r3, #8]
    e65e:	f241 23b0 	movw	r3, #4784	; 0x12b0
    e662:	443b      	add	r3, r7
    e664:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e668:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e66c:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t75.im == 0.0) {
    e670:	f507 63a8 	add.w	r3, r7, #1344	; 0x540
    e674:	ed93 7b02 	vldr	d7, [r3, #8]
    e678:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e67c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e680:	d116      	bne.n	e6b0 <G_q+0x65c0>
    t34_re = t75.re / 2.0;
    e682:	f507 63a8 	add.w	r3, r7, #1344	; 0x540
    e686:	ed93 6b00 	vldr	d6, [r3]
    e68a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e68e:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e692:	f241 33b8 	movw	r3, #5048	; 0x13b8
    e696:	443b      	add	r3, r7
    e698:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
    e69c:	f04f 0300 	mov.w	r3, #0
    e6a0:	f04f 0400 	mov.w	r4, #0
    e6a4:	f241 32b0 	movw	r2, #5040	; 0x13b0
    e6a8:	443a      	add	r2, r7
    e6aa:	e9c2 3400 	strd	r3, r4, [r2]
    e6ae:	e039      	b.n	e724 <G_q+0x6634>
  } else if (t75.re == 0.0) {
    e6b0:	f507 63a8 	add.w	r3, r7, #1344	; 0x540
    e6b4:	ed93 7b00 	vldr	d7, [r3]
    e6b8:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e6bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e6c0:	d116      	bne.n	e6f0 <G_q+0x6600>
    t34_re = 0.0;
    e6c2:	f04f 0300 	mov.w	r3, #0
    e6c6:	f04f 0400 	mov.w	r4, #0
    e6ca:	f241 32b8 	movw	r2, #5048	; 0x13b8
    e6ce:	443a      	add	r2, r7
    e6d0:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t75.im / 2.0;
    e6d4:	f507 63a8 	add.w	r3, r7, #1344	; 0x540
    e6d8:	ed93 6b02 	vldr	d6, [r3, #8]
    e6dc:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e6e0:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e6e4:	f241 33b0 	movw	r3, #5040	; 0x13b0
    e6e8:	443b      	add	r3, r7
    e6ea:	ed83 7b00 	vstr	d7, [r3]
    e6ee:	e019      	b.n	e724 <G_q+0x6634>
  } else {
    t34_re = t75.re / 2.0;
    e6f0:	f507 63a8 	add.w	r3, r7, #1344	; 0x540
    e6f4:	ed93 6b00 	vldr	d6, [r3]
    e6f8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e6fc:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e700:	f241 33b8 	movw	r3, #5048	; 0x13b8
    e704:	443b      	add	r3, r7
    e706:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t75.im / 2.0;
    e70a:	f507 63a8 	add.w	r3, r7, #1344	; 0x540
    e70e:	ed93 6b02 	vldr	d6, [r3, #8]
    e712:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e716:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e71a:	f241 33b0 	movw	r3, #5040	; 0x13b0
    e71e:	443b      	add	r3, r7
    e720:	ed83 7b00 	vstr	d7, [r3]
  }

  t74_re += t34_re;
    e724:	f241 23b8 	movw	r3, #4792	; 0x12b8
    e728:	443b      	add	r3, r7
    e72a:	f241 22b8 	movw	r2, #4792	; 0x12b8
    e72e:	443a      	add	r2, r7
    e730:	ed92 6b00 	vldr	d6, [r2]
    e734:	f241 32b8 	movw	r2, #5048	; 0x13b8
    e738:	443a      	add	r2, r7
    e73a:	ed92 7b00 	vldr	d7, [r2]
    e73e:	ee36 7b07 	vadd.f64	d7, d6, d7
    e742:	ed83 7b00 	vstr	d7, [r3]
  t74_im += t34_im;
    e746:	f241 23b0 	movw	r3, #4784	; 0x12b0
    e74a:	443b      	add	r3, r7
    e74c:	f241 22b0 	movw	r2, #4784	; 0x12b0
    e750:	443a      	add	r2, r7
    e752:	ed92 6b00 	vldr	d6, [r2]
    e756:	f241 32b0 	movw	r2, #5040	; 0x13b0
    e75a:	443a      	add	r2, r7
    e75c:	ed92 7b00 	vldr	d7, [r2]
    e760:	ee36 7b07 	vadd.f64	d7, d6, d7
    e764:	ed83 7b00 	vstr	d7, [r3]
  t76_re = (t76.re * 0.0 - t76.im * 0.5) - (t77.re * 0.0 - t77.im * 0.5);
    e768:	f507 6347 	add.w	r3, r7, #3184	; 0xc70
    e76c:	ed93 7b00 	vldr	d7, [r3]
    e770:	ed9f 6b75 	vldr	d6, [pc, #468]	; e948 <G_q+0x6858>
    e774:	ee27 6b06 	vmul.f64	d6, d7, d6
    e778:	f507 6347 	add.w	r3, r7, #3184	; 0xc70
    e77c:	ed93 7b02 	vldr	d7, [r3, #8]
    e780:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    e784:	ee27 7b05 	vmul.f64	d7, d7, d5
    e788:	ee36 6b47 	vsub.f64	d6, d6, d7
    e78c:	f507 6348 	add.w	r3, r7, #3200	; 0xc80
    e790:	ed93 7b00 	vldr	d7, [r3]
    e794:	ed9f 5b6c 	vldr	d5, [pc, #432]	; e948 <G_q+0x6858>
    e798:	ee27 5b05 	vmul.f64	d5, d7, d5
    e79c:	f507 6348 	add.w	r3, r7, #3200	; 0xc80
    e7a0:	ed93 7b02 	vldr	d7, [r3, #8]
    e7a4:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    e7a8:	ee27 7b04 	vmul.f64	d7, d7, d4
    e7ac:	ee35 7b47 	vsub.f64	d7, d5, d7
    e7b0:	f241 23a8 	movw	r3, #4776	; 0x12a8
    e7b4:	443b      	add	r3, r7
    e7b6:	ee36 7b47 	vsub.f64	d7, d6, d7
    e7ba:	ed83 7b00 	vstr	d7, [r3]
  t3_im = (t76.re * 0.5 + t76.im * 0.0) - (t77.re * 0.5 + t77.im * 0.0);
    e7be:	f507 6347 	add.w	r3, r7, #3184	; 0xc70
    e7c2:	ed93 7b00 	vldr	d7, [r3]
    e7c6:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    e7ca:	ee27 6b06 	vmul.f64	d6, d7, d6
    e7ce:	f507 6347 	add.w	r3, r7, #3184	; 0xc70
    e7d2:	ed93 7b02 	vldr	d7, [r3, #8]
    e7d6:	ed9f 5b5c 	vldr	d5, [pc, #368]	; e948 <G_q+0x6858>
    e7da:	ee27 7b05 	vmul.f64	d7, d7, d5
    e7de:	ee36 6b07 	vadd.f64	d6, d6, d7
    e7e2:	f507 6348 	add.w	r3, r7, #3200	; 0xc80
    e7e6:	ed93 7b00 	vldr	d7, [r3]
    e7ea:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    e7ee:	ee27 5b05 	vmul.f64	d5, d7, d5
    e7f2:	f507 6348 	add.w	r3, r7, #3200	; 0xc80
    e7f6:	ed93 7b02 	vldr	d7, [r3, #8]
    e7fa:	ed9f 4b53 	vldr	d4, [pc, #332]	; e948 <G_q+0x6858>
    e7fe:	ee27 7b04 	vmul.f64	d7, d7, d4
    e802:	ee35 7b07 	vadd.f64	d7, d5, d7
    e806:	ee36 7b47 	vsub.f64	d7, d6, d7
    e80a:	f241 3310 	movw	r3, #4880	; 0x1310
    e80e:	443b      	add	r3, r7
    e810:	ed83 7b00 	vstr	d7, [r3]
  if (t62.im == 0.0) {
    e814:	f507 6341 	add.w	r3, r7, #3088	; 0xc10
    e818:	ed93 7b02 	vldr	d7, [r3, #8]
    e81c:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e820:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e824:	d115      	bne.n	e852 <G_q+0x6762>
    t16_re = t62.re / 2.0;
    e826:	f507 6341 	add.w	r3, r7, #3088	; 0xc10
    e82a:	ed93 6b00 	vldr	d6, [r3]
    e82e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e832:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e836:	f241 3368 	movw	r3, #4968	; 0x1368
    e83a:	443b      	add	r3, r7
    e83c:	ed83 7b00 	vstr	d7, [r3]
    t16_im = 0.0;
    e840:	f04f 0300 	mov.w	r3, #0
    e844:	f04f 0400 	mov.w	r4, #0
    e848:	f507 529b 	add.w	r2, r7, #4960	; 0x1360
    e84c:	e9c2 3400 	strd	r3, r4, [r2]
    e850:	e037      	b.n	e8c2 <G_q+0x67d2>
  } else if (t62.re == 0.0) {
    e852:	f507 6341 	add.w	r3, r7, #3088	; 0xc10
    e856:	ed93 7b00 	vldr	d7, [r3]
    e85a:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e85e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e862:	d115      	bne.n	e890 <G_q+0x67a0>
    t16_re = 0.0;
    e864:	f04f 0300 	mov.w	r3, #0
    e868:	f04f 0400 	mov.w	r4, #0
    e86c:	f241 3268 	movw	r2, #4968	; 0x1368
    e870:	443a      	add	r2, r7
    e872:	e9c2 3400 	strd	r3, r4, [r2]
    t16_im = t62.im / 2.0;
    e876:	f507 6341 	add.w	r3, r7, #3088	; 0xc10
    e87a:	ed93 6b02 	vldr	d6, [r3, #8]
    e87e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e882:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e886:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    e88a:	ed83 7b00 	vstr	d7, [r3]
    e88e:	e018      	b.n	e8c2 <G_q+0x67d2>
  } else {
    t16_re = t62.re / 2.0;
    e890:	f507 6341 	add.w	r3, r7, #3088	; 0xc10
    e894:	ed93 6b00 	vldr	d6, [r3]
    e898:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e89c:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e8a0:	f241 3368 	movw	r3, #4968	; 0x1368
    e8a4:	443b      	add	r3, r7
    e8a6:	ed83 7b00 	vstr	d7, [r3]
    t16_im = t62.im / 2.0;
    e8aa:	f507 6341 	add.w	r3, r7, #3088	; 0xc10
    e8ae:	ed93 6b02 	vldr	d6, [r3, #8]
    e8b2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e8b6:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e8ba:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    e8be:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t63.im == 0.0) {
    e8c2:	f507 6342 	add.w	r3, r7, #3104	; 0xc20
    e8c6:	ed93 7b02 	vldr	d7, [r3, #8]
    e8ca:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e8ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e8d2:	d116      	bne.n	e902 <G_q+0x6812>
    t34_re = t63.re / 2.0;
    e8d4:	f507 6342 	add.w	r3, r7, #3104	; 0xc20
    e8d8:	ed93 6b00 	vldr	d6, [r3]
    e8dc:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e8e0:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e8e4:	f241 33b8 	movw	r3, #5048	; 0x13b8
    e8e8:	443b      	add	r3, r7
    e8ea:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
    e8ee:	f04f 0300 	mov.w	r3, #0
    e8f2:	f04f 0400 	mov.w	r4, #0
    e8f6:	f241 32b0 	movw	r2, #5040	; 0x13b0
    e8fa:	443a      	add	r2, r7
    e8fc:	e9c2 3400 	strd	r3, r4, [r2]
    e900:	e044      	b.n	e98c <G_q+0x689c>
  } else if (t63.re == 0.0) {
    e902:	f507 6342 	add.w	r3, r7, #3104	; 0xc20
    e906:	ed93 7b00 	vldr	d7, [r3]
    e90a:	eeb5 7b40 	vcmp.f64	d7, #0.0
    e90e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e912:	d121      	bne.n	e958 <G_q+0x6868>
    t34_re = 0.0;
    e914:	f04f 0300 	mov.w	r3, #0
    e918:	f04f 0400 	mov.w	r4, #0
    e91c:	f241 32b8 	movw	r2, #5048	; 0x13b8
    e920:	443a      	add	r2, r7
    e922:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t63.im / 2.0;
    e926:	f507 6342 	add.w	r3, r7, #3104	; 0xc20
    e92a:	ed93 6b02 	vldr	d6, [r3, #8]
    e92e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e932:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e936:	f241 33b0 	movw	r3, #5040	; 0x13b0
    e93a:	443b      	add	r3, r7
    e93c:	ed83 7b00 	vstr	d7, [r3]
    e940:	e024      	b.n	e98c <G_q+0x689c>
    e942:	bf00      	nop
    e944:	f3af 8000 	nop.w
	...
    e950:	33145c07 	.word	0x33145c07
    e954:	3c81a626 	.word	0x3c81a626
  } else {
    t34_re = t63.re / 2.0;
    e958:	f507 6342 	add.w	r3, r7, #3104	; 0xc20
    e95c:	ed93 6b00 	vldr	d6, [r3]
    e960:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e964:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e968:	f241 33b8 	movw	r3, #5048	; 0x13b8
    e96c:	443b      	add	r3, r7
    e96e:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t63.im / 2.0;
    e972:	f507 6342 	add.w	r3, r7, #3104	; 0xc20
    e976:	ed93 6b02 	vldr	d6, [r3, #8]
    e97a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    e97e:	ee86 7b05 	vdiv.f64	d7, d6, d5
    e982:	f241 33b0 	movw	r3, #5040	; 0x13b0
    e986:	443b      	add	r3, r7
    e988:	ed83 7b00 	vstr	d7, [r3]
  }

  t20_re = (t64.re * 0.0 - t64.im * 3.061616997868383E-17) - (t65.re * 0.0 -
    e98c:	f507 639a 	add.w	r3, r7, #1232	; 0x4d0
    e990:	ed93 7b00 	vldr	d7, [r3]
    e994:	ed1f 6b14 	vldr	d6, [pc, #-80]	; e948 <G_q+0x6858>
    e998:	ee27 6b06 	vmul.f64	d6, d7, d6
    e99c:	f507 639a 	add.w	r3, r7, #1232	; 0x4d0
    e9a0:	ed93 7b02 	vldr	d7, [r3, #8]
    e9a4:	ed1f 5b16 	vldr	d5, [pc, #-88]	; e950 <G_q+0x6860>
    e9a8:	ee27 7b05 	vmul.f64	d7, d7, d5
    e9ac:	ee36 6b47 	vsub.f64	d6, d6, d7
    e9b0:	f507 639c 	add.w	r3, r7, #1248	; 0x4e0
    e9b4:	ed93 7b00 	vldr	d7, [r3]
    e9b8:	ed1f 5b1d 	vldr	d5, [pc, #-116]	; e948 <G_q+0x6858>
    e9bc:	ee27 5b05 	vmul.f64	d5, d7, d5
    t65.im * 3.061616997868383E-17);
    e9c0:	f507 639c 	add.w	r3, r7, #1248	; 0x4e0
    e9c4:	ed93 7b02 	vldr	d7, [r3, #8]
    e9c8:	ed1f 4b1f 	vldr	d4, [pc, #-124]	; e950 <G_q+0x6860>
    e9cc:	ee27 7b04 	vmul.f64	d7, d7, d4
  t20_re = (t64.re * 0.0 - t64.im * 3.061616997868383E-17) - (t65.re * 0.0 -
    e9d0:	ee35 7b47 	vsub.f64	d7, d5, d7
    e9d4:	ee36 7b47 	vsub.f64	d7, d6, d7
    e9d8:	f241 3348 	movw	r3, #4936	; 0x1348
    e9dc:	443b      	add	r3, r7
    e9de:	ed83 7b00 	vstr	d7, [r3]
  t20_im = (t64.re * 3.061616997868383E-17 + t64.im * 0.0) - (t65.re *
    e9e2:	f507 639a 	add.w	r3, r7, #1232	; 0x4d0
    e9e6:	ed93 7b00 	vldr	d7, [r3]
    e9ea:	ed1f 6b27 	vldr	d6, [pc, #-156]	; e950 <G_q+0x6860>
    e9ee:	ee27 6b06 	vmul.f64	d6, d7, d6
    e9f2:	f507 639a 	add.w	r3, r7, #1232	; 0x4d0
    e9f6:	ed93 7b02 	vldr	d7, [r3, #8]
    e9fa:	ed1f 5b2d 	vldr	d5, [pc, #-180]	; e948 <G_q+0x6858>
    e9fe:	ee27 7b05 	vmul.f64	d7, d7, d5
    ea02:	ee36 6b07 	vadd.f64	d6, d6, d7
    ea06:	f507 639c 	add.w	r3, r7, #1248	; 0x4e0
    ea0a:	ed93 7b00 	vldr	d7, [r3]
    ea0e:	ed1f 5b30 	vldr	d5, [pc, #-192]	; e950 <G_q+0x6860>
    ea12:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t65.im * 0.0);
    ea16:	f507 639c 	add.w	r3, r7, #1248	; 0x4e0
    ea1a:	ed93 7b02 	vldr	d7, [r3, #8]
    ea1e:	ed1f 4b36 	vldr	d4, [pc, #-216]	; e948 <G_q+0x6858>
    ea22:	ee27 7b04 	vmul.f64	d7, d7, d4
    ea26:	ee35 7b07 	vadd.f64	d7, d5, d7
  t20_im = (t64.re * 3.061616997868383E-17 + t64.im * 0.0) - (t65.re *
    ea2a:	ee36 7b47 	vsub.f64	d7, d6, d7
    ea2e:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    ea32:	ed83 7b00 	vstr	d7, [r3]
  t16_re += t34_re;
    ea36:	f241 3368 	movw	r3, #4968	; 0x1368
    ea3a:	443b      	add	r3, r7
    ea3c:	ed93 6b00 	vldr	d6, [r3]
    ea40:	f241 33b8 	movw	r3, #5048	; 0x13b8
    ea44:	443b      	add	r3, r7
    ea46:	ed93 7b00 	vldr	d7, [r3]
    ea4a:	ee36 7b07 	vadd.f64	d7, d6, d7
    ea4e:	f241 3368 	movw	r3, #4968	; 0x1368
    ea52:	443b      	add	r3, r7
    ea54:	ed83 7b00 	vstr	d7, [r3]
  t16_im += t34_im;
    ea58:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    ea5c:	ed93 6b00 	vldr	d6, [r3]
    ea60:	f241 33b0 	movw	r3, #5040	; 0x13b0
    ea64:	443b      	add	r3, r7
    ea66:	ed93 7b00 	vldr	d7, [r3]
    ea6a:	ee36 7b07 	vadd.f64	d7, d6, d7
    ea6e:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    ea72:	ed83 7b00 	vstr	d7, [r3]
  t34_re = t68.re * 3.061616997868383E-17 + t69.re * 3.061616997868383E-17;
    ea76:	f507 639e 	add.w	r3, r7, #1264	; 0x4f0
    ea7a:	ed93 7b00 	vldr	d7, [r3]
    ea7e:	ed1f 6b4c 	vldr	d6, [pc, #-304]	; e950 <G_q+0x6860>
    ea82:	ee27 6b06 	vmul.f64	d6, d7, d6
    ea86:	f507 63a0 	add.w	r3, r7, #1280	; 0x500
    ea8a:	ed93 7b00 	vldr	d7, [r3]
    ea8e:	ed1f 5b50 	vldr	d5, [pc, #-320]	; e950 <G_q+0x6860>
    ea92:	ee27 7b05 	vmul.f64	d7, d7, d5
    ea96:	ee36 7b07 	vadd.f64	d7, d6, d7
    ea9a:	f241 33b8 	movw	r3, #5048	; 0x13b8
    ea9e:	443b      	add	r3, r7
    eaa0:	ed83 7b00 	vstr	d7, [r3]
  t34_im = t68.im * 3.061616997868383E-17 + t69.im * 3.061616997868383E-17;
    eaa4:	f507 639e 	add.w	r3, r7, #1264	; 0x4f0
    eaa8:	ed93 7b02 	vldr	d7, [r3, #8]
    eaac:	ed1f 6b58 	vldr	d6, [pc, #-352]	; e950 <G_q+0x6860>
    eab0:	ee27 6b06 	vmul.f64	d6, d7, d6
    eab4:	f507 63a0 	add.w	r3, r7, #1280	; 0x500
    eab8:	ed93 7b02 	vldr	d7, [r3, #8]
    eabc:	ed1f 5b5c 	vldr	d5, [pc, #-368]	; e950 <G_q+0x6860>
    eac0:	ee27 7b05 	vmul.f64	d7, d7, d5
    eac4:	ee36 7b07 	vadd.f64	d7, d6, d7
    eac8:	f241 33b0 	movw	r3, #5040	; 0x13b0
    eacc:	443b      	add	r3, r7
    eace:	ed83 7b00 	vstr	d7, [r3]
  t13_re = (t66.re * 0.0 - t66.im * 0.5) - (t67.re * 0.0 - t67.im * 0.5);
    ead2:	f507 6343 	add.w	r3, r7, #3120	; 0xc30
    ead6:	ed93 7b00 	vldr	d7, [r3]
    eada:	ed1f 6b65 	vldr	d6, [pc, #-404]	; e948 <G_q+0x6858>
    eade:	ee27 6b06 	vmul.f64	d6, d7, d6
    eae2:	f507 6343 	add.w	r3, r7, #3120	; 0xc30
    eae6:	ed93 7b02 	vldr	d7, [r3, #8]
    eaea:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    eaee:	ee27 7b05 	vmul.f64	d7, d7, d5
    eaf2:	ee36 6b47 	vsub.f64	d6, d6, d7
    eaf6:	f507 6344 	add.w	r3, r7, #3136	; 0xc40
    eafa:	ed93 7b00 	vldr	d7, [r3]
    eafe:	ed1f 5b6e 	vldr	d5, [pc, #-440]	; e948 <G_q+0x6858>
    eb02:	ee27 5b05 	vmul.f64	d5, d7, d5
    eb06:	f507 6344 	add.w	r3, r7, #3136	; 0xc40
    eb0a:	ed93 7b02 	vldr	d7, [r3, #8]
    eb0e:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    eb12:	ee27 7b04 	vmul.f64	d7, d7, d4
    eb16:	ee35 7b47 	vsub.f64	d7, d5, d7
    eb1a:	ee36 7b47 	vsub.f64	d7, d6, d7
    eb1e:	f241 3378 	movw	r3, #4984	; 0x1378
    eb22:	443b      	add	r3, r7
    eb24:	ed83 7b00 	vstr	d7, [r3]
  t13_im = (t66.re * 0.5 + t66.im * 0.0) - (t67.re * 0.5 + t67.im * 0.0);
    eb28:	f507 6343 	add.w	r3, r7, #3120	; 0xc30
    eb2c:	ed93 7b00 	vldr	d7, [r3]
    eb30:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    eb34:	ee27 6b06 	vmul.f64	d6, d7, d6
    eb38:	f507 6343 	add.w	r3, r7, #3120	; 0xc30
    eb3c:	ed93 7b02 	vldr	d7, [r3, #8]
    eb40:	ed1f 5b7f 	vldr	d5, [pc, #-508]	; e948 <G_q+0x6858>
    eb44:	ee27 7b05 	vmul.f64	d7, d7, d5
    eb48:	ee36 6b07 	vadd.f64	d6, d6, d7
    eb4c:	f507 6344 	add.w	r3, r7, #3136	; 0xc40
    eb50:	ed93 7b00 	vldr	d7, [r3]
    eb54:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    eb58:	ee27 5b05 	vmul.f64	d5, d7, d5
    eb5c:	f507 6344 	add.w	r3, r7, #3136	; 0xc40
    eb60:	ed93 7b02 	vldr	d7, [r3, #8]
    eb64:	ed1f 4b88 	vldr	d4, [pc, #-544]	; e948 <G_q+0x6858>
    eb68:	ee27 7b04 	vmul.f64	d7, d7, d4
    eb6c:	ee35 7b07 	vadd.f64	d7, d5, d7
    eb70:	ee36 7b47 	vsub.f64	d7, d6, d7
    eb74:	f241 3370 	movw	r3, #4976	; 0x1370
    eb78:	443b      	add	r3, r7
    eb7a:	ed83 7b00 	vstr	d7, [r3]
  t23_re = t58.re * 3.061616997868383E-17 + t59.re * 3.061616997868383E-17;
    eb7e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
    eb82:	ed93 7b00 	vldr	d7, [r3]
    eb86:	ed1f 6b8e 	vldr	d6, [pc, #-568]	; e950 <G_q+0x6860>
    eb8a:	ee27 6b06 	vmul.f64	d6, d7, d6
    eb8e:	4bca      	ldr	r3, [pc, #808]	; (eeb8 <G_q+0x6dc8>)
    eb90:	f241 32d0 	movw	r2, #5072	; 0x13d0
    eb94:	443a      	add	r2, r7
    eb96:	4413      	add	r3, r2
    eb98:	ed93 7b00 	vldr	d7, [r3]
    eb9c:	ed9f 5bc0 	vldr	d5, [pc, #768]	; eea0 <G_q+0x6db0>
    eba0:	ee27 7b05 	vmul.f64	d7, d7, d5
    eba4:	ee36 7b07 	vadd.f64	d7, d6, d7
    eba8:	f241 3330 	movw	r3, #4912	; 0x1330
    ebac:	443b      	add	r3, r7
    ebae:	ed83 7b00 	vstr	d7, [r3]
  t58_im = t58.im * 3.061616997868383E-17 + t59.im * 3.061616997868383E-17;
    ebb2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
    ebb6:	ed93 7b02 	vldr	d7, [r3, #8]
    ebba:	ed9f 6bb9 	vldr	d6, [pc, #740]	; eea0 <G_q+0x6db0>
    ebbe:	ee27 6b06 	vmul.f64	d6, d7, d6
    ebc2:	4bbd      	ldr	r3, [pc, #756]	; (eeb8 <G_q+0x6dc8>)
    ebc4:	f241 32d0 	movw	r2, #5072	; 0x13d0
    ebc8:	443a      	add	r2, r7
    ebca:	4413      	add	r3, r2
    ebcc:	ed93 7b02 	vldr	d7, [r3, #8]
    ebd0:	ed9f 5bb3 	vldr	d5, [pc, #716]	; eea0 <G_q+0x6db0>
    ebd4:	ee27 7b05 	vmul.f64	d7, d7, d5
    ebd8:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
    ebdc:	ee36 7b07 	vadd.f64	d7, d6, d7
    ebe0:	ed83 7b00 	vstr	d7, [r3]
  t60_re = (((t60.re * 0.0 - t60.im * 6.123233995736766E-17) - (t61.re * 0.0 -
    ebe4:	f507 633f 	add.w	r3, r7, #3056	; 0xbf0
    ebe8:	ed93 7b00 	vldr	d7, [r3]
    ebec:	ed9f 6bae 	vldr	d6, [pc, #696]	; eea8 <G_q+0x6db8>
    ebf0:	ee27 6b06 	vmul.f64	d6, d7, d6
    ebf4:	f507 633f 	add.w	r3, r7, #3056	; 0xbf0
    ebf8:	ed93 7b02 	vldr	d7, [r3, #8]
    ebfc:	ed9f 5bac 	vldr	d5, [pc, #688]	; eeb0 <G_q+0x6dc0>
    ec00:	ee27 7b05 	vmul.f64	d7, d7, d5
    ec04:	ee36 6b47 	vsub.f64	d6, d6, d7
    ec08:	f507 6340 	add.w	r3, r7, #3072	; 0xc00
    ec0c:	ed93 7b00 	vldr	d7, [r3]
    ec10:	ed9f 5ba5 	vldr	d5, [pc, #660]	; eea8 <G_q+0x6db8>
    ec14:	ee27 5b05 	vmul.f64	d5, d7, d5
              t61.im * 6.123233995736766E-17)) - (t20_re * t16_re - t20_im *
    ec18:	f507 6340 	add.w	r3, r7, #3072	; 0xc00
    ec1c:	ed93 7b02 	vldr	d7, [r3, #8]
    ec20:	ed9f 4ba3 	vldr	d4, [pc, #652]	; eeb0 <G_q+0x6dc0>
    ec24:	ee27 7b04 	vmul.f64	d7, d7, d4
  t60_re = (((t60.re * 0.0 - t60.im * 6.123233995736766E-17) - (t61.re * 0.0 -
    ec28:	ee35 7b47 	vsub.f64	d7, d5, d7
    ec2c:	ee36 6b47 	vsub.f64	d6, d6, d7
              t61.im * 6.123233995736766E-17)) - (t20_re * t16_re - t20_im *
    ec30:	f241 3348 	movw	r3, #4936	; 0x1348
    ec34:	443b      	add	r3, r7
    ec36:	ed93 5b00 	vldr	d5, [r3]
    ec3a:	f241 3368 	movw	r3, #4968	; 0x1368
    ec3e:	443b      	add	r3, r7
    ec40:	ed93 7b00 	vldr	d7, [r3]
    ec44:	ee25 5b07 	vmul.f64	d5, d5, d7
    ec48:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    ec4c:	ed93 4b00 	vldr	d4, [r3]
    ec50:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    ec54:	ed93 7b00 	vldr	d7, [r3]
    ec58:	ee24 7b07 	vmul.f64	d7, d4, d7
    ec5c:	ee35 7b47 	vsub.f64	d7, d5, d7
    ec60:	ee36 6b47 	vsub.f64	d6, d6, d7
             t16_im)) + (t34_re * t13_re - t34_im * t13_im);
    ec64:	f241 33b8 	movw	r3, #5048	; 0x13b8
    ec68:	443b      	add	r3, r7
    ec6a:	ed93 5b00 	vldr	d5, [r3]
    ec6e:	f241 3378 	movw	r3, #4984	; 0x1378
    ec72:	443b      	add	r3, r7
    ec74:	ed93 7b00 	vldr	d7, [r3]
    ec78:	ee25 5b07 	vmul.f64	d5, d5, d7
    ec7c:	f241 33b0 	movw	r3, #5040	; 0x13b0
    ec80:	443b      	add	r3, r7
    ec82:	ed93 4b00 	vldr	d4, [r3]
    ec86:	f241 3370 	movw	r3, #4976	; 0x1370
    ec8a:	443b      	add	r3, r7
    ec8c:	ed93 7b00 	vldr	d7, [r3]
    ec90:	ee24 7b07 	vmul.f64	d7, d4, d7
    ec94:	ee35 7b47 	vsub.f64	d7, d5, d7
  t60_re = (((t60.re * 0.0 - t60.im * 6.123233995736766E-17) - (t61.re * 0.0 -
    ec98:	f241 2350 	movw	r3, #4688	; 0x1250
    ec9c:	443b      	add	r3, r7
    ec9e:	ee36 7b07 	vadd.f64	d7, d6, d7
    eca2:	ed83 7b00 	vstr	d7, [r3]
  t20_im = (((t60.re * 6.123233995736766E-17 + t60.im * 0.0) - (t61.re *
    eca6:	f507 633f 	add.w	r3, r7, #3056	; 0xbf0
    ecaa:	ed93 7b00 	vldr	d7, [r3]
    ecae:	ed9f 6b80 	vldr	d6, [pc, #512]	; eeb0 <G_q+0x6dc0>
    ecb2:	ee27 6b06 	vmul.f64	d6, d7, d6
    ecb6:	f507 633f 	add.w	r3, r7, #3056	; 0xbf0
    ecba:	ed93 7b02 	vldr	d7, [r3, #8]
    ecbe:	ed9f 5b7a 	vldr	d5, [pc, #488]	; eea8 <G_q+0x6db8>
    ecc2:	ee27 7b05 	vmul.f64	d7, d7, d5
    ecc6:	ee36 6b07 	vadd.f64	d6, d6, d7
    ecca:	f507 6340 	add.w	r3, r7, #3072	; 0xc00
    ecce:	ed93 7b00 	vldr	d7, [r3]
    ecd2:	ed9f 5b77 	vldr	d5, [pc, #476]	; eeb0 <G_q+0x6dc0>
    ecd6:	ee27 5b05 	vmul.f64	d5, d7, d5
              6.123233995736766E-17 + t61.im * 0.0)) - (t20_re * t16_im + t20_im
    ecda:	f507 6340 	add.w	r3, r7, #3072	; 0xc00
    ecde:	ed93 7b02 	vldr	d7, [r3, #8]
    ece2:	ed9f 4b71 	vldr	d4, [pc, #452]	; eea8 <G_q+0x6db8>
    ece6:	ee27 7b04 	vmul.f64	d7, d7, d4
    ecea:	ee35 7b07 	vadd.f64	d7, d5, d7
  t20_im = (((t60.re * 6.123233995736766E-17 + t60.im * 0.0) - (t61.re *
    ecee:	ee36 6b47 	vsub.f64	d6, d6, d7
              6.123233995736766E-17 + t61.im * 0.0)) - (t20_re * t16_im + t20_im
    ecf2:	f241 3348 	movw	r3, #4936	; 0x1348
    ecf6:	443b      	add	r3, r7
    ecf8:	ed93 5b00 	vldr	d5, [r3]
    ecfc:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    ed00:	ed93 7b00 	vldr	d7, [r3]
    ed04:	ee25 5b07 	vmul.f64	d5, d5, d7
             * t16_re)) + (t34_re * t13_im + t34_im * t13_re);
    ed08:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    ed0c:	ed93 4b00 	vldr	d4, [r3]
    ed10:	f241 3368 	movw	r3, #4968	; 0x1368
    ed14:	443b      	add	r3, r7
    ed16:	ed93 7b00 	vldr	d7, [r3]
    ed1a:	ee24 7b07 	vmul.f64	d7, d4, d7
              6.123233995736766E-17 + t61.im * 0.0)) - (t20_re * t16_im + t20_im
    ed1e:	ee35 7b07 	vadd.f64	d7, d5, d7
    ed22:	ee36 6b47 	vsub.f64	d6, d6, d7
             * t16_re)) + (t34_re * t13_im + t34_im * t13_re);
    ed26:	f241 33b8 	movw	r3, #5048	; 0x13b8
    ed2a:	443b      	add	r3, r7
    ed2c:	ed93 5b00 	vldr	d5, [r3]
    ed30:	f241 3370 	movw	r3, #4976	; 0x1370
    ed34:	443b      	add	r3, r7
    ed36:	ed93 7b00 	vldr	d7, [r3]
    ed3a:	ee25 5b07 	vmul.f64	d5, d5, d7
    ed3e:	f241 33b0 	movw	r3, #5040	; 0x13b0
    ed42:	443b      	add	r3, r7
    ed44:	ed93 4b00 	vldr	d4, [r3]
    ed48:	f241 3378 	movw	r3, #4984	; 0x1378
    ed4c:	443b      	add	r3, r7
    ed4e:	ed93 7b00 	vldr	d7, [r3]
    ed52:	ee24 7b07 	vmul.f64	d7, d4, d7
    ed56:	ee35 7b07 	vadd.f64	d7, d5, d7
  t20_im = (((t60.re * 6.123233995736766E-17 + t60.im * 0.0) - (t61.re *
    ed5a:	ee36 7b07 	vadd.f64	d7, d6, d7
    ed5e:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    ed62:	ed83 7b00 	vstr	d7, [r3]
  if (t78.im == 0.0) {
    ed66:	f507 6349 	add.w	r3, r7, #3216	; 0xc90
    ed6a:	ed93 7b02 	vldr	d7, [r3, #8]
    ed6e:	eeb5 7b40 	vcmp.f64	d7, #0.0
    ed72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ed76:	d116      	bne.n	eda6 <G_q+0x6cb6>
    t16_re = t78.re / 2.0;
    ed78:	f507 6349 	add.w	r3, r7, #3216	; 0xc90
    ed7c:	ed93 6b00 	vldr	d6, [r3]
    ed80:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ed84:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ed88:	f241 3368 	movw	r3, #4968	; 0x1368
    ed8c:	443b      	add	r3, r7
    ed8e:	ed83 7b00 	vstr	d7, [r3]
    t12_re = 0.0;
    ed92:	f04f 0300 	mov.w	r3, #0
    ed96:	f04f 0400 	mov.w	r4, #0
    ed9a:	f241 3288 	movw	r2, #5000	; 0x1388
    ed9e:	443a      	add	r2, r7
    eda0:	e9c2 3400 	strd	r3, r4, [r2]
    eda4:	e039      	b.n	ee1a <G_q+0x6d2a>
  } else if (t78.re == 0.0) {
    eda6:	f507 6349 	add.w	r3, r7, #3216	; 0xc90
    edaa:	ed93 7b00 	vldr	d7, [r3]
    edae:	eeb5 7b40 	vcmp.f64	d7, #0.0
    edb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    edb6:	d116      	bne.n	ede6 <G_q+0x6cf6>
    t16_re = 0.0;
    edb8:	f04f 0300 	mov.w	r3, #0
    edbc:	f04f 0400 	mov.w	r4, #0
    edc0:	f241 3268 	movw	r2, #4968	; 0x1368
    edc4:	443a      	add	r2, r7
    edc6:	e9c2 3400 	strd	r3, r4, [r2]
    t12_re = t78.im / 2.0;
    edca:	f507 6349 	add.w	r3, r7, #3216	; 0xc90
    edce:	ed93 6b02 	vldr	d6, [r3, #8]
    edd2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    edd6:	ee86 7b05 	vdiv.f64	d7, d6, d5
    edda:	f241 3388 	movw	r3, #5000	; 0x1388
    edde:	443b      	add	r3, r7
    ede0:	ed83 7b00 	vstr	d7, [r3]
    ede4:	e019      	b.n	ee1a <G_q+0x6d2a>
  } else {
    t16_re = t78.re / 2.0;
    ede6:	f507 6349 	add.w	r3, r7, #3216	; 0xc90
    edea:	ed93 6b00 	vldr	d6, [r3]
    edee:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    edf2:	ee86 7b05 	vdiv.f64	d7, d6, d5
    edf6:	f241 3368 	movw	r3, #4968	; 0x1368
    edfa:	443b      	add	r3, r7
    edfc:	ed83 7b00 	vstr	d7, [r3]
    t12_re = t78.im / 2.0;
    ee00:	f507 6349 	add.w	r3, r7, #3216	; 0xc90
    ee04:	ed93 6b02 	vldr	d6, [r3, #8]
    ee08:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ee0c:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ee10:	f241 3388 	movw	r3, #5000	; 0x1388
    ee14:	443b      	add	r3, r7
    ee16:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t79.im == 0.0) {
    ee1a:	f507 634a 	add.w	r3, r7, #3232	; 0xca0
    ee1e:	ed93 7b02 	vldr	d7, [r3, #8]
    ee22:	eeb5 7b40 	vcmp.f64	d7, #0.0
    ee26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ee2a:	d116      	bne.n	ee5a <G_q+0x6d6a>
    t34_re = t79.re / 2.0;
    ee2c:	f507 634a 	add.w	r3, r7, #3232	; 0xca0
    ee30:	ed93 6b00 	vldr	d6, [r3]
    ee34:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ee38:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ee3c:	f241 33b8 	movw	r3, #5048	; 0x13b8
    ee40:	443b      	add	r3, r7
    ee42:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
    ee46:	f04f 0300 	mov.w	r3, #0
    ee4a:	f04f 0400 	mov.w	r4, #0
    ee4e:	f241 32b0 	movw	r2, #5040	; 0x13b0
    ee52:	443a      	add	r2, r7
    ee54:	e9c2 3400 	strd	r3, r4, [r2]
    ee58:	e04a      	b.n	eef0 <G_q+0x6e00>
  } else if (t79.re == 0.0) {
    ee5a:	f507 634a 	add.w	r3, r7, #3232	; 0xca0
    ee5e:	ed93 7b00 	vldr	d7, [r3]
    ee62:	eeb5 7b40 	vcmp.f64	d7, #0.0
    ee66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ee6a:	d127      	bne.n	eebc <G_q+0x6dcc>
    t34_re = 0.0;
    ee6c:	f04f 0300 	mov.w	r3, #0
    ee70:	f04f 0400 	mov.w	r4, #0
    ee74:	f241 32b8 	movw	r2, #5048	; 0x13b8
    ee78:	443a      	add	r2, r7
    ee7a:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t79.im / 2.0;
    ee7e:	f507 634a 	add.w	r3, r7, #3232	; 0xca0
    ee82:	ed93 6b02 	vldr	d6, [r3, #8]
    ee86:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ee8a:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ee8e:	f241 33b0 	movw	r3, #5040	; 0x13b0
    ee92:	443b      	add	r3, r7
    ee94:	ed83 7b00 	vstr	d7, [r3]
    ee98:	e02a      	b.n	eef0 <G_q+0x6e00>
    ee9a:	bf00      	nop
    ee9c:	f3af 8000 	nop.w
    eea0:	33145c07 	.word	0x33145c07
    eea4:	3c81a626 	.word	0x3c81a626
	...
    eeb0:	33145c07 	.word	0x33145c07
    eeb4:	3c91a626 	.word	0x3c91a626
    eeb8:	ffffedb0 	.word	0xffffedb0
  } else {
    t34_re = t79.re / 2.0;
    eebc:	f507 634a 	add.w	r3, r7, #3232	; 0xca0
    eec0:	ed93 6b00 	vldr	d6, [r3]
    eec4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    eec8:	ee86 7b05 	vdiv.f64	d7, d6, d5
    eecc:	f241 33b8 	movw	r3, #5048	; 0x13b8
    eed0:	443b      	add	r3, r7
    eed2:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t79.im / 2.0;
    eed6:	f507 634a 	add.w	r3, r7, #3232	; 0xca0
    eeda:	ed93 6b02 	vldr	d6, [r3, #8]
    eede:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    eee2:	ee86 7b05 	vdiv.f64	d7, d6, d5
    eee6:	f241 33b0 	movw	r3, #5040	; 0x13b0
    eeea:	443b      	add	r3, r7
    eeec:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t80.im == 0.0) {
    eef0:	f507 63aa 	add.w	r3, r7, #1360	; 0x550
    eef4:	ed93 7b02 	vldr	d7, [r3, #8]
    eef8:	eeb5 7b40 	vcmp.f64	d7, #0.0
    eefc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ef00:	d115      	bne.n	ef2e <G_q+0x6e3e>
    t16_im = t80.re / 2.0;
    ef02:	f507 63aa 	add.w	r3, r7, #1360	; 0x550
    ef06:	ed93 6b00 	vldr	d6, [r3]
    ef0a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ef0e:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ef12:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    ef16:	ed83 7b00 	vstr	d7, [r3]
    t20_re = 0.0;
    ef1a:	f04f 0300 	mov.w	r3, #0
    ef1e:	f04f 0400 	mov.w	r4, #0
    ef22:	f241 3248 	movw	r2, #4936	; 0x1348
    ef26:	443a      	add	r2, r7
    ef28:	e9c2 3400 	strd	r3, r4, [r2]
    ef2c:	e037      	b.n	ef9e <G_q+0x6eae>
  } else if (t80.re == 0.0) {
    ef2e:	f507 63aa 	add.w	r3, r7, #1360	; 0x550
    ef32:	ed93 7b00 	vldr	d7, [r3]
    ef36:	eeb5 7b40 	vcmp.f64	d7, #0.0
    ef3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ef3e:	d115      	bne.n	ef6c <G_q+0x6e7c>
    t16_im = 0.0;
    ef40:	f04f 0300 	mov.w	r3, #0
    ef44:	f04f 0400 	mov.w	r4, #0
    ef48:	f507 529b 	add.w	r2, r7, #4960	; 0x1360
    ef4c:	e9c2 3400 	strd	r3, r4, [r2]
    t20_re = t80.im / 2.0;
    ef50:	f507 63aa 	add.w	r3, r7, #1360	; 0x550
    ef54:	ed93 6b02 	vldr	d6, [r3, #8]
    ef58:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ef5c:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ef60:	f241 3348 	movw	r3, #4936	; 0x1348
    ef64:	443b      	add	r3, r7
    ef66:	ed83 7b00 	vstr	d7, [r3]
    ef6a:	e018      	b.n	ef9e <G_q+0x6eae>
  } else {
    t16_im = t80.re / 2.0;
    ef6c:	f507 63aa 	add.w	r3, r7, #1360	; 0x550
    ef70:	ed93 6b00 	vldr	d6, [r3]
    ef74:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ef78:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ef7c:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    ef80:	ed83 7b00 	vstr	d7, [r3]
    t20_re = t80.im / 2.0;
    ef84:	f507 63aa 	add.w	r3, r7, #1360	; 0x550
    ef88:	ed93 6b02 	vldr	d6, [r3, #8]
    ef8c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ef90:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ef94:	f241 3348 	movw	r3, #4936	; 0x1348
    ef98:	443b      	add	r3, r7
    ef9a:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t81.im == 0.0) {
    ef9e:	f507 63ac 	add.w	r3, r7, #1376	; 0x560
    efa2:	ed93 7b02 	vldr	d7, [r3, #8]
    efa6:	eeb5 7b40 	vcmp.f64	d7, #0.0
    efaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    efae:	d116      	bne.n	efde <G_q+0x6eee>
    t13_re = t81.re / 2.0;
    efb0:	f507 63ac 	add.w	r3, r7, #1376	; 0x560
    efb4:	ed93 6b00 	vldr	d6, [r3]
    efb8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    efbc:	ee86 7b05 	vdiv.f64	d7, d6, d5
    efc0:	f241 3378 	movw	r3, #4984	; 0x1378
    efc4:	443b      	add	r3, r7
    efc6:	ed83 7b00 	vstr	d7, [r3]
    t13_im = 0.0;
    efca:	f04f 0300 	mov.w	r3, #0
    efce:	f04f 0400 	mov.w	r4, #0
    efd2:	f241 3270 	movw	r2, #4976	; 0x1370
    efd6:	443a      	add	r2, r7
    efd8:	e9c2 3400 	strd	r3, r4, [r2]
    efdc:	e039      	b.n	f052 <G_q+0x6f62>
  } else if (t81.re == 0.0) {
    efde:	f507 63ac 	add.w	r3, r7, #1376	; 0x560
    efe2:	ed93 7b00 	vldr	d7, [r3]
    efe6:	eeb5 7b40 	vcmp.f64	d7, #0.0
    efea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    efee:	d116      	bne.n	f01e <G_q+0x6f2e>
    t13_re = 0.0;
    eff0:	f04f 0300 	mov.w	r3, #0
    eff4:	f04f 0400 	mov.w	r4, #0
    eff8:	f241 3278 	movw	r2, #4984	; 0x1378
    effc:	443a      	add	r2, r7
    effe:	e9c2 3400 	strd	r3, r4, [r2]
    t13_im = t81.im / 2.0;
    f002:	f507 63ac 	add.w	r3, r7, #1376	; 0x560
    f006:	ed93 6b02 	vldr	d6, [r3, #8]
    f00a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    f00e:	ee86 7b05 	vdiv.f64	d7, d6, d5
    f012:	f241 3370 	movw	r3, #4976	; 0x1370
    f016:	443b      	add	r3, r7
    f018:	ed83 7b00 	vstr	d7, [r3]
    f01c:	e019      	b.n	f052 <G_q+0x6f62>
  } else {
    t13_re = t81.re / 2.0;
    f01e:	f507 63ac 	add.w	r3, r7, #1376	; 0x560
    f022:	ed93 6b00 	vldr	d6, [r3]
    f026:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    f02a:	ee86 7b05 	vdiv.f64	d7, d6, d5
    f02e:	f241 3378 	movw	r3, #4984	; 0x1378
    f032:	443b      	add	r3, r7
    f034:	ed83 7b00 	vstr	d7, [r3]
    t13_im = t81.im / 2.0;
    f038:	f507 63ac 	add.w	r3, r7, #1376	; 0x560
    f03c:	ed93 6b02 	vldr	d6, [r3, #8]
    f040:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    f044:	ee86 7b05 	vdiv.f64	d7, d6, d5
    f048:	f241 3370 	movw	r3, #4976	; 0x1370
    f04c:	443b      	add	r3, r7
    f04e:	ed83 7b00 	vstr	d7, [r3]
  }

  t16_re += t34_re;
    f052:	f241 3368 	movw	r3, #4968	; 0x1368
    f056:	443b      	add	r3, r7
    f058:	ed93 6b00 	vldr	d6, [r3]
    f05c:	f241 33b8 	movw	r3, #5048	; 0x13b8
    f060:	443b      	add	r3, r7
    f062:	ed93 7b00 	vldr	d7, [r3]
    f066:	ee36 7b07 	vadd.f64	d7, d6, d7
    f06a:	f241 3368 	movw	r3, #4968	; 0x1368
    f06e:	443b      	add	r3, r7
    f070:	ed83 7b00 	vstr	d7, [r3]
  t12_re += t34_im;
    f074:	f241 3388 	movw	r3, #5000	; 0x1388
    f078:	443b      	add	r3, r7
    f07a:	ed93 6b00 	vldr	d6, [r3]
    f07e:	f241 33b0 	movw	r3, #5040	; 0x13b0
    f082:	443b      	add	r3, r7
    f084:	ed93 7b00 	vldr	d7, [r3]
    f088:	ee36 7b07 	vadd.f64	d7, d6, d7
    f08c:	f241 3388 	movw	r3, #5000	; 0x1388
    f090:	443b      	add	r3, r7
    f092:	ed83 7b00 	vstr	d7, [r3]
  t16_im += t13_re;
    f096:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    f09a:	ed93 6b00 	vldr	d6, [r3]
    f09e:	f241 3378 	movw	r3, #4984	; 0x1378
    f0a2:	443b      	add	r3, r7
    f0a4:	ed93 7b00 	vldr	d7, [r3]
    f0a8:	ee36 7b07 	vadd.f64	d7, d6, d7
    f0ac:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    f0b0:	ed83 7b00 	vstr	d7, [r3]
  t20_re += t13_im;
    f0b4:	f241 3348 	movw	r3, #4936	; 0x1348
    f0b8:	443b      	add	r3, r7
    f0ba:	ed93 6b00 	vldr	d6, [r3]
    f0be:	f241 3370 	movw	r3, #4976	; 0x1370
    f0c2:	443b      	add	r3, r7
    f0c4:	ed93 7b00 	vldr	d7, [r3]
    f0c8:	ee36 7b07 	vadd.f64	d7, d6, d7
    f0cc:	f241 3348 	movw	r3, #4936	; 0x1348
    f0d0:	443b      	add	r3, r7
    f0d2:	ed83 7b00 	vstr	d7, [r3]
  t34_re = (t83.re * 0.0 - t83.im * 0.5) - (t82.re * 0.0 - t82.im * 0.5);
    f0d6:	f507 634c 	add.w	r3, r7, #3264	; 0xcc0
    f0da:	ed93 7b00 	vldr	d7, [r3]
    f0de:	ed9f 6bec 	vldr	d6, [pc, #944]	; f490 <G_q+0x73a0>
    f0e2:	ee27 6b06 	vmul.f64	d6, d7, d6
    f0e6:	f507 634c 	add.w	r3, r7, #3264	; 0xcc0
    f0ea:	ed93 7b02 	vldr	d7, [r3, #8]
    f0ee:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    f0f2:	ee27 7b05 	vmul.f64	d7, d7, d5
    f0f6:	ee36 6b47 	vsub.f64	d6, d6, d7
    f0fa:	f507 634b 	add.w	r3, r7, #3248	; 0xcb0
    f0fe:	ed93 7b00 	vldr	d7, [r3]
    f102:	ed9f 5be3 	vldr	d5, [pc, #908]	; f490 <G_q+0x73a0>
    f106:	ee27 5b05 	vmul.f64	d5, d7, d5
    f10a:	f507 634b 	add.w	r3, r7, #3248	; 0xcb0
    f10e:	ed93 7b02 	vldr	d7, [r3, #8]
    f112:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    f116:	ee27 7b04 	vmul.f64	d7, d7, d4
    f11a:	ee35 7b47 	vsub.f64	d7, d5, d7
    f11e:	ee36 7b47 	vsub.f64	d7, d6, d7
    f122:	f241 33b8 	movw	r3, #5048	; 0x13b8
    f126:	443b      	add	r3, r7
    f128:	ed83 7b00 	vstr	d7, [r3]
  t34_im = (t83.re * 0.5 + t83.im * 0.0) - (t82.re * 0.5 + t82.im * 0.0);
    f12c:	f507 634c 	add.w	r3, r7, #3264	; 0xcc0
    f130:	ed93 7b00 	vldr	d7, [r3]
    f134:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    f138:	ee27 6b06 	vmul.f64	d6, d7, d6
    f13c:	f507 634c 	add.w	r3, r7, #3264	; 0xcc0
    f140:	ed93 7b02 	vldr	d7, [r3, #8]
    f144:	ed9f 5bd2 	vldr	d5, [pc, #840]	; f490 <G_q+0x73a0>
    f148:	ee27 7b05 	vmul.f64	d7, d7, d5
    f14c:	ee36 6b07 	vadd.f64	d6, d6, d7
    f150:	f507 634b 	add.w	r3, r7, #3248	; 0xcb0
    f154:	ed93 7b00 	vldr	d7, [r3]
    f158:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    f15c:	ee27 5b05 	vmul.f64	d5, d7, d5
    f160:	f507 634b 	add.w	r3, r7, #3248	; 0xcb0
    f164:	ed93 7b02 	vldr	d7, [r3, #8]
    f168:	ed9f 4bc9 	vldr	d4, [pc, #804]	; f490 <G_q+0x73a0>
    f16c:	ee27 7b04 	vmul.f64	d7, d7, d4
    f170:	ee35 7b07 	vadd.f64	d7, d5, d7
    f174:	ee36 7b47 	vsub.f64	d7, d6, d7
    f178:	f241 33b0 	movw	r3, #5040	; 0x13b0
    f17c:	443b      	add	r3, r7
    f17e:	ed83 7b00 	vstr	d7, [r3]
  t12_im = (t85.re * 0.0 - t85.im * 0.5) - (t84.re * 0.0 - t84.im * 0.5);
    f182:	f507 63b0 	add.w	r3, r7, #1408	; 0x580
    f186:	ed93 7b00 	vldr	d7, [r3]
    f18a:	ed9f 6bc1 	vldr	d6, [pc, #772]	; f490 <G_q+0x73a0>
    f18e:	ee27 6b06 	vmul.f64	d6, d7, d6
    f192:	f507 63b0 	add.w	r3, r7, #1408	; 0x580
    f196:	ed93 7b02 	vldr	d7, [r3, #8]
    f19a:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    f19e:	ee27 7b05 	vmul.f64	d7, d7, d5
    f1a2:	ee36 6b47 	vsub.f64	d6, d6, d7
    f1a6:	f507 63ae 	add.w	r3, r7, #1392	; 0x570
    f1aa:	ed93 7b00 	vldr	d7, [r3]
    f1ae:	ed9f 5bb8 	vldr	d5, [pc, #736]	; f490 <G_q+0x73a0>
    f1b2:	ee27 5b05 	vmul.f64	d5, d7, d5
    f1b6:	f507 63ae 	add.w	r3, r7, #1392	; 0x570
    f1ba:	ed93 7b02 	vldr	d7, [r3, #8]
    f1be:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    f1c2:	ee27 7b04 	vmul.f64	d7, d7, d4
    f1c6:	ee35 7b47 	vsub.f64	d7, d5, d7
    f1ca:	ee36 7b47 	vsub.f64	d7, d6, d7
    f1ce:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    f1d2:	ed83 7b00 	vstr	d7, [r3]
  t85_im = (t85.re * 0.5 + t85.im * 0.0) - (t84.re * 0.5 + t84.im * 0.0);
    f1d6:	f507 63b0 	add.w	r3, r7, #1408	; 0x580
    f1da:	ed93 7b00 	vldr	d7, [r3]
    f1de:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    f1e2:	ee27 6b06 	vmul.f64	d6, d7, d6
    f1e6:	f507 63b0 	add.w	r3, r7, #1408	; 0x580
    f1ea:	ed93 7b02 	vldr	d7, [r3, #8]
    f1ee:	ed9f 5ba8 	vldr	d5, [pc, #672]	; f490 <G_q+0x73a0>
    f1f2:	ee27 7b05 	vmul.f64	d7, d7, d5
    f1f6:	ee36 6b07 	vadd.f64	d6, d6, d7
    f1fa:	f507 63ae 	add.w	r3, r7, #1392	; 0x570
    f1fe:	ed93 7b00 	vldr	d7, [r3]
    f202:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    f206:	ee27 5b05 	vmul.f64	d5, d7, d5
    f20a:	f507 63ae 	add.w	r3, r7, #1392	; 0x570
    f20e:	ed93 7b02 	vldr	d7, [r3, #8]
    f212:	ed9f 4b9f 	vldr	d4, [pc, #636]	; f490 <G_q+0x73a0>
    f216:	ee27 7b04 	vmul.f64	d7, d7, d4
    f21a:	ee35 7b07 	vadd.f64	d7, d5, d7
    f21e:	ee36 7b47 	vsub.f64	d7, d6, d7
    f222:	f241 3318 	movw	r3, #4888	; 0x1318
    f226:	443b      	add	r3, r7
    f228:	ed83 7b00 	vstr	d7, [r3]
  t13_im = (t16_re * t16_im - t12_re * t20_re) + (t34_re * t12_im - t34_im *
    f22c:	f241 3368 	movw	r3, #4968	; 0x1368
    f230:	443b      	add	r3, r7
    f232:	ed93 6b00 	vldr	d6, [r3]
    f236:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    f23a:	ed93 7b00 	vldr	d7, [r3]
    f23e:	ee26 6b07 	vmul.f64	d6, d6, d7
    f242:	f241 3388 	movw	r3, #5000	; 0x1388
    f246:	443b      	add	r3, r7
    f248:	ed93 5b00 	vldr	d5, [r3]
    f24c:	f241 3348 	movw	r3, #4936	; 0x1348
    f250:	443b      	add	r3, r7
    f252:	ed93 7b00 	vldr	d7, [r3]
    f256:	ee25 7b07 	vmul.f64	d7, d5, d7
    f25a:	ee36 6b47 	vsub.f64	d6, d6, d7
    f25e:	f241 33b8 	movw	r3, #5048	; 0x13b8
    f262:	443b      	add	r3, r7
    f264:	ed93 5b00 	vldr	d5, [r3]
    f268:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    f26c:	ed93 7b00 	vldr	d7, [r3]
    f270:	ee25 5b07 	vmul.f64	d5, d5, d7
    f274:	f241 33b0 	movw	r3, #5040	; 0x13b0
    f278:	443b      	add	r3, r7
    f27a:	ed93 4b00 	vldr	d4, [r3]
    f27e:	f241 3318 	movw	r3, #4888	; 0x1318
    f282:	443b      	add	r3, r7
    f284:	ed93 7b00 	vldr	d7, [r3]
    f288:	ee24 7b07 	vmul.f64	d7, d4, d7
    f28c:	ee35 7b47 	vsub.f64	d7, d5, d7
    f290:	ee36 7b07 	vadd.f64	d7, d6, d7
    f294:	f241 3370 	movw	r3, #4976	; 0x1370
    f298:	443b      	add	r3, r7
    f29a:	ed83 7b00 	vstr	d7, [r3]
    t85_im);
  t12_re = (t16_re * t20_re + t12_re * t16_im) + (t34_re * t85_im + t34_im *
    f29e:	f241 3368 	movw	r3, #4968	; 0x1368
    f2a2:	443b      	add	r3, r7
    f2a4:	ed93 6b00 	vldr	d6, [r3]
    f2a8:	f241 3348 	movw	r3, #4936	; 0x1348
    f2ac:	443b      	add	r3, r7
    f2ae:	ed93 7b00 	vldr	d7, [r3]
    f2b2:	ee26 6b07 	vmul.f64	d6, d6, d7
    f2b6:	f241 3388 	movw	r3, #5000	; 0x1388
    f2ba:	443b      	add	r3, r7
    f2bc:	ed93 5b00 	vldr	d5, [r3]
    f2c0:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    f2c4:	ed93 7b00 	vldr	d7, [r3]
    f2c8:	ee25 7b07 	vmul.f64	d7, d5, d7
    f2cc:	ee36 6b07 	vadd.f64	d6, d6, d7
    f2d0:	f241 33b8 	movw	r3, #5048	; 0x13b8
    f2d4:	443b      	add	r3, r7
    f2d6:	ed93 5b00 	vldr	d5, [r3]
    f2da:	f241 3318 	movw	r3, #4888	; 0x1318
    f2de:	443b      	add	r3, r7
    f2e0:	ed93 7b00 	vldr	d7, [r3]
    f2e4:	ee25 5b07 	vmul.f64	d5, d5, d7
    f2e8:	f241 33b0 	movw	r3, #5040	; 0x13b0
    f2ec:	443b      	add	r3, r7
    f2ee:	ed93 4b00 	vldr	d4, [r3]
    f2f2:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
    f2f6:	ed93 7b00 	vldr	d7, [r3]
    f2fa:	ee24 7b07 	vmul.f64	d7, d4, d7
    f2fe:	ee35 7b07 	vadd.f64	d7, d5, d7
    f302:	ee36 7b07 	vadd.f64	d7, d6, d7
    f306:	f241 3388 	movw	r3, #5000	; 0x1388
    f30a:	443b      	add	r3, r7
    f30c:	ed83 7b00 	vstr	d7, [r3]
    t12_im);
  t13_re = (t19_re_tmp - t87.im * 3.061616997868383E-17) - (t86.re * 0.0 -
    f310:	4b65      	ldr	r3, [pc, #404]	; (f4a8 <G_q+0x73b8>)
    f312:	f241 32d0 	movw	r2, #5072	; 0x13d0
    f316:	443a      	add	r2, r7
    f318:	4413      	add	r3, r2
    f31a:	ed93 7b02 	vldr	d7, [r3, #8]
    f31e:	ed9f 6b5e 	vldr	d6, [pc, #376]	; f498 <G_q+0x73a8>
    f322:	ee27 7b06 	vmul.f64	d7, d7, d6
    f326:	f241 2370 	movw	r3, #4720	; 0x1270
    f32a:	443b      	add	r3, r7
    f32c:	ed93 6b00 	vldr	d6, [r3]
    f330:	ee36 6b47 	vsub.f64	d6, d6, d7
    f334:	f507 73c8 	add.w	r3, r7, #400	; 0x190
    f338:	ed93 7b00 	vldr	d7, [r3]
    f33c:	ed9f 5b54 	vldr	d5, [pc, #336]	; f490 <G_q+0x73a0>
    f340:	ee27 5b05 	vmul.f64	d5, d7, d5
    t86.im * 3.061616997868383E-17);
    f344:	f507 73c8 	add.w	r3, r7, #400	; 0x190
    f348:	ed93 7b02 	vldr	d7, [r3, #8]
    f34c:	ed9f 4b52 	vldr	d4, [pc, #328]	; f498 <G_q+0x73a8>
    f350:	ee27 7b04 	vmul.f64	d7, d7, d4
  t13_re = (t19_re_tmp - t87.im * 3.061616997868383E-17) - (t86.re * 0.0 -
    f354:	ee35 7b47 	vsub.f64	d7, d5, d7
    f358:	ee36 7b47 	vsub.f64	d7, d6, d7
    f35c:	f241 3378 	movw	r3, #4984	; 0x1378
    f360:	443b      	add	r3, r7
    f362:	ed83 7b00 	vstr	d7, [r3]
  t34_re = (t87.re * 3.061616997868383E-17 + t19_im_tmp) - (t86.re *
    f366:	4b50      	ldr	r3, [pc, #320]	; (f4a8 <G_q+0x73b8>)
    f368:	f241 32d0 	movw	r2, #5072	; 0x13d0
    f36c:	443a      	add	r2, r7
    f36e:	4413      	add	r3, r2
    f370:	ed93 7b00 	vldr	d7, [r3]
    f374:	ed9f 6b48 	vldr	d6, [pc, #288]	; f498 <G_q+0x73a8>
    f378:	ee27 6b06 	vmul.f64	d6, d7, d6
    f37c:	f241 2368 	movw	r3, #4712	; 0x1268
    f380:	443b      	add	r3, r7
    f382:	ed93 7b00 	vldr	d7, [r3]
    f386:	ee36 6b07 	vadd.f64	d6, d6, d7
    f38a:	f507 73c8 	add.w	r3, r7, #400	; 0x190
    f38e:	ed93 7b00 	vldr	d7, [r3]
    f392:	ed9f 5b41 	vldr	d5, [pc, #260]	; f498 <G_q+0x73a8>
    f396:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t86.im * 0.0);
    f39a:	f507 73c8 	add.w	r3, r7, #400	; 0x190
    f39e:	ed93 7b02 	vldr	d7, [r3, #8]
    f3a2:	ed9f 4b3b 	vldr	d4, [pc, #236]	; f490 <G_q+0x73a0>
    f3a6:	ee27 7b04 	vmul.f64	d7, d7, d4
    f3aa:	ee35 7b07 	vadd.f64	d7, d5, d7
  t34_re = (t87.re * 3.061616997868383E-17 + t19_im_tmp) - (t86.re *
    f3ae:	ee36 7b47 	vsub.f64	d7, d6, d7
    f3b2:	f241 33b8 	movw	r3, #5048	; 0x13b8
    f3b6:	443b      	add	r3, r7
    f3b8:	ed83 7b00 	vstr	d7, [r3]
  b_t54_re += t55_re;
    f3bc:	f241 23f0 	movw	r3, #4848	; 0x12f0
    f3c0:	443b      	add	r3, r7
    f3c2:	ed93 6b00 	vldr	d6, [r3]
    f3c6:	f507 5397 	add.w	r3, r7, #4832	; 0x12e0
    f3ca:	ed93 7b00 	vldr	d7, [r3]
    f3ce:	ee36 7b07 	vadd.f64	d7, d6, d7
    f3d2:	f241 23f0 	movw	r3, #4848	; 0x12f0
    f3d6:	443b      	add	r3, r7
    f3d8:	ed83 7b00 	vstr	d7, [r3]
  b_t54_im += t55_im;
    f3dc:	f241 23e8 	movw	r3, #4840	; 0x12e8
    f3e0:	443b      	add	r3, r7
    f3e2:	ed93 6b00 	vldr	d6, [r3]
    f3e6:	f241 23d8 	movw	r3, #4824	; 0x12d8
    f3ea:	443b      	add	r3, r7
    f3ec:	ed93 7b00 	vldr	d7, [r3]
    f3f0:	ee36 7b07 	vadd.f64	d7, d6, d7
    f3f4:	f241 23e8 	movw	r3, #4840	; 0x12e8
    f3f8:	443b      	add	r3, r7
    f3fa:	ed83 7b00 	vstr	d7, [r3]
  t34_im = (((((t56.re * 0.0 - t56.im * 3.749399456654644E-33) - (t57.re * 0.0 -
    f3fe:	f507 633d 	add.w	r3, r7, #3024	; 0xbd0
    f402:	ed93 7b00 	vldr	d7, [r3]
    f406:	ed9f 6b22 	vldr	d6, [pc, #136]	; f490 <G_q+0x73a0>
    f40a:	ee27 6b06 	vmul.f64	d6, d7, d6
    f40e:	f507 633d 	add.w	r3, r7, #3024	; 0xbd0
    f412:	ed93 7b02 	vldr	d7, [r3, #8]
    f416:	ed9f 5b22 	vldr	d5, [pc, #136]	; f4a0 <G_q+0x73b0>
    f41a:	ee27 7b05 	vmul.f64	d7, d7, d5
    f41e:	ee36 6b47 	vsub.f64	d6, d6, d7
    f422:	f507 633e 	add.w	r3, r7, #3040	; 0xbe0
    f426:	ed93 7b00 	vldr	d7, [r3]
    f42a:	ed9f 5b19 	vldr	d5, [pc, #100]	; f490 <G_q+0x73a0>
    f42e:	ee27 5b05 	vmul.f64	d5, d7, d5
    t57.im * 3.749399456654644E-33)) + (t70_re * t72_re - t70_im * b_t10_re)) -
    f432:	f507 633e 	add.w	r3, r7, #3040	; 0xbe0
    f436:	ed93 7b02 	vldr	d7, [r3, #8]
    f43a:	ed9f 4b19 	vldr	d4, [pc, #100]	; f4a0 <G_q+0x73b0>
    f43e:	ee27 7b04 	vmul.f64	d7, d7, d4
  t34_im = (((((t56.re * 0.0 - t56.im * 3.749399456654644E-33) - (t57.re * 0.0 -
    f442:	ee35 7b47 	vsub.f64	d7, d5, d7
    f446:	ee36 6b47 	vsub.f64	d6, d6, d7
    t57.im * 3.749399456654644E-33)) + (t70_re * t72_re - t70_im * b_t10_re)) -
    f44a:	f241 22d0 	movw	r2, #4816	; 0x12d0
    f44e:	443a      	add	r2, r7
    f450:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
    f454:	ed92 5b00 	vldr	d5, [r2]
    f458:	ed93 7b00 	vldr	d7, [r3]
    f45c:	ee25 5b07 	vmul.f64	d5, d5, d7
    f460:	f241 23c8 	movw	r3, #4808	; 0x12c8
    f464:	443b      	add	r3, r7
    f466:	ed93 4b00 	vldr	d4, [r3]
    f46a:	f241 3338 	movw	r3, #4920	; 0x1338
    f46e:	443b      	add	r3, r7
    f470:	ed93 7b00 	vldr	d7, [r3]
    f474:	ee24 7b07 	vmul.f64	d7, d4, d7
    f478:	ee35 7b47 	vsub.f64	d7, d5, d7
    f47c:	ee36 6b07 	vadd.f64	d6, d6, d7
             (t74_re * t76_re - t74_im * t3_im)) + (t23_re * t60_re - t58_im *
    f480:	f241 22b8 	movw	r2, #4792	; 0x12b8
    f484:	443a      	add	r2, r7
    f486:	f241 23a8 	movw	r3, #4776	; 0x12a8
    f48a:	443b      	add	r3, r7
    f48c:	e00e      	b.n	f4ac <G_q+0x73bc>
    f48e:	bf00      	nop
	...
    f498:	33145c07 	.word	0x33145c07
    f49c:	3c81a626 	.word	0x3c81a626
    f4a0:	858a5d48 	.word	0x858a5d48
    f4a4:	393377ce 	.word	0x393377ce
    f4a8:	ffffedd0 	.word	0xffffedd0
    f4ac:	ed92 5b00 	vldr	d5, [r2]
    f4b0:	ed93 7b00 	vldr	d7, [r3]
    f4b4:	ee25 5b07 	vmul.f64	d5, d5, d7
    f4b8:	f241 23b0 	movw	r3, #4784	; 0x12b0
    f4bc:	443b      	add	r3, r7
    f4be:	ed93 4b00 	vldr	d4, [r3]
    f4c2:	f241 3310 	movw	r3, #4880	; 0x1310
    f4c6:	443b      	add	r3, r7
    f4c8:	ed93 7b00 	vldr	d7, [r3]
    f4cc:	ee24 7b07 	vmul.f64	d7, d4, d7
    f4d0:	ee35 7b47 	vsub.f64	d7, d5, d7
    t57.im * 3.749399456654644E-33)) + (t70_re * t72_re - t70_im * b_t10_re)) -
    f4d4:	ee36 6b47 	vsub.f64	d6, d6, d7
             (t74_re * t76_re - t74_im * t3_im)) + (t23_re * t60_re - t58_im *
    f4d8:	f241 2350 	movw	r3, #4688	; 0x1250
    f4dc:	443b      	add	r3, r7
    f4de:	f241 3230 	movw	r2, #4912	; 0x1330
    f4e2:	443a      	add	r2, r7
    f4e4:	ed92 5b00 	vldr	d5, [r2]
    f4e8:	ed93 7b00 	vldr	d7, [r3]
    f4ec:	ee25 5b07 	vmul.f64	d5, d5, d7
    f4f0:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
    f4f4:	ed93 4b00 	vldr	d4, [r3]
    f4f8:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    f4fc:	ed93 7b00 	vldr	d7, [r3]
    f500:	ee24 7b07 	vmul.f64	d7, d4, d7
    f504:	ee35 7b47 	vsub.f64	d7, d5, d7
    f508:	ee36 6b07 	vadd.f64	d6, d6, d7
             t20_im)) + (t13_im * t13_re - t12_re * t34_re);
    f50c:	f241 3370 	movw	r3, #4976	; 0x1370
    f510:	443b      	add	r3, r7
    f512:	ed93 5b00 	vldr	d5, [r3]
    f516:	f241 3378 	movw	r3, #4984	; 0x1378
    f51a:	443b      	add	r3, r7
    f51c:	ed93 7b00 	vldr	d7, [r3]
    f520:	ee25 5b07 	vmul.f64	d5, d5, d7
    f524:	f241 3388 	movw	r3, #5000	; 0x1388
    f528:	443b      	add	r3, r7
    f52a:	ed93 4b00 	vldr	d4, [r3]
    f52e:	f241 33b8 	movw	r3, #5048	; 0x13b8
    f532:	443b      	add	r3, r7
    f534:	ed93 7b00 	vldr	d7, [r3]
    f538:	ee24 7b07 	vmul.f64	d7, d4, d7
    f53c:	ee35 7b47 	vsub.f64	d7, d5, d7
  t34_im = (((((t56.re * 0.0 - t56.im * 3.749399456654644E-33) - (t57.re * 0.0 -
    f540:	ee36 7b07 	vadd.f64	d7, d6, d7
    f544:	f241 33b0 	movw	r3, #5040	; 0x13b0
    f548:	443b      	add	r3, r7
    f54a:	ed83 7b00 	vstr	d7, [r3]
  t34_re = (((((t56.re * 3.749399456654644E-33 + t56.im * 0.0) - (t57.re *
    f54e:	f507 633d 	add.w	r3, r7, #3024	; 0xbd0
    f552:	ed93 7b00 	vldr	d7, [r3]
    f556:	ed9f 6be8 	vldr	d6, [pc, #928]	; f8f8 <G_q+0x7808>
    f55a:	ee27 6b06 	vmul.f64	d6, d7, d6
    f55e:	f507 633d 	add.w	r3, r7, #3024	; 0xbd0
    f562:	ed93 7b02 	vldr	d7, [r3, #8]
    f566:	ed9f 5be6 	vldr	d5, [pc, #920]	; f900 <G_q+0x7810>
    f56a:	ee27 7b05 	vmul.f64	d7, d7, d5
    f56e:	ee36 6b07 	vadd.f64	d6, d6, d7
    f572:	f507 633e 	add.w	r3, r7, #3040	; 0xbe0
    f576:	ed93 7b00 	vldr	d7, [r3]
    f57a:	ed9f 5bdf 	vldr	d5, [pc, #892]	; f8f8 <G_q+0x7808>
    f57e:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.749399456654644E-33 + t57.im * 0.0)) + (t70_re * b_t10_re + t70_im *
    f582:	f507 633e 	add.w	r3, r7, #3040	; 0xbe0
    f586:	ed93 7b02 	vldr	d7, [r3, #8]
    f58a:	ed9f 4bdd 	vldr	d4, [pc, #884]	; f900 <G_q+0x7810>
    f58e:	ee27 7b04 	vmul.f64	d7, d7, d4
    f592:	ee35 7b07 	vadd.f64	d7, d5, d7
  t34_re = (((((t56.re * 3.749399456654644E-33 + t56.im * 0.0) - (t57.re *
    f596:	ee36 6b47 	vsub.f64	d6, d6, d7
    3.749399456654644E-33 + t57.im * 0.0)) + (t70_re * b_t10_re + t70_im *
    f59a:	f241 23d0 	movw	r3, #4816	; 0x12d0
    f59e:	443b      	add	r3, r7
    f5a0:	ed93 5b00 	vldr	d5, [r3]
    f5a4:	f241 3338 	movw	r3, #4920	; 0x1338
    f5a8:	443b      	add	r3, r7
    f5aa:	ed93 7b00 	vldr	d7, [r3]
    f5ae:	ee25 5b07 	vmul.f64	d5, d5, d7
    f5b2:	f241 22c8 	movw	r2, #4808	; 0x12c8
    f5b6:	443a      	add	r2, r7
    f5b8:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
    f5bc:	ed92 4b00 	vldr	d4, [r2]
    f5c0:	ed93 7b00 	vldr	d7, [r3]
    f5c4:	ee24 7b07 	vmul.f64	d7, d4, d7
    f5c8:	ee35 7b07 	vadd.f64	d7, d5, d7
    f5cc:	ee36 6b07 	vadd.f64	d6, d6, d7
    t72_re)) - (t74_re * t3_im + t74_im * t76_re)) + (t23_re * t20_im + t58_im *
    f5d0:	f241 23b8 	movw	r3, #4792	; 0x12b8
    f5d4:	443b      	add	r3, r7
    f5d6:	ed93 5b00 	vldr	d5, [r3]
    f5da:	f241 3310 	movw	r3, #4880	; 0x1310
    f5de:	443b      	add	r3, r7
    f5e0:	ed93 7b00 	vldr	d7, [r3]
    f5e4:	ee25 5b07 	vmul.f64	d5, d5, d7
    f5e8:	f241 22b0 	movw	r2, #4784	; 0x12b0
    f5ec:	443a      	add	r2, r7
    f5ee:	f241 23a8 	movw	r3, #4776	; 0x12a8
    f5f2:	443b      	add	r3, r7
    f5f4:	ed92 4b00 	vldr	d4, [r2]
    f5f8:	ed93 7b00 	vldr	d7, [r3]
    f5fc:	ee24 7b07 	vmul.f64	d7, d4, d7
    f600:	ee35 7b07 	vadd.f64	d7, d5, d7
    f604:	ee36 6b47 	vsub.f64	d6, d6, d7
    f608:	f241 3330 	movw	r3, #4912	; 0x1330
    f60c:	443b      	add	r3, r7
    f60e:	ed93 5b00 	vldr	d5, [r3]
    f612:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
    f616:	ed93 7b00 	vldr	d7, [r3]
    f61a:	ee25 5b07 	vmul.f64	d5, d5, d7
    f61e:	f507 5295 	add.w	r2, r7, #4768	; 0x12a0
    f622:	f241 2350 	movw	r3, #4688	; 0x1250
    f626:	443b      	add	r3, r7
    f628:	ed92 4b00 	vldr	d4, [r2]
    f62c:	ed93 7b00 	vldr	d7, [r3]
    f630:	ee24 7b07 	vmul.f64	d7, d4, d7
    f634:	ee35 7b07 	vadd.f64	d7, d5, d7
    f638:	ee36 6b07 	vadd.f64	d6, d6, d7
             t60_re)) + (t13_im * t34_re + t12_re * t13_re);
    f63c:	f241 3370 	movw	r3, #4976	; 0x1370
    f640:	443b      	add	r3, r7
    f642:	ed93 5b00 	vldr	d5, [r3]
    f646:	f241 33b8 	movw	r3, #5048	; 0x13b8
    f64a:	443b      	add	r3, r7
    f64c:	ed93 7b00 	vldr	d7, [r3]
    f650:	ee25 5b07 	vmul.f64	d5, d5, d7
    f654:	f241 3388 	movw	r3, #5000	; 0x1388
    f658:	443b      	add	r3, r7
    f65a:	ed93 4b00 	vldr	d4, [r3]
    f65e:	f241 3378 	movw	r3, #4984	; 0x1378
    f662:	443b      	add	r3, r7
    f664:	ed93 7b00 	vldr	d7, [r3]
    f668:	ee24 7b07 	vmul.f64	d7, d4, d7
    f66c:	ee35 7b07 	vadd.f64	d7, d5, d7
  t34_re = (((((t56.re * 3.749399456654644E-33 + t56.im * 0.0) - (t57.re *
    f670:	ee36 7b07 	vadd.f64	d7, d6, d7
    f674:	f241 33b8 	movw	r3, #5048	; 0x13b8
    f678:	443b      	add	r3, r7
    f67a:	ed83 7b00 	vstr	d7, [r3]
  b_G_q[1].re = -g * ((((((((t3.re * 0.1335 - t3.im * 4.7990846441586913E-18) +
    f67e:	4bae      	ldr	r3, [pc, #696]	; (f938 <G_q+0x7848>)
    f680:	f241 32d0 	movw	r2, #5072	; 0x13d0
    f684:	443a      	add	r2, r7
    f686:	4413      	add	r3, r2
    f688:	ed93 7b00 	vldr	d7, [r3]
    f68c:	eeb1 6b47 	vneg.f64	d6, d7
    f690:	f507 6325 	add.w	r3, r7, #2640	; 0xa50
    f694:	ed93 7b00 	vldr	d7, [r3]
    f698:	ed9f 5b9b 	vldr	d5, [pc, #620]	; f908 <G_q+0x7818>
    f69c:	ee27 5b05 	vmul.f64	d5, d7, d5
    f6a0:	f507 6325 	add.w	r3, r7, #2640	; 0xa50
    f6a4:	ed93 7b02 	vldr	d7, [r3, #8]
    f6a8:	ed9f 4b99 	vldr	d4, [pc, #612]	; f910 <G_q+0x7820>
    f6ac:	ee27 7b04 	vmul.f64	d7, d7, d4
    f6b0:	ee35 5b47 	vsub.f64	d5, d5, d7
    (t83.re * 0.1335 - t83.im * -4.7990846441586913E-18)) + (t33_re * t35_re -
    f6b4:	f507 634c 	add.w	r3, r7, #3264	; 0xcc0
    f6b8:	ed93 7b00 	vldr	d7, [r3]
    f6bc:	ed9f 4b92 	vldr	d4, [pc, #584]	; f908 <G_q+0x7818>
    f6c0:	ee27 4b04 	vmul.f64	d4, d7, d4
    f6c4:	f507 634c 	add.w	r3, r7, #3264	; 0xcc0
    f6c8:	ed93 7b02 	vldr	d7, [r3, #8]
    f6cc:	ed9f 3b90 	vldr	d3, [pc, #576]	; f910 <G_q+0x7820>
    f6d0:	ee27 7b03 	vmul.f64	d7, d7, d3
    f6d4:	ee34 7b07 	vadd.f64	d7, d4, d7
  b_G_q[1].re = -g * ((((((((t3.re * 0.1335 - t3.im * 4.7990846441586913E-18) +
    f6d8:	ee35 5b07 	vadd.f64	d5, d5, d7
    (t83.re * 0.1335 - t83.im * -4.7990846441586913E-18)) + (t33_re * t35_re -
    f6dc:	f241 2398 	movw	r3, #4760	; 0x1298
    f6e0:	443b      	add	r3, r7
    f6e2:	f241 32c8 	movw	r2, #5064	; 0x13c8
    f6e6:	443a      	add	r2, r7
    f6e8:	ed92 4b00 	vldr	d4, [r2]
    f6ec:	ed93 7b00 	vldr	d7, [r3]
    f6f0:	ee24 4b07 	vmul.f64	d4, d4, d7
    t33_im * t35_im) * 0.1376) - (t37_re * t39_re - t37_im * t39_im) * 0.1376) -
    f6f4:	f241 2390 	movw	r3, #4752	; 0x1290
    f6f8:	443b      	add	r3, r7
    f6fa:	f507 529e 	add.w	r2, r7, #5056	; 0x13c0
    f6fe:	ed92 3b00 	vldr	d3, [r2]
    f702:	ed93 7b00 	vldr	d7, [r3]
    f706:	ee23 7b07 	vmul.f64	d7, d3, d7
    (t83.re * 0.1335 - t83.im * -4.7990846441586913E-18)) + (t33_re * t35_re -
    f70a:	ee34 7b47 	vsub.f64	d7, d4, d7
    t33_im * t35_im) * 0.1376) - (t37_re * t39_re - t37_im * t39_im) * 0.1376) -
    f70e:	ed9f 4b82 	vldr	d4, [pc, #520]	; f918 <G_q+0x7828>
    f712:	ee27 7b04 	vmul.f64	d7, d7, d4
    (t83.re * 0.1335 - t83.im * -4.7990846441586913E-18)) + (t33_re * t35_re -
    f716:	ee35 5b07 	vadd.f64	d5, d5, d7
    t33_im * t35_im) * 0.1376) - (t37_re * t39_re - t37_im * t39_im) * 0.1376) -
    f71a:	f241 2388 	movw	r3, #4744	; 0x1288
    f71e:	443b      	add	r3, r7
    f720:	f241 32a8 	movw	r2, #5032	; 0x13a8
    f724:	443a      	add	r2, r7
    f726:	ed92 4b00 	vldr	d4, [r2]
    f72a:	ed93 7b00 	vldr	d7, [r3]
    f72e:	ee24 4b07 	vmul.f64	d4, d4, d7
    f732:	f507 5394 	add.w	r3, r7, #4736	; 0x1280
    f736:	f507 529d 	add.w	r2, r7, #5024	; 0x13a0
    f73a:	ed92 3b00 	vldr	d3, [r2]
    f73e:	ed93 7b00 	vldr	d7, [r3]
    f742:	ee23 7b07 	vmul.f64	d7, d3, d7
    f746:	ee34 7b47 	vsub.f64	d7, d4, d7
    f74a:	ed9f 4b73 	vldr	d4, [pc, #460]	; f918 <G_q+0x7828>
    f74e:	ee27 7b04 	vmul.f64	d7, d7, d4
    f752:	ee35 5b47 	vsub.f64	d5, d5, d7
    (t54_re * t10_re - t54_im * t10_im) * 0.0215) + (t19_re * t8_re - t19_im *
    f756:	f241 3328 	movw	r3, #4904	; 0x1328
    f75a:	443b      	add	r3, r7
    f75c:	ed93 4b00 	vldr	d4, [r3]
    f760:	f241 3398 	movw	r3, #5016	; 0x1398
    f764:	443b      	add	r3, r7
    f766:	ed93 7b00 	vldr	d7, [r3]
    f76a:	ee24 4b07 	vmul.f64	d4, d4, d7
    f76e:	f241 2378 	movw	r3, #4728	; 0x1278
    f772:	443b      	add	r3, r7
    f774:	ed93 3b00 	vldr	d3, [r3]
    f778:	f241 3390 	movw	r3, #5008	; 0x1390
    f77c:	443b      	add	r3, r7
    f77e:	ed93 7b00 	vldr	d7, [r3]
    f782:	ee23 7b07 	vmul.f64	d7, d3, d7
    f786:	ee34 7b47 	vsub.f64	d7, d4, d7
    f78a:	ed9f 4b65 	vldr	d4, [pc, #404]	; f920 <G_q+0x7830>
    f78e:	ee27 7b04 	vmul.f64	d7, d7, d4
    t33_im * t35_im) * 0.1376) - (t37_re * t39_re - t37_im * t39_im) * 0.1376) -
    f792:	ee35 5b47 	vsub.f64	d5, d5, d7
    (t54_re * t10_re - t54_im * t10_im) * 0.0215) + (t19_re * t8_re - t19_im *
    f796:	f507 5393 	add.w	r3, r7, #4704	; 0x1260
    f79a:	f241 3258 	movw	r2, #4952	; 0x1358
    f79e:	443a      	add	r2, r7
    f7a0:	ed92 4b00 	vldr	d4, [r2]
    f7a4:	ed93 7b00 	vldr	d7, [r3]
    f7a8:	ee24 4b07 	vmul.f64	d4, d4, d7
    f7ac:	f241 3350 	movw	r3, #4944	; 0x1350
    f7b0:	443b      	add	r3, r7
    f7b2:	ed93 3b00 	vldr	d3, [r3]
    f7b6:	f507 5399 	add.w	r3, r7, #4896	; 0x1320
    f7ba:	ed93 7b00 	vldr	d7, [r3]
    f7be:	ee23 7b07 	vmul.f64	d7, d3, d7
    f7c2:	ee34 7b47 	vsub.f64	d7, d4, d7
    t8_im) * 1.3164953090834051E-18) - (t41_re * t43_re - t41_im * t43_im) *
    f7c6:	ed9f 4b58 	vldr	d4, [pc, #352]	; f928 <G_q+0x7838>
    f7ca:	ee27 7b04 	vmul.f64	d7, d7, d4
    (t54_re * t10_re - t54_im * t10_im) * 0.0215) + (t19_re * t8_re - t19_im *
    f7ce:	ee35 5b07 	vadd.f64	d5, d5, d7
    t8_im) * 1.3164953090834051E-18) - (t41_re * t43_re - t41_im * t43_im) *
    f7d2:	f241 2358 	movw	r3, #4696	; 0x1258
    f7d6:	443b      	add	r3, r7
    f7d8:	f241 3208 	movw	r2, #4872	; 0x1308
    f7dc:	443a      	add	r2, r7
    f7de:	ed92 4b00 	vldr	d4, [r2]
    f7e2:	ed93 7b00 	vldr	d7, [r3]
    f7e6:	ee24 4b07 	vmul.f64	d4, d4, d7
    f7ea:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
    f7ee:	ed93 3b00 	vldr	d3, [r3]
    f7f2:	f241 23f8 	movw	r3, #4856	; 0x12f8
    f7f6:	443b      	add	r3, r7
    f7f8:	ed93 7b00 	vldr	d7, [r3]
    f7fc:	ee23 7b07 	vmul.f64	d7, d3, d7
    f800:	ee34 7b47 	vsub.f64	d7, d4, d7
    f804:	ed9f 4b48 	vldr	d4, [pc, #288]	; f928 <G_q+0x7838>
    f808:	ee27 7b04 	vmul.f64	d7, d7, d4
    f80c:	ee35 5b47 	vsub.f64	d5, d5, d7
                       1.3164953090834051E-18) + (b_t54_re * t34_im - b_t54_im *
    f810:	f241 23f0 	movw	r3, #4848	; 0x12f0
    f814:	443b      	add	r3, r7
    f816:	ed93 4b00 	vldr	d4, [r3]
    f81a:	f241 33b0 	movw	r3, #5040	; 0x13b0
    f81e:	443b      	add	r3, r7
    f820:	ed93 7b00 	vldr	d7, [r3]
    f824:	ee24 4b07 	vmul.f64	d4, d4, d7
    f828:	f241 23e8 	movw	r3, #4840	; 0x12e8
    f82c:	443b      	add	r3, r7
    f82e:	ed93 3b00 	vldr	d3, [r3]
    f832:	f241 33b8 	movw	r3, #5048	; 0x13b8
    f836:	443b      	add	r3, r7
    f838:	ed93 7b00 	vldr	d7, [r3]
    f83c:	ee23 7b07 	vmul.f64	d7, d3, d7
    f840:	ee34 7b47 	vsub.f64	d7, d4, d7
    t34_re) * 0.0215);
    f844:	ed9f 4b36 	vldr	d4, [pc, #216]	; f920 <G_q+0x7830>
    f848:	ee27 7b04 	vmul.f64	d7, d7, d4
                       1.3164953090834051E-18) + (b_t54_re * t34_im - b_t54_im *
    f84c:	ee35 7b07 	vadd.f64	d7, d5, d7
  b_G_q[1].re = -g * ((((((((t3.re * 0.1335 - t3.im * 4.7990846441586913E-18) +
    f850:	4b3a      	ldr	r3, [pc, #232]	; (f93c <G_q+0x784c>)
    f852:	f241 32d0 	movw	r2, #5072	; 0x13d0
    f856:	443a      	add	r2, r7
    f858:	4413      	add	r3, r2
    f85a:	681b      	ldr	r3, [r3, #0]
    f85c:	3310      	adds	r3, #16
    f85e:	ee26 7b07 	vmul.f64	d7, d6, d7
    f862:	ed83 7b00 	vstr	d7, [r3]
  b_G_q[1].im = -g * ((((((((t3.re * 4.7990846441586913E-18 + t3.im * 0.1335) +
    f866:	4b34      	ldr	r3, [pc, #208]	; (f938 <G_q+0x7848>)
    f868:	f241 32d0 	movw	r2, #5072	; 0x13d0
    f86c:	443a      	add	r2, r7
    f86e:	4413      	add	r3, r2
    f870:	ed93 7b00 	vldr	d7, [r3]
    f874:	eeb1 6b47 	vneg.f64	d6, d7
    f878:	f507 6325 	add.w	r3, r7, #2640	; 0xa50
    f87c:	ed93 7b00 	vldr	d7, [r3]
    f880:	ed9f 5b23 	vldr	d5, [pc, #140]	; f910 <G_q+0x7820>
    f884:	ee27 5b05 	vmul.f64	d5, d7, d5
    f888:	f507 6325 	add.w	r3, r7, #2640	; 0xa50
    f88c:	ed93 7b02 	vldr	d7, [r3, #8]
    f890:	ed9f 4b1d 	vldr	d4, [pc, #116]	; f908 <G_q+0x7818>
    f894:	ee27 7b04 	vmul.f64	d7, d7, d4
    f898:	ee35 5b07 	vadd.f64	d5, d5, d7
    (t83.re * -4.7990846441586913E-18 + t83.im * 0.1335)) + (t33_re * t35_im +
    f89c:	f507 634c 	add.w	r3, r7, #3264	; 0xcc0
    f8a0:	ed93 7b00 	vldr	d7, [r3]
    f8a4:	ed9f 4b22 	vldr	d4, [pc, #136]	; f930 <G_q+0x7840>
    f8a8:	ee27 4b04 	vmul.f64	d4, d7, d4
    f8ac:	f507 634c 	add.w	r3, r7, #3264	; 0xcc0
    f8b0:	ed93 7b02 	vldr	d7, [r3, #8]
    f8b4:	ed9f 3b14 	vldr	d3, [pc, #80]	; f908 <G_q+0x7818>
    f8b8:	ee27 7b03 	vmul.f64	d7, d7, d3
    f8bc:	ee34 7b07 	vadd.f64	d7, d4, d7
  b_G_q[1].im = -g * ((((((((t3.re * 4.7990846441586913E-18 + t3.im * 0.1335) +
    f8c0:	ee35 5b07 	vadd.f64	d5, d5, d7
    (t83.re * -4.7990846441586913E-18 + t83.im * 0.1335)) + (t33_re * t35_im +
    f8c4:	f241 2390 	movw	r3, #4752	; 0x1290
    f8c8:	443b      	add	r3, r7
    f8ca:	f241 32c8 	movw	r2, #5064	; 0x13c8
    f8ce:	443a      	add	r2, r7
    f8d0:	ed92 4b00 	vldr	d4, [r2]
    f8d4:	ed93 7b00 	vldr	d7, [r3]
    f8d8:	ee24 4b07 	vmul.f64	d4, d4, d7
    t33_im * t35_re) * 0.1376) - (t37_re * t39_im + t37_im * t39_re) * 0.1376) -
    f8dc:	f241 2398 	movw	r3, #4760	; 0x1298
    f8e0:	443b      	add	r3, r7
    f8e2:	f507 529e 	add.w	r2, r7, #5056	; 0x13c0
    f8e6:	ed92 3b00 	vldr	d3, [r2]
    f8ea:	ed93 7b00 	vldr	d7, [r3]
    f8ee:	ee23 7b07 	vmul.f64	d7, d3, d7
    (t83.re * -4.7990846441586913E-18 + t83.im * 0.1335)) + (t33_re * t35_im +
    f8f2:	ee34 7b07 	vadd.f64	d7, d4, d7
    f8f6:	e023      	b.n	f940 <G_q+0x7850>
    f8f8:	858a5d48 	.word	0x858a5d48
    f8fc:	393377ce 	.word	0x393377ce
	...
    f908:	2b020c4a 	.word	0x2b020c4a
    f90c:	3fc11687 	.word	0x3fc11687
    f910:	558ec760 	.word	0x558ec760
    f914:	3c5621c2 	.word	0x3c5621c2
    f918:	75f6fd22 	.word	0x75f6fd22
    f91c:	3fc19ce0 	.word	0x3fc19ce0
    f920:	9374bc6a 	.word	0x9374bc6a
    f924:	3f960418 	.word	0x3f960418
    f928:	2ba953a1 	.word	0x2ba953a1
    f92c:	3c3848f9 	.word	0x3c3848f9
    f930:	558ec760 	.word	0x558ec760
    f934:	bc5621c2 	.word	0xbc5621c2
    f938:	ffffec58 	.word	0xffffec58
    f93c:	ffffec34 	.word	0xffffec34
    t33_im * t35_re) * 0.1376) - (t37_re * t39_im + t37_im * t39_re) * 0.1376) -
    f940:	ed9f 4ba1 	vldr	d4, [pc, #644]	; fbc8 <G_q+0x7ad8>
    f944:	ee27 7b04 	vmul.f64	d7, d7, d4
    (t83.re * -4.7990846441586913E-18 + t83.im * 0.1335)) + (t33_re * t35_im +
    f948:	ee35 5b07 	vadd.f64	d5, d5, d7
    t33_im * t35_re) * 0.1376) - (t37_re * t39_im + t37_im * t39_re) * 0.1376) -
    f94c:	f507 5394 	add.w	r3, r7, #4736	; 0x1280
    f950:	f241 32a8 	movw	r2, #5032	; 0x13a8
    f954:	443a      	add	r2, r7
    f956:	ed92 4b00 	vldr	d4, [r2]
    f95a:	ed93 7b00 	vldr	d7, [r3]
    f95e:	ee24 4b07 	vmul.f64	d4, d4, d7
    f962:	f241 2388 	movw	r3, #4744	; 0x1288
    f966:	443b      	add	r3, r7
    f968:	f507 529d 	add.w	r2, r7, #5024	; 0x13a0
    f96c:	ed92 3b00 	vldr	d3, [r2]
    f970:	ed93 7b00 	vldr	d7, [r3]
    f974:	ee23 7b07 	vmul.f64	d7, d3, d7
    f978:	ee34 7b07 	vadd.f64	d7, d4, d7
    f97c:	ed9f 4b92 	vldr	d4, [pc, #584]	; fbc8 <G_q+0x7ad8>
    f980:	ee27 7b04 	vmul.f64	d7, d7, d4
    f984:	ee35 5b47 	vsub.f64	d5, d5, d7
    (t54_re * t10_im + t54_im * t10_re) * 0.0215) + (t19_re * t8_im + t19_im *
    f988:	f241 3328 	movw	r3, #4904	; 0x1328
    f98c:	443b      	add	r3, r7
    f98e:	ed93 4b00 	vldr	d4, [r3]
    f992:	f241 3390 	movw	r3, #5008	; 0x1390
    f996:	443b      	add	r3, r7
    f998:	ed93 7b00 	vldr	d7, [r3]
    f99c:	ee24 4b07 	vmul.f64	d4, d4, d7
    f9a0:	f241 2378 	movw	r3, #4728	; 0x1278
    f9a4:	443b      	add	r3, r7
    f9a6:	ed93 3b00 	vldr	d3, [r3]
    f9aa:	f241 3398 	movw	r3, #5016	; 0x1398
    f9ae:	443b      	add	r3, r7
    f9b0:	ed93 7b00 	vldr	d7, [r3]
    f9b4:	ee23 7b07 	vmul.f64	d7, d3, d7
    f9b8:	ee34 7b07 	vadd.f64	d7, d4, d7
    f9bc:	ed9f 4b84 	vldr	d4, [pc, #528]	; fbd0 <G_q+0x7ae0>
    f9c0:	ee27 7b04 	vmul.f64	d7, d7, d4
    t33_im * t35_re) * 0.1376) - (t37_re * t39_im + t37_im * t39_re) * 0.1376) -
    f9c4:	ee35 5b47 	vsub.f64	d5, d5, d7
    (t54_re * t10_im + t54_im * t10_re) * 0.0215) + (t19_re * t8_im + t19_im *
    f9c8:	f241 3358 	movw	r3, #4952	; 0x1358
    f9cc:	443b      	add	r3, r7
    f9ce:	ed93 4b00 	vldr	d4, [r3]
    f9d2:	f507 5399 	add.w	r3, r7, #4896	; 0x1320
    f9d6:	ed93 7b00 	vldr	d7, [r3]
    f9da:	ee24 4b07 	vmul.f64	d4, d4, d7
    f9de:	f507 5393 	add.w	r3, r7, #4704	; 0x1260
    f9e2:	f241 3250 	movw	r2, #4944	; 0x1350
    f9e6:	443a      	add	r2, r7
    f9e8:	ed92 3b00 	vldr	d3, [r2]
    f9ec:	ed93 7b00 	vldr	d7, [r3]
    f9f0:	ee23 7b07 	vmul.f64	d7, d3, d7
    f9f4:	ee34 7b07 	vadd.f64	d7, d4, d7
    t8_re) * 1.3164953090834051E-18) - (t41_re * t43_im + t41_im * t43_re) *
    f9f8:	ed9f 4b77 	vldr	d4, [pc, #476]	; fbd8 <G_q+0x7ae8>
    f9fc:	ee27 7b04 	vmul.f64	d7, d7, d4
    (t54_re * t10_im + t54_im * t10_re) * 0.0215) + (t19_re * t8_im + t19_im *
    fa00:	ee35 5b07 	vadd.f64	d5, d5, d7
    t8_re) * 1.3164953090834051E-18) - (t41_re * t43_im + t41_im * t43_re) *
    fa04:	f241 3308 	movw	r3, #4872	; 0x1308
    fa08:	443b      	add	r3, r7
    fa0a:	ed93 4b00 	vldr	d4, [r3]
    fa0e:	f241 23f8 	movw	r3, #4856	; 0x12f8
    fa12:	443b      	add	r3, r7
    fa14:	ed93 7b00 	vldr	d7, [r3]
    fa18:	ee24 4b07 	vmul.f64	d4, d4, d7
    fa1c:	f241 2358 	movw	r3, #4696	; 0x1258
    fa20:	443b      	add	r3, r7
    fa22:	f507 5298 	add.w	r2, r7, #4864	; 0x1300
    fa26:	ed92 3b00 	vldr	d3, [r2]
    fa2a:	ed93 7b00 	vldr	d7, [r3]
    fa2e:	ee23 7b07 	vmul.f64	d7, d3, d7
    fa32:	ee34 7b07 	vadd.f64	d7, d4, d7
    fa36:	ed9f 4b68 	vldr	d4, [pc, #416]	; fbd8 <G_q+0x7ae8>
    fa3a:	ee27 7b04 	vmul.f64	d7, d7, d4
    fa3e:	ee35 5b47 	vsub.f64	d5, d5, d7
                       1.3164953090834051E-18) + (b_t54_re * t34_re + b_t54_im *
    fa42:	f241 23f0 	movw	r3, #4848	; 0x12f0
    fa46:	443b      	add	r3, r7
    fa48:	ed93 4b00 	vldr	d4, [r3]
    fa4c:	f241 33b8 	movw	r3, #5048	; 0x13b8
    fa50:	443b      	add	r3, r7
    fa52:	ed93 7b00 	vldr	d7, [r3]
    fa56:	ee24 4b07 	vmul.f64	d4, d4, d7
    fa5a:	f241 23e8 	movw	r3, #4840	; 0x12e8
    fa5e:	443b      	add	r3, r7
    fa60:	ed93 3b00 	vldr	d3, [r3]
    fa64:	f241 33b0 	movw	r3, #5040	; 0x13b0
    fa68:	443b      	add	r3, r7
    fa6a:	ed93 7b00 	vldr	d7, [r3]
    fa6e:	ee23 7b07 	vmul.f64	d7, d3, d7
    fa72:	ee34 7b07 	vadd.f64	d7, d4, d7
    t34_im) * 0.0215);
    fa76:	ed9f 4b56 	vldr	d4, [pc, #344]	; fbd0 <G_q+0x7ae0>
    fa7a:	ee27 7b04 	vmul.f64	d7, d7, d4
                       1.3164953090834051E-18) + (b_t54_re * t34_re + b_t54_im *
    fa7e:	ee35 7b07 	vadd.f64	d7, d5, d7
  b_G_q[1].im = -g * ((((((((t3.re * 4.7990846441586913E-18 + t3.im * 0.1335) +
    fa82:	4b57      	ldr	r3, [pc, #348]	; (fbe0 <G_q+0x7af0>)
    fa84:	f241 32d0 	movw	r2, #5072	; 0x13d0
    fa88:	443a      	add	r2, r7
    fa8a:	4413      	add	r3, r2
    fa8c:	681b      	ldr	r3, [r3, #0]
    fa8e:	3310      	adds	r3, #16
    fa90:	ee26 7b07 	vmul.f64	d7, d6, d7
    fa94:	ed83 7b02 	vstr	d7, [r3, #8]
  if (t154.im == 0.0) {
    fa98:	f507 63e2 	add.w	r3, r7, #1808	; 0x710
    fa9c:	ed93 7b02 	vldr	d7, [r3, #8]
    faa0:	eeb5 7b40 	vcmp.f64	d7, #0.0
    faa4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    faa8:	d115      	bne.n	fad6 <G_q+0x79e6>
    t8_im = t154.re / 2.0;
    faaa:	f507 63e2 	add.w	r3, r7, #1808	; 0x710
    faae:	ed93 6b00 	vldr	d6, [r3]
    fab2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    fab6:	ee86 7b05 	vdiv.f64	d7, d6, d5
    faba:	f507 5399 	add.w	r3, r7, #4896	; 0x1320
    fabe:	ed83 7b00 	vstr	d7, [r3]
    t54_re = 0.0;
    fac2:	f04f 0300 	mov.w	r3, #0
    fac6:	f04f 0400 	mov.w	r4, #0
    faca:	f241 3228 	movw	r2, #4904	; 0x1328
    face:	443a      	add	r2, r7
    fad0:	e9c2 3400 	strd	r3, r4, [r2]
    fad4:	e037      	b.n	fb46 <G_q+0x7a56>
  } else if (t154.re == 0.0) {
    fad6:	f507 63e2 	add.w	r3, r7, #1808	; 0x710
    fada:	ed93 7b00 	vldr	d7, [r3]
    fade:	eeb5 7b40 	vcmp.f64	d7, #0.0
    fae2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    fae6:	d115      	bne.n	fb14 <G_q+0x7a24>
    t8_im = 0.0;
    fae8:	f04f 0300 	mov.w	r3, #0
    faec:	f04f 0400 	mov.w	r4, #0
    faf0:	f507 5299 	add.w	r2, r7, #4896	; 0x1320
    faf4:	e9c2 3400 	strd	r3, r4, [r2]
    t54_re = t154.im / 2.0;
    faf8:	f507 63e2 	add.w	r3, r7, #1808	; 0x710
    fafc:	ed93 6b02 	vldr	d6, [r3, #8]
    fb00:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    fb04:	ee86 7b05 	vdiv.f64	d7, d6, d5
    fb08:	f241 3328 	movw	r3, #4904	; 0x1328
    fb0c:	443b      	add	r3, r7
    fb0e:	ed83 7b00 	vstr	d7, [r3]
    fb12:	e018      	b.n	fb46 <G_q+0x7a56>
  } else {
    t8_im = t154.re / 2.0;
    fb14:	f507 63e2 	add.w	r3, r7, #1808	; 0x710
    fb18:	ed93 6b00 	vldr	d6, [r3]
    fb1c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    fb20:	ee86 7b05 	vdiv.f64	d7, d6, d5
    fb24:	f507 5399 	add.w	r3, r7, #4896	; 0x1320
    fb28:	ed83 7b00 	vstr	d7, [r3]
    t54_re = t154.im / 2.0;
    fb2c:	f507 63e2 	add.w	r3, r7, #1808	; 0x710
    fb30:	ed93 6b02 	vldr	d6, [r3, #8]
    fb34:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    fb38:	ee86 7b05 	vdiv.f64	d7, d6, d5
    fb3c:	f241 3328 	movw	r3, #4904	; 0x1328
    fb40:	443b      	add	r3, r7
    fb42:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t155.im == 0.0) {
    fb46:	f507 63e4 	add.w	r3, r7, #1824	; 0x720
    fb4a:	ed93 7b02 	vldr	d7, [r3, #8]
    fb4e:	eeb5 7b40 	vcmp.f64	d7, #0.0
    fb52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    fb56:	d116      	bne.n	fb86 <G_q+0x7a96>
    t34_re = t155.re / 2.0;
    fb58:	f507 63e4 	add.w	r3, r7, #1824	; 0x720
    fb5c:	ed93 6b00 	vldr	d6, [r3]
    fb60:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    fb64:	ee86 7b05 	vdiv.f64	d7, d6, d5
    fb68:	f241 33b8 	movw	r3, #5048	; 0x13b8
    fb6c:	443b      	add	r3, r7
    fb6e:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
    fb72:	f04f 0300 	mov.w	r3, #0
    fb76:	f04f 0400 	mov.w	r4, #0
    fb7a:	f241 32b0 	movw	r2, #5040	; 0x13b0
    fb7e:	443a      	add	r2, r7
    fb80:	e9c2 3400 	strd	r3, r4, [r2]
    fb84:	e048      	b.n	fc18 <G_q+0x7b28>
  } else if (t155.re == 0.0) {
    fb86:	f507 63e4 	add.w	r3, r7, #1824	; 0x720
    fb8a:	ed93 7b00 	vldr	d7, [r3]
    fb8e:	eeb5 7b40 	vcmp.f64	d7, #0.0
    fb92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    fb96:	d125      	bne.n	fbe4 <G_q+0x7af4>
    t34_re = 0.0;
    fb98:	f04f 0300 	mov.w	r3, #0
    fb9c:	f04f 0400 	mov.w	r4, #0
    fba0:	f241 32b8 	movw	r2, #5048	; 0x13b8
    fba4:	443a      	add	r2, r7
    fba6:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t155.im / 2.0;
    fbaa:	f507 63e4 	add.w	r3, r7, #1824	; 0x720
    fbae:	ed93 6b02 	vldr	d6, [r3, #8]
    fbb2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    fbb6:	ee86 7b05 	vdiv.f64	d7, d6, d5
    fbba:	f241 33b0 	movw	r3, #5040	; 0x13b0
    fbbe:	443b      	add	r3, r7
    fbc0:	ed83 7b00 	vstr	d7, [r3]
    fbc4:	e028      	b.n	fc18 <G_q+0x7b28>
    fbc6:	bf00      	nop
    fbc8:	75f6fd22 	.word	0x75f6fd22
    fbcc:	3fc19ce0 	.word	0x3fc19ce0
    fbd0:	9374bc6a 	.word	0x9374bc6a
    fbd4:	3f960418 	.word	0x3f960418
    fbd8:	2ba953a1 	.word	0x2ba953a1
    fbdc:	3c3848f9 	.word	0x3c3848f9
    fbe0:	ffffec34 	.word	0xffffec34
  } else {
    t34_re = t155.re / 2.0;
    fbe4:	f507 63e4 	add.w	r3, r7, #1824	; 0x720
    fbe8:	ed93 6b00 	vldr	d6, [r3]
    fbec:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    fbf0:	ee86 7b05 	vdiv.f64	d7, d6, d5
    fbf4:	f241 33b8 	movw	r3, #5048	; 0x13b8
    fbf8:	443b      	add	r3, r7
    fbfa:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t155.im / 2.0;
    fbfe:	f507 63e4 	add.w	r3, r7, #1824	; 0x720
    fc02:	ed93 6b02 	vldr	d6, [r3, #8]
    fc06:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    fc0a:	ee86 7b05 	vdiv.f64	d7, d6, d5
    fc0e:	f241 33b0 	movw	r3, #5040	; 0x13b0
    fc12:	443b      	add	r3, r7
    fc14:	ed83 7b00 	vstr	d7, [r3]
  }

  t8_im += t34_re;
    fc18:	f507 5399 	add.w	r3, r7, #4896	; 0x1320
    fc1c:	ed93 6b00 	vldr	d6, [r3]
    fc20:	f241 33b8 	movw	r3, #5048	; 0x13b8
    fc24:	443b      	add	r3, r7
    fc26:	ed93 7b00 	vldr	d7, [r3]
    fc2a:	ee36 7b07 	vadd.f64	d7, d6, d7
    fc2e:	f507 5399 	add.w	r3, r7, #4896	; 0x1320
    fc32:	ed83 7b00 	vstr	d7, [r3]
  t54_re += t34_im;
    fc36:	f241 3328 	movw	r3, #4904	; 0x1328
    fc3a:	443b      	add	r3, r7
    fc3c:	ed93 6b00 	vldr	d6, [r3]
    fc40:	f241 33b0 	movw	r3, #5040	; 0x13b0
    fc44:	443b      	add	r3, r7
    fc46:	ed93 7b00 	vldr	d7, [r3]
    fc4a:	ee36 7b07 	vadd.f64	d7, d6, d7
    fc4e:	f241 3328 	movw	r3, #4904	; 0x1328
    fc52:	443b      	add	r3, r7
    fc54:	ed83 7b00 	vstr	d7, [r3]
  t19_re_tmp = (t156.re * 0.0 - t156.im * 0.5) - (t157.re * 0.0 - t157.im * 0.5);
    fc58:	f507 6365 	add.w	r3, r7, #3664	; 0xe50
    fc5c:	ed93 7b00 	vldr	d7, [r3]
    fc60:	ed9f 6bb9 	vldr	d6, [pc, #740]	; ff48 <G_q+0x7e58>
    fc64:	ee27 6b06 	vmul.f64	d6, d7, d6
    fc68:	f507 6365 	add.w	r3, r7, #3664	; 0xe50
    fc6c:	ed93 7b02 	vldr	d7, [r3, #8]
    fc70:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    fc74:	ee27 7b05 	vmul.f64	d7, d7, d5
    fc78:	ee36 6b47 	vsub.f64	d6, d6, d7
    fc7c:	f507 6366 	add.w	r3, r7, #3680	; 0xe60
    fc80:	ed93 7b00 	vldr	d7, [r3]
    fc84:	ed9f 5bb0 	vldr	d5, [pc, #704]	; ff48 <G_q+0x7e58>
    fc88:	ee27 5b05 	vmul.f64	d5, d7, d5
    fc8c:	f507 6366 	add.w	r3, r7, #3680	; 0xe60
    fc90:	ed93 7b02 	vldr	d7, [r3, #8]
    fc94:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    fc98:	ee27 7b04 	vmul.f64	d7, d7, d4
    fc9c:	ee35 7b47 	vsub.f64	d7, d5, d7
    fca0:	f241 2370 	movw	r3, #4720	; 0x1270
    fca4:	443b      	add	r3, r7
    fca6:	ee36 7b47 	vsub.f64	d7, d6, d7
    fcaa:	ed83 7b00 	vstr	d7, [r3]
  t19_im_tmp = (t156.re * 0.5 + t156.im * 0.0) - (t157.re * 0.5 + t157.im * 0.0);
    fcae:	f507 6365 	add.w	r3, r7, #3664	; 0xe50
    fcb2:	ed93 7b00 	vldr	d7, [r3]
    fcb6:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    fcba:	ee27 6b06 	vmul.f64	d6, d7, d6
    fcbe:	f507 6365 	add.w	r3, r7, #3664	; 0xe50
    fcc2:	ed93 7b02 	vldr	d7, [r3, #8]
    fcc6:	ed9f 5ba0 	vldr	d5, [pc, #640]	; ff48 <G_q+0x7e58>
    fcca:	ee27 7b05 	vmul.f64	d7, d7, d5
    fcce:	ee36 6b07 	vadd.f64	d6, d6, d7
    fcd2:	f507 6366 	add.w	r3, r7, #3680	; 0xe60
    fcd6:	ed93 7b00 	vldr	d7, [r3]
    fcda:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    fcde:	ee27 5b05 	vmul.f64	d5, d7, d5
    fce2:	f507 6366 	add.w	r3, r7, #3680	; 0xe60
    fce6:	ed93 7b02 	vldr	d7, [r3, #8]
    fcea:	ed9f 4b97 	vldr	d4, [pc, #604]	; ff48 <G_q+0x7e58>
    fcee:	ee27 7b04 	vmul.f64	d7, d7, d4
    fcf2:	ee35 7b07 	vadd.f64	d7, d5, d7
    fcf6:	f241 2368 	movw	r3, #4712	; 0x1268
    fcfa:	443b      	add	r3, r7
    fcfc:	ee36 7b47 	vsub.f64	d7, d6, d7
    fd00:	ed83 7b00 	vstr	d7, [r3]
  t41_im = t98.re * 3.061616997868383E-17 + t99.re * 3.061616997868383E-17;
    fd04:	f507 63b6 	add.w	r3, r7, #1456	; 0x5b0
    fd08:	ed93 7b00 	vldr	d7, [r3]
    fd0c:	ed9f 6b8a 	vldr	d6, [pc, #552]	; ff38 <G_q+0x7e48>
    fd10:	ee27 6b06 	vmul.f64	d6, d7, d6
    fd14:	f507 63b8 	add.w	r3, r7, #1472	; 0x5c0
    fd18:	ed93 7b00 	vldr	d7, [r3]
    fd1c:	ed9f 5b86 	vldr	d5, [pc, #536]	; ff38 <G_q+0x7e48>
    fd20:	ee27 7b05 	vmul.f64	d7, d7, d5
    fd24:	ee36 7b07 	vadd.f64	d7, d6, d7
    fd28:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
    fd2c:	ed83 7b00 	vstr	d7, [r3]
  t8_re = t98.im * 3.061616997868383E-17 + t99.im * 3.061616997868383E-17;
    fd30:	f507 63b6 	add.w	r3, r7, #1456	; 0x5b0
    fd34:	ed93 7b02 	vldr	d7, [r3, #8]
    fd38:	ed9f 6b7f 	vldr	d6, [pc, #508]	; ff38 <G_q+0x7e48>
    fd3c:	ee27 6b06 	vmul.f64	d6, d7, d6
    fd40:	f507 63b8 	add.w	r3, r7, #1472	; 0x5c0
    fd44:	ed93 7b02 	vldr	d7, [r3, #8]
    fd48:	ed9f 5b7b 	vldr	d5, [pc, #492]	; ff38 <G_q+0x7e48>
    fd4c:	ee27 7b05 	vmul.f64	d7, d7, d5
    fd50:	f507 5393 	add.w	r3, r7, #4704	; 0x1260
    fd54:	ee36 7b07 	vadd.f64	d7, d6, d7
    fd58:	ed83 7b00 	vstr	d7, [r3]
  t13_re = (t96.re * 0.0 - t96.im * 0.5) - (t97.re * 0.0 - t97.im * 0.5);
    fd5c:	f507 634f 	add.w	r3, r7, #3312	; 0xcf0
    fd60:	ed93 7b00 	vldr	d7, [r3]
    fd64:	ed9f 6b78 	vldr	d6, [pc, #480]	; ff48 <G_q+0x7e58>
    fd68:	ee27 6b06 	vmul.f64	d6, d7, d6
    fd6c:	f507 634f 	add.w	r3, r7, #3312	; 0xcf0
    fd70:	ed93 7b02 	vldr	d7, [r3, #8]
    fd74:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    fd78:	ee27 7b05 	vmul.f64	d7, d7, d5
    fd7c:	ee36 6b47 	vsub.f64	d6, d6, d7
    fd80:	f507 6350 	add.w	r3, r7, #3328	; 0xd00
    fd84:	ed93 7b00 	vldr	d7, [r3]
    fd88:	ed9f 5b6f 	vldr	d5, [pc, #444]	; ff48 <G_q+0x7e58>
    fd8c:	ee27 5b05 	vmul.f64	d5, d7, d5
    fd90:	f507 6350 	add.w	r3, r7, #3328	; 0xd00
    fd94:	ed93 7b02 	vldr	d7, [r3, #8]
    fd98:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
    fd9c:	ee27 7b04 	vmul.f64	d7, d7, d4
    fda0:	ee35 7b47 	vsub.f64	d7, d5, d7
    fda4:	ee36 7b47 	vsub.f64	d7, d6, d7
    fda8:	f241 3378 	movw	r3, #4984	; 0x1378
    fdac:	443b      	add	r3, r7
    fdae:	ed83 7b00 	vstr	d7, [r3]
  t13_im = (t96.re * 0.5 + t96.im * 0.0) - (t97.re * 0.5 + t97.im * 0.0);
    fdb2:	f507 634f 	add.w	r3, r7, #3312	; 0xcf0
    fdb6:	ed93 7b00 	vldr	d7, [r3]
    fdba:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    fdbe:	ee27 6b06 	vmul.f64	d6, d7, d6
    fdc2:	f507 634f 	add.w	r3, r7, #3312	; 0xcf0
    fdc6:	ed93 7b02 	vldr	d7, [r3, #8]
    fdca:	ed9f 5b5f 	vldr	d5, [pc, #380]	; ff48 <G_q+0x7e58>
    fdce:	ee27 7b05 	vmul.f64	d7, d7, d5
    fdd2:	ee36 6b07 	vadd.f64	d6, d6, d7
    fdd6:	f507 6350 	add.w	r3, r7, #3328	; 0xd00
    fdda:	ed93 7b00 	vldr	d7, [r3]
    fdde:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
    fde2:	ee27 5b05 	vmul.f64	d5, d7, d5
    fde6:	f507 6350 	add.w	r3, r7, #3328	; 0xd00
    fdea:	ed93 7b02 	vldr	d7, [r3, #8]
    fdee:	ed9f 4b56 	vldr	d4, [pc, #344]	; ff48 <G_q+0x7e58>
    fdf2:	ee27 7b04 	vmul.f64	d7, d7, d4
    fdf6:	ee35 7b07 	vadd.f64	d7, d5, d7
    fdfa:	ee36 7b47 	vsub.f64	d7, d6, d7
    fdfe:	f241 3370 	movw	r3, #4976	; 0x1370
    fe02:	443b      	add	r3, r7
    fe04:	ed83 7b00 	vstr	d7, [r3]
  if (t94.im == 0.0) {
    fe08:	f507 634d 	add.w	r3, r7, #3280	; 0xcd0
    fe0c:	ed93 7b02 	vldr	d7, [r3, #8]
    fe10:	eeb5 7b40 	vcmp.f64	d7, #0.0
    fe14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    fe18:	d115      	bne.n	fe46 <G_q+0x7d56>
    t16_re = t94.re / 2.0;
    fe1a:	f507 634d 	add.w	r3, r7, #3280	; 0xcd0
    fe1e:	ed93 6b00 	vldr	d6, [r3]
    fe22:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    fe26:	ee86 7b05 	vdiv.f64	d7, d6, d5
    fe2a:	f241 3368 	movw	r3, #4968	; 0x1368
    fe2e:	443b      	add	r3, r7
    fe30:	ed83 7b00 	vstr	d7, [r3]
    t16_im = 0.0;
    fe34:	f04f 0300 	mov.w	r3, #0
    fe38:	f04f 0400 	mov.w	r4, #0
    fe3c:	f507 529b 	add.w	r2, r7, #4960	; 0x1360
    fe40:	e9c2 3400 	strd	r3, r4, [r2]
    fe44:	e037      	b.n	feb6 <G_q+0x7dc6>
  } else if (t94.re == 0.0) {
    fe46:	f507 634d 	add.w	r3, r7, #3280	; 0xcd0
    fe4a:	ed93 7b00 	vldr	d7, [r3]
    fe4e:	eeb5 7b40 	vcmp.f64	d7, #0.0
    fe52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    fe56:	d115      	bne.n	fe84 <G_q+0x7d94>
    t16_re = 0.0;
    fe58:	f04f 0300 	mov.w	r3, #0
    fe5c:	f04f 0400 	mov.w	r4, #0
    fe60:	f241 3268 	movw	r2, #4968	; 0x1368
    fe64:	443a      	add	r2, r7
    fe66:	e9c2 3400 	strd	r3, r4, [r2]
    t16_im = t94.im / 2.0;
    fe6a:	f507 634d 	add.w	r3, r7, #3280	; 0xcd0
    fe6e:	ed93 6b02 	vldr	d6, [r3, #8]
    fe72:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    fe76:	ee86 7b05 	vdiv.f64	d7, d6, d5
    fe7a:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    fe7e:	ed83 7b00 	vstr	d7, [r3]
    fe82:	e018      	b.n	feb6 <G_q+0x7dc6>
  } else {
    t16_re = t94.re / 2.0;
    fe84:	f507 634d 	add.w	r3, r7, #3280	; 0xcd0
    fe88:	ed93 6b00 	vldr	d6, [r3]
    fe8c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    fe90:	ee86 7b05 	vdiv.f64	d7, d6, d5
    fe94:	f241 3368 	movw	r3, #4968	; 0x1368
    fe98:	443b      	add	r3, r7
    fe9a:	ed83 7b00 	vstr	d7, [r3]
    t16_im = t94.im / 2.0;
    fe9e:	f507 634d 	add.w	r3, r7, #3280	; 0xcd0
    fea2:	ed93 6b02 	vldr	d6, [r3, #8]
    fea6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    feaa:	ee86 7b05 	vdiv.f64	d7, d6, d5
    feae:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
    feb2:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t95.im == 0.0) {
    feb6:	f507 634e 	add.w	r3, r7, #3296	; 0xce0
    feba:	ed93 7b02 	vldr	d7, [r3, #8]
    febe:	eeb5 7b40 	vcmp.f64	d7, #0.0
    fec2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    fec6:	d116      	bne.n	fef6 <G_q+0x7e06>
    t34_re = t95.re / 2.0;
    fec8:	f507 634e 	add.w	r3, r7, #3296	; 0xce0
    fecc:	ed93 6b00 	vldr	d6, [r3]
    fed0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    fed4:	ee86 7b05 	vdiv.f64	d7, d6, d5
    fed8:	f241 33b8 	movw	r3, #5048	; 0x13b8
    fedc:	443b      	add	r3, r7
    fede:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
    fee2:	f04f 0300 	mov.w	r3, #0
    fee6:	f04f 0400 	mov.w	r4, #0
    feea:	f241 32b0 	movw	r2, #5040	; 0x13b0
    feee:	443a      	add	r2, r7
    fef0:	e9c2 3400 	strd	r3, r4, [r2]
    fef4:	e046      	b.n	ff84 <G_q+0x7e94>
  } else if (t95.re == 0.0) {
    fef6:	f507 634e 	add.w	r3, r7, #3296	; 0xce0
    fefa:	ed93 7b00 	vldr	d7, [r3]
    fefe:	eeb5 7b40 	vcmp.f64	d7, #0.0
    ff02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ff06:	d123      	bne.n	ff50 <G_q+0x7e60>
    t34_re = 0.0;
    ff08:	f04f 0300 	mov.w	r3, #0
    ff0c:	f04f 0400 	mov.w	r4, #0
    ff10:	f241 32b8 	movw	r2, #5048	; 0x13b8
    ff14:	443a      	add	r2, r7
    ff16:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t95.im / 2.0;
    ff1a:	f507 634e 	add.w	r3, r7, #3296	; 0xce0
    ff1e:	ed93 6b02 	vldr	d6, [r3, #8]
    ff22:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ff26:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ff2a:	f241 33b0 	movw	r3, #5040	; 0x13b0
    ff2e:	443b      	add	r3, r7
    ff30:	ed83 7b00 	vstr	d7, [r3]
    ff34:	e026      	b.n	ff84 <G_q+0x7e94>
    ff36:	bf00      	nop
    ff38:	33145c07 	.word	0x33145c07
    ff3c:	3c81a626 	.word	0x3c81a626
    ff40:	858a5d48 	.word	0x858a5d48
    ff44:	394377ce 	.word	0x394377ce
	...
  } else {
    t34_re = t95.re / 2.0;
    ff50:	f507 634e 	add.w	r3, r7, #3296	; 0xce0
    ff54:	ed93 6b00 	vldr	d6, [r3]
    ff58:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ff5c:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ff60:	f241 33b8 	movw	r3, #5048	; 0x13b8
    ff64:	443b      	add	r3, r7
    ff66:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t95.im / 2.0;
    ff6a:	f507 634e 	add.w	r3, r7, #3296	; 0xce0
    ff6e:	ed93 6b02 	vldr	d6, [r3, #8]
    ff72:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
    ff76:	ee86 7b05 	vdiv.f64	d7, d6, d5
    ff7a:	f241 33b0 	movw	r3, #5040	; 0x13b0
    ff7e:	443b      	add	r3, r7
    ff80:	ed83 7b00 	vstr	d7, [r3]
  }

  t20_re = (t92.re * 0.0 - t92.im * 3.061616997868383E-17) - (t93.re * 0.0 -
    ff84:	f507 63b2 	add.w	r3, r7, #1424	; 0x590
    ff88:	ed93 7b00 	vldr	d7, [r3]
    ff8c:	ed1f 6b12 	vldr	d6, [pc, #-72]	; ff48 <G_q+0x7e58>
    ff90:	ee27 6b06 	vmul.f64	d6, d7, d6
    ff94:	f507 63b2 	add.w	r3, r7, #1424	; 0x590
    ff98:	ed93 7b02 	vldr	d7, [r3, #8]
    ff9c:	ed1f 5b1a 	vldr	d5, [pc, #-104]	; ff38 <G_q+0x7e48>
    ffa0:	ee27 7b05 	vmul.f64	d7, d7, d5
    ffa4:	ee36 6b47 	vsub.f64	d6, d6, d7
    ffa8:	f507 63b4 	add.w	r3, r7, #1440	; 0x5a0
    ffac:	ed93 7b00 	vldr	d7, [r3]
    ffb0:	ed1f 5b1b 	vldr	d5, [pc, #-108]	; ff48 <G_q+0x7e58>
    ffb4:	ee27 5b05 	vmul.f64	d5, d7, d5
    t93.im * 3.061616997868383E-17);
    ffb8:	f507 63b4 	add.w	r3, r7, #1440	; 0x5a0
    ffbc:	ed93 7b02 	vldr	d7, [r3, #8]
    ffc0:	ed1f 4b23 	vldr	d4, [pc, #-140]	; ff38 <G_q+0x7e48>
    ffc4:	ee27 7b04 	vmul.f64	d7, d7, d4
  t20_re = (t92.re * 0.0 - t92.im * 3.061616997868383E-17) - (t93.re * 0.0 -
    ffc8:	ee35 7b47 	vsub.f64	d7, d5, d7
    ffcc:	ee36 7b47 	vsub.f64	d7, d6, d7
    ffd0:	f241 3348 	movw	r3, #4936	; 0x1348
    ffd4:	443b      	add	r3, r7
    ffd6:	ed83 7b00 	vstr	d7, [r3]
  t20_im = (t92.re * 3.061616997868383E-17 + t92.im * 0.0) - (t93.re *
    ffda:	f507 63b2 	add.w	r3, r7, #1424	; 0x590
    ffde:	ed93 7b00 	vldr	d7, [r3]
    ffe2:	ed1f 6b2b 	vldr	d6, [pc, #-172]	; ff38 <G_q+0x7e48>
    ffe6:	ee27 6b06 	vmul.f64	d6, d7, d6
    ffea:	f507 63b2 	add.w	r3, r7, #1424	; 0x590
    ffee:	ed93 7b02 	vldr	d7, [r3, #8]
    fff2:	ed1f 5b2b 	vldr	d5, [pc, #-172]	; ff48 <G_q+0x7e58>
    fff6:	ee27 7b05 	vmul.f64	d7, d7, d5
    fffa:	ee36 6b07 	vadd.f64	d6, d6, d7
    fffe:	f507 63b4 	add.w	r3, r7, #1440	; 0x5a0
   10002:	ed93 7b00 	vldr	d7, [r3]
   10006:	ed1f 5b34 	vldr	d5, [pc, #-208]	; ff38 <G_q+0x7e48>
   1000a:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t93.im * 0.0);
   1000e:	f507 63b4 	add.w	r3, r7, #1440	; 0x5a0
   10012:	ed93 7b02 	vldr	d7, [r3, #8]
   10016:	ed1f 4b34 	vldr	d4, [pc, #-208]	; ff48 <G_q+0x7e58>
   1001a:	ee27 7b04 	vmul.f64	d7, d7, d4
   1001e:	ee35 7b07 	vadd.f64	d7, d5, d7
  t20_im = (t92.re * 3.061616997868383E-17 + t92.im * 0.0) - (t93.re *
   10022:	ee36 7b47 	vsub.f64	d7, d6, d7
   10026:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   1002a:	ed83 7b00 	vstr	d7, [r3]
  t16_re = (t16_re + t34_re) + 7.498798913309288E-33;
   1002e:	f241 3368 	movw	r3, #4968	; 0x1368
   10032:	443b      	add	r3, r7
   10034:	ed93 6b00 	vldr	d6, [r3]
   10038:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1003c:	443b      	add	r3, r7
   1003e:	ed93 7b00 	vldr	d7, [r3]
   10042:	ee36 7b07 	vadd.f64	d7, d6, d7
   10046:	ed1f 6b42 	vldr	d6, [pc, #-264]	; ff40 <G_q+0x7e50>
   1004a:	ee37 7b06 	vadd.f64	d7, d7, d6
   1004e:	f241 3368 	movw	r3, #4968	; 0x1368
   10052:	443b      	add	r3, r7
   10054:	ed83 7b00 	vstr	d7, [r3]
  t16_im += t34_im;
   10058:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   1005c:	ed93 6b00 	vldr	d6, [r3]
   10060:	f241 33b0 	movw	r3, #5040	; 0x13b0
   10064:	443b      	add	r3, r7
   10066:	ed93 7b00 	vldr	d7, [r3]
   1006a:	ee36 7b07 	vadd.f64	d7, d6, d7
   1006e:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   10072:	ed83 7b00 	vstr	d7, [r3]
  t72_re = (t41_im * t13_re - t8_re * t13_im) - (t20_re * t16_re - t20_im *
   10076:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
   1007a:	ed93 6b00 	vldr	d6, [r3]
   1007e:	f241 3378 	movw	r3, #4984	; 0x1378
   10082:	443b      	add	r3, r7
   10084:	ed93 7b00 	vldr	d7, [r3]
   10088:	ee26 6b07 	vmul.f64	d6, d6, d7
   1008c:	f507 5393 	add.w	r3, r7, #4704	; 0x1260
   10090:	ed93 5b00 	vldr	d5, [r3]
   10094:	f241 3370 	movw	r3, #4976	; 0x1370
   10098:	443b      	add	r3, r7
   1009a:	ed93 7b00 	vldr	d7, [r3]
   1009e:	ee25 7b07 	vmul.f64	d7, d5, d7
   100a2:	ee36 6b47 	vsub.f64	d6, d6, d7
   100a6:	f241 3348 	movw	r3, #4936	; 0x1348
   100aa:	443b      	add	r3, r7
   100ac:	ed93 5b00 	vldr	d5, [r3]
   100b0:	f241 3368 	movw	r3, #4968	; 0x1368
   100b4:	443b      	add	r3, r7
   100b6:	ed93 7b00 	vldr	d7, [r3]
   100ba:	ee25 5b07 	vmul.f64	d5, d5, d7
   100be:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   100c2:	ed93 4b00 	vldr	d4, [r3]
   100c6:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   100ca:	ed93 7b00 	vldr	d7, [r3]
   100ce:	ee24 7b07 	vmul.f64	d7, d4, d7
   100d2:	ee35 7b47 	vsub.f64	d7, d5, d7
   100d6:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   100da:	ee36 7b47 	vsub.f64	d7, d6, d7
   100de:	ed83 7b00 	vstr	d7, [r3]
    t16_im);
  t8_re = (t41_im * t13_im + t8_re * t13_re) - (t20_re * t16_im + t20_im *
   100e2:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
   100e6:	ed93 6b00 	vldr	d6, [r3]
   100ea:	f241 3370 	movw	r3, #4976	; 0x1370
   100ee:	443b      	add	r3, r7
   100f0:	ed93 7b00 	vldr	d7, [r3]
   100f4:	ee26 6b07 	vmul.f64	d6, d6, d7
   100f8:	f507 5393 	add.w	r3, r7, #4704	; 0x1260
   100fc:	ed93 5b00 	vldr	d5, [r3]
   10100:	f241 3378 	movw	r3, #4984	; 0x1378
   10104:	443b      	add	r3, r7
   10106:	ed93 7b00 	vldr	d7, [r3]
   1010a:	ee25 7b07 	vmul.f64	d7, d5, d7
   1010e:	ee36 6b07 	vadd.f64	d6, d6, d7
   10112:	f241 3348 	movw	r3, #4936	; 0x1348
   10116:	443b      	add	r3, r7
   10118:	ed93 5b00 	vldr	d5, [r3]
   1011c:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   10120:	ed93 7b00 	vldr	d7, [r3]
   10124:	ee25 5b07 	vmul.f64	d5, d5, d7
   10128:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   1012c:	ed93 4b00 	vldr	d4, [r3]
   10130:	f241 3368 	movw	r3, #4968	; 0x1368
   10134:	443b      	add	r3, r7
   10136:	ed93 7b00 	vldr	d7, [r3]
   1013a:	ee24 7b07 	vmul.f64	d7, d4, d7
   1013e:	ee35 7b07 	vadd.f64	d7, d5, d7
   10142:	f507 5393 	add.w	r3, r7, #4704	; 0x1260
   10146:	ee36 7b47 	vsub.f64	d7, d6, d7
   1014a:	ed83 7b00 	vstr	d7, [r3]
    t16_re);
  t58_im = (t100.re * 0.0 - t100.im * 0.5) - (t101.re * 0.0 - t101.im * 0.5);
   1014e:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
   10152:	ed93 7b00 	vldr	d7, [r3]
   10156:	ed1f 6b84 	vldr	d6, [pc, #-528]	; ff48 <G_q+0x7e58>
   1015a:	ee27 6b06 	vmul.f64	d6, d7, d6
   1015e:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
   10162:	ed93 7b02 	vldr	d7, [r3, #8]
   10166:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   1016a:	ee27 7b05 	vmul.f64	d7, d7, d5
   1016e:	ee36 6b47 	vsub.f64	d6, d6, d7
   10172:	4be7      	ldr	r3, [pc, #924]	; (10510 <G_q+0x8420>)
   10174:	f241 32d0 	movw	r2, #5072	; 0x13d0
   10178:	443a      	add	r2, r7
   1017a:	4413      	add	r3, r2
   1017c:	ed93 7b00 	vldr	d7, [r3]
   10180:	ed9f 5be1 	vldr	d5, [pc, #900]	; 10508 <G_q+0x8418>
   10184:	ee27 5b05 	vmul.f64	d5, d7, d5
   10188:	4be1      	ldr	r3, [pc, #900]	; (10510 <G_q+0x8420>)
   1018a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   1018e:	443a      	add	r2, r7
   10190:	4413      	add	r3, r2
   10192:	ed93 7b02 	vldr	d7, [r3, #8]
   10196:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   1019a:	ee27 7b04 	vmul.f64	d7, d7, d4
   1019e:	ee35 7b47 	vsub.f64	d7, d5, d7
   101a2:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   101a6:	ee36 7b47 	vsub.f64	d7, d6, d7
   101aa:	ed83 7b00 	vstr	d7, [r3]
  t60_re = (t100.re * 0.5 + t100.im * 0.0) - (t101.re * 0.5 + t101.im * 0.0);
   101ae:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
   101b2:	ed93 7b00 	vldr	d7, [r3]
   101b6:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   101ba:	ee27 6b06 	vmul.f64	d6, d7, d6
   101be:	f507 73d8 	add.w	r3, r7, #432	; 0x1b0
   101c2:	ed93 7b02 	vldr	d7, [r3, #8]
   101c6:	ed9f 5bd0 	vldr	d5, [pc, #832]	; 10508 <G_q+0x8418>
   101ca:	ee27 7b05 	vmul.f64	d7, d7, d5
   101ce:	ee36 6b07 	vadd.f64	d6, d6, d7
   101d2:	4bcf      	ldr	r3, [pc, #828]	; (10510 <G_q+0x8420>)
   101d4:	f241 32d0 	movw	r2, #5072	; 0x13d0
   101d8:	443a      	add	r2, r7
   101da:	4413      	add	r3, r2
   101dc:	ed93 7b00 	vldr	d7, [r3]
   101e0:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   101e4:	ee27 5b05 	vmul.f64	d5, d7, d5
   101e8:	4bc9      	ldr	r3, [pc, #804]	; (10510 <G_q+0x8420>)
   101ea:	f241 32d0 	movw	r2, #5072	; 0x13d0
   101ee:	443a      	add	r2, r7
   101f0:	4413      	add	r3, r2
   101f2:	ed93 7b02 	vldr	d7, [r3, #8]
   101f6:	ed9f 4bc4 	vldr	d4, [pc, #784]	; 10508 <G_q+0x8418>
   101fa:	ee27 7b04 	vmul.f64	d7, d7, d4
   101fe:	ee35 7b07 	vadd.f64	d7, d5, d7
   10202:	f241 2350 	movw	r3, #4688	; 0x1250
   10206:	443b      	add	r3, r7
   10208:	ee36 7b47 	vsub.f64	d7, d6, d7
   1020c:	ed83 7b00 	vstr	d7, [r3]
  t13_im = (t104.re * 0.0 - t104.im * 0.5) - (t105.re * 0.0 - t105.im * 0.5);
   10210:	f507 6351 	add.w	r3, r7, #3344	; 0xd10
   10214:	ed93 7b00 	vldr	d7, [r3]
   10218:	ed9f 6bbb 	vldr	d6, [pc, #748]	; 10508 <G_q+0x8418>
   1021c:	ee27 6b06 	vmul.f64	d6, d7, d6
   10220:	f507 6351 	add.w	r3, r7, #3344	; 0xd10
   10224:	ed93 7b02 	vldr	d7, [r3, #8]
   10228:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   1022c:	ee27 7b05 	vmul.f64	d7, d7, d5
   10230:	ee36 6b47 	vsub.f64	d6, d6, d7
   10234:	f507 6352 	add.w	r3, r7, #3360	; 0xd20
   10238:	ed93 7b00 	vldr	d7, [r3]
   1023c:	ed9f 5bb2 	vldr	d5, [pc, #712]	; 10508 <G_q+0x8418>
   10240:	ee27 5b05 	vmul.f64	d5, d7, d5
   10244:	f507 6352 	add.w	r3, r7, #3360	; 0xd20
   10248:	ed93 7b02 	vldr	d7, [r3, #8]
   1024c:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   10250:	ee27 7b04 	vmul.f64	d7, d7, d4
   10254:	ee35 7b47 	vsub.f64	d7, d5, d7
   10258:	ee36 7b47 	vsub.f64	d7, d6, d7
   1025c:	f241 3370 	movw	r3, #4976	; 0x1370
   10260:	443b      	add	r3, r7
   10262:	ed83 7b00 	vstr	d7, [r3]
  t76_re = (t104.re * 0.5 + t104.im * 0.0) - (t105.re * 0.5 + t105.im * 0.0);
   10266:	f507 6351 	add.w	r3, r7, #3344	; 0xd10
   1026a:	ed93 7b00 	vldr	d7, [r3]
   1026e:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   10272:	ee27 6b06 	vmul.f64	d6, d7, d6
   10276:	f507 6351 	add.w	r3, r7, #3344	; 0xd10
   1027a:	ed93 7b02 	vldr	d7, [r3, #8]
   1027e:	ed9f 5ba2 	vldr	d5, [pc, #648]	; 10508 <G_q+0x8418>
   10282:	ee27 7b05 	vmul.f64	d7, d7, d5
   10286:	ee36 6b07 	vadd.f64	d6, d6, d7
   1028a:	f507 6352 	add.w	r3, r7, #3360	; 0xd20
   1028e:	ed93 7b00 	vldr	d7, [r3]
   10292:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   10296:	ee27 5b05 	vmul.f64	d5, d7, d5
   1029a:	f507 6352 	add.w	r3, r7, #3360	; 0xd20
   1029e:	ed93 7b02 	vldr	d7, [r3, #8]
   102a2:	ed9f 4b99 	vldr	d4, [pc, #612]	; 10508 <G_q+0x8418>
   102a6:	ee27 7b04 	vmul.f64	d7, d7, d4
   102aa:	ee35 7b07 	vadd.f64	d7, d5, d7
   102ae:	f241 23a8 	movw	r3, #4776	; 0x12a8
   102b2:	443b      	add	r3, r7
   102b4:	ee36 7b47 	vsub.f64	d7, d6, d7
   102b8:	ed83 7b00 	vstr	d7, [r3]
  t20_re = (t106.re * 0.0 - t106.im * 0.5) - (t107.re * 0.0 - t107.im * 0.5);
   102bc:	f507 63ba 	add.w	r3, r7, #1488	; 0x5d0
   102c0:	ed93 7b00 	vldr	d7, [r3]
   102c4:	ed9f 6b90 	vldr	d6, [pc, #576]	; 10508 <G_q+0x8418>
   102c8:	ee27 6b06 	vmul.f64	d6, d7, d6
   102cc:	f507 63ba 	add.w	r3, r7, #1488	; 0x5d0
   102d0:	ed93 7b02 	vldr	d7, [r3, #8]
   102d4:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   102d8:	ee27 7b05 	vmul.f64	d7, d7, d5
   102dc:	ee36 6b47 	vsub.f64	d6, d6, d7
   102e0:	f507 63bc 	add.w	r3, r7, #1504	; 0x5e0
   102e4:	ed93 7b00 	vldr	d7, [r3]
   102e8:	ed9f 5b87 	vldr	d5, [pc, #540]	; 10508 <G_q+0x8418>
   102ec:	ee27 5b05 	vmul.f64	d5, d7, d5
   102f0:	f507 63bc 	add.w	r3, r7, #1504	; 0x5e0
   102f4:	ed93 7b02 	vldr	d7, [r3, #8]
   102f8:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   102fc:	ee27 7b04 	vmul.f64	d7, d7, d4
   10300:	ee35 7b47 	vsub.f64	d7, d5, d7
   10304:	ee36 7b47 	vsub.f64	d7, d6, d7
   10308:	f241 3348 	movw	r3, #4936	; 0x1348
   1030c:	443b      	add	r3, r7
   1030e:	ed83 7b00 	vstr	d7, [r3]
  t20_im = (t106.re * 0.5 + t106.im * 0.0) - (t107.re * 0.5 + t107.im * 0.0);
   10312:	f507 63ba 	add.w	r3, r7, #1488	; 0x5d0
   10316:	ed93 7b00 	vldr	d7, [r3]
   1031a:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   1031e:	ee27 6b06 	vmul.f64	d6, d7, d6
   10322:	f507 63ba 	add.w	r3, r7, #1488	; 0x5d0
   10326:	ed93 7b02 	vldr	d7, [r3, #8]
   1032a:	ed9f 5b77 	vldr	d5, [pc, #476]	; 10508 <G_q+0x8418>
   1032e:	ee27 7b05 	vmul.f64	d7, d7, d5
   10332:	ee36 6b07 	vadd.f64	d6, d6, d7
   10336:	f507 63bc 	add.w	r3, r7, #1504	; 0x5e0
   1033a:	ed93 7b00 	vldr	d7, [r3]
   1033e:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   10342:	ee27 5b05 	vmul.f64	d5, d7, d5
   10346:	f507 63bc 	add.w	r3, r7, #1504	; 0x5e0
   1034a:	ed93 7b02 	vldr	d7, [r3, #8]
   1034e:	ed9f 4b6e 	vldr	d4, [pc, #440]	; 10508 <G_q+0x8418>
   10352:	ee27 7b04 	vmul.f64	d7, d7, d4
   10356:	ee35 7b07 	vadd.f64	d7, d5, d7
   1035a:	ee36 7b47 	vsub.f64	d7, d6, d7
   1035e:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   10362:	ed83 7b00 	vstr	d7, [r3]
  if (t108.im == 0.0) {
   10366:	f507 63be 	add.w	r3, r7, #1520	; 0x5f0
   1036a:	ed93 7b02 	vldr	d7, [r3, #8]
   1036e:	eeb5 7b40 	vcmp.f64	d7, #0.0
   10372:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   10376:	d115      	bne.n	103a4 <G_q+0x82b4>
    t12_re = t108.re / 2.0;
   10378:	f507 63be 	add.w	r3, r7, #1520	; 0x5f0
   1037c:	ed93 6b00 	vldr	d6, [r3]
   10380:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10384:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10388:	f241 3388 	movw	r3, #5000	; 0x1388
   1038c:	443b      	add	r3, r7
   1038e:	ed83 7b00 	vstr	d7, [r3]
    t12_im = 0.0;
   10392:	f04f 0300 	mov.w	r3, #0
   10396:	f04f 0400 	mov.w	r4, #0
   1039a:	f507 529c 	add.w	r2, r7, #4992	; 0x1380
   1039e:	e9c2 3400 	strd	r3, r4, [r2]
   103a2:	e037      	b.n	10414 <G_q+0x8324>
  } else if (t108.re == 0.0) {
   103a4:	f507 63be 	add.w	r3, r7, #1520	; 0x5f0
   103a8:	ed93 7b00 	vldr	d7, [r3]
   103ac:	eeb5 7b40 	vcmp.f64	d7, #0.0
   103b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   103b4:	d115      	bne.n	103e2 <G_q+0x82f2>
    t12_re = 0.0;
   103b6:	f04f 0300 	mov.w	r3, #0
   103ba:	f04f 0400 	mov.w	r4, #0
   103be:	f241 3288 	movw	r2, #5000	; 0x1388
   103c2:	443a      	add	r2, r7
   103c4:	e9c2 3400 	strd	r3, r4, [r2]
    t12_im = t108.im / 2.0;
   103c8:	f507 63be 	add.w	r3, r7, #1520	; 0x5f0
   103cc:	ed93 6b02 	vldr	d6, [r3, #8]
   103d0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   103d4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   103d8:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   103dc:	ed83 7b00 	vstr	d7, [r3]
   103e0:	e018      	b.n	10414 <G_q+0x8324>
  } else {
    t12_re = t108.re / 2.0;
   103e2:	f507 63be 	add.w	r3, r7, #1520	; 0x5f0
   103e6:	ed93 6b00 	vldr	d6, [r3]
   103ea:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   103ee:	ee86 7b05 	vdiv.f64	d7, d6, d5
   103f2:	f241 3388 	movw	r3, #5000	; 0x1388
   103f6:	443b      	add	r3, r7
   103f8:	ed83 7b00 	vstr	d7, [r3]
    t12_im = t108.im / 2.0;
   103fc:	f507 63be 	add.w	r3, r7, #1520	; 0x5f0
   10400:	ed93 6b02 	vldr	d6, [r3, #8]
   10404:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10408:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1040c:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   10410:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t109.im == 0.0) {
   10414:	f507 63c0 	add.w	r3, r7, #1536	; 0x600
   10418:	ed93 7b02 	vldr	d7, [r3, #8]
   1041c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   10420:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   10424:	d116      	bne.n	10454 <G_q+0x8364>
    t34_re = t109.re / 2.0;
   10426:	f507 63c0 	add.w	r3, r7, #1536	; 0x600
   1042a:	ed93 6b00 	vldr	d6, [r3]
   1042e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10432:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10436:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1043a:	443b      	add	r3, r7
   1043c:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   10440:	f04f 0300 	mov.w	r3, #0
   10444:	f04f 0400 	mov.w	r4, #0
   10448:	f241 32b0 	movw	r2, #5040	; 0x13b0
   1044c:	443a      	add	r2, r7
   1044e:	e9c2 3400 	strd	r3, r4, [r2]
   10452:	e039      	b.n	104c8 <G_q+0x83d8>
  } else if (t109.re == 0.0) {
   10454:	f507 63c0 	add.w	r3, r7, #1536	; 0x600
   10458:	ed93 7b00 	vldr	d7, [r3]
   1045c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   10460:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   10464:	d116      	bne.n	10494 <G_q+0x83a4>
    t34_re = 0.0;
   10466:	f04f 0300 	mov.w	r3, #0
   1046a:	f04f 0400 	mov.w	r4, #0
   1046e:	f241 32b8 	movw	r2, #5048	; 0x13b8
   10472:	443a      	add	r2, r7
   10474:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t109.im / 2.0;
   10478:	f507 63c0 	add.w	r3, r7, #1536	; 0x600
   1047c:	ed93 6b02 	vldr	d6, [r3, #8]
   10480:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10484:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10488:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1048c:	443b      	add	r3, r7
   1048e:	ed83 7b00 	vstr	d7, [r3]
   10492:	e019      	b.n	104c8 <G_q+0x83d8>
  } else {
    t34_re = t109.re / 2.0;
   10494:	f507 63c0 	add.w	r3, r7, #1536	; 0x600
   10498:	ed93 6b00 	vldr	d6, [r3]
   1049c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   104a0:	ee86 7b05 	vdiv.f64	d7, d6, d5
   104a4:	f241 33b8 	movw	r3, #5048	; 0x13b8
   104a8:	443b      	add	r3, r7
   104aa:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t109.im / 2.0;
   104ae:	f507 63c0 	add.w	r3, r7, #1536	; 0x600
   104b2:	ed93 6b02 	vldr	d6, [r3, #8]
   104b6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   104ba:	ee86 7b05 	vdiv.f64	d7, d6, d5
   104be:	f241 33b0 	movw	r3, #5040	; 0x13b0
   104c2:	443b      	add	r3, r7
   104c4:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t110.im == 0.0) {
   104c8:	f507 6353 	add.w	r3, r7, #3376	; 0xd30
   104cc:	ed93 7b02 	vldr	d7, [r3, #8]
   104d0:	eeb5 7b40 	vcmp.f64	d7, #0.0
   104d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   104d8:	d11c      	bne.n	10514 <G_q+0x8424>
    b_t10_re = t110.re / 2.0;
   104da:	f507 6353 	add.w	r3, r7, #3376	; 0xd30
   104de:	ed93 6b00 	vldr	d6, [r3]
   104e2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   104e6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   104ea:	f241 3338 	movw	r3, #4920	; 0x1338
   104ee:	443b      	add	r3, r7
   104f0:	ed83 7b00 	vstr	d7, [r3]
    t85_im = 0.0;
   104f4:	f04f 0300 	mov.w	r3, #0
   104f8:	f04f 0400 	mov.w	r4, #0
   104fc:	f241 3218 	movw	r2, #4888	; 0x1318
   10500:	443a      	add	r2, r7
   10502:	e9c2 3400 	strd	r3, r4, [r2]
   10506:	e03f      	b.n	10588 <G_q+0x8498>
	...
   10510:	ffffedf0 	.word	0xffffedf0
  } else if (t110.re == 0.0) {
   10514:	f507 6353 	add.w	r3, r7, #3376	; 0xd30
   10518:	ed93 7b00 	vldr	d7, [r3]
   1051c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   10520:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   10524:	d116      	bne.n	10554 <G_q+0x8464>
    b_t10_re = 0.0;
   10526:	f04f 0300 	mov.w	r3, #0
   1052a:	f04f 0400 	mov.w	r4, #0
   1052e:	f241 3238 	movw	r2, #4920	; 0x1338
   10532:	443a      	add	r2, r7
   10534:	e9c2 3400 	strd	r3, r4, [r2]
    t85_im = t110.im / 2.0;
   10538:	f507 6353 	add.w	r3, r7, #3376	; 0xd30
   1053c:	ed93 6b02 	vldr	d6, [r3, #8]
   10540:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10544:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10548:	f241 3318 	movw	r3, #4888	; 0x1318
   1054c:	443b      	add	r3, r7
   1054e:	ed83 7b00 	vstr	d7, [r3]
   10552:	e019      	b.n	10588 <G_q+0x8498>
  } else {
    b_t10_re = t110.re / 2.0;
   10554:	f507 6353 	add.w	r3, r7, #3376	; 0xd30
   10558:	ed93 6b00 	vldr	d6, [r3]
   1055c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10560:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10564:	f241 3338 	movw	r3, #4920	; 0x1338
   10568:	443b      	add	r3, r7
   1056a:	ed83 7b00 	vstr	d7, [r3]
    t85_im = t110.im / 2.0;
   1056e:	f507 6353 	add.w	r3, r7, #3376	; 0xd30
   10572:	ed93 6b02 	vldr	d6, [r3, #8]
   10576:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1057a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1057e:	f241 3318 	movw	r3, #4888	; 0x1318
   10582:	443b      	add	r3, r7
   10584:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t111.im == 0.0) {
   10588:	f507 6354 	add.w	r3, r7, #3392	; 0xd40
   1058c:	ed93 7b02 	vldr	d7, [r3, #8]
   10590:	eeb5 7b40 	vcmp.f64	d7, #0.0
   10594:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   10598:	d115      	bne.n	105c6 <G_q+0x84d6>
    t16_re = t111.re / 2.0;
   1059a:	f507 6354 	add.w	r3, r7, #3392	; 0xd40
   1059e:	ed93 6b00 	vldr	d6, [r3]
   105a2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   105a6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   105aa:	f241 3368 	movw	r3, #4968	; 0x1368
   105ae:	443b      	add	r3, r7
   105b0:	ed83 7b00 	vstr	d7, [r3]
    t16_im = 0.0;
   105b4:	f04f 0300 	mov.w	r3, #0
   105b8:	f04f 0400 	mov.w	r4, #0
   105bc:	f507 529b 	add.w	r2, r7, #4960	; 0x1360
   105c0:	e9c2 3400 	strd	r3, r4, [r2]
   105c4:	e037      	b.n	10636 <G_q+0x8546>
  } else if (t111.re == 0.0) {
   105c6:	f507 6354 	add.w	r3, r7, #3392	; 0xd40
   105ca:	ed93 7b00 	vldr	d7, [r3]
   105ce:	eeb5 7b40 	vcmp.f64	d7, #0.0
   105d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   105d6:	d115      	bne.n	10604 <G_q+0x8514>
    t16_re = 0.0;
   105d8:	f04f 0300 	mov.w	r3, #0
   105dc:	f04f 0400 	mov.w	r4, #0
   105e0:	f241 3268 	movw	r2, #4968	; 0x1368
   105e4:	443a      	add	r2, r7
   105e6:	e9c2 3400 	strd	r3, r4, [r2]
    t16_im = t111.im / 2.0;
   105ea:	f507 6354 	add.w	r3, r7, #3392	; 0xd40
   105ee:	ed93 6b02 	vldr	d6, [r3, #8]
   105f2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   105f6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   105fa:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   105fe:	ed83 7b00 	vstr	d7, [r3]
   10602:	e018      	b.n	10636 <G_q+0x8546>
  } else {
    t16_re = t111.re / 2.0;
   10604:	f507 6354 	add.w	r3, r7, #3392	; 0xd40
   10608:	ed93 6b00 	vldr	d6, [r3]
   1060c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10610:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10614:	f241 3368 	movw	r3, #4968	; 0x1368
   10618:	443b      	add	r3, r7
   1061a:	ed83 7b00 	vstr	d7, [r3]
    t16_im = t111.im / 2.0;
   1061e:	f507 6354 	add.w	r3, r7, #3392	; 0xd40
   10622:	ed93 6b02 	vldr	d6, [r3, #8]
   10626:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1062a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1062e:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   10632:	ed83 7b00 	vstr	d7, [r3]
  }

  t12_re += t34_re;
   10636:	f241 3388 	movw	r3, #5000	; 0x1388
   1063a:	443b      	add	r3, r7
   1063c:	ed93 6b00 	vldr	d6, [r3]
   10640:	f241 33b8 	movw	r3, #5048	; 0x13b8
   10644:	443b      	add	r3, r7
   10646:	ed93 7b00 	vldr	d7, [r3]
   1064a:	ee36 7b07 	vadd.f64	d7, d6, d7
   1064e:	f241 3388 	movw	r3, #5000	; 0x1388
   10652:	443b      	add	r3, r7
   10654:	ed83 7b00 	vstr	d7, [r3]
  t12_im += t34_im;
   10658:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   1065c:	ed93 6b00 	vldr	d6, [r3]
   10660:	f241 33b0 	movw	r3, #5040	; 0x13b0
   10664:	443b      	add	r3, r7
   10666:	ed93 7b00 	vldr	d7, [r3]
   1066a:	ee36 7b07 	vadd.f64	d7, d6, d7
   1066e:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   10672:	ed83 7b00 	vstr	d7, [r3]
  b_t10_re = (b_t10_re + t16_re) + 7.498798913309288E-33;
   10676:	f241 3338 	movw	r3, #4920	; 0x1338
   1067a:	443b      	add	r3, r7
   1067c:	ed93 6b00 	vldr	d6, [r3]
   10680:	f241 3368 	movw	r3, #4968	; 0x1368
   10684:	443b      	add	r3, r7
   10686:	ed93 7b00 	vldr	d7, [r3]
   1068a:	ee36 7b07 	vadd.f64	d7, d6, d7
   1068e:	ed9f 6b60 	vldr	d6, [pc, #384]	; 10810 <G_q+0x8720>
   10692:	ee37 7b06 	vadd.f64	d7, d7, d6
   10696:	f241 3338 	movw	r3, #4920	; 0x1338
   1069a:	443b      	add	r3, r7
   1069c:	ed83 7b00 	vstr	d7, [r3]
  t85_im += t16_im;
   106a0:	f241 3318 	movw	r3, #4888	; 0x1318
   106a4:	443b      	add	r3, r7
   106a6:	ed93 6b00 	vldr	d6, [r3]
   106aa:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   106ae:	ed93 7b00 	vldr	d7, [r3]
   106b2:	ee36 7b07 	vadd.f64	d7, d6, d7
   106b6:	f241 3318 	movw	r3, #4888	; 0x1318
   106ba:	443b      	add	r3, r7
   106bc:	ed83 7b00 	vstr	d7, [r3]
  if (t102.im == 0.0) {
   106c0:	f507 73e8 	add.w	r3, r7, #464	; 0x1d0
   106c4:	ed93 7b02 	vldr	d7, [r3, #8]
   106c8:	eeb5 7b40 	vcmp.f64	d7, #0.0
   106cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   106d0:	d116      	bne.n	10700 <G_q+0x8610>
    t23_re = t102.re / 2.0;
   106d2:	f507 73e8 	add.w	r3, r7, #464	; 0x1d0
   106d6:	ed93 6b00 	vldr	d6, [r3]
   106da:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   106de:	ee86 7b05 	vdiv.f64	d7, d6, d5
   106e2:	f241 3330 	movw	r3, #4912	; 0x1330
   106e6:	443b      	add	r3, r7
   106e8:	ed83 7b00 	vstr	d7, [r3]
    t3_im = 0.0;
   106ec:	f04f 0300 	mov.w	r3, #0
   106f0:	f04f 0400 	mov.w	r4, #0
   106f4:	f241 3210 	movw	r2, #4880	; 0x1310
   106f8:	443a      	add	r2, r7
   106fa:	e9c2 3400 	strd	r3, r4, [r2]
   106fe:	e039      	b.n	10774 <G_q+0x8684>
  } else if (t102.re == 0.0) {
   10700:	f507 73e8 	add.w	r3, r7, #464	; 0x1d0
   10704:	ed93 7b00 	vldr	d7, [r3]
   10708:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1070c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   10710:	d116      	bne.n	10740 <G_q+0x8650>
    t23_re = 0.0;
   10712:	f04f 0300 	mov.w	r3, #0
   10716:	f04f 0400 	mov.w	r4, #0
   1071a:	f241 3230 	movw	r2, #4912	; 0x1330
   1071e:	443a      	add	r2, r7
   10720:	e9c2 3400 	strd	r3, r4, [r2]
    t3_im = t102.im / 2.0;
   10724:	f507 73e8 	add.w	r3, r7, #464	; 0x1d0
   10728:	ed93 6b02 	vldr	d6, [r3, #8]
   1072c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10730:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10734:	f241 3310 	movw	r3, #4880	; 0x1310
   10738:	443b      	add	r3, r7
   1073a:	ed83 7b00 	vstr	d7, [r3]
   1073e:	e019      	b.n	10774 <G_q+0x8684>
  } else {
    t23_re = t102.re / 2.0;
   10740:	f507 73e8 	add.w	r3, r7, #464	; 0x1d0
   10744:	ed93 6b00 	vldr	d6, [r3]
   10748:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1074c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10750:	f241 3330 	movw	r3, #4912	; 0x1330
   10754:	443b      	add	r3, r7
   10756:	ed83 7b00 	vstr	d7, [r3]
    t3_im = t102.im / 2.0;
   1075a:	f507 73e8 	add.w	r3, r7, #464	; 0x1d0
   1075e:	ed93 6b02 	vldr	d6, [r3, #8]
   10762:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10766:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1076a:	f241 3310 	movw	r3, #4880	; 0x1310
   1076e:	443b      	add	r3, r7
   10770:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t103.im == 0.0) {
   10774:	4b28      	ldr	r3, [pc, #160]	; (10818 <G_q+0x8728>)
   10776:	f241 32d0 	movw	r2, #5072	; 0x13d0
   1077a:	443a      	add	r2, r7
   1077c:	4413      	add	r3, r2
   1077e:	ed93 7b02 	vldr	d7, [r3, #8]
   10782:	eeb5 7b40 	vcmp.f64	d7, #0.0
   10786:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1078a:	d119      	bne.n	107c0 <G_q+0x86d0>
    t34_re = t103.re / 2.0;
   1078c:	4b22      	ldr	r3, [pc, #136]	; (10818 <G_q+0x8728>)
   1078e:	f241 32d0 	movw	r2, #5072	; 0x13d0
   10792:	443a      	add	r2, r7
   10794:	4413      	add	r3, r2
   10796:	ed93 6b00 	vldr	d6, [r3]
   1079a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1079e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   107a2:	f241 33b8 	movw	r3, #5048	; 0x13b8
   107a6:	443b      	add	r3, r7
   107a8:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   107ac:	f04f 0300 	mov.w	r3, #0
   107b0:	f04f 0400 	mov.w	r4, #0
   107b4:	f241 32b0 	movw	r2, #5040	; 0x13b0
   107b8:	443a      	add	r2, r7
   107ba:	e9c2 3400 	strd	r3, r4, [r2]
   107be:	e04d      	b.n	1085c <G_q+0x876c>
  } else if (t103.re == 0.0) {
   107c0:	4b15      	ldr	r3, [pc, #84]	; (10818 <G_q+0x8728>)
   107c2:	f241 32d0 	movw	r2, #5072	; 0x13d0
   107c6:	443a      	add	r2, r7
   107c8:	4413      	add	r3, r2
   107ca:	ed93 7b00 	vldr	d7, [r3]
   107ce:	eeb5 7b40 	vcmp.f64	d7, #0.0
   107d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   107d6:	d121      	bne.n	1081c <G_q+0x872c>
    t34_re = 0.0;
   107d8:	f04f 0300 	mov.w	r3, #0
   107dc:	f04f 0400 	mov.w	r4, #0
   107e0:	f241 32b8 	movw	r2, #5048	; 0x13b8
   107e4:	443a      	add	r2, r7
   107e6:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t103.im / 2.0;
   107ea:	4b0b      	ldr	r3, [pc, #44]	; (10818 <G_q+0x8728>)
   107ec:	f241 32d0 	movw	r2, #5072	; 0x13d0
   107f0:	443a      	add	r2, r7
   107f2:	4413      	add	r3, r2
   107f4:	ed93 6b02 	vldr	d6, [r3, #8]
   107f8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   107fc:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10800:	f241 33b0 	movw	r3, #5040	; 0x13b0
   10804:	443b      	add	r3, r7
   10806:	ed83 7b00 	vstr	d7, [r3]
   1080a:	e027      	b.n	1085c <G_q+0x876c>
   1080c:	f3af 8000 	nop.w
   10810:	858a5d48 	.word	0x858a5d48
   10814:	394377ce 	.word	0x394377ce
   10818:	ffffee10 	.word	0xffffee10
  } else {
    t34_re = t103.re / 2.0;
   1081c:	4bd4      	ldr	r3, [pc, #848]	; (10b70 <G_q+0x8a80>)
   1081e:	f241 32d0 	movw	r2, #5072	; 0x13d0
   10822:	443a      	add	r2, r7
   10824:	4413      	add	r3, r2
   10826:	ed93 6b00 	vldr	d6, [r3]
   1082a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1082e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10832:	f241 33b8 	movw	r3, #5048	; 0x13b8
   10836:	443b      	add	r3, r7
   10838:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t103.im / 2.0;
   1083c:	4bcc      	ldr	r3, [pc, #816]	; (10b70 <G_q+0x8a80>)
   1083e:	f241 32d0 	movw	r2, #5072	; 0x13d0
   10842:	443a      	add	r2, r7
   10844:	4413      	add	r3, r2
   10846:	ed93 6b02 	vldr	d6, [r3, #8]
   1084a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1084e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10852:	f241 33b0 	movw	r3, #5040	; 0x13b0
   10856:	443b      	add	r3, r7
   10858:	ed83 7b00 	vstr	d7, [r3]
  }

  t13_re = (t13_im * t20_re - t76_re * t20_im) + (t12_re * b_t10_re - t12_im *
   1085c:	f241 3370 	movw	r3, #4976	; 0x1370
   10860:	443b      	add	r3, r7
   10862:	ed93 6b00 	vldr	d6, [r3]
   10866:	f241 3348 	movw	r3, #4936	; 0x1348
   1086a:	443b      	add	r3, r7
   1086c:	ed93 7b00 	vldr	d7, [r3]
   10870:	ee26 6b07 	vmul.f64	d6, d6, d7
   10874:	f241 23a8 	movw	r3, #4776	; 0x12a8
   10878:	443b      	add	r3, r7
   1087a:	ed93 5b00 	vldr	d5, [r3]
   1087e:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   10882:	ed93 7b00 	vldr	d7, [r3]
   10886:	ee25 7b07 	vmul.f64	d7, d5, d7
   1088a:	ee36 6b47 	vsub.f64	d6, d6, d7
   1088e:	f241 3388 	movw	r3, #5000	; 0x1388
   10892:	443b      	add	r3, r7
   10894:	ed93 5b00 	vldr	d5, [r3]
   10898:	f241 3338 	movw	r3, #4920	; 0x1338
   1089c:	443b      	add	r3, r7
   1089e:	ed93 7b00 	vldr	d7, [r3]
   108a2:	ee25 5b07 	vmul.f64	d5, d5, d7
   108a6:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   108aa:	ed93 4b00 	vldr	d4, [r3]
   108ae:	f241 3318 	movw	r3, #4888	; 0x1318
   108b2:	443b      	add	r3, r7
   108b4:	ed93 7b00 	vldr	d7, [r3]
   108b8:	ee24 7b07 	vmul.f64	d7, d4, d7
   108bc:	ee35 7b47 	vsub.f64	d7, d5, d7
   108c0:	ee36 7b07 	vadd.f64	d7, d6, d7
   108c4:	f241 3378 	movw	r3, #4984	; 0x1378
   108c8:	443b      	add	r3, r7
   108ca:	ed83 7b00 	vstr	d7, [r3]
    t85_im);
  t76_re = (t13_im * t20_im + t76_re * t20_re) + (t12_re * t85_im + t12_im *
   108ce:	f241 3370 	movw	r3, #4976	; 0x1370
   108d2:	443b      	add	r3, r7
   108d4:	ed93 6b00 	vldr	d6, [r3]
   108d8:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   108dc:	ed93 7b00 	vldr	d7, [r3]
   108e0:	ee26 6b07 	vmul.f64	d6, d6, d7
   108e4:	f241 23a8 	movw	r3, #4776	; 0x12a8
   108e8:	443b      	add	r3, r7
   108ea:	ed93 5b00 	vldr	d5, [r3]
   108ee:	f241 3348 	movw	r3, #4936	; 0x1348
   108f2:	443b      	add	r3, r7
   108f4:	ed93 7b00 	vldr	d7, [r3]
   108f8:	ee25 7b07 	vmul.f64	d7, d5, d7
   108fc:	ee36 6b07 	vadd.f64	d6, d6, d7
   10900:	f241 3388 	movw	r3, #5000	; 0x1388
   10904:	443b      	add	r3, r7
   10906:	ed93 5b00 	vldr	d5, [r3]
   1090a:	f241 3318 	movw	r3, #4888	; 0x1318
   1090e:	443b      	add	r3, r7
   10910:	ed93 7b00 	vldr	d7, [r3]
   10914:	ee25 5b07 	vmul.f64	d5, d5, d7
   10918:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   1091c:	ed93 4b00 	vldr	d4, [r3]
   10920:	f241 3338 	movw	r3, #4920	; 0x1338
   10924:	443b      	add	r3, r7
   10926:	ed93 7b00 	vldr	d7, [r3]
   1092a:	ee24 7b07 	vmul.f64	d7, d4, d7
   1092e:	ee35 7b07 	vadd.f64	d7, d5, d7
   10932:	f241 23a8 	movw	r3, #4776	; 0x12a8
   10936:	443b      	add	r3, r7
   10938:	ee36 7b07 	vadd.f64	d7, d6, d7
   1093c:	ed83 7b00 	vstr	d7, [r3]
    b_t10_re);
  t23_re += t34_re;
   10940:	f241 3330 	movw	r3, #4912	; 0x1330
   10944:	443b      	add	r3, r7
   10946:	ed93 6b00 	vldr	d6, [r3]
   1094a:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1094e:	443b      	add	r3, r7
   10950:	ed93 7b00 	vldr	d7, [r3]
   10954:	ee36 7b07 	vadd.f64	d7, d6, d7
   10958:	f241 3330 	movw	r3, #4912	; 0x1330
   1095c:	443b      	add	r3, r7
   1095e:	ed83 7b00 	vstr	d7, [r3]
  t3_im += t34_im;
   10962:	f241 3310 	movw	r3, #4880	; 0x1310
   10966:	443b      	add	r3, r7
   10968:	ed93 6b00 	vldr	d6, [r3]
   1096c:	f241 33b0 	movw	r3, #5040	; 0x13b0
   10970:	443b      	add	r3, r7
   10972:	ed93 7b00 	vldr	d7, [r3]
   10976:	ee36 7b07 	vadd.f64	d7, d6, d7
   1097a:	f241 3310 	movw	r3, #4880	; 0x1310
   1097e:	443b      	add	r3, r7
   10980:	ed83 7b00 	vstr	d7, [r3]
  t43_re = (t112.re * 0.0 - t112.im * 0.5) - (t113.re * 0.0 - t113.im * 0.5);
   10984:	f107 0350 	add.w	r3, r7, #80	; 0x50
   10988:	ed93 7b00 	vldr	d7, [r3]
   1098c:	ed9f 6b76 	vldr	d6, [pc, #472]	; 10b68 <G_q+0x8a78>
   10990:	ee27 6b06 	vmul.f64	d6, d7, d6
   10994:	f107 0350 	add.w	r3, r7, #80	; 0x50
   10998:	ed93 7b02 	vldr	d7, [r3, #8]
   1099c:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   109a0:	ee27 7b05 	vmul.f64	d7, d7, d5
   109a4:	ee36 6b47 	vsub.f64	d6, d6, d7
   109a8:	4b72      	ldr	r3, [pc, #456]	; (10b74 <G_q+0x8a84>)
   109aa:	f241 32d0 	movw	r2, #5072	; 0x13d0
   109ae:	443a      	add	r2, r7
   109b0:	4413      	add	r3, r2
   109b2:	ed93 7b00 	vldr	d7, [r3]
   109b6:	ed9f 5b6c 	vldr	d5, [pc, #432]	; 10b68 <G_q+0x8a78>
   109ba:	ee27 5b05 	vmul.f64	d5, d7, d5
   109be:	4b6d      	ldr	r3, [pc, #436]	; (10b74 <G_q+0x8a84>)
   109c0:	f241 32d0 	movw	r2, #5072	; 0x13d0
   109c4:	443a      	add	r2, r7
   109c6:	4413      	add	r3, r2
   109c8:	ed93 7b02 	vldr	d7, [r3, #8]
   109cc:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   109d0:	ee27 7b04 	vmul.f64	d7, d7, d4
   109d4:	ee35 7b47 	vsub.f64	d7, d5, d7
   109d8:	f241 2358 	movw	r3, #4696	; 0x1258
   109dc:	443b      	add	r3, r7
   109de:	ee36 7b47 	vsub.f64	d7, d6, d7
   109e2:	ed83 7b00 	vstr	d7, [r3]
  t41_re = (t112.re * 0.5 + t112.im * 0.0) - (t113.re * 0.5 + t113.im * 0.0);
   109e6:	f107 0350 	add.w	r3, r7, #80	; 0x50
   109ea:	ed93 7b00 	vldr	d7, [r3]
   109ee:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   109f2:	ee27 6b06 	vmul.f64	d6, d7, d6
   109f6:	f107 0350 	add.w	r3, r7, #80	; 0x50
   109fa:	ed93 7b02 	vldr	d7, [r3, #8]
   109fe:	ed9f 5b5a 	vldr	d5, [pc, #360]	; 10b68 <G_q+0x8a78>
   10a02:	ee27 7b05 	vmul.f64	d7, d7, d5
   10a06:	ee36 6b07 	vadd.f64	d6, d6, d7
   10a0a:	4b5a      	ldr	r3, [pc, #360]	; (10b74 <G_q+0x8a84>)
   10a0c:	f241 32d0 	movw	r2, #5072	; 0x13d0
   10a10:	443a      	add	r2, r7
   10a12:	4413      	add	r3, r2
   10a14:	ed93 7b00 	vldr	d7, [r3]
   10a18:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   10a1c:	ee27 5b05 	vmul.f64	d5, d7, d5
   10a20:	4b54      	ldr	r3, [pc, #336]	; (10b74 <G_q+0x8a84>)
   10a22:	f241 32d0 	movw	r2, #5072	; 0x13d0
   10a26:	443a      	add	r2, r7
   10a28:	4413      	add	r3, r2
   10a2a:	ed93 7b02 	vldr	d7, [r3, #8]
   10a2e:	ed9f 4b4e 	vldr	d4, [pc, #312]	; 10b68 <G_q+0x8a78>
   10a32:	ee27 7b04 	vmul.f64	d7, d7, d4
   10a36:	ee35 7b07 	vadd.f64	d7, d5, d7
   10a3a:	ee36 7b47 	vsub.f64	d7, d6, d7
   10a3e:	f241 3308 	movw	r3, #4872	; 0x1308
   10a42:	443b      	add	r3, r7
   10a44:	ed83 7b00 	vstr	d7, [r3]
  t41_im = (t72_re * t58_im - t8_re * t60_re) + (t13_re * t23_re - t76_re *
   10a48:	f507 5296 	add.w	r2, r7, #4800	; 0x12c0
   10a4c:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   10a50:	ed92 6b00 	vldr	d6, [r2]
   10a54:	ed93 7b00 	vldr	d7, [r3]
   10a58:	ee26 6b07 	vmul.f64	d6, d6, d7
   10a5c:	f507 5293 	add.w	r2, r7, #4704	; 0x1260
   10a60:	f241 2350 	movw	r3, #4688	; 0x1250
   10a64:	443b      	add	r3, r7
   10a66:	ed92 5b00 	vldr	d5, [r2]
   10a6a:	ed93 7b00 	vldr	d7, [r3]
   10a6e:	ee25 7b07 	vmul.f64	d7, d5, d7
   10a72:	ee36 6b47 	vsub.f64	d6, d6, d7
   10a76:	f241 3378 	movw	r3, #4984	; 0x1378
   10a7a:	443b      	add	r3, r7
   10a7c:	ed93 5b00 	vldr	d5, [r3]
   10a80:	f241 3330 	movw	r3, #4912	; 0x1330
   10a84:	443b      	add	r3, r7
   10a86:	ed93 7b00 	vldr	d7, [r3]
   10a8a:	ee25 5b07 	vmul.f64	d5, d5, d7
   10a8e:	f241 23a8 	movw	r3, #4776	; 0x12a8
   10a92:	443b      	add	r3, r7
   10a94:	ed93 4b00 	vldr	d4, [r3]
   10a98:	f241 3310 	movw	r3, #4880	; 0x1310
   10a9c:	443b      	add	r3, r7
   10a9e:	ed93 7b00 	vldr	d7, [r3]
   10aa2:	ee24 7b07 	vmul.f64	d7, d4, d7
   10aa6:	ee35 7b47 	vsub.f64	d7, d5, d7
   10aaa:	ee36 7b07 	vadd.f64	d7, d6, d7
   10aae:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
   10ab2:	ed83 7b00 	vstr	d7, [r3]
    t3_im);
  t8_re = (t72_re * t60_re + t8_re * t58_im) + (t13_re * t3_im + t76_re * t23_re);
   10ab6:	f507 5296 	add.w	r2, r7, #4800	; 0x12c0
   10aba:	f241 2350 	movw	r3, #4688	; 0x1250
   10abe:	443b      	add	r3, r7
   10ac0:	ed92 6b00 	vldr	d6, [r2]
   10ac4:	ed93 7b00 	vldr	d7, [r3]
   10ac8:	ee26 6b07 	vmul.f64	d6, d6, d7
   10acc:	f507 5293 	add.w	r2, r7, #4704	; 0x1260
   10ad0:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   10ad4:	ed92 5b00 	vldr	d5, [r2]
   10ad8:	ed93 7b00 	vldr	d7, [r3]
   10adc:	ee25 7b07 	vmul.f64	d7, d5, d7
   10ae0:	ee36 6b07 	vadd.f64	d6, d6, d7
   10ae4:	f241 3378 	movw	r3, #4984	; 0x1378
   10ae8:	443b      	add	r3, r7
   10aea:	ed93 5b00 	vldr	d5, [r3]
   10aee:	f241 3310 	movw	r3, #4880	; 0x1310
   10af2:	443b      	add	r3, r7
   10af4:	ed93 7b00 	vldr	d7, [r3]
   10af8:	ee25 5b07 	vmul.f64	d5, d5, d7
   10afc:	f241 23a8 	movw	r3, #4776	; 0x12a8
   10b00:	443b      	add	r3, r7
   10b02:	ed93 4b00 	vldr	d4, [r3]
   10b06:	f241 3330 	movw	r3, #4912	; 0x1330
   10b0a:	443b      	add	r3, r7
   10b0c:	ed93 7b00 	vldr	d7, [r3]
   10b10:	ee24 7b07 	vmul.f64	d7, d4, d7
   10b14:	ee35 7b07 	vadd.f64	d7, d5, d7
   10b18:	f507 5393 	add.w	r3, r7, #4704	; 0x1260
   10b1c:	ee36 7b07 	vadd.f64	d7, d6, d7
   10b20:	ed83 7b00 	vstr	d7, [r3]
  if (t124.im == 0.0) {
   10b24:	f107 0370 	add.w	r3, r7, #112	; 0x70
   10b28:	ed93 7b02 	vldr	d7, [r3, #8]
   10b2c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   10b30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   10b34:	d120      	bne.n	10b78 <G_q+0x8a88>
    t43_im = t124.re / 2.0;
   10b36:	f107 0370 	add.w	r3, r7, #112	; 0x70
   10b3a:	ed93 6b00 	vldr	d6, [r3]
   10b3e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10b42:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10b46:	f241 23f8 	movw	r3, #4856	; 0x12f8
   10b4a:	443b      	add	r3, r7
   10b4c:	ed83 7b00 	vstr	d7, [r3]
    b_t54_re = 0.0;
   10b50:	f04f 0300 	mov.w	r3, #0
   10b54:	f04f 0400 	mov.w	r4, #0
   10b58:	f241 22f0 	movw	r2, #4848	; 0x12f0
   10b5c:	443a      	add	r2, r7
   10b5e:	e9c2 3400 	strd	r3, r4, [r2]
   10b62:	e043      	b.n	10bec <G_q+0x8afc>
   10b64:	f3af 8000 	nop.w
	...
   10b70:	ffffee10 	.word	0xffffee10
   10b74:	ffffec90 	.word	0xffffec90
  } else if (t124.re == 0.0) {
   10b78:	f107 0370 	add.w	r3, r7, #112	; 0x70
   10b7c:	ed93 7b00 	vldr	d7, [r3]
   10b80:	eeb5 7b40 	vcmp.f64	d7, #0.0
   10b84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   10b88:	d116      	bne.n	10bb8 <G_q+0x8ac8>
    t43_im = 0.0;
   10b8a:	f04f 0300 	mov.w	r3, #0
   10b8e:	f04f 0400 	mov.w	r4, #0
   10b92:	f241 22f8 	movw	r2, #4856	; 0x12f8
   10b96:	443a      	add	r2, r7
   10b98:	e9c2 3400 	strd	r3, r4, [r2]
    b_t54_re = t124.im / 2.0;
   10b9c:	f107 0370 	add.w	r3, r7, #112	; 0x70
   10ba0:	ed93 6b02 	vldr	d6, [r3, #8]
   10ba4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10ba8:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10bac:	f241 23f0 	movw	r3, #4848	; 0x12f0
   10bb0:	443b      	add	r3, r7
   10bb2:	ed83 7b00 	vstr	d7, [r3]
   10bb6:	e019      	b.n	10bec <G_q+0x8afc>
  } else {
    t43_im = t124.re / 2.0;
   10bb8:	f107 0370 	add.w	r3, r7, #112	; 0x70
   10bbc:	ed93 6b00 	vldr	d6, [r3]
   10bc0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10bc4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10bc8:	f241 23f8 	movw	r3, #4856	; 0x12f8
   10bcc:	443b      	add	r3, r7
   10bce:	ed83 7b00 	vstr	d7, [r3]
    b_t54_re = t124.im / 2.0;
   10bd2:	f107 0370 	add.w	r3, r7, #112	; 0x70
   10bd6:	ed93 6b02 	vldr	d6, [r3, #8]
   10bda:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10bde:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10be2:	f241 23f0 	movw	r3, #4848	; 0x12f0
   10be6:	443b      	add	r3, r7
   10be8:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t125.im == 0.0) {
   10bec:	4b82      	ldr	r3, [pc, #520]	; (10df8 <G_q+0x8d08>)
   10bee:	f241 32d0 	movw	r2, #5072	; 0x13d0
   10bf2:	443a      	add	r2, r7
   10bf4:	4413      	add	r3, r2
   10bf6:	ed93 7b02 	vldr	d7, [r3, #8]
   10bfa:	eeb5 7b40 	vcmp.f64	d7, #0.0
   10bfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   10c02:	d119      	bne.n	10c38 <G_q+0x8b48>
    t55_im = t125.re / 2.0;
   10c04:	4b7c      	ldr	r3, [pc, #496]	; (10df8 <G_q+0x8d08>)
   10c06:	f241 32d0 	movw	r2, #5072	; 0x13d0
   10c0a:	443a      	add	r2, r7
   10c0c:	4413      	add	r3, r2
   10c0e:	ed93 6b00 	vldr	d6, [r3]
   10c12:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10c16:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10c1a:	f241 23d8 	movw	r3, #4824	; 0x12d8
   10c1e:	443b      	add	r3, r7
   10c20:	ed83 7b00 	vstr	d7, [r3]
    t70_re = 0.0;
   10c24:	f241 22d0 	movw	r2, #4816	; 0x12d0
   10c28:	443a      	add	r2, r7
   10c2a:	f04f 0300 	mov.w	r3, #0
   10c2e:	f04f 0400 	mov.w	r4, #0
   10c32:	e9c2 3400 	strd	r3, r4, [r2]
   10c36:	e045      	b.n	10cc4 <G_q+0x8bd4>
  } else if (t125.re == 0.0) {
   10c38:	4b6f      	ldr	r3, [pc, #444]	; (10df8 <G_q+0x8d08>)
   10c3a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   10c3e:	443a      	add	r2, r7
   10c40:	4413      	add	r3, r2
   10c42:	ed93 7b00 	vldr	d7, [r3]
   10c46:	eeb5 7b40 	vcmp.f64	d7, #0.0
   10c4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   10c4e:	d119      	bne.n	10c84 <G_q+0x8b94>
    t55_im = 0.0;
   10c50:	f04f 0300 	mov.w	r3, #0
   10c54:	f04f 0400 	mov.w	r4, #0
   10c58:	f241 22d8 	movw	r2, #4824	; 0x12d8
   10c5c:	443a      	add	r2, r7
   10c5e:	e9c2 3400 	strd	r3, r4, [r2]
    t70_re = t125.im / 2.0;
   10c62:	4b65      	ldr	r3, [pc, #404]	; (10df8 <G_q+0x8d08>)
   10c64:	f241 32d0 	movw	r2, #5072	; 0x13d0
   10c68:	443a      	add	r2, r7
   10c6a:	4413      	add	r3, r2
   10c6c:	ed93 6b02 	vldr	d6, [r3, #8]
   10c70:	f241 23d0 	movw	r3, #4816	; 0x12d0
   10c74:	443b      	add	r3, r7
   10c76:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10c7a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10c7e:	ed83 7b00 	vstr	d7, [r3]
   10c82:	e01f      	b.n	10cc4 <G_q+0x8bd4>
  } else {
    t55_im = t125.re / 2.0;
   10c84:	4b5c      	ldr	r3, [pc, #368]	; (10df8 <G_q+0x8d08>)
   10c86:	f241 32d0 	movw	r2, #5072	; 0x13d0
   10c8a:	443a      	add	r2, r7
   10c8c:	4413      	add	r3, r2
   10c8e:	ed93 6b00 	vldr	d6, [r3]
   10c92:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10c96:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10c9a:	f241 23d8 	movw	r3, #4824	; 0x12d8
   10c9e:	443b      	add	r3, r7
   10ca0:	ed83 7b00 	vstr	d7, [r3]
    t70_re = t125.im / 2.0;
   10ca4:	4b54      	ldr	r3, [pc, #336]	; (10df8 <G_q+0x8d08>)
   10ca6:	f241 32d0 	movw	r2, #5072	; 0x13d0
   10caa:	443a      	add	r2, r7
   10cac:	4413      	add	r3, r2
   10cae:	ed93 6b02 	vldr	d6, [r3, #8]
   10cb2:	f241 23d0 	movw	r3, #4816	; 0x12d0
   10cb6:	443b      	add	r3, r7
   10cb8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10cbc:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10cc0:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t136.im == 0.0) {
   10cc4:	f507 63d2 	add.w	r3, r7, #1680	; 0x690
   10cc8:	ed93 7b02 	vldr	d7, [r3, #8]
   10ccc:	eeb5 7b40 	vcmp.f64	d7, #0.0
   10cd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   10cd4:	d116      	bne.n	10d04 <G_q+0x8c14>
    t70_im = t136.re / 2.0;
   10cd6:	f507 63d2 	add.w	r3, r7, #1680	; 0x690
   10cda:	ed93 6b00 	vldr	d6, [r3]
   10cde:	f241 23c8 	movw	r3, #4808	; 0x12c8
   10ce2:	443b      	add	r3, r7
   10ce4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10ce8:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10cec:	ed83 7b00 	vstr	d7, [r3]
    b_t54_im = 0.0;
   10cf0:	f04f 0300 	mov.w	r3, #0
   10cf4:	f04f 0400 	mov.w	r4, #0
   10cf8:	f241 22e8 	movw	r2, #4840	; 0x12e8
   10cfc:	443a      	add	r2, r7
   10cfe:	e9c2 3400 	strd	r3, r4, [r2]
   10d02:	e039      	b.n	10d78 <G_q+0x8c88>
  } else if (t136.re == 0.0) {
   10d04:	f507 63d2 	add.w	r3, r7, #1680	; 0x690
   10d08:	ed93 7b00 	vldr	d7, [r3]
   10d0c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   10d10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   10d14:	d116      	bne.n	10d44 <G_q+0x8c54>
    t70_im = 0.0;
   10d16:	f241 22c8 	movw	r2, #4808	; 0x12c8
   10d1a:	443a      	add	r2, r7
   10d1c:	f04f 0300 	mov.w	r3, #0
   10d20:	f04f 0400 	mov.w	r4, #0
   10d24:	e9c2 3400 	strd	r3, r4, [r2]
    b_t54_im = t136.im / 2.0;
   10d28:	f507 63d2 	add.w	r3, r7, #1680	; 0x690
   10d2c:	ed93 6b02 	vldr	d6, [r3, #8]
   10d30:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10d34:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10d38:	f241 23e8 	movw	r3, #4840	; 0x12e8
   10d3c:	443b      	add	r3, r7
   10d3e:	ed83 7b00 	vstr	d7, [r3]
   10d42:	e019      	b.n	10d78 <G_q+0x8c88>
  } else {
    t70_im = t136.re / 2.0;
   10d44:	f507 63d2 	add.w	r3, r7, #1680	; 0x690
   10d48:	ed93 6b00 	vldr	d6, [r3]
   10d4c:	f241 23c8 	movw	r3, #4808	; 0x12c8
   10d50:	443b      	add	r3, r7
   10d52:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10d56:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10d5a:	ed83 7b00 	vstr	d7, [r3]
    b_t54_im = t136.im / 2.0;
   10d5e:	f507 63d2 	add.w	r3, r7, #1680	; 0x690
   10d62:	ed93 6b02 	vldr	d6, [r3, #8]
   10d66:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10d6a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10d6e:	f241 23e8 	movw	r3, #4840	; 0x12e8
   10d72:	443b      	add	r3, r7
   10d74:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t137.im == 0.0) {
   10d78:	f507 63d4 	add.w	r3, r7, #1696	; 0x6a0
   10d7c:	ed93 7b02 	vldr	d7, [r3, #8]
   10d80:	eeb5 7b40 	vcmp.f64	d7, #0.0
   10d84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   10d88:	d116      	bne.n	10db8 <G_q+0x8cc8>
    t34_re = t137.re / 2.0;
   10d8a:	f507 63d4 	add.w	r3, r7, #1696	; 0x6a0
   10d8e:	ed93 6b00 	vldr	d6, [r3]
   10d92:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10d96:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10d9a:	f241 33b8 	movw	r3, #5048	; 0x13b8
   10d9e:	443b      	add	r3, r7
   10da0:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   10da4:	f04f 0300 	mov.w	r3, #0
   10da8:	f04f 0400 	mov.w	r4, #0
   10dac:	f241 32b0 	movw	r2, #5040	; 0x13b0
   10db0:	443a      	add	r2, r7
   10db2:	e9c2 3400 	strd	r3, r4, [r2]
   10db6:	e03b      	b.n	10e30 <G_q+0x8d40>
  } else if (t137.re == 0.0) {
   10db8:	f507 63d4 	add.w	r3, r7, #1696	; 0x6a0
   10dbc:	ed93 7b00 	vldr	d7, [r3]
   10dc0:	eeb5 7b40 	vcmp.f64	d7, #0.0
   10dc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   10dc8:	d118      	bne.n	10dfc <G_q+0x8d0c>
    t34_re = 0.0;
   10dca:	f04f 0300 	mov.w	r3, #0
   10dce:	f04f 0400 	mov.w	r4, #0
   10dd2:	f241 32b8 	movw	r2, #5048	; 0x13b8
   10dd6:	443a      	add	r2, r7
   10dd8:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t137.im / 2.0;
   10ddc:	f507 63d4 	add.w	r3, r7, #1696	; 0x6a0
   10de0:	ed93 6b02 	vldr	d6, [r3, #8]
   10de4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10de8:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10dec:	f241 33b0 	movw	r3, #5040	; 0x13b0
   10df0:	443b      	add	r3, r7
   10df2:	ed83 7b00 	vstr	d7, [r3]
   10df6:	e01b      	b.n	10e30 <G_q+0x8d40>
   10df8:	ffffecb0 	.word	0xffffecb0
  } else {
    t34_re = t137.re / 2.0;
   10dfc:	f507 63d4 	add.w	r3, r7, #1696	; 0x6a0
   10e00:	ed93 6b00 	vldr	d6, [r3]
   10e04:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10e08:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10e0c:	f241 33b8 	movw	r3, #5048	; 0x13b8
   10e10:	443b      	add	r3, r7
   10e12:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t137.im / 2.0;
   10e16:	f507 63d4 	add.w	r3, r7, #1696	; 0x6a0
   10e1a:	ed93 6b02 	vldr	d6, [r3, #8]
   10e1e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   10e22:	ee86 7b05 	vdiv.f64	d7, d6, d5
   10e26:	f241 33b0 	movw	r3, #5040	; 0x13b0
   10e2a:	443b      	add	r3, r7
   10e2c:	ed83 7b00 	vstr	d7, [r3]
  }

  t70_im += t34_re;
   10e30:	f241 23c8 	movw	r3, #4808	; 0x12c8
   10e34:	443b      	add	r3, r7
   10e36:	f241 22c8 	movw	r2, #4808	; 0x12c8
   10e3a:	443a      	add	r2, r7
   10e3c:	ed92 6b00 	vldr	d6, [r2]
   10e40:	f241 32b8 	movw	r2, #5048	; 0x13b8
   10e44:	443a      	add	r2, r7
   10e46:	ed92 7b00 	vldr	d7, [r2]
   10e4a:	ee36 7b07 	vadd.f64	d7, d6, d7
   10e4e:	ed83 7b00 	vstr	d7, [r3]
  b_t54_im += t34_im;
   10e52:	f241 23e8 	movw	r3, #4840	; 0x12e8
   10e56:	443b      	add	r3, r7
   10e58:	ed93 6b00 	vldr	d6, [r3]
   10e5c:	f241 33b0 	movw	r3, #5040	; 0x13b0
   10e60:	443b      	add	r3, r7
   10e62:	ed93 7b00 	vldr	d7, [r3]
   10e66:	ee36 7b07 	vadd.f64	d7, d6, d7
   10e6a:	f241 23e8 	movw	r3, #4840	; 0x12e8
   10e6e:	443b      	add	r3, r7
   10e70:	ed83 7b00 	vstr	d7, [r3]
  t74_re = (t138.re * 0.0 - t138.im * 0.5) - (t139.re * 0.0 - t139.im * 0.5);
   10e74:	f507 635d 	add.w	r3, r7, #3536	; 0xdd0
   10e78:	ed93 7b00 	vldr	d7, [r3]
   10e7c:	ed9f 6bb6 	vldr	d6, [pc, #728]	; 11158 <G_q+0x9068>
   10e80:	ee27 6b06 	vmul.f64	d6, d7, d6
   10e84:	f507 635d 	add.w	r3, r7, #3536	; 0xdd0
   10e88:	ed93 7b02 	vldr	d7, [r3, #8]
   10e8c:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   10e90:	ee27 7b05 	vmul.f64	d7, d7, d5
   10e94:	ee36 6b47 	vsub.f64	d6, d6, d7
   10e98:	f507 635e 	add.w	r3, r7, #3552	; 0xde0
   10e9c:	ed93 7b00 	vldr	d7, [r3]
   10ea0:	ed9f 5bad 	vldr	d5, [pc, #692]	; 11158 <G_q+0x9068>
   10ea4:	ee27 5b05 	vmul.f64	d5, d7, d5
   10ea8:	f507 635e 	add.w	r3, r7, #3552	; 0xde0
   10eac:	ed93 7b02 	vldr	d7, [r3, #8]
   10eb0:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   10eb4:	ee27 7b04 	vmul.f64	d7, d7, d4
   10eb8:	ee35 7b47 	vsub.f64	d7, d5, d7
   10ebc:	f241 23b8 	movw	r3, #4792	; 0x12b8
   10ec0:	443b      	add	r3, r7
   10ec2:	ee36 7b47 	vsub.f64	d7, d6, d7
   10ec6:	ed83 7b00 	vstr	d7, [r3]
  t74_im = (t138.re * 0.5 + t138.im * 0.0) - (t139.re * 0.5 + t139.im * 0.0);
   10eca:	f507 635d 	add.w	r3, r7, #3536	; 0xdd0
   10ece:	ed93 7b00 	vldr	d7, [r3]
   10ed2:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   10ed6:	ee27 6b06 	vmul.f64	d6, d7, d6
   10eda:	f507 635d 	add.w	r3, r7, #3536	; 0xdd0
   10ede:	ed93 7b02 	vldr	d7, [r3, #8]
   10ee2:	ed9f 5b9d 	vldr	d5, [pc, #628]	; 11158 <G_q+0x9068>
   10ee6:	ee27 7b05 	vmul.f64	d7, d7, d5
   10eea:	ee36 6b07 	vadd.f64	d6, d6, d7
   10eee:	f507 635e 	add.w	r3, r7, #3552	; 0xde0
   10ef2:	ed93 7b00 	vldr	d7, [r3]
   10ef6:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   10efa:	ee27 5b05 	vmul.f64	d5, d7, d5
   10efe:	f507 635e 	add.w	r3, r7, #3552	; 0xde0
   10f02:	ed93 7b02 	vldr	d7, [r3, #8]
   10f06:	ed9f 4b94 	vldr	d4, [pc, #592]	; 11158 <G_q+0x9068>
   10f0a:	ee27 7b04 	vmul.f64	d7, d7, d4
   10f0e:	ee35 7b07 	vadd.f64	d7, d5, d7
   10f12:	f241 23b0 	movw	r3, #4784	; 0x12b0
   10f16:	443b      	add	r3, r7
   10f18:	ee36 7b47 	vsub.f64	d7, d6, d7
   10f1c:	ed83 7b00 	vstr	d7, [r3]
  t13_re = t150.re * 3.061616997868383E-17 + t151.re * 3.061616997868383E-17;
   10f20:	f507 63de 	add.w	r3, r7, #1776	; 0x6f0
   10f24:	ed93 7b00 	vldr	d7, [r3]
   10f28:	ed9f 6b8f 	vldr	d6, [pc, #572]	; 11168 <G_q+0x9078>
   10f2c:	ee27 6b06 	vmul.f64	d6, d7, d6
   10f30:	f507 63e0 	add.w	r3, r7, #1792	; 0x700
   10f34:	ed93 7b00 	vldr	d7, [r3]
   10f38:	ed9f 5b8b 	vldr	d5, [pc, #556]	; 11168 <G_q+0x9078>
   10f3c:	ee27 7b05 	vmul.f64	d7, d7, d5
   10f40:	ee36 7b07 	vadd.f64	d7, d6, d7
   10f44:	f241 3378 	movw	r3, #4984	; 0x1378
   10f48:	443b      	add	r3, r7
   10f4a:	ed83 7b00 	vstr	d7, [r3]
  t55_re = t150.im * 3.061616997868383E-17 + t151.im * 3.061616997868383E-17;
   10f4e:	f507 63de 	add.w	r3, r7, #1776	; 0x6f0
   10f52:	ed93 7b02 	vldr	d7, [r3, #8]
   10f56:	ed9f 6b84 	vldr	d6, [pc, #528]	; 11168 <G_q+0x9078>
   10f5a:	ee27 6b06 	vmul.f64	d6, d7, d6
   10f5e:	f507 63e0 	add.w	r3, r7, #1792	; 0x700
   10f62:	ed93 7b02 	vldr	d7, [r3, #8]
   10f66:	ed9f 5b80 	vldr	d5, [pc, #512]	; 11168 <G_q+0x9078>
   10f6a:	ee27 7b05 	vmul.f64	d7, d7, d5
   10f6e:	ee36 7b07 	vadd.f64	d7, d6, d7
   10f72:	f507 5397 	add.w	r3, r7, #4832	; 0x12e0
   10f76:	ed83 7b00 	vstr	d7, [r3]
  t13_im = (t148.re * 0.0 - t148.im * 0.5) - (t149.re * 0.0 - t149.im * 0.5);
   10f7a:	f507 6363 	add.w	r3, r7, #3632	; 0xe30
   10f7e:	ed93 7b00 	vldr	d7, [r3]
   10f82:	ed9f 6b75 	vldr	d6, [pc, #468]	; 11158 <G_q+0x9068>
   10f86:	ee27 6b06 	vmul.f64	d6, d7, d6
   10f8a:	f507 6363 	add.w	r3, r7, #3632	; 0xe30
   10f8e:	ed93 7b02 	vldr	d7, [r3, #8]
   10f92:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   10f96:	ee27 7b05 	vmul.f64	d7, d7, d5
   10f9a:	ee36 6b47 	vsub.f64	d6, d6, d7
   10f9e:	f507 6364 	add.w	r3, r7, #3648	; 0xe40
   10fa2:	ed93 7b00 	vldr	d7, [r3]
   10fa6:	ed9f 5b6c 	vldr	d5, [pc, #432]	; 11158 <G_q+0x9068>
   10faa:	ee27 5b05 	vmul.f64	d5, d7, d5
   10fae:	f507 6364 	add.w	r3, r7, #3648	; 0xe40
   10fb2:	ed93 7b02 	vldr	d7, [r3, #8]
   10fb6:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   10fba:	ee27 7b04 	vmul.f64	d7, d7, d4
   10fbe:	ee35 7b47 	vsub.f64	d7, d5, d7
   10fc2:	ee36 7b47 	vsub.f64	d7, d6, d7
   10fc6:	f241 3370 	movw	r3, #4976	; 0x1370
   10fca:	443b      	add	r3, r7
   10fcc:	ed83 7b00 	vstr	d7, [r3]
  t16_re = (t148.re * 0.5 + t148.im * 0.0) - (t149.re * 0.5 + t149.im * 0.0);
   10fd0:	f507 6363 	add.w	r3, r7, #3632	; 0xe30
   10fd4:	ed93 7b00 	vldr	d7, [r3]
   10fd8:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   10fdc:	ee27 6b06 	vmul.f64	d6, d7, d6
   10fe0:	f507 6363 	add.w	r3, r7, #3632	; 0xe30
   10fe4:	ed93 7b02 	vldr	d7, [r3, #8]
   10fe8:	ed9f 5b5b 	vldr	d5, [pc, #364]	; 11158 <G_q+0x9068>
   10fec:	ee27 7b05 	vmul.f64	d7, d7, d5
   10ff0:	ee36 6b07 	vadd.f64	d6, d6, d7
   10ff4:	f507 6364 	add.w	r3, r7, #3648	; 0xe40
   10ff8:	ed93 7b00 	vldr	d7, [r3]
   10ffc:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   11000:	ee27 5b05 	vmul.f64	d5, d7, d5
   11004:	f507 6364 	add.w	r3, r7, #3648	; 0xe40
   11008:	ed93 7b02 	vldr	d7, [r3, #8]
   1100c:	ed9f 4b52 	vldr	d4, [pc, #328]	; 11158 <G_q+0x9068>
   11010:	ee27 7b04 	vmul.f64	d7, d7, d4
   11014:	ee35 7b07 	vadd.f64	d7, d5, d7
   11018:	ee36 7b47 	vsub.f64	d7, d6, d7
   1101c:	f241 3368 	movw	r3, #4968	; 0x1368
   11020:	443b      	add	r3, r7
   11022:	ed83 7b00 	vstr	d7, [r3]
  if (t146.im == 0.0) {
   11026:	f507 6361 	add.w	r3, r7, #3600	; 0xe10
   1102a:	ed93 7b02 	vldr	d7, [r3, #8]
   1102e:	eeb5 7b40 	vcmp.f64	d7, #0.0
   11032:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   11036:	d115      	bne.n	11064 <G_q+0x8f74>
    t16_im = t146.re / 2.0;
   11038:	f507 6361 	add.w	r3, r7, #3600	; 0xe10
   1103c:	ed93 6b00 	vldr	d6, [r3]
   11040:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11044:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11048:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   1104c:	ed83 7b00 	vstr	d7, [r3]
    t20_re = 0.0;
   11050:	f04f 0300 	mov.w	r3, #0
   11054:	f04f 0400 	mov.w	r4, #0
   11058:	f241 3248 	movw	r2, #4936	; 0x1348
   1105c:	443a      	add	r2, r7
   1105e:	e9c2 3400 	strd	r3, r4, [r2]
   11062:	e037      	b.n	110d4 <G_q+0x8fe4>
  } else if (t146.re == 0.0) {
   11064:	f507 6361 	add.w	r3, r7, #3600	; 0xe10
   11068:	ed93 7b00 	vldr	d7, [r3]
   1106c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   11070:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   11074:	d115      	bne.n	110a2 <G_q+0x8fb2>
    t16_im = 0.0;
   11076:	f04f 0300 	mov.w	r3, #0
   1107a:	f04f 0400 	mov.w	r4, #0
   1107e:	f507 529b 	add.w	r2, r7, #4960	; 0x1360
   11082:	e9c2 3400 	strd	r3, r4, [r2]
    t20_re = t146.im / 2.0;
   11086:	f507 6361 	add.w	r3, r7, #3600	; 0xe10
   1108a:	ed93 6b02 	vldr	d6, [r3, #8]
   1108e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11092:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11096:	f241 3348 	movw	r3, #4936	; 0x1348
   1109a:	443b      	add	r3, r7
   1109c:	ed83 7b00 	vstr	d7, [r3]
   110a0:	e018      	b.n	110d4 <G_q+0x8fe4>
  } else {
    t16_im = t146.re / 2.0;
   110a2:	f507 6361 	add.w	r3, r7, #3600	; 0xe10
   110a6:	ed93 6b00 	vldr	d6, [r3]
   110aa:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   110ae:	ee86 7b05 	vdiv.f64	d7, d6, d5
   110b2:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   110b6:	ed83 7b00 	vstr	d7, [r3]
    t20_re = t146.im / 2.0;
   110ba:	f507 6361 	add.w	r3, r7, #3600	; 0xe10
   110be:	ed93 6b02 	vldr	d6, [r3, #8]
   110c2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   110c6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   110ca:	f241 3348 	movw	r3, #4936	; 0x1348
   110ce:	443b      	add	r3, r7
   110d0:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t147.im == 0.0) {
   110d4:	f507 6362 	add.w	r3, r7, #3616	; 0xe20
   110d8:	ed93 7b02 	vldr	d7, [r3, #8]
   110dc:	eeb5 7b40 	vcmp.f64	d7, #0.0
   110e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   110e4:	d116      	bne.n	11114 <G_q+0x9024>
    t34_re = t147.re / 2.0;
   110e6:	f507 6362 	add.w	r3, r7, #3616	; 0xe20
   110ea:	ed93 6b00 	vldr	d6, [r3]
   110ee:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   110f2:	ee86 7b05 	vdiv.f64	d7, d6, d5
   110f6:	f241 33b8 	movw	r3, #5048	; 0x13b8
   110fa:	443b      	add	r3, r7
   110fc:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   11100:	f04f 0300 	mov.w	r3, #0
   11104:	f04f 0400 	mov.w	r4, #0
   11108:	f241 32b0 	movw	r2, #5040	; 0x13b0
   1110c:	443a      	add	r2, r7
   1110e:	e9c2 3400 	strd	r3, r4, [r2]
   11112:	e047      	b.n	111a4 <G_q+0x90b4>
  } else if (t147.re == 0.0) {
   11114:	f507 6362 	add.w	r3, r7, #3616	; 0xe20
   11118:	ed93 7b00 	vldr	d7, [r3]
   1111c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   11120:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   11124:	d124      	bne.n	11170 <G_q+0x9080>
    t34_re = 0.0;
   11126:	f04f 0300 	mov.w	r3, #0
   1112a:	f04f 0400 	mov.w	r4, #0
   1112e:	f241 32b8 	movw	r2, #5048	; 0x13b8
   11132:	443a      	add	r2, r7
   11134:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t147.im / 2.0;
   11138:	f507 6362 	add.w	r3, r7, #3616	; 0xe20
   1113c:	ed93 6b02 	vldr	d6, [r3, #8]
   11140:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11144:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11148:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1114c:	443b      	add	r3, r7
   1114e:	ed83 7b00 	vstr	d7, [r3]
   11152:	e027      	b.n	111a4 <G_q+0x90b4>
   11154:	f3af 8000 	nop.w
	...
   11160:	858a5d48 	.word	0x858a5d48
   11164:	394377ce 	.word	0x394377ce
   11168:	33145c07 	.word	0x33145c07
   1116c:	3c81a626 	.word	0x3c81a626
  } else {
    t34_re = t147.re / 2.0;
   11170:	f507 6362 	add.w	r3, r7, #3616	; 0xe20
   11174:	ed93 6b00 	vldr	d6, [r3]
   11178:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1117c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11180:	f241 33b8 	movw	r3, #5048	; 0x13b8
   11184:	443b      	add	r3, r7
   11186:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t147.im / 2.0;
   1118a:	f507 6362 	add.w	r3, r7, #3616	; 0xe20
   1118e:	ed93 6b02 	vldr	d6, [r3, #8]
   11192:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11196:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1119a:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1119e:	443b      	add	r3, r7
   111a0:	ed83 7b00 	vstr	d7, [r3]
  }

  t20_im = (t144.re * 0.0 - t144.im * 3.061616997868383E-17) - (t145.re * 0.0 -
   111a4:	f507 63da 	add.w	r3, r7, #1744	; 0x6d0
   111a8:	ed93 7b00 	vldr	d7, [r3]
   111ac:	ed1f 6b16 	vldr	d6, [pc, #-88]	; 11158 <G_q+0x9068>
   111b0:	ee27 6b06 	vmul.f64	d6, d7, d6
   111b4:	f507 63da 	add.w	r3, r7, #1744	; 0x6d0
   111b8:	ed93 7b02 	vldr	d7, [r3, #8]
   111bc:	ed1f 5b16 	vldr	d5, [pc, #-88]	; 11168 <G_q+0x9078>
   111c0:	ee27 7b05 	vmul.f64	d7, d7, d5
   111c4:	ee36 6b47 	vsub.f64	d6, d6, d7
   111c8:	f507 63dc 	add.w	r3, r7, #1760	; 0x6e0
   111cc:	ed93 7b00 	vldr	d7, [r3]
   111d0:	ed1f 5b1f 	vldr	d5, [pc, #-124]	; 11158 <G_q+0x9068>
   111d4:	ee27 5b05 	vmul.f64	d5, d7, d5
    t145.im * 3.061616997868383E-17);
   111d8:	f507 63dc 	add.w	r3, r7, #1760	; 0x6e0
   111dc:	ed93 7b02 	vldr	d7, [r3, #8]
   111e0:	ed1f 4b1f 	vldr	d4, [pc, #-124]	; 11168 <G_q+0x9078>
   111e4:	ee27 7b04 	vmul.f64	d7, d7, d4
  t20_im = (t144.re * 0.0 - t144.im * 3.061616997868383E-17) - (t145.re * 0.0 -
   111e8:	ee35 7b47 	vsub.f64	d7, d5, d7
   111ec:	ee36 7b47 	vsub.f64	d7, d6, d7
   111f0:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   111f4:	ed83 7b00 	vstr	d7, [r3]
  t12_re = (t144.re * 3.061616997868383E-17 + t144.im * 0.0) - (t145.re *
   111f8:	f507 63da 	add.w	r3, r7, #1744	; 0x6d0
   111fc:	ed93 7b00 	vldr	d7, [r3]
   11200:	ed1f 6b27 	vldr	d6, [pc, #-156]	; 11168 <G_q+0x9078>
   11204:	ee27 6b06 	vmul.f64	d6, d7, d6
   11208:	f507 63da 	add.w	r3, r7, #1744	; 0x6d0
   1120c:	ed93 7b02 	vldr	d7, [r3, #8]
   11210:	ed1f 5b2f 	vldr	d5, [pc, #-188]	; 11158 <G_q+0x9068>
   11214:	ee27 7b05 	vmul.f64	d7, d7, d5
   11218:	ee36 6b07 	vadd.f64	d6, d6, d7
   1121c:	f507 63dc 	add.w	r3, r7, #1760	; 0x6e0
   11220:	ed93 7b00 	vldr	d7, [r3]
   11224:	ed1f 5b30 	vldr	d5, [pc, #-192]	; 11168 <G_q+0x9078>
   11228:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t145.im * 0.0);
   1122c:	f507 63dc 	add.w	r3, r7, #1760	; 0x6e0
   11230:	ed93 7b02 	vldr	d7, [r3, #8]
   11234:	ed1f 4b38 	vldr	d4, [pc, #-224]	; 11158 <G_q+0x9068>
   11238:	ee27 7b04 	vmul.f64	d7, d7, d4
   1123c:	ee35 7b07 	vadd.f64	d7, d5, d7
  t12_re = (t144.re * 3.061616997868383E-17 + t144.im * 0.0) - (t145.re *
   11240:	ee36 7b47 	vsub.f64	d7, d6, d7
   11244:	f241 3388 	movw	r3, #5000	; 0x1388
   11248:	443b      	add	r3, r7
   1124a:	ed83 7b00 	vstr	d7, [r3]
  t16_im = (t16_im + t34_re) + 7.498798913309288E-33;
   1124e:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   11252:	ed93 6b00 	vldr	d6, [r3]
   11256:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1125a:	443b      	add	r3, r7
   1125c:	ed93 7b00 	vldr	d7, [r3]
   11260:	ee36 7b07 	vadd.f64	d7, d6, d7
   11264:	ed1f 6b42 	vldr	d6, [pc, #-264]	; 11160 <G_q+0x9070>
   11268:	ee37 7b06 	vadd.f64	d7, d7, d6
   1126c:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   11270:	ed83 7b00 	vstr	d7, [r3]
  t20_re += t34_im;
   11274:	f241 3348 	movw	r3, #4936	; 0x1348
   11278:	443b      	add	r3, r7
   1127a:	ed93 6b00 	vldr	d6, [r3]
   1127e:	f241 33b0 	movw	r3, #5040	; 0x13b0
   11282:	443b      	add	r3, r7
   11284:	ed93 7b00 	vldr	d7, [r3]
   11288:	ee36 7b07 	vadd.f64	d7, d6, d7
   1128c:	f241 3348 	movw	r3, #4936	; 0x1348
   11290:	443b      	add	r3, r7
   11292:	ed83 7b00 	vstr	d7, [r3]
  t76_re = t152.re * 3.061616997868383E-17 + t153.re * 3.061616997868383E-17;
   11296:	f507 730c 	add.w	r3, r7, #560	; 0x230
   1129a:	ed93 7b00 	vldr	d7, [r3]
   1129e:	ed1f 6b4e 	vldr	d6, [pc, #-312]	; 11168 <G_q+0x9078>
   112a2:	ee27 6b06 	vmul.f64	d6, d7, d6
   112a6:	4be2      	ldr	r3, [pc, #904]	; (11630 <G_q+0x9540>)
   112a8:	f241 32d0 	movw	r2, #5072	; 0x13d0
   112ac:	443a      	add	r2, r7
   112ae:	4413      	add	r3, r2
   112b0:	ed93 7b00 	vldr	d7, [r3]
   112b4:	ed9f 5bda 	vldr	d5, [pc, #872]	; 11620 <G_q+0x9530>
   112b8:	ee27 7b05 	vmul.f64	d7, d7, d5
   112bc:	f241 23a8 	movw	r3, #4776	; 0x12a8
   112c0:	443b      	add	r3, r7
   112c2:	ee36 7b07 	vadd.f64	d7, d6, d7
   112c6:	ed83 7b00 	vstr	d7, [r3]
  t3_im = t152.im * 3.061616997868383E-17 + t153.im * 3.061616997868383E-17;
   112ca:	f507 730c 	add.w	r3, r7, #560	; 0x230
   112ce:	ed93 7b02 	vldr	d7, [r3, #8]
   112d2:	ed9f 6bd3 	vldr	d6, [pc, #844]	; 11620 <G_q+0x9530>
   112d6:	ee27 6b06 	vmul.f64	d6, d7, d6
   112da:	4bd5      	ldr	r3, [pc, #852]	; (11630 <G_q+0x9540>)
   112dc:	f241 32d0 	movw	r2, #5072	; 0x13d0
   112e0:	443a      	add	r2, r7
   112e2:	4413      	add	r3, r2
   112e4:	ed93 7b02 	vldr	d7, [r3, #8]
   112e8:	ed9f 5bcd 	vldr	d5, [pc, #820]	; 11620 <G_q+0x9530>
   112ec:	ee27 7b05 	vmul.f64	d7, d7, d5
   112f0:	ee36 7b07 	vadd.f64	d7, d6, d7
   112f4:	f241 3310 	movw	r3, #4880	; 0x1310
   112f8:	443b      	add	r3, r7
   112fa:	ed83 7b00 	vstr	d7, [r3]
  t72_re = (t13_re * t13_im - t55_re * t16_re) - (t20_im * t16_im - t12_re *
   112fe:	f241 3378 	movw	r3, #4984	; 0x1378
   11302:	443b      	add	r3, r7
   11304:	ed93 6b00 	vldr	d6, [r3]
   11308:	f241 3370 	movw	r3, #4976	; 0x1370
   1130c:	443b      	add	r3, r7
   1130e:	ed93 7b00 	vldr	d7, [r3]
   11312:	ee26 6b07 	vmul.f64	d6, d6, d7
   11316:	f507 5397 	add.w	r3, r7, #4832	; 0x12e0
   1131a:	ed93 5b00 	vldr	d5, [r3]
   1131e:	f241 3368 	movw	r3, #4968	; 0x1368
   11322:	443b      	add	r3, r7
   11324:	ed93 7b00 	vldr	d7, [r3]
   11328:	ee25 7b07 	vmul.f64	d7, d5, d7
   1132c:	ee36 6b47 	vsub.f64	d6, d6, d7
   11330:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   11334:	ed93 5b00 	vldr	d5, [r3]
   11338:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   1133c:	ed93 7b00 	vldr	d7, [r3]
   11340:	ee25 5b07 	vmul.f64	d5, d5, d7
   11344:	f241 3388 	movw	r3, #5000	; 0x1388
   11348:	443b      	add	r3, r7
   1134a:	ed93 4b00 	vldr	d4, [r3]
   1134e:	f241 3348 	movw	r3, #4936	; 0x1348
   11352:	443b      	add	r3, r7
   11354:	ed93 7b00 	vldr	d7, [r3]
   11358:	ee24 7b07 	vmul.f64	d7, d4, d7
   1135c:	ee35 7b47 	vsub.f64	d7, d5, d7
   11360:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   11364:	ee36 7b47 	vsub.f64	d7, d6, d7
   11368:	ed83 7b00 	vstr	d7, [r3]
    t20_re);
  t55_re = (t13_re * t16_re + t55_re * t13_im) - (t20_im * t20_re + t12_re *
   1136c:	f241 3378 	movw	r3, #4984	; 0x1378
   11370:	443b      	add	r3, r7
   11372:	ed93 6b00 	vldr	d6, [r3]
   11376:	f241 3368 	movw	r3, #4968	; 0x1368
   1137a:	443b      	add	r3, r7
   1137c:	ed93 7b00 	vldr	d7, [r3]
   11380:	ee26 6b07 	vmul.f64	d6, d6, d7
   11384:	f507 5397 	add.w	r3, r7, #4832	; 0x12e0
   11388:	ed93 5b00 	vldr	d5, [r3]
   1138c:	f241 3370 	movw	r3, #4976	; 0x1370
   11390:	443b      	add	r3, r7
   11392:	ed93 7b00 	vldr	d7, [r3]
   11396:	ee25 7b07 	vmul.f64	d7, d5, d7
   1139a:	ee36 6b07 	vadd.f64	d6, d6, d7
   1139e:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   113a2:	ed93 5b00 	vldr	d5, [r3]
   113a6:	f241 3348 	movw	r3, #4936	; 0x1348
   113aa:	443b      	add	r3, r7
   113ac:	ed93 7b00 	vldr	d7, [r3]
   113b0:	ee25 5b07 	vmul.f64	d5, d5, d7
   113b4:	f241 3388 	movw	r3, #5000	; 0x1388
   113b8:	443b      	add	r3, r7
   113ba:	ed93 4b00 	vldr	d4, [r3]
   113be:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   113c2:	ed93 7b00 	vldr	d7, [r3]
   113c6:	ee24 7b07 	vmul.f64	d7, d4, d7
   113ca:	ee35 7b07 	vadd.f64	d7, d5, d7
   113ce:	ee36 7b47 	vsub.f64	d7, d6, d7
   113d2:	f507 5397 	add.w	r3, r7, #4832	; 0x12e0
   113d6:	ed83 7b00 	vstr	d7, [r3]
    t16_im);
  t16_re = (t126.re * 0.0 - t126.im * 0.5) - (t127.re * 0.0 - t127.im * 0.5);
   113da:	f507 6359 	add.w	r3, r7, #3472	; 0xd90
   113de:	ed93 7b00 	vldr	d7, [r3]
   113e2:	ed9f 6b91 	vldr	d6, [pc, #580]	; 11628 <G_q+0x9538>
   113e6:	ee27 6b06 	vmul.f64	d6, d7, d6
   113ea:	f507 6359 	add.w	r3, r7, #3472	; 0xd90
   113ee:	ed93 7b02 	vldr	d7, [r3, #8]
   113f2:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   113f6:	ee27 7b05 	vmul.f64	d7, d7, d5
   113fa:	ee36 6b47 	vsub.f64	d6, d6, d7
   113fe:	f507 635a 	add.w	r3, r7, #3488	; 0xda0
   11402:	ed93 7b00 	vldr	d7, [r3]
   11406:	ed9f 5b88 	vldr	d5, [pc, #544]	; 11628 <G_q+0x9538>
   1140a:	ee27 5b05 	vmul.f64	d5, d7, d5
   1140e:	f507 635a 	add.w	r3, r7, #3488	; 0xda0
   11412:	ed93 7b02 	vldr	d7, [r3, #8]
   11416:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   1141a:	ee27 7b04 	vmul.f64	d7, d7, d4
   1141e:	ee35 7b47 	vsub.f64	d7, d5, d7
   11422:	ee36 7b47 	vsub.f64	d7, d6, d7
   11426:	f241 3368 	movw	r3, #4968	; 0x1368
   1142a:	443b      	add	r3, r7
   1142c:	ed83 7b00 	vstr	d7, [r3]
  t60_re = (t126.re * 0.5 + t126.im * 0.0) - (t127.re * 0.5 + t127.im * 0.0);
   11430:	f507 6359 	add.w	r3, r7, #3472	; 0xd90
   11434:	ed93 7b00 	vldr	d7, [r3]
   11438:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   1143c:	ee27 6b06 	vmul.f64	d6, d7, d6
   11440:	f507 6359 	add.w	r3, r7, #3472	; 0xd90
   11444:	ed93 7b02 	vldr	d7, [r3, #8]
   11448:	ed9f 5b77 	vldr	d5, [pc, #476]	; 11628 <G_q+0x9538>
   1144c:	ee27 7b05 	vmul.f64	d7, d7, d5
   11450:	ee36 6b07 	vadd.f64	d6, d6, d7
   11454:	f507 635a 	add.w	r3, r7, #3488	; 0xda0
   11458:	ed93 7b00 	vldr	d7, [r3]
   1145c:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   11460:	ee27 5b05 	vmul.f64	d5, d7, d5
   11464:	f507 635a 	add.w	r3, r7, #3488	; 0xda0
   11468:	ed93 7b02 	vldr	d7, [r3, #8]
   1146c:	ed9f 4b6e 	vldr	d4, [pc, #440]	; 11628 <G_q+0x9538>
   11470:	ee27 7b04 	vmul.f64	d7, d7, d4
   11474:	ee35 7b07 	vadd.f64	d7, d5, d7
   11478:	f241 2350 	movw	r3, #4688	; 0x1250
   1147c:	443b      	add	r3, r7
   1147e:	ee36 7b47 	vsub.f64	d7, d6, d7
   11482:	ed83 7b00 	vstr	d7, [r3]
  t16_im = (t128.re * 0.0 - t128.im * 0.5) - (t129.re * 0.0 - t129.im * 0.5);
   11486:	f507 63ca 	add.w	r3, r7, #1616	; 0x650
   1148a:	ed93 7b00 	vldr	d7, [r3]
   1148e:	ed9f 6b66 	vldr	d6, [pc, #408]	; 11628 <G_q+0x9538>
   11492:	ee27 6b06 	vmul.f64	d6, d7, d6
   11496:	f507 63ca 	add.w	r3, r7, #1616	; 0x650
   1149a:	ed93 7b02 	vldr	d7, [r3, #8]
   1149e:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   114a2:	ee27 7b05 	vmul.f64	d7, d7, d5
   114a6:	ee36 6b47 	vsub.f64	d6, d6, d7
   114aa:	f507 63cc 	add.w	r3, r7, #1632	; 0x660
   114ae:	ed93 7b00 	vldr	d7, [r3]
   114b2:	ed9f 5b5d 	vldr	d5, [pc, #372]	; 11628 <G_q+0x9538>
   114b6:	ee27 5b05 	vmul.f64	d5, d7, d5
   114ba:	f507 63cc 	add.w	r3, r7, #1632	; 0x660
   114be:	ed93 7b02 	vldr	d7, [r3, #8]
   114c2:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   114c6:	ee27 7b04 	vmul.f64	d7, d7, d4
   114ca:	ee35 7b47 	vsub.f64	d7, d5, d7
   114ce:	ee36 7b47 	vsub.f64	d7, d6, d7
   114d2:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   114d6:	ed83 7b00 	vstr	d7, [r3]
  t20_re = (t128.re * 0.5 + t128.im * 0.0) - (t129.re * 0.5 + t129.im * 0.0);
   114da:	f507 63ca 	add.w	r3, r7, #1616	; 0x650
   114de:	ed93 7b00 	vldr	d7, [r3]
   114e2:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   114e6:	ee27 6b06 	vmul.f64	d6, d7, d6
   114ea:	f507 63ca 	add.w	r3, r7, #1616	; 0x650
   114ee:	ed93 7b02 	vldr	d7, [r3, #8]
   114f2:	ed9f 5b4d 	vldr	d5, [pc, #308]	; 11628 <G_q+0x9538>
   114f6:	ee27 7b05 	vmul.f64	d7, d7, d5
   114fa:	ee36 6b07 	vadd.f64	d6, d6, d7
   114fe:	f507 63cc 	add.w	r3, r7, #1632	; 0x660
   11502:	ed93 7b00 	vldr	d7, [r3]
   11506:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   1150a:	ee27 5b05 	vmul.f64	d5, d7, d5
   1150e:	f507 63cc 	add.w	r3, r7, #1632	; 0x660
   11512:	ed93 7b02 	vldr	d7, [r3, #8]
   11516:	ed9f 4b44 	vldr	d4, [pc, #272]	; 11628 <G_q+0x9538>
   1151a:	ee27 7b04 	vmul.f64	d7, d7, d4
   1151e:	ee35 7b07 	vadd.f64	d7, d5, d7
   11522:	ee36 7b47 	vsub.f64	d7, d6, d7
   11526:	f241 3348 	movw	r3, #4936	; 0x1348
   1152a:	443b      	add	r3, r7
   1152c:	ed83 7b00 	vstr	d7, [r3]
  if (t130.im == 0.0) {
   11530:	f507 63ce 	add.w	r3, r7, #1648	; 0x670
   11534:	ed93 7b02 	vldr	d7, [r3, #8]
   11538:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1153c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   11540:	d115      	bne.n	1156e <G_q+0x947e>
    t20_im = t130.re / 2.0;
   11542:	f507 63ce 	add.w	r3, r7, #1648	; 0x670
   11546:	ed93 6b00 	vldr	d6, [r3]
   1154a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1154e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11552:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   11556:	ed83 7b00 	vstr	d7, [r3]
    t12_re = 0.0;
   1155a:	f04f 0300 	mov.w	r3, #0
   1155e:	f04f 0400 	mov.w	r4, #0
   11562:	f241 3288 	movw	r2, #5000	; 0x1388
   11566:	443a      	add	r2, r7
   11568:	e9c2 3400 	strd	r3, r4, [r2]
   1156c:	e037      	b.n	115de <G_q+0x94ee>
  } else if (t130.re == 0.0) {
   1156e:	f507 63ce 	add.w	r3, r7, #1648	; 0x670
   11572:	ed93 7b00 	vldr	d7, [r3]
   11576:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1157a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1157e:	d115      	bne.n	115ac <G_q+0x94bc>
    t20_im = 0.0;
   11580:	f04f 0300 	mov.w	r3, #0
   11584:	f04f 0400 	mov.w	r4, #0
   11588:	f507 529a 	add.w	r2, r7, #4928	; 0x1340
   1158c:	e9c2 3400 	strd	r3, r4, [r2]
    t12_re = t130.im / 2.0;
   11590:	f507 63ce 	add.w	r3, r7, #1648	; 0x670
   11594:	ed93 6b02 	vldr	d6, [r3, #8]
   11598:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1159c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   115a0:	f241 3388 	movw	r3, #5000	; 0x1388
   115a4:	443b      	add	r3, r7
   115a6:	ed83 7b00 	vstr	d7, [r3]
   115aa:	e018      	b.n	115de <G_q+0x94ee>
  } else {
    t20_im = t130.re / 2.0;
   115ac:	f507 63ce 	add.w	r3, r7, #1648	; 0x670
   115b0:	ed93 6b00 	vldr	d6, [r3]
   115b4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   115b8:	ee86 7b05 	vdiv.f64	d7, d6, d5
   115bc:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   115c0:	ed83 7b00 	vstr	d7, [r3]
    t12_re = t130.im / 2.0;
   115c4:	f507 63ce 	add.w	r3, r7, #1648	; 0x670
   115c8:	ed93 6b02 	vldr	d6, [r3, #8]
   115cc:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   115d0:	ee86 7b05 	vdiv.f64	d7, d6, d5
   115d4:	f241 3388 	movw	r3, #5000	; 0x1388
   115d8:	443b      	add	r3, r7
   115da:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t131.im == 0.0) {
   115de:	f507 63d0 	add.w	r3, r7, #1664	; 0x680
   115e2:	ed93 7b02 	vldr	d7, [r3, #8]
   115e6:	eeb5 7b40 	vcmp.f64	d7, #0.0
   115ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   115ee:	d121      	bne.n	11634 <G_q+0x9544>
    t34_re = t131.re / 2.0;
   115f0:	f507 63d0 	add.w	r3, r7, #1664	; 0x680
   115f4:	ed93 6b00 	vldr	d6, [r3]
   115f8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   115fc:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11600:	f241 33b8 	movw	r3, #5048	; 0x13b8
   11604:	443b      	add	r3, r7
   11606:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   1160a:	f04f 0300 	mov.w	r3, #0
   1160e:	f04f 0400 	mov.w	r4, #0
   11612:	f241 32b0 	movw	r2, #5040	; 0x13b0
   11616:	443a      	add	r2, r7
   11618:	e9c2 3400 	strd	r3, r4, [r2]
   1161c:	e044      	b.n	116a8 <G_q+0x95b8>
   1161e:	bf00      	nop
   11620:	33145c07 	.word	0x33145c07
   11624:	3c81a626 	.word	0x3c81a626
	...
   11630:	ffffee70 	.word	0xffffee70
  } else if (t131.re == 0.0) {
   11634:	f507 63d0 	add.w	r3, r7, #1664	; 0x680
   11638:	ed93 7b00 	vldr	d7, [r3]
   1163c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   11640:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   11644:	d116      	bne.n	11674 <G_q+0x9584>
    t34_re = 0.0;
   11646:	f04f 0300 	mov.w	r3, #0
   1164a:	f04f 0400 	mov.w	r4, #0
   1164e:	f241 32b8 	movw	r2, #5048	; 0x13b8
   11652:	443a      	add	r2, r7
   11654:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t131.im / 2.0;
   11658:	f507 63d0 	add.w	r3, r7, #1664	; 0x680
   1165c:	ed93 6b02 	vldr	d6, [r3, #8]
   11660:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11664:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11668:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1166c:	443b      	add	r3, r7
   1166e:	ed83 7b00 	vstr	d7, [r3]
   11672:	e019      	b.n	116a8 <G_q+0x95b8>
  } else {
    t34_re = t131.re / 2.0;
   11674:	f507 63d0 	add.w	r3, r7, #1664	; 0x680
   11678:	ed93 6b00 	vldr	d6, [r3]
   1167c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11680:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11684:	f241 33b8 	movw	r3, #5048	; 0x13b8
   11688:	443b      	add	r3, r7
   1168a:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t131.im / 2.0;
   1168e:	f507 63d0 	add.w	r3, r7, #1664	; 0x680
   11692:	ed93 6b02 	vldr	d6, [r3, #8]
   11696:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1169a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1169e:	f241 33b0 	movw	r3, #5040	; 0x13b0
   116a2:	443b      	add	r3, r7
   116a4:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t132.im == 0.0) {
   116a8:	f507 635b 	add.w	r3, r7, #3504	; 0xdb0
   116ac:	ed93 7b02 	vldr	d7, [r3, #8]
   116b0:	eeb5 7b40 	vcmp.f64	d7, #0.0
   116b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   116b8:	d115      	bne.n	116e6 <G_q+0x95f6>
    t12_im = t132.re / 2.0;
   116ba:	f507 635b 	add.w	r3, r7, #3504	; 0xdb0
   116be:	ed93 6b00 	vldr	d6, [r3]
   116c2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   116c6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   116ca:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   116ce:	ed83 7b00 	vstr	d7, [r3]
    b_t10_re = 0.0;
   116d2:	f04f 0300 	mov.w	r3, #0
   116d6:	f04f 0400 	mov.w	r4, #0
   116da:	f241 3238 	movw	r2, #4920	; 0x1338
   116de:	443a      	add	r2, r7
   116e0:	e9c2 3400 	strd	r3, r4, [r2]
   116e4:	e037      	b.n	11756 <G_q+0x9666>
  } else if (t132.re == 0.0) {
   116e6:	f507 635b 	add.w	r3, r7, #3504	; 0xdb0
   116ea:	ed93 7b00 	vldr	d7, [r3]
   116ee:	eeb5 7b40 	vcmp.f64	d7, #0.0
   116f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   116f6:	d115      	bne.n	11724 <G_q+0x9634>
    t12_im = 0.0;
   116f8:	f04f 0300 	mov.w	r3, #0
   116fc:	f04f 0400 	mov.w	r4, #0
   11700:	f507 529c 	add.w	r2, r7, #4992	; 0x1380
   11704:	e9c2 3400 	strd	r3, r4, [r2]
    b_t10_re = t132.im / 2.0;
   11708:	f507 635b 	add.w	r3, r7, #3504	; 0xdb0
   1170c:	ed93 6b02 	vldr	d6, [r3, #8]
   11710:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11714:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11718:	f241 3338 	movw	r3, #4920	; 0x1338
   1171c:	443b      	add	r3, r7
   1171e:	ed83 7b00 	vstr	d7, [r3]
   11722:	e018      	b.n	11756 <G_q+0x9666>
  } else {
    t12_im = t132.re / 2.0;
   11724:	f507 635b 	add.w	r3, r7, #3504	; 0xdb0
   11728:	ed93 6b00 	vldr	d6, [r3]
   1172c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11730:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11734:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   11738:	ed83 7b00 	vstr	d7, [r3]
    b_t10_re = t132.im / 2.0;
   1173c:	f507 635b 	add.w	r3, r7, #3504	; 0xdb0
   11740:	ed93 6b02 	vldr	d6, [r3, #8]
   11744:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11748:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1174c:	f241 3338 	movw	r3, #4920	; 0x1338
   11750:	443b      	add	r3, r7
   11752:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t133.im == 0.0) {
   11756:	f507 635c 	add.w	r3, r7, #3520	; 0xdc0
   1175a:	ed93 7b02 	vldr	d7, [r3, #8]
   1175e:	eeb5 7b40 	vcmp.f64	d7, #0.0
   11762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   11766:	d116      	bne.n	11796 <G_q+0x96a6>
    t13_re = t133.re / 2.0;
   11768:	f507 635c 	add.w	r3, r7, #3520	; 0xdc0
   1176c:	ed93 6b00 	vldr	d6, [r3]
   11770:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11774:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11778:	f241 3378 	movw	r3, #4984	; 0x1378
   1177c:	443b      	add	r3, r7
   1177e:	ed83 7b00 	vstr	d7, [r3]
    t13_im = 0.0;
   11782:	f04f 0300 	mov.w	r3, #0
   11786:	f04f 0400 	mov.w	r4, #0
   1178a:	f241 3270 	movw	r2, #4976	; 0x1370
   1178e:	443a      	add	r2, r7
   11790:	e9c2 3400 	strd	r3, r4, [r2]
   11794:	e039      	b.n	1180a <G_q+0x971a>
  } else if (t133.re == 0.0) {
   11796:	f507 635c 	add.w	r3, r7, #3520	; 0xdc0
   1179a:	ed93 7b00 	vldr	d7, [r3]
   1179e:	eeb5 7b40 	vcmp.f64	d7, #0.0
   117a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   117a6:	d116      	bne.n	117d6 <G_q+0x96e6>
    t13_re = 0.0;
   117a8:	f04f 0300 	mov.w	r3, #0
   117ac:	f04f 0400 	mov.w	r4, #0
   117b0:	f241 3278 	movw	r2, #4984	; 0x1378
   117b4:	443a      	add	r2, r7
   117b6:	e9c2 3400 	strd	r3, r4, [r2]
    t13_im = t133.im / 2.0;
   117ba:	f507 635c 	add.w	r3, r7, #3520	; 0xdc0
   117be:	ed93 6b02 	vldr	d6, [r3, #8]
   117c2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   117c6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   117ca:	f241 3370 	movw	r3, #4976	; 0x1370
   117ce:	443b      	add	r3, r7
   117d0:	ed83 7b00 	vstr	d7, [r3]
   117d4:	e019      	b.n	1180a <G_q+0x971a>
  } else {
    t13_re = t133.re / 2.0;
   117d6:	f507 635c 	add.w	r3, r7, #3520	; 0xdc0
   117da:	ed93 6b00 	vldr	d6, [r3]
   117de:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   117e2:	ee86 7b05 	vdiv.f64	d7, d6, d5
   117e6:	f241 3378 	movw	r3, #4984	; 0x1378
   117ea:	443b      	add	r3, r7
   117ec:	ed83 7b00 	vstr	d7, [r3]
    t13_im = t133.im / 2.0;
   117f0:	f507 635c 	add.w	r3, r7, #3520	; 0xdc0
   117f4:	ed93 6b02 	vldr	d6, [r3, #8]
   117f8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   117fc:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11800:	f241 3370 	movw	r3, #4976	; 0x1370
   11804:	443b      	add	r3, r7
   11806:	ed83 7b00 	vstr	d7, [r3]
  }

  t20_im += t34_re;
   1180a:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   1180e:	ed93 6b00 	vldr	d6, [r3]
   11812:	f241 33b8 	movw	r3, #5048	; 0x13b8
   11816:	443b      	add	r3, r7
   11818:	ed93 7b00 	vldr	d7, [r3]
   1181c:	ee36 7b07 	vadd.f64	d7, d6, d7
   11820:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   11824:	ed83 7b00 	vstr	d7, [r3]
  t12_re += t34_im;
   11828:	f241 3388 	movw	r3, #5000	; 0x1388
   1182c:	443b      	add	r3, r7
   1182e:	ed93 6b00 	vldr	d6, [r3]
   11832:	f241 33b0 	movw	r3, #5040	; 0x13b0
   11836:	443b      	add	r3, r7
   11838:	ed93 7b00 	vldr	d7, [r3]
   1183c:	ee36 7b07 	vadd.f64	d7, d6, d7
   11840:	f241 3388 	movw	r3, #5000	; 0x1388
   11844:	443b      	add	r3, r7
   11846:	ed83 7b00 	vstr	d7, [r3]
  t12_im = (t12_im + t13_re) + 7.498798913309288E-33;
   1184a:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   1184e:	ed93 6b00 	vldr	d6, [r3]
   11852:	f241 3378 	movw	r3, #4984	; 0x1378
   11856:	443b      	add	r3, r7
   11858:	ed93 7b00 	vldr	d7, [r3]
   1185c:	ee36 7b07 	vadd.f64	d7, d6, d7
   11860:	ed9f 6bc1 	vldr	d6, [pc, #772]	; 11b68 <G_q+0x9a78>
   11864:	ee37 7b06 	vadd.f64	d7, d7, d6
   11868:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   1186c:	ed83 7b00 	vstr	d7, [r3]
  b_t10_re += t13_im;
   11870:	f241 3338 	movw	r3, #4920	; 0x1338
   11874:	443b      	add	r3, r7
   11876:	ed93 6b00 	vldr	d6, [r3]
   1187a:	f241 3370 	movw	r3, #4976	; 0x1370
   1187e:	443b      	add	r3, r7
   11880:	ed93 7b00 	vldr	d7, [r3]
   11884:	ee36 7b07 	vadd.f64	d7, d6, d7
   11888:	f241 3338 	movw	r3, #4920	; 0x1338
   1188c:	443b      	add	r3, r7
   1188e:	ed83 7b00 	vstr	d7, [r3]
  t85_im = (t134.re * 0.0 - t134.im * 3.061616997868383E-17) - (t135.re * 0.0 -
   11892:	f507 7304 	add.w	r3, r7, #528	; 0x210
   11896:	ed93 7b00 	vldr	d7, [r3]
   1189a:	ed9f 6bb5 	vldr	d6, [pc, #724]	; 11b70 <G_q+0x9a80>
   1189e:	ee27 6b06 	vmul.f64	d6, d7, d6
   118a2:	f507 7304 	add.w	r3, r7, #528	; 0x210
   118a6:	ed93 7b02 	vldr	d7, [r3, #8]
   118aa:	ed9f 5bb3 	vldr	d5, [pc, #716]	; 11b78 <G_q+0x9a88>
   118ae:	ee27 7b05 	vmul.f64	d7, d7, d5
   118b2:	ee36 6b47 	vsub.f64	d6, d6, d7
   118b6:	4bb2      	ldr	r3, [pc, #712]	; (11b80 <G_q+0x9a90>)
   118b8:	f241 32d0 	movw	r2, #5072	; 0x13d0
   118bc:	443a      	add	r2, r7
   118be:	4413      	add	r3, r2
   118c0:	ed93 7b00 	vldr	d7, [r3]
   118c4:	ed9f 5baa 	vldr	d5, [pc, #680]	; 11b70 <G_q+0x9a80>
   118c8:	ee27 5b05 	vmul.f64	d5, d7, d5
    t135.im * 3.061616997868383E-17);
   118cc:	4bac      	ldr	r3, [pc, #688]	; (11b80 <G_q+0x9a90>)
   118ce:	f241 32d0 	movw	r2, #5072	; 0x13d0
   118d2:	443a      	add	r2, r7
   118d4:	4413      	add	r3, r2
   118d6:	ed93 7b02 	vldr	d7, [r3, #8]
   118da:	ed9f 4ba7 	vldr	d4, [pc, #668]	; 11b78 <G_q+0x9a88>
   118de:	ee27 7b04 	vmul.f64	d7, d7, d4
  t85_im = (t134.re * 0.0 - t134.im * 3.061616997868383E-17) - (t135.re * 0.0 -
   118e2:	ee35 7b47 	vsub.f64	d7, d5, d7
   118e6:	ee36 7b47 	vsub.f64	d7, d6, d7
   118ea:	f241 3318 	movw	r3, #4888	; 0x1318
   118ee:	443b      	add	r3, r7
   118f0:	ed83 7b00 	vstr	d7, [r3]
  t23_re = (t134.re * 3.061616997868383E-17 + t134.im * 0.0) - (t135.re *
   118f4:	f507 7304 	add.w	r3, r7, #528	; 0x210
   118f8:	ed93 7b00 	vldr	d7, [r3]
   118fc:	ed9f 6b9e 	vldr	d6, [pc, #632]	; 11b78 <G_q+0x9a88>
   11900:	ee27 6b06 	vmul.f64	d6, d7, d6
   11904:	f507 7304 	add.w	r3, r7, #528	; 0x210
   11908:	ed93 7b02 	vldr	d7, [r3, #8]
   1190c:	ed9f 5b98 	vldr	d5, [pc, #608]	; 11b70 <G_q+0x9a80>
   11910:	ee27 7b05 	vmul.f64	d7, d7, d5
   11914:	ee36 6b07 	vadd.f64	d6, d6, d7
   11918:	4b99      	ldr	r3, [pc, #612]	; (11b80 <G_q+0x9a90>)
   1191a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   1191e:	443a      	add	r2, r7
   11920:	4413      	add	r3, r2
   11922:	ed93 7b00 	vldr	d7, [r3]
   11926:	ed9f 5b94 	vldr	d5, [pc, #592]	; 11b78 <G_q+0x9a88>
   1192a:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t135.im * 0.0);
   1192e:	4b94      	ldr	r3, [pc, #592]	; (11b80 <G_q+0x9a90>)
   11930:	f241 32d0 	movw	r2, #5072	; 0x13d0
   11934:	443a      	add	r2, r7
   11936:	4413      	add	r3, r2
   11938:	ed93 7b02 	vldr	d7, [r3, #8]
   1193c:	ed9f 4b8c 	vldr	d4, [pc, #560]	; 11b70 <G_q+0x9a80>
   11940:	ee27 7b04 	vmul.f64	d7, d7, d4
   11944:	ee35 7b07 	vadd.f64	d7, d5, d7
  t23_re = (t134.re * 3.061616997868383E-17 + t134.im * 0.0) - (t135.re *
   11948:	ee36 7b47 	vsub.f64	d7, d6, d7
   1194c:	f241 3330 	movw	r3, #4912	; 0x1330
   11950:	443b      	add	r3, r7
   11952:	ed83 7b00 	vstr	d7, [r3]
  t58_im = (t16_re * t16_im - t60_re * t20_re) + (t20_im * t12_im - t12_re *
   11956:	f241 3368 	movw	r3, #4968	; 0x1368
   1195a:	443b      	add	r3, r7
   1195c:	ed93 6b00 	vldr	d6, [r3]
   11960:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   11964:	ed93 7b00 	vldr	d7, [r3]
   11968:	ee26 6b07 	vmul.f64	d6, d6, d7
   1196c:	f241 2350 	movw	r3, #4688	; 0x1250
   11970:	443b      	add	r3, r7
   11972:	ed93 5b00 	vldr	d5, [r3]
   11976:	f241 3348 	movw	r3, #4936	; 0x1348
   1197a:	443b      	add	r3, r7
   1197c:	ed93 7b00 	vldr	d7, [r3]
   11980:	ee25 7b07 	vmul.f64	d7, d5, d7
   11984:	ee36 6b47 	vsub.f64	d6, d6, d7
   11988:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   1198c:	ed93 5b00 	vldr	d5, [r3]
   11990:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   11994:	ed93 7b00 	vldr	d7, [r3]
   11998:	ee25 5b07 	vmul.f64	d5, d5, d7
   1199c:	f241 3388 	movw	r3, #5000	; 0x1388
   119a0:	443b      	add	r3, r7
   119a2:	ed93 4b00 	vldr	d4, [r3]
   119a6:	f241 3338 	movw	r3, #4920	; 0x1338
   119aa:	443b      	add	r3, r7
   119ac:	ed93 7b00 	vldr	d7, [r3]
   119b0:	ee24 7b07 	vmul.f64	d7, d4, d7
   119b4:	ee35 7b47 	vsub.f64	d7, d5, d7
   119b8:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   119bc:	ee36 7b07 	vadd.f64	d7, d6, d7
   119c0:	ed83 7b00 	vstr	d7, [r3]
    b_t10_re);
  t60_re = (t16_re * t20_re + t60_re * t16_im) + (t20_im * b_t10_re + t12_re *
   119c4:	f241 3368 	movw	r3, #4968	; 0x1368
   119c8:	443b      	add	r3, r7
   119ca:	ed93 6b00 	vldr	d6, [r3]
   119ce:	f241 3348 	movw	r3, #4936	; 0x1348
   119d2:	443b      	add	r3, r7
   119d4:	ed93 7b00 	vldr	d7, [r3]
   119d8:	ee26 6b07 	vmul.f64	d6, d6, d7
   119dc:	f241 2350 	movw	r3, #4688	; 0x1250
   119e0:	443b      	add	r3, r7
   119e2:	ed93 5b00 	vldr	d5, [r3]
   119e6:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   119ea:	ed93 7b00 	vldr	d7, [r3]
   119ee:	ee25 7b07 	vmul.f64	d7, d5, d7
   119f2:	ee36 6b07 	vadd.f64	d6, d6, d7
   119f6:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   119fa:	ed93 5b00 	vldr	d5, [r3]
   119fe:	f241 3338 	movw	r3, #4920	; 0x1338
   11a02:	443b      	add	r3, r7
   11a04:	ed93 7b00 	vldr	d7, [r3]
   11a08:	ee25 5b07 	vmul.f64	d5, d5, d7
   11a0c:	f241 3388 	movw	r3, #5000	; 0x1388
   11a10:	443b      	add	r3, r7
   11a12:	ed93 4b00 	vldr	d4, [r3]
   11a16:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   11a1a:	ed93 7b00 	vldr	d7, [r3]
   11a1e:	ee24 7b07 	vmul.f64	d7, d4, d7
   11a22:	ee35 7b07 	vadd.f64	d7, d5, d7
   11a26:	f241 2350 	movw	r3, #4688	; 0x1250
   11a2a:	443b      	add	r3, r7
   11a2c:	ee36 7b07 	vadd.f64	d7, d6, d7
   11a30:	ed83 7b00 	vstr	d7, [r3]
    t12_im);
  if (t142.im == 0.0) {
   11a34:	f507 635f 	add.w	r3, r7, #3568	; 0xdf0
   11a38:	ed93 7b02 	vldr	d7, [r3, #8]
   11a3c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   11a40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   11a44:	d116      	bne.n	11a74 <G_q+0x9984>
    t13_re = t142.re / 2.0;
   11a46:	f507 635f 	add.w	r3, r7, #3568	; 0xdf0
   11a4a:	ed93 6b00 	vldr	d6, [r3]
   11a4e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11a52:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11a56:	f241 3378 	movw	r3, #4984	; 0x1378
   11a5a:	443b      	add	r3, r7
   11a5c:	ed83 7b00 	vstr	d7, [r3]
    t13_im = 0.0;
   11a60:	f04f 0300 	mov.w	r3, #0
   11a64:	f04f 0400 	mov.w	r4, #0
   11a68:	f241 3270 	movw	r2, #4976	; 0x1370
   11a6c:	443a      	add	r2, r7
   11a6e:	e9c2 3400 	strd	r3, r4, [r2]
   11a72:	e039      	b.n	11ae8 <G_q+0x99f8>
  } else if (t142.re == 0.0) {
   11a74:	f507 635f 	add.w	r3, r7, #3568	; 0xdf0
   11a78:	ed93 7b00 	vldr	d7, [r3]
   11a7c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   11a80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   11a84:	d116      	bne.n	11ab4 <G_q+0x99c4>
    t13_re = 0.0;
   11a86:	f04f 0300 	mov.w	r3, #0
   11a8a:	f04f 0400 	mov.w	r4, #0
   11a8e:	f241 3278 	movw	r2, #4984	; 0x1378
   11a92:	443a      	add	r2, r7
   11a94:	e9c2 3400 	strd	r3, r4, [r2]
    t13_im = t142.im / 2.0;
   11a98:	f507 635f 	add.w	r3, r7, #3568	; 0xdf0
   11a9c:	ed93 6b02 	vldr	d6, [r3, #8]
   11aa0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11aa4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11aa8:	f241 3370 	movw	r3, #4976	; 0x1370
   11aac:	443b      	add	r3, r7
   11aae:	ed83 7b00 	vstr	d7, [r3]
   11ab2:	e019      	b.n	11ae8 <G_q+0x99f8>
  } else {
    t13_re = t142.re / 2.0;
   11ab4:	f507 635f 	add.w	r3, r7, #3568	; 0xdf0
   11ab8:	ed93 6b00 	vldr	d6, [r3]
   11abc:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11ac0:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11ac4:	f241 3378 	movw	r3, #4984	; 0x1378
   11ac8:	443b      	add	r3, r7
   11aca:	ed83 7b00 	vstr	d7, [r3]
    t13_im = t142.im / 2.0;
   11ace:	f507 635f 	add.w	r3, r7, #3568	; 0xdf0
   11ad2:	ed93 6b02 	vldr	d6, [r3, #8]
   11ad6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11ada:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11ade:	f241 3370 	movw	r3, #4976	; 0x1370
   11ae2:	443b      	add	r3, r7
   11ae4:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t143.im == 0.0) {
   11ae8:	f507 6360 	add.w	r3, r7, #3584	; 0xe00
   11aec:	ed93 7b02 	vldr	d7, [r3, #8]
   11af0:	eeb5 7b40 	vcmp.f64	d7, #0.0
   11af4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   11af8:	d116      	bne.n	11b28 <G_q+0x9a38>
    t34_re = t143.re / 2.0;
   11afa:	f507 6360 	add.w	r3, r7, #3584	; 0xe00
   11afe:	ed93 6b00 	vldr	d6, [r3]
   11b02:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11b06:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11b0a:	f241 33b8 	movw	r3, #5048	; 0x13b8
   11b0e:	443b      	add	r3, r7
   11b10:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   11b14:	f04f 0300 	mov.w	r3, #0
   11b18:	f04f 0400 	mov.w	r4, #0
   11b1c:	f241 32b0 	movw	r2, #5040	; 0x13b0
   11b20:	443a      	add	r2, r7
   11b22:	e9c2 3400 	strd	r3, r4, [r2]
   11b26:	e047      	b.n	11bb8 <G_q+0x9ac8>
  } else if (t143.re == 0.0) {
   11b28:	f507 6360 	add.w	r3, r7, #3584	; 0xe00
   11b2c:	ed93 7b00 	vldr	d7, [r3]
   11b30:	eeb5 7b40 	vcmp.f64	d7, #0.0
   11b34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   11b38:	d124      	bne.n	11b84 <G_q+0x9a94>
    t34_re = 0.0;
   11b3a:	f04f 0300 	mov.w	r3, #0
   11b3e:	f04f 0400 	mov.w	r4, #0
   11b42:	f241 32b8 	movw	r2, #5048	; 0x13b8
   11b46:	443a      	add	r2, r7
   11b48:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t143.im / 2.0;
   11b4c:	f507 6360 	add.w	r3, r7, #3584	; 0xe00
   11b50:	ed93 6b02 	vldr	d6, [r3, #8]
   11b54:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11b58:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11b5c:	f241 33b0 	movw	r3, #5040	; 0x13b0
   11b60:	443b      	add	r3, r7
   11b62:	ed83 7b00 	vstr	d7, [r3]
   11b66:	e027      	b.n	11bb8 <G_q+0x9ac8>
   11b68:	858a5d48 	.word	0x858a5d48
   11b6c:	394377ce 	.word	0x394377ce
	...
   11b78:	33145c07 	.word	0x33145c07
   11b7c:	3c81a626 	.word	0x3c81a626
   11b80:	ffffee50 	.word	0xffffee50
  } else {
    t34_re = t143.re / 2.0;
   11b84:	f507 6360 	add.w	r3, r7, #3584	; 0xe00
   11b88:	ed93 6b00 	vldr	d6, [r3]
   11b8c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11b90:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11b94:	f241 33b8 	movw	r3, #5048	; 0x13b8
   11b98:	443b      	add	r3, r7
   11b9a:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t143.im / 2.0;
   11b9e:	f507 6360 	add.w	r3, r7, #3584	; 0xe00
   11ba2:	ed93 6b02 	vldr	d6, [r3, #8]
   11ba6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11baa:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11bae:	f241 33b0 	movw	r3, #5040	; 0x13b0
   11bb2:	443b      	add	r3, r7
   11bb4:	ed83 7b00 	vstr	d7, [r3]
  }

  t16_re = (t140.re * 0.0 - t140.im * 0.5) - (t141.re * 0.0 - t141.im * 0.5);
   11bb8:	f507 63d6 	add.w	r3, r7, #1712	; 0x6b0
   11bbc:	ed93 7b00 	vldr	d7, [r3]
   11bc0:	ed9f 6bdf 	vldr	d6, [pc, #892]	; 11f40 <G_q+0x9e50>
   11bc4:	ee27 6b06 	vmul.f64	d6, d7, d6
   11bc8:	f507 63d6 	add.w	r3, r7, #1712	; 0x6b0
   11bcc:	ed93 7b02 	vldr	d7, [r3, #8]
   11bd0:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   11bd4:	ee27 7b05 	vmul.f64	d7, d7, d5
   11bd8:	ee36 6b47 	vsub.f64	d6, d6, d7
   11bdc:	f507 63d8 	add.w	r3, r7, #1728	; 0x6c0
   11be0:	ed93 7b00 	vldr	d7, [r3]
   11be4:	ed9f 5bd6 	vldr	d5, [pc, #856]	; 11f40 <G_q+0x9e50>
   11be8:	ee27 5b05 	vmul.f64	d5, d7, d5
   11bec:	f507 63d8 	add.w	r3, r7, #1728	; 0x6c0
   11bf0:	ed93 7b02 	vldr	d7, [r3, #8]
   11bf4:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   11bf8:	ee27 7b04 	vmul.f64	d7, d7, d4
   11bfc:	ee35 7b47 	vsub.f64	d7, d5, d7
   11c00:	ee36 7b47 	vsub.f64	d7, d6, d7
   11c04:	f241 3368 	movw	r3, #4968	; 0x1368
   11c08:	443b      	add	r3, r7
   11c0a:	ed83 7b00 	vstr	d7, [r3]
  t16_im = (t140.re * 0.5 + t140.im * 0.0) - (t141.re * 0.5 + t141.im * 0.0);
   11c0e:	f507 63d6 	add.w	r3, r7, #1712	; 0x6b0
   11c12:	ed93 7b00 	vldr	d7, [r3]
   11c16:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   11c1a:	ee27 6b06 	vmul.f64	d6, d7, d6
   11c1e:	f507 63d6 	add.w	r3, r7, #1712	; 0x6b0
   11c22:	ed93 7b02 	vldr	d7, [r3, #8]
   11c26:	ed9f 5bc6 	vldr	d5, [pc, #792]	; 11f40 <G_q+0x9e50>
   11c2a:	ee27 7b05 	vmul.f64	d7, d7, d5
   11c2e:	ee36 6b07 	vadd.f64	d6, d6, d7
   11c32:	f507 63d8 	add.w	r3, r7, #1728	; 0x6c0
   11c36:	ed93 7b00 	vldr	d7, [r3]
   11c3a:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   11c3e:	ee27 5b05 	vmul.f64	d5, d7, d5
   11c42:	f507 63d8 	add.w	r3, r7, #1728	; 0x6c0
   11c46:	ed93 7b02 	vldr	d7, [r3, #8]
   11c4a:	ed9f 4bbd 	vldr	d4, [pc, #756]	; 11f40 <G_q+0x9e50>
   11c4e:	ee27 7b04 	vmul.f64	d7, d7, d4
   11c52:	ee35 7b07 	vadd.f64	d7, d5, d7
   11c56:	ee36 7b47 	vsub.f64	d7, d6, d7
   11c5a:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   11c5e:	ed83 7b00 	vstr	d7, [r3]
  t13_re = (t13_re + t34_re) + 7.498798913309288E-33;
   11c62:	f241 3378 	movw	r3, #4984	; 0x1378
   11c66:	443b      	add	r3, r7
   11c68:	ed93 6b00 	vldr	d6, [r3]
   11c6c:	f241 33b8 	movw	r3, #5048	; 0x13b8
   11c70:	443b      	add	r3, r7
   11c72:	ed93 7b00 	vldr	d7, [r3]
   11c76:	ee36 7b07 	vadd.f64	d7, d6, d7
   11c7a:	ed9f 6bad 	vldr	d6, [pc, #692]	; 11f30 <G_q+0x9e40>
   11c7e:	ee37 7b06 	vadd.f64	d7, d7, d6
   11c82:	f241 3378 	movw	r3, #4984	; 0x1378
   11c86:	443b      	add	r3, r7
   11c88:	ed83 7b00 	vstr	d7, [r3]
  t13_im += t34_im;
   11c8c:	f241 3370 	movw	r3, #4976	; 0x1370
   11c90:	443b      	add	r3, r7
   11c92:	ed93 6b00 	vldr	d6, [r3]
   11c96:	f241 33b0 	movw	r3, #5040	; 0x13b0
   11c9a:	443b      	add	r3, r7
   11c9c:	ed93 7b00 	vldr	d7, [r3]
   11ca0:	ee36 7b07 	vadd.f64	d7, d6, d7
   11ca4:	f241 3370 	movw	r3, #4976	; 0x1370
   11ca8:	443b      	add	r3, r7
   11caa:	ed83 7b00 	vstr	d7, [r3]
  t43_im += t55_im;
   11cae:	f241 23f8 	movw	r3, #4856	; 0x12f8
   11cb2:	443b      	add	r3, r7
   11cb4:	ed93 6b00 	vldr	d6, [r3]
   11cb8:	f241 23d8 	movw	r3, #4824	; 0x12d8
   11cbc:	443b      	add	r3, r7
   11cbe:	ed93 7b00 	vldr	d7, [r3]
   11cc2:	ee36 7b07 	vadd.f64	d7, d6, d7
   11cc6:	f241 23f8 	movw	r3, #4856	; 0x12f8
   11cca:	443b      	add	r3, r7
   11ccc:	ed83 7b00 	vstr	d7, [r3]
  b_t54_re += t70_re;
   11cd0:	f241 23d0 	movw	r3, #4816	; 0x12d0
   11cd4:	443b      	add	r3, r7
   11cd6:	f241 22f0 	movw	r2, #4848	; 0x12f0
   11cda:	443a      	add	r2, r7
   11cdc:	ed92 6b00 	vldr	d6, [r2]
   11ce0:	ed93 7b00 	vldr	d7, [r3]
   11ce4:	ee36 7b07 	vadd.f64	d7, d6, d7
   11ce8:	f241 23f0 	movw	r3, #4848	; 0x12f0
   11cec:	443b      	add	r3, r7
   11cee:	ed83 7b00 	vstr	d7, [r3]
  t55_im = (((t70_im * t74_re - b_t54_im * t74_im) - (t76_re * t72_re - t3_im *
   11cf2:	f241 22c8 	movw	r2, #4808	; 0x12c8
   11cf6:	443a      	add	r2, r7
   11cf8:	f241 23b8 	movw	r3, #4792	; 0x12b8
   11cfc:	443b      	add	r3, r7
   11cfe:	ed92 6b00 	vldr	d6, [r2]
   11d02:	ed93 7b00 	vldr	d7, [r3]
   11d06:	ee26 6b07 	vmul.f64	d6, d6, d7
   11d0a:	f241 23b0 	movw	r3, #4784	; 0x12b0
   11d0e:	443b      	add	r3, r7
   11d10:	f241 22e8 	movw	r2, #4840	; 0x12e8
   11d14:	443a      	add	r2, r7
   11d16:	ed92 5b00 	vldr	d5, [r2]
   11d1a:	ed93 7b00 	vldr	d7, [r3]
   11d1e:	ee25 7b07 	vmul.f64	d7, d5, d7
   11d22:	ee36 6b47 	vsub.f64	d6, d6, d7
   11d26:	f241 22a8 	movw	r2, #4776	; 0x12a8
   11d2a:	443a      	add	r2, r7
   11d2c:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   11d30:	ed92 5b00 	vldr	d5, [r2]
   11d34:	ed93 7b00 	vldr	d7, [r3]
   11d38:	ee25 5b07 	vmul.f64	d5, d5, d7
   11d3c:	f241 3310 	movw	r3, #4880	; 0x1310
   11d40:	443b      	add	r3, r7
   11d42:	ed93 4b00 	vldr	d4, [r3]
   11d46:	f507 5397 	add.w	r3, r7, #4832	; 0x12e0
   11d4a:	ed93 7b00 	vldr	d7, [r3]
   11d4e:	ee24 7b07 	vmul.f64	d7, d4, d7
   11d52:	ee35 7b47 	vsub.f64	d7, d5, d7
   11d56:	ee36 6b47 	vsub.f64	d6, d6, d7
              t55_re)) + (t85_im * t58_im - t23_re * t60_re)) - (t16_re * t13_re
   11d5a:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   11d5e:	f241 3218 	movw	r2, #4888	; 0x1318
   11d62:	443a      	add	r2, r7
   11d64:	ed92 5b00 	vldr	d5, [r2]
   11d68:	ed93 7b00 	vldr	d7, [r3]
   11d6c:	ee25 5b07 	vmul.f64	d5, d5, d7
   11d70:	f241 2350 	movw	r3, #4688	; 0x1250
   11d74:	443b      	add	r3, r7
   11d76:	f241 3230 	movw	r2, #4912	; 0x1330
   11d7a:	443a      	add	r2, r7
   11d7c:	ed92 4b00 	vldr	d4, [r2]
   11d80:	ed93 7b00 	vldr	d7, [r3]
   11d84:	ee24 7b07 	vmul.f64	d7, d4, d7
   11d88:	ee35 7b47 	vsub.f64	d7, d5, d7
   11d8c:	ee36 6b07 	vadd.f64	d6, d6, d7
   11d90:	f241 3368 	movw	r3, #4968	; 0x1368
   11d94:	443b      	add	r3, r7
   11d96:	ed93 5b00 	vldr	d5, [r3]
   11d9a:	f241 3378 	movw	r3, #4984	; 0x1378
   11d9e:	443b      	add	r3, r7
   11da0:	ed93 7b00 	vldr	d7, [r3]
   11da4:	ee25 5b07 	vmul.f64	d5, d5, d7
    - t16_im * t13_im);
   11da8:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   11dac:	ed93 4b00 	vldr	d4, [r3]
   11db0:	f241 3370 	movw	r3, #4976	; 0x1370
   11db4:	443b      	add	r3, r7
   11db6:	ed93 7b00 	vldr	d7, [r3]
   11dba:	ee24 7b07 	vmul.f64	d7, d4, d7
   11dbe:	ee35 7b47 	vsub.f64	d7, d5, d7
  t55_im = (((t70_im * t74_re - b_t54_im * t74_im) - (t76_re * t72_re - t3_im *
   11dc2:	ee36 7b47 	vsub.f64	d7, d6, d7
   11dc6:	f241 23d8 	movw	r3, #4824	; 0x12d8
   11dca:	443b      	add	r3, r7
   11dcc:	ed83 7b00 	vstr	d7, [r3]
  b_t54_im = (((t70_im * t74_im + b_t54_im * t74_re) - (t76_re * t55_re + t3_im *
   11dd0:	f241 22c8 	movw	r2, #4808	; 0x12c8
   11dd4:	443a      	add	r2, r7
   11dd6:	f241 23b0 	movw	r3, #4784	; 0x12b0
   11dda:	443b      	add	r3, r7
   11ddc:	ed92 6b00 	vldr	d6, [r2]
   11de0:	ed93 7b00 	vldr	d7, [r3]
   11de4:	ee26 6b07 	vmul.f64	d6, d6, d7
   11de8:	f241 23b8 	movw	r3, #4792	; 0x12b8
   11dec:	443b      	add	r3, r7
   11dee:	f241 22e8 	movw	r2, #4840	; 0x12e8
   11df2:	443a      	add	r2, r7
   11df4:	ed92 5b00 	vldr	d5, [r2]
   11df8:	ed93 7b00 	vldr	d7, [r3]
   11dfc:	ee25 7b07 	vmul.f64	d7, d5, d7
   11e00:	ee36 6b07 	vadd.f64	d6, d6, d7
   11e04:	f241 23a8 	movw	r3, #4776	; 0x12a8
   11e08:	443b      	add	r3, r7
   11e0a:	ed93 5b00 	vldr	d5, [r3]
   11e0e:	f507 5397 	add.w	r3, r7, #4832	; 0x12e0
   11e12:	ed93 7b00 	vldr	d7, [r3]
   11e16:	ee25 5b07 	vmul.f64	d5, d5, d7
   11e1a:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   11e1e:	f241 3210 	movw	r2, #4880	; 0x1310
   11e22:	443a      	add	r2, r7
   11e24:	ed92 4b00 	vldr	d4, [r2]
   11e28:	ed93 7b00 	vldr	d7, [r3]
   11e2c:	ee24 7b07 	vmul.f64	d7, d4, d7
   11e30:	ee35 7b07 	vadd.f64	d7, d5, d7
   11e34:	ee36 6b47 	vsub.f64	d6, d6, d7
    t72_re)) + (t85_im * t60_re + t23_re * t58_im)) - (t16_re * t13_im + t16_im *
   11e38:	f241 2350 	movw	r3, #4688	; 0x1250
   11e3c:	443b      	add	r3, r7
   11e3e:	f241 3218 	movw	r2, #4888	; 0x1318
   11e42:	443a      	add	r2, r7
   11e44:	ed92 5b00 	vldr	d5, [r2]
   11e48:	ed93 7b00 	vldr	d7, [r3]
   11e4c:	ee25 5b07 	vmul.f64	d5, d5, d7
   11e50:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   11e54:	f241 3230 	movw	r2, #4912	; 0x1330
   11e58:	443a      	add	r2, r7
   11e5a:	ed92 4b00 	vldr	d4, [r2]
   11e5e:	ed93 7b00 	vldr	d7, [r3]
   11e62:	ee24 7b07 	vmul.f64	d7, d4, d7
   11e66:	ee35 7b07 	vadd.f64	d7, d5, d7
   11e6a:	ee36 6b07 	vadd.f64	d6, d6, d7
   11e6e:	f241 3368 	movw	r3, #4968	; 0x1368
   11e72:	443b      	add	r3, r7
   11e74:	ed93 5b00 	vldr	d5, [r3]
   11e78:	f241 3370 	movw	r3, #4976	; 0x1370
   11e7c:	443b      	add	r3, r7
   11e7e:	ed93 7b00 	vldr	d7, [r3]
   11e82:	ee25 5b07 	vmul.f64	d5, d5, d7
   11e86:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   11e8a:	ed93 4b00 	vldr	d4, [r3]
   11e8e:	f241 3378 	movw	r3, #4984	; 0x1378
   11e92:	443b      	add	r3, r7
   11e94:	ed93 7b00 	vldr	d7, [r3]
   11e98:	ee24 7b07 	vmul.f64	d7, d4, d7
   11e9c:	ee35 7b07 	vadd.f64	d7, d5, d7
  b_t54_im = (((t70_im * t74_im + b_t54_im * t74_re) - (t76_re * t55_re + t3_im *
   11ea0:	ee36 7b47 	vsub.f64	d7, d6, d7
   11ea4:	f241 23e8 	movw	r3, #4840	; 0x12e8
   11ea8:	443b      	add	r3, r7
   11eaa:	ed83 7b00 	vstr	d7, [r3]
    t13_re);
  if (t170.im == 0.0) {
   11eae:	f507 636b 	add.w	r3, r7, #3760	; 0xeb0
   11eb2:	ed93 7b02 	vldr	d7, [r3, #8]
   11eb6:	eeb5 7b40 	vcmp.f64	d7, #0.0
   11eba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   11ebe:	d115      	bne.n	11eec <G_q+0x9dfc>
    t3_im = t170.re / 2.0;
   11ec0:	f507 636b 	add.w	r3, r7, #3760	; 0xeb0
   11ec4:	ed93 6b00 	vldr	d6, [r3]
   11ec8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11ecc:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11ed0:	f241 3310 	movw	r3, #4880	; 0x1310
   11ed4:	443b      	add	r3, r7
   11ed6:	ed83 7b00 	vstr	d7, [r3]
    t72_re = 0.0;
   11eda:	f507 5296 	add.w	r2, r7, #4800	; 0x12c0
   11ede:	f04f 0300 	mov.w	r3, #0
   11ee2:	f04f 0400 	mov.w	r4, #0
   11ee6:	e9c2 3400 	strd	r3, r4, [r2]
   11eea:	e046      	b.n	11f7a <G_q+0x9e8a>
  } else if (t170.re == 0.0) {
   11eec:	f507 636b 	add.w	r3, r7, #3760	; 0xeb0
   11ef0:	ed93 7b00 	vldr	d7, [r3]
   11ef4:	eeb5 7b40 	vcmp.f64	d7, #0.0
   11ef8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   11efc:	d124      	bne.n	11f48 <G_q+0x9e58>
    t3_im = 0.0;
   11efe:	f04f 0300 	mov.w	r3, #0
   11f02:	f04f 0400 	mov.w	r4, #0
   11f06:	f241 3210 	movw	r2, #4880	; 0x1310
   11f0a:	443a      	add	r2, r7
   11f0c:	e9c2 3400 	strd	r3, r4, [r2]
    t72_re = t170.im / 2.0;
   11f10:	f507 636b 	add.w	r3, r7, #3760	; 0xeb0
   11f14:	ed93 6b02 	vldr	d6, [r3, #8]
   11f18:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   11f1c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11f20:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11f24:	ed83 7b00 	vstr	d7, [r3]
   11f28:	e027      	b.n	11f7a <G_q+0x9e8a>
   11f2a:	bf00      	nop
   11f2c:	f3af 8000 	nop.w
   11f30:	858a5d48 	.word	0x858a5d48
   11f34:	394377ce 	.word	0x394377ce
   11f38:	33145c07 	.word	0x33145c07
   11f3c:	3c81a626 	.word	0x3c81a626
	...
  } else {
    t3_im = t170.re / 2.0;
   11f48:	f507 636b 	add.w	r3, r7, #3760	; 0xeb0
   11f4c:	ed93 6b00 	vldr	d6, [r3]
   11f50:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11f54:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11f58:	f241 3310 	movw	r3, #4880	; 0x1310
   11f5c:	443b      	add	r3, r7
   11f5e:	ed83 7b00 	vstr	d7, [r3]
    t72_re = t170.im / 2.0;
   11f62:	f507 636b 	add.w	r3, r7, #3760	; 0xeb0
   11f66:	ed93 6b02 	vldr	d6, [r3, #8]
   11f6a:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   11f6e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11f72:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11f76:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t171.im == 0.0) {
   11f7a:	f507 636c 	add.w	r3, r7, #3776	; 0xec0
   11f7e:	ed93 7b02 	vldr	d7, [r3, #8]
   11f82:	eeb5 7b40 	vcmp.f64	d7, #0.0
   11f86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   11f8a:	d116      	bne.n	11fba <G_q+0x9eca>
    t34_re = t171.re / 2.0;
   11f8c:	f507 636c 	add.w	r3, r7, #3776	; 0xec0
   11f90:	ed93 6b00 	vldr	d6, [r3]
   11f94:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11f98:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11f9c:	f241 33b8 	movw	r3, #5048	; 0x13b8
   11fa0:	443b      	add	r3, r7
   11fa2:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   11fa6:	f04f 0300 	mov.w	r3, #0
   11faa:	f04f 0400 	mov.w	r4, #0
   11fae:	f241 32b0 	movw	r2, #5040	; 0x13b0
   11fb2:	443a      	add	r2, r7
   11fb4:	e9c2 3400 	strd	r3, r4, [r2]
   11fb8:	e039      	b.n	1202e <G_q+0x9f3e>
  } else if (t171.re == 0.0) {
   11fba:	f507 636c 	add.w	r3, r7, #3776	; 0xec0
   11fbe:	ed93 7b00 	vldr	d7, [r3]
   11fc2:	eeb5 7b40 	vcmp.f64	d7, #0.0
   11fc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   11fca:	d116      	bne.n	11ffa <G_q+0x9f0a>
    t34_re = 0.0;
   11fcc:	f04f 0300 	mov.w	r3, #0
   11fd0:	f04f 0400 	mov.w	r4, #0
   11fd4:	f241 32b8 	movw	r2, #5048	; 0x13b8
   11fd8:	443a      	add	r2, r7
   11fda:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t171.im / 2.0;
   11fde:	f507 636c 	add.w	r3, r7, #3776	; 0xec0
   11fe2:	ed93 6b02 	vldr	d6, [r3, #8]
   11fe6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   11fea:	ee86 7b05 	vdiv.f64	d7, d6, d5
   11fee:	f241 33b0 	movw	r3, #5040	; 0x13b0
   11ff2:	443b      	add	r3, r7
   11ff4:	ed83 7b00 	vstr	d7, [r3]
   11ff8:	e019      	b.n	1202e <G_q+0x9f3e>
  } else {
    t34_re = t171.re / 2.0;
   11ffa:	f507 636c 	add.w	r3, r7, #3776	; 0xec0
   11ffe:	ed93 6b00 	vldr	d6, [r3]
   12002:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12006:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1200a:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1200e:	443b      	add	r3, r7
   12010:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t171.im / 2.0;
   12014:	f507 636c 	add.w	r3, r7, #3776	; 0xec0
   12018:	ed93 6b02 	vldr	d6, [r3, #8]
   1201c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12020:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12024:	f241 33b0 	movw	r3, #5040	; 0x13b0
   12028:	443b      	add	r3, r7
   1202a:	ed83 7b00 	vstr	d7, [r3]
  }

  t74_re = (t168.re * 0.0 - t168.im * 0.5) - (t169.re * 0.0 - t169.im * 0.5);
   1202e:	f507 63ee 	add.w	r3, r7, #1904	; 0x770
   12032:	ed93 7b00 	vldr	d7, [r3]
   12036:	ed1f 6b3e 	vldr	d6, [pc, #-248]	; 11f40 <G_q+0x9e50>
   1203a:	ee27 6b06 	vmul.f64	d6, d7, d6
   1203e:	f507 63ee 	add.w	r3, r7, #1904	; 0x770
   12042:	ed93 7b02 	vldr	d7, [r3, #8]
   12046:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   1204a:	ee27 7b05 	vmul.f64	d7, d7, d5
   1204e:	ee36 6b47 	vsub.f64	d6, d6, d7
   12052:	f507 63f0 	add.w	r3, r7, #1920	; 0x780
   12056:	ed93 7b00 	vldr	d7, [r3]
   1205a:	ed1f 5b47 	vldr	d5, [pc, #-284]	; 11f40 <G_q+0x9e50>
   1205e:	ee27 5b05 	vmul.f64	d5, d7, d5
   12062:	f507 63f0 	add.w	r3, r7, #1920	; 0x780
   12066:	ed93 7b02 	vldr	d7, [r3, #8]
   1206a:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   1206e:	ee27 7b04 	vmul.f64	d7, d7, d4
   12072:	ee35 7b47 	vsub.f64	d7, d5, d7
   12076:	f241 23b8 	movw	r3, #4792	; 0x12b8
   1207a:	443b      	add	r3, r7
   1207c:	ee36 7b47 	vsub.f64	d7, d6, d7
   12080:	ed83 7b00 	vstr	d7, [r3]
  t74_im = (t168.re * 0.5 + t168.im * 0.0) - (t169.re * 0.5 + t169.im * 0.0);
   12084:	f507 63ee 	add.w	r3, r7, #1904	; 0x770
   12088:	ed93 7b00 	vldr	d7, [r3]
   1208c:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   12090:	ee27 6b06 	vmul.f64	d6, d7, d6
   12094:	f507 63ee 	add.w	r3, r7, #1904	; 0x770
   12098:	ed93 7b02 	vldr	d7, [r3, #8]
   1209c:	ed1f 5b58 	vldr	d5, [pc, #-352]	; 11f40 <G_q+0x9e50>
   120a0:	ee27 7b05 	vmul.f64	d7, d7, d5
   120a4:	ee36 6b07 	vadd.f64	d6, d6, d7
   120a8:	f507 63f0 	add.w	r3, r7, #1920	; 0x780
   120ac:	ed93 7b00 	vldr	d7, [r3]
   120b0:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   120b4:	ee27 5b05 	vmul.f64	d5, d7, d5
   120b8:	f507 63f0 	add.w	r3, r7, #1920	; 0x780
   120bc:	ed93 7b02 	vldr	d7, [r3, #8]
   120c0:	ed1f 4b61 	vldr	d4, [pc, #-388]	; 11f40 <G_q+0x9e50>
   120c4:	ee27 7b04 	vmul.f64	d7, d7, d4
   120c8:	ee35 7b07 	vadd.f64	d7, d5, d7
   120cc:	f241 23b0 	movw	r3, #4784	; 0x12b0
   120d0:	443b      	add	r3, r7
   120d2:	ee36 7b47 	vsub.f64	d7, d6, d7
   120d6:	ed83 7b00 	vstr	d7, [r3]
  t3_im = (t3_im + t34_re) + 7.498798913309288E-33;
   120da:	f241 3310 	movw	r3, #4880	; 0x1310
   120de:	443b      	add	r3, r7
   120e0:	ed93 6b00 	vldr	d6, [r3]
   120e4:	f241 33b8 	movw	r3, #5048	; 0x13b8
   120e8:	443b      	add	r3, r7
   120ea:	ed93 7b00 	vldr	d7, [r3]
   120ee:	ee36 7b07 	vadd.f64	d7, d6, d7
   120f2:	ed1f 6b71 	vldr	d6, [pc, #-452]	; 11f30 <G_q+0x9e40>
   120f6:	ee37 7b06 	vadd.f64	d7, d7, d6
   120fa:	f241 3310 	movw	r3, #4880	; 0x1310
   120fe:	443b      	add	r3, r7
   12100:	ed83 7b00 	vstr	d7, [r3]
  t72_re += t34_im;
   12104:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   12108:	f507 5296 	add.w	r2, r7, #4800	; 0x12c0
   1210c:	ed92 6b00 	vldr	d6, [r2]
   12110:	f241 32b0 	movw	r2, #5040	; 0x13b0
   12114:	443a      	add	r2, r7
   12116:	ed92 7b00 	vldr	d7, [r2]
   1211a:	ee36 7b07 	vadd.f64	d7, d6, d7
   1211e:	ed83 7b00 	vstr	d7, [r3]
  t13_re = t120.re * 3.061616997868383E-17 + t121.re * 3.061616997868383E-17;
   12122:	f507 63c6 	add.w	r3, r7, #1584	; 0x630
   12126:	ed93 7b00 	vldr	d7, [r3]
   1212a:	ed1f 6b7d 	vldr	d6, [pc, #-500]	; 11f38 <G_q+0x9e48>
   1212e:	ee27 6b06 	vmul.f64	d6, d7, d6
   12132:	f507 63c8 	add.w	r3, r7, #1600	; 0x640
   12136:	ed93 7b00 	vldr	d7, [r3]
   1213a:	ed1f 5b81 	vldr	d5, [pc, #-516]	; 11f38 <G_q+0x9e48>
   1213e:	ee27 7b05 	vmul.f64	d7, d7, d5
   12142:	ee36 7b07 	vadd.f64	d7, d6, d7
   12146:	f241 3378 	movw	r3, #4984	; 0x1378
   1214a:	443b      	add	r3, r7
   1214c:	ed83 7b00 	vstr	d7, [r3]
  t76_re = t120.im * 3.061616997868383E-17 + t121.im * 3.061616997868383E-17;
   12150:	f507 63c6 	add.w	r3, r7, #1584	; 0x630
   12154:	ed93 7b02 	vldr	d7, [r3, #8]
   12158:	ed1f 6b89 	vldr	d6, [pc, #-548]	; 11f38 <G_q+0x9e48>
   1215c:	ee27 6b06 	vmul.f64	d6, d7, d6
   12160:	f507 63c8 	add.w	r3, r7, #1600	; 0x640
   12164:	ed93 7b02 	vldr	d7, [r3, #8]
   12168:	ed1f 5b8d 	vldr	d5, [pc, #-564]	; 11f38 <G_q+0x9e48>
   1216c:	ee27 7b05 	vmul.f64	d7, d7, d5
   12170:	f241 23a8 	movw	r3, #4776	; 0x12a8
   12174:	443b      	add	r3, r7
   12176:	ee36 7b07 	vadd.f64	d7, d6, d7
   1217a:	ed83 7b00 	vstr	d7, [r3]
  t13_im = (t118.re * 0.0 - t118.im * 0.5) - (t119.re * 0.0 - t119.im * 0.5);
   1217e:	f507 6357 	add.w	r3, r7, #3440	; 0xd70
   12182:	ed93 7b00 	vldr	d7, [r3]
   12186:	ed1f 6b92 	vldr	d6, [pc, #-584]	; 11f40 <G_q+0x9e50>
   1218a:	ee27 6b06 	vmul.f64	d6, d7, d6
   1218e:	f507 6357 	add.w	r3, r7, #3440	; 0xd70
   12192:	ed93 7b02 	vldr	d7, [r3, #8]
   12196:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   1219a:	ee27 7b05 	vmul.f64	d7, d7, d5
   1219e:	ee36 6b47 	vsub.f64	d6, d6, d7
   121a2:	f507 6358 	add.w	r3, r7, #3456	; 0xd80
   121a6:	ed93 7b00 	vldr	d7, [r3]
   121aa:	ed1f 5b9b 	vldr	d5, [pc, #-620]	; 11f40 <G_q+0x9e50>
   121ae:	ee27 5b05 	vmul.f64	d5, d7, d5
   121b2:	f507 6358 	add.w	r3, r7, #3456	; 0xd80
   121b6:	ed93 7b02 	vldr	d7, [r3, #8]
   121ba:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   121be:	ee27 7b04 	vmul.f64	d7, d7, d4
   121c2:	ee35 7b47 	vsub.f64	d7, d5, d7
   121c6:	ee36 7b47 	vsub.f64	d7, d6, d7
   121ca:	f241 3370 	movw	r3, #4976	; 0x1370
   121ce:	443b      	add	r3, r7
   121d0:	ed83 7b00 	vstr	d7, [r3]
  t16_re = (t118.re * 0.5 + t118.im * 0.0) - (t119.re * 0.5 + t119.im * 0.0);
   121d4:	f507 6357 	add.w	r3, r7, #3440	; 0xd70
   121d8:	ed93 7b00 	vldr	d7, [r3]
   121dc:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   121e0:	ee27 6b06 	vmul.f64	d6, d7, d6
   121e4:	f507 6357 	add.w	r3, r7, #3440	; 0xd70
   121e8:	ed93 7b02 	vldr	d7, [r3, #8]
   121ec:	ed1f 5bac 	vldr	d5, [pc, #-688]	; 11f40 <G_q+0x9e50>
   121f0:	ee27 7b05 	vmul.f64	d7, d7, d5
   121f4:	ee36 6b07 	vadd.f64	d6, d6, d7
   121f8:	f507 6358 	add.w	r3, r7, #3456	; 0xd80
   121fc:	ed93 7b00 	vldr	d7, [r3]
   12200:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   12204:	ee27 5b05 	vmul.f64	d5, d7, d5
   12208:	f507 6358 	add.w	r3, r7, #3456	; 0xd80
   1220c:	ed93 7b02 	vldr	d7, [r3, #8]
   12210:	ed1f 4bb5 	vldr	d4, [pc, #-724]	; 11f40 <G_q+0x9e50>
   12214:	ee27 7b04 	vmul.f64	d7, d7, d4
   12218:	ee35 7b07 	vadd.f64	d7, d5, d7
   1221c:	ee36 7b47 	vsub.f64	d7, d6, d7
   12220:	f241 3368 	movw	r3, #4968	; 0x1368
   12224:	443b      	add	r3, r7
   12226:	ed83 7b00 	vstr	d7, [r3]
  if (t116.im == 0.0) {
   1222a:	f507 6355 	add.w	r3, r7, #3408	; 0xd50
   1222e:	ed93 7b02 	vldr	d7, [r3, #8]
   12232:	eeb5 7b40 	vcmp.f64	d7, #0.0
   12236:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1223a:	d115      	bne.n	12268 <G_q+0xa178>
    t16_im = t116.re / 2.0;
   1223c:	f507 6355 	add.w	r3, r7, #3408	; 0xd50
   12240:	ed93 6b00 	vldr	d6, [r3]
   12244:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12248:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1224c:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   12250:	ed83 7b00 	vstr	d7, [r3]
    t20_re = 0.0;
   12254:	f04f 0300 	mov.w	r3, #0
   12258:	f04f 0400 	mov.w	r4, #0
   1225c:	f241 3248 	movw	r2, #4936	; 0x1348
   12260:	443a      	add	r2, r7
   12262:	e9c2 3400 	strd	r3, r4, [r2]
   12266:	e037      	b.n	122d8 <G_q+0xa1e8>
  } else if (t116.re == 0.0) {
   12268:	f507 6355 	add.w	r3, r7, #3408	; 0xd50
   1226c:	ed93 7b00 	vldr	d7, [r3]
   12270:	eeb5 7b40 	vcmp.f64	d7, #0.0
   12274:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   12278:	d115      	bne.n	122a6 <G_q+0xa1b6>
    t16_im = 0.0;
   1227a:	f04f 0300 	mov.w	r3, #0
   1227e:	f04f 0400 	mov.w	r4, #0
   12282:	f507 529b 	add.w	r2, r7, #4960	; 0x1360
   12286:	e9c2 3400 	strd	r3, r4, [r2]
    t20_re = t116.im / 2.0;
   1228a:	f507 6355 	add.w	r3, r7, #3408	; 0xd50
   1228e:	ed93 6b02 	vldr	d6, [r3, #8]
   12292:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12296:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1229a:	f241 3348 	movw	r3, #4936	; 0x1348
   1229e:	443b      	add	r3, r7
   122a0:	ed83 7b00 	vstr	d7, [r3]
   122a4:	e018      	b.n	122d8 <G_q+0xa1e8>
  } else {
    t16_im = t116.re / 2.0;
   122a6:	f507 6355 	add.w	r3, r7, #3408	; 0xd50
   122aa:	ed93 6b00 	vldr	d6, [r3]
   122ae:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   122b2:	ee86 7b05 	vdiv.f64	d7, d6, d5
   122b6:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   122ba:	ed83 7b00 	vstr	d7, [r3]
    t20_re = t116.im / 2.0;
   122be:	f507 6355 	add.w	r3, r7, #3408	; 0xd50
   122c2:	ed93 6b02 	vldr	d6, [r3, #8]
   122c6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   122ca:	ee86 7b05 	vdiv.f64	d7, d6, d5
   122ce:	f241 3348 	movw	r3, #4936	; 0x1348
   122d2:	443b      	add	r3, r7
   122d4:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t117.im == 0.0) {
   122d8:	f507 6356 	add.w	r3, r7, #3424	; 0xd60
   122dc:	ed93 7b02 	vldr	d7, [r3, #8]
   122e0:	eeb5 7b40 	vcmp.f64	d7, #0.0
   122e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   122e8:	d116      	bne.n	12318 <G_q+0xa228>
    t34_re = t117.re / 2.0;
   122ea:	f507 6356 	add.w	r3, r7, #3424	; 0xd60
   122ee:	ed93 6b00 	vldr	d6, [r3]
   122f2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   122f6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   122fa:	f241 33b8 	movw	r3, #5048	; 0x13b8
   122fe:	443b      	add	r3, r7
   12300:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   12304:	f04f 0300 	mov.w	r3, #0
   12308:	f04f 0400 	mov.w	r4, #0
   1230c:	f241 32b0 	movw	r2, #5040	; 0x13b0
   12310:	443a      	add	r2, r7
   12312:	e9c2 3400 	strd	r3, r4, [r2]
   12316:	e039      	b.n	1238c <G_q+0xa29c>
  } else if (t117.re == 0.0) {
   12318:	f507 6356 	add.w	r3, r7, #3424	; 0xd60
   1231c:	ed93 7b00 	vldr	d7, [r3]
   12320:	eeb5 7b40 	vcmp.f64	d7, #0.0
   12324:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   12328:	d116      	bne.n	12358 <G_q+0xa268>
    t34_re = 0.0;
   1232a:	f04f 0300 	mov.w	r3, #0
   1232e:	f04f 0400 	mov.w	r4, #0
   12332:	f241 32b8 	movw	r2, #5048	; 0x13b8
   12336:	443a      	add	r2, r7
   12338:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t117.im / 2.0;
   1233c:	f507 6356 	add.w	r3, r7, #3424	; 0xd60
   12340:	ed93 6b02 	vldr	d6, [r3, #8]
   12344:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12348:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1234c:	f241 33b0 	movw	r3, #5040	; 0x13b0
   12350:	443b      	add	r3, r7
   12352:	ed83 7b00 	vstr	d7, [r3]
   12356:	e019      	b.n	1238c <G_q+0xa29c>
  } else {
    t34_re = t117.re / 2.0;
   12358:	f507 6356 	add.w	r3, r7, #3424	; 0xd60
   1235c:	ed93 6b00 	vldr	d6, [r3]
   12360:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12364:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12368:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1236c:	443b      	add	r3, r7
   1236e:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t117.im / 2.0;
   12372:	f507 6356 	add.w	r3, r7, #3424	; 0xd60
   12376:	ed93 6b02 	vldr	d6, [r3, #8]
   1237a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1237e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12382:	f241 33b0 	movw	r3, #5040	; 0x13b0
   12386:	443b      	add	r3, r7
   12388:	ed83 7b00 	vstr	d7, [r3]
  }

  t20_im = (t114.re * 0.0 - t114.im * 3.061616997868383E-17) - (t115.re * 0.0 -
   1238c:	f507 63c2 	add.w	r3, r7, #1552	; 0x610
   12390:	ed93 7b00 	vldr	d7, [r3]
   12394:	ed9f 6b8c 	vldr	d6, [pc, #560]	; 125c8 <G_q+0xa4d8>
   12398:	ee27 6b06 	vmul.f64	d6, d7, d6
   1239c:	f507 63c2 	add.w	r3, r7, #1552	; 0x610
   123a0:	ed93 7b02 	vldr	d7, [r3, #8]
   123a4:	ed9f 5b8a 	vldr	d5, [pc, #552]	; 125d0 <G_q+0xa4e0>
   123a8:	ee27 7b05 	vmul.f64	d7, d7, d5
   123ac:	ee36 6b47 	vsub.f64	d6, d6, d7
   123b0:	f507 63c4 	add.w	r3, r7, #1568	; 0x620
   123b4:	ed93 7b00 	vldr	d7, [r3]
   123b8:	ed9f 5b83 	vldr	d5, [pc, #524]	; 125c8 <G_q+0xa4d8>
   123bc:	ee27 5b05 	vmul.f64	d5, d7, d5
    t115.im * 3.061616997868383E-17);
   123c0:	f507 63c4 	add.w	r3, r7, #1568	; 0x620
   123c4:	ed93 7b02 	vldr	d7, [r3, #8]
   123c8:	ed9f 4b81 	vldr	d4, [pc, #516]	; 125d0 <G_q+0xa4e0>
   123cc:	ee27 7b04 	vmul.f64	d7, d7, d4
  t20_im = (t114.re * 0.0 - t114.im * 3.061616997868383E-17) - (t115.re * 0.0 -
   123d0:	ee35 7b47 	vsub.f64	d7, d5, d7
   123d4:	ee36 7b47 	vsub.f64	d7, d6, d7
   123d8:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   123dc:	ed83 7b00 	vstr	d7, [r3]
  t12_re = (t114.re * 3.061616997868383E-17 + t114.im * 0.0) - (t115.re *
   123e0:	f507 63c2 	add.w	r3, r7, #1552	; 0x610
   123e4:	ed93 7b00 	vldr	d7, [r3]
   123e8:	ed9f 6b79 	vldr	d6, [pc, #484]	; 125d0 <G_q+0xa4e0>
   123ec:	ee27 6b06 	vmul.f64	d6, d7, d6
   123f0:	f507 63c2 	add.w	r3, r7, #1552	; 0x610
   123f4:	ed93 7b02 	vldr	d7, [r3, #8]
   123f8:	ed9f 5b73 	vldr	d5, [pc, #460]	; 125c8 <G_q+0xa4d8>
   123fc:	ee27 7b05 	vmul.f64	d7, d7, d5
   12400:	ee36 6b07 	vadd.f64	d6, d6, d7
   12404:	f507 63c4 	add.w	r3, r7, #1568	; 0x620
   12408:	ed93 7b00 	vldr	d7, [r3]
   1240c:	ed9f 5b70 	vldr	d5, [pc, #448]	; 125d0 <G_q+0xa4e0>
   12410:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t115.im * 0.0);
   12414:	f507 63c4 	add.w	r3, r7, #1568	; 0x620
   12418:	ed93 7b02 	vldr	d7, [r3, #8]
   1241c:	ed9f 4b6a 	vldr	d4, [pc, #424]	; 125c8 <G_q+0xa4d8>
   12420:	ee27 7b04 	vmul.f64	d7, d7, d4
   12424:	ee35 7b07 	vadd.f64	d7, d5, d7
  t12_re = (t114.re * 3.061616997868383E-17 + t114.im * 0.0) - (t115.re *
   12428:	ee36 7b47 	vsub.f64	d7, d6, d7
   1242c:	f241 3388 	movw	r3, #5000	; 0x1388
   12430:	443b      	add	r3, r7
   12432:	ed83 7b00 	vstr	d7, [r3]
  t16_im = (t16_im + t34_re) + 7.498798913309288E-33;
   12436:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   1243a:	ed93 6b00 	vldr	d6, [r3]
   1243e:	f241 33b8 	movw	r3, #5048	; 0x13b8
   12442:	443b      	add	r3, r7
   12444:	ed93 7b00 	vldr	d7, [r3]
   12448:	ee36 7b07 	vadd.f64	d7, d6, d7
   1244c:	ed9f 6b62 	vldr	d6, [pc, #392]	; 125d8 <G_q+0xa4e8>
   12450:	ee37 7b06 	vadd.f64	d7, d7, d6
   12454:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   12458:	ed83 7b00 	vstr	d7, [r3]
  t20_re += t34_im;
   1245c:	f241 3348 	movw	r3, #4936	; 0x1348
   12460:	443b      	add	r3, r7
   12462:	ed93 6b00 	vldr	d6, [r3]
   12466:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1246a:	443b      	add	r3, r7
   1246c:	ed93 7b00 	vldr	d7, [r3]
   12470:	ee36 7b07 	vadd.f64	d7, d6, d7
   12474:	f241 3348 	movw	r3, #4936	; 0x1348
   12478:	443b      	add	r3, r7
   1247a:	ed83 7b00 	vstr	d7, [r3]
  if (t122.im == 0.0) {
   1247e:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
   12482:	ed93 7b02 	vldr	d7, [r3, #8]
   12486:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1248a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1248e:	d115      	bne.n	124bc <G_q+0xa3cc>
    t23_re = t122.re / 2.0;
   12490:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
   12494:	ed93 6b00 	vldr	d6, [r3]
   12498:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1249c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   124a0:	f241 3330 	movw	r3, #4912	; 0x1330
   124a4:	443b      	add	r3, r7
   124a6:	ed83 7b00 	vstr	d7, [r3]
    t58_im = 0.0;
   124aa:	f507 5295 	add.w	r2, r7, #4768	; 0x12a0
   124ae:	f04f 0300 	mov.w	r3, #0
   124b2:	f04f 0400 	mov.w	r4, #0
   124b6:	e9c2 3400 	strd	r3, r4, [r2]
   124ba:	e037      	b.n	1252c <G_q+0xa43c>
  } else if (t122.re == 0.0) {
   124bc:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
   124c0:	ed93 7b00 	vldr	d7, [r3]
   124c4:	eeb5 7b40 	vcmp.f64	d7, #0.0
   124c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   124cc:	d115      	bne.n	124fa <G_q+0xa40a>
    t23_re = 0.0;
   124ce:	f04f 0300 	mov.w	r3, #0
   124d2:	f04f 0400 	mov.w	r4, #0
   124d6:	f241 3230 	movw	r2, #4912	; 0x1330
   124da:	443a      	add	r2, r7
   124dc:	e9c2 3400 	strd	r3, r4, [r2]
    t58_im = t122.im / 2.0;
   124e0:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
   124e4:	ed93 6b02 	vldr	d6, [r3, #8]
   124e8:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   124ec:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   124f0:	ee86 7b05 	vdiv.f64	d7, d6, d5
   124f4:	ed83 7b00 	vstr	d7, [r3]
   124f8:	e018      	b.n	1252c <G_q+0xa43c>
  } else {
    t23_re = t122.re / 2.0;
   124fa:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
   124fe:	ed93 6b00 	vldr	d6, [r3]
   12502:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12506:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1250a:	f241 3330 	movw	r3, #4912	; 0x1330
   1250e:	443b      	add	r3, r7
   12510:	ed83 7b00 	vstr	d7, [r3]
    t58_im = t122.im / 2.0;
   12514:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
   12518:	ed93 6b02 	vldr	d6, [r3, #8]
   1251c:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   12520:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12524:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12528:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t123.im == 0.0) {
   1252c:	4b2c      	ldr	r3, [pc, #176]	; (125e0 <G_q+0xa4f0>)
   1252e:	f241 32d0 	movw	r2, #5072	; 0x13d0
   12532:	443a      	add	r2, r7
   12534:	4413      	add	r3, r2
   12536:	ed93 7b02 	vldr	d7, [r3, #8]
   1253a:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1253e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   12542:	d119      	bne.n	12578 <G_q+0xa488>
    t34_re = t123.re / 2.0;
   12544:	4b26      	ldr	r3, [pc, #152]	; (125e0 <G_q+0xa4f0>)
   12546:	f241 32d0 	movw	r2, #5072	; 0x13d0
   1254a:	443a      	add	r2, r7
   1254c:	4413      	add	r3, r2
   1254e:	ed93 6b00 	vldr	d6, [r3]
   12552:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12556:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1255a:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1255e:	443b      	add	r3, r7
   12560:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   12564:	f04f 0300 	mov.w	r3, #0
   12568:	f04f 0400 	mov.w	r4, #0
   1256c:	f241 32b0 	movw	r2, #5040	; 0x13b0
   12570:	443a      	add	r2, r7
   12572:	e9c2 3400 	strd	r3, r4, [r2]
   12576:	e055      	b.n	12624 <G_q+0xa534>
  } else if (t123.re == 0.0) {
   12578:	4b19      	ldr	r3, [pc, #100]	; (125e0 <G_q+0xa4f0>)
   1257a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   1257e:	443a      	add	r2, r7
   12580:	4413      	add	r3, r2
   12582:	ed93 7b00 	vldr	d7, [r3]
   12586:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1258a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1258e:	d129      	bne.n	125e4 <G_q+0xa4f4>
    t34_re = 0.0;
   12590:	f04f 0300 	mov.w	r3, #0
   12594:	f04f 0400 	mov.w	r4, #0
   12598:	f241 32b8 	movw	r2, #5048	; 0x13b8
   1259c:	443a      	add	r2, r7
   1259e:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t123.im / 2.0;
   125a2:	4b0f      	ldr	r3, [pc, #60]	; (125e0 <G_q+0xa4f0>)
   125a4:	f241 32d0 	movw	r2, #5072	; 0x13d0
   125a8:	443a      	add	r2, r7
   125aa:	4413      	add	r3, r2
   125ac:	ed93 6b02 	vldr	d6, [r3, #8]
   125b0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   125b4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   125b8:	f241 33b0 	movw	r3, #5040	; 0x13b0
   125bc:	443b      	add	r3, r7
   125be:	ed83 7b00 	vstr	d7, [r3]
   125c2:	e02f      	b.n	12624 <G_q+0xa534>
   125c4:	f3af 8000 	nop.w
	...
   125d0:	33145c07 	.word	0x33145c07
   125d4:	3c81a626 	.word	0x3c81a626
   125d8:	858a5d48 	.word	0x858a5d48
   125dc:	394377ce 	.word	0x394377ce
   125e0:	ffffee30 	.word	0xffffee30
  } else {
    t34_re = t123.re / 2.0;
   125e4:	4bd0      	ldr	r3, [pc, #832]	; (12928 <G_q+0xa838>)
   125e6:	f241 32d0 	movw	r2, #5072	; 0x13d0
   125ea:	443a      	add	r2, r7
   125ec:	4413      	add	r3, r2
   125ee:	ed93 6b00 	vldr	d6, [r3]
   125f2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   125f6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   125fa:	f241 33b8 	movw	r3, #5048	; 0x13b8
   125fe:	443b      	add	r3, r7
   12600:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t123.im / 2.0;
   12604:	4bc8      	ldr	r3, [pc, #800]	; (12928 <G_q+0xa838>)
   12606:	f241 32d0 	movw	r2, #5072	; 0x13d0
   1260a:	443a      	add	r2, r7
   1260c:	4413      	add	r3, r2
   1260e:	ed93 6b02 	vldr	d6, [r3, #8]
   12612:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12616:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1261a:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1261e:	443b      	add	r3, r7
   12620:	ed83 7b00 	vstr	d7, [r3]
  }

  t60_re = (t13_re * t13_im - t76_re * t16_re) - (t20_im * t16_im - t12_re *
   12624:	f241 3378 	movw	r3, #4984	; 0x1378
   12628:	443b      	add	r3, r7
   1262a:	ed93 6b00 	vldr	d6, [r3]
   1262e:	f241 3370 	movw	r3, #4976	; 0x1370
   12632:	443b      	add	r3, r7
   12634:	ed93 7b00 	vldr	d7, [r3]
   12638:	ee26 6b07 	vmul.f64	d6, d6, d7
   1263c:	f241 23a8 	movw	r3, #4776	; 0x12a8
   12640:	443b      	add	r3, r7
   12642:	ed93 5b00 	vldr	d5, [r3]
   12646:	f241 3368 	movw	r3, #4968	; 0x1368
   1264a:	443b      	add	r3, r7
   1264c:	ed93 7b00 	vldr	d7, [r3]
   12650:	ee25 7b07 	vmul.f64	d7, d5, d7
   12654:	ee36 6b47 	vsub.f64	d6, d6, d7
   12658:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   1265c:	ed93 5b00 	vldr	d5, [r3]
   12660:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   12664:	ed93 7b00 	vldr	d7, [r3]
   12668:	ee25 5b07 	vmul.f64	d5, d5, d7
   1266c:	f241 3388 	movw	r3, #5000	; 0x1388
   12670:	443b      	add	r3, r7
   12672:	ed93 4b00 	vldr	d4, [r3]
   12676:	f241 3348 	movw	r3, #4936	; 0x1348
   1267a:	443b      	add	r3, r7
   1267c:	ed93 7b00 	vldr	d7, [r3]
   12680:	ee24 7b07 	vmul.f64	d7, d4, d7
   12684:	ee35 7b47 	vsub.f64	d7, d5, d7
   12688:	f241 2350 	movw	r3, #4688	; 0x1250
   1268c:	443b      	add	r3, r7
   1268e:	ee36 7b47 	vsub.f64	d7, d6, d7
   12692:	ed83 7b00 	vstr	d7, [r3]
    t20_re);
  t76_re = (t13_re * t16_re + t76_re * t13_im) - (t20_im * t20_re + t12_re *
   12696:	f241 3378 	movw	r3, #4984	; 0x1378
   1269a:	443b      	add	r3, r7
   1269c:	ed93 6b00 	vldr	d6, [r3]
   126a0:	f241 3368 	movw	r3, #4968	; 0x1368
   126a4:	443b      	add	r3, r7
   126a6:	ed93 7b00 	vldr	d7, [r3]
   126aa:	ee26 6b07 	vmul.f64	d6, d6, d7
   126ae:	f241 23a8 	movw	r3, #4776	; 0x12a8
   126b2:	443b      	add	r3, r7
   126b4:	ed93 5b00 	vldr	d5, [r3]
   126b8:	f241 3370 	movw	r3, #4976	; 0x1370
   126bc:	443b      	add	r3, r7
   126be:	ed93 7b00 	vldr	d7, [r3]
   126c2:	ee25 7b07 	vmul.f64	d7, d5, d7
   126c6:	ee36 6b07 	vadd.f64	d6, d6, d7
   126ca:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   126ce:	ed93 5b00 	vldr	d5, [r3]
   126d2:	f241 3348 	movw	r3, #4936	; 0x1348
   126d6:	443b      	add	r3, r7
   126d8:	ed93 7b00 	vldr	d7, [r3]
   126dc:	ee25 5b07 	vmul.f64	d5, d5, d7
   126e0:	f241 3388 	movw	r3, #5000	; 0x1388
   126e4:	443b      	add	r3, r7
   126e6:	ed93 4b00 	vldr	d4, [r3]
   126ea:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   126ee:	ed93 7b00 	vldr	d7, [r3]
   126f2:	ee24 7b07 	vmul.f64	d7, d4, d7
   126f6:	ee35 7b07 	vadd.f64	d7, d5, d7
   126fa:	f241 23a8 	movw	r3, #4776	; 0x12a8
   126fe:	443b      	add	r3, r7
   12700:	ee36 7b47 	vsub.f64	d7, d6, d7
   12704:	ed83 7b00 	vstr	d7, [r3]
    t16_im);
  t23_re += t34_re;
   12708:	f241 3330 	movw	r3, #4912	; 0x1330
   1270c:	443b      	add	r3, r7
   1270e:	ed93 6b00 	vldr	d6, [r3]
   12712:	f241 33b8 	movw	r3, #5048	; 0x13b8
   12716:	443b      	add	r3, r7
   12718:	ed93 7b00 	vldr	d7, [r3]
   1271c:	ee36 7b07 	vadd.f64	d7, d6, d7
   12720:	f241 3330 	movw	r3, #4912	; 0x1330
   12724:	443b      	add	r3, r7
   12726:	ed83 7b00 	vstr	d7, [r3]
  t58_im += t34_im;
   1272a:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   1272e:	f507 5295 	add.w	r2, r7, #4768	; 0x12a0
   12732:	ed92 6b00 	vldr	d6, [r2]
   12736:	f241 32b0 	movw	r2, #5040	; 0x13b0
   1273a:	443a      	add	r2, r7
   1273c:	ed92 7b00 	vldr	d7, [r2]
   12740:	ee36 7b07 	vadd.f64	d7, d6, d7
   12744:	ed83 7b00 	vstr	d7, [r3]
  t16_re = (t160.re * 0.0 - t160.im * 0.5) - (t161.re * 0.0 - t161.im * 0.5);
   12748:	f507 6367 	add.w	r3, r7, #3696	; 0xe70
   1274c:	ed93 7b00 	vldr	d7, [r3]
   12750:	ed9f 6b73 	vldr	d6, [pc, #460]	; 12920 <G_q+0xa830>
   12754:	ee27 6b06 	vmul.f64	d6, d7, d6
   12758:	f507 6367 	add.w	r3, r7, #3696	; 0xe70
   1275c:	ed93 7b02 	vldr	d7, [r3, #8]
   12760:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   12764:	ee27 7b05 	vmul.f64	d7, d7, d5
   12768:	ee36 6b47 	vsub.f64	d6, d6, d7
   1276c:	f507 6368 	add.w	r3, r7, #3712	; 0xe80
   12770:	ed93 7b00 	vldr	d7, [r3]
   12774:	ed9f 5b6a 	vldr	d5, [pc, #424]	; 12920 <G_q+0xa830>
   12778:	ee27 5b05 	vmul.f64	d5, d7, d5
   1277c:	f507 6368 	add.w	r3, r7, #3712	; 0xe80
   12780:	ed93 7b02 	vldr	d7, [r3, #8]
   12784:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   12788:	ee27 7b04 	vmul.f64	d7, d7, d4
   1278c:	ee35 7b47 	vsub.f64	d7, d5, d7
   12790:	ee36 7b47 	vsub.f64	d7, d6, d7
   12794:	f241 3368 	movw	r3, #4968	; 0x1368
   12798:	443b      	add	r3, r7
   1279a:	ed83 7b00 	vstr	d7, [r3]
  t85_im = (t160.re * 0.5 + t160.im * 0.0) - (t161.re * 0.5 + t161.im * 0.0);
   1279e:	f507 6367 	add.w	r3, r7, #3696	; 0xe70
   127a2:	ed93 7b00 	vldr	d7, [r3]
   127a6:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   127aa:	ee27 6b06 	vmul.f64	d6, d7, d6
   127ae:	f507 6367 	add.w	r3, r7, #3696	; 0xe70
   127b2:	ed93 7b02 	vldr	d7, [r3, #8]
   127b6:	ed9f 5b5a 	vldr	d5, [pc, #360]	; 12920 <G_q+0xa830>
   127ba:	ee27 7b05 	vmul.f64	d7, d7, d5
   127be:	ee36 6b07 	vadd.f64	d6, d6, d7
   127c2:	f507 6368 	add.w	r3, r7, #3712	; 0xe80
   127c6:	ed93 7b00 	vldr	d7, [r3]
   127ca:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   127ce:	ee27 5b05 	vmul.f64	d5, d7, d5
   127d2:	f507 6368 	add.w	r3, r7, #3712	; 0xe80
   127d6:	ed93 7b02 	vldr	d7, [r3, #8]
   127da:	ed9f 4b51 	vldr	d4, [pc, #324]	; 12920 <G_q+0xa830>
   127de:	ee27 7b04 	vmul.f64	d7, d7, d4
   127e2:	ee35 7b07 	vadd.f64	d7, d5, d7
   127e6:	ee36 7b47 	vsub.f64	d7, d6, d7
   127ea:	f241 3318 	movw	r3, #4888	; 0x1318
   127ee:	443b      	add	r3, r7
   127f0:	ed83 7b00 	vstr	d7, [r3]
  t16_im = (t162.re * 0.0 - t162.im * 0.5) - (t163.re * 0.0 - t163.im * 0.5);
   127f4:	f507 63e6 	add.w	r3, r7, #1840	; 0x730
   127f8:	ed93 7b00 	vldr	d7, [r3]
   127fc:	ed9f 6b48 	vldr	d6, [pc, #288]	; 12920 <G_q+0xa830>
   12800:	ee27 6b06 	vmul.f64	d6, d7, d6
   12804:	f507 63e6 	add.w	r3, r7, #1840	; 0x730
   12808:	ed93 7b02 	vldr	d7, [r3, #8]
   1280c:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   12810:	ee27 7b05 	vmul.f64	d7, d7, d5
   12814:	ee36 6b47 	vsub.f64	d6, d6, d7
   12818:	f507 63e8 	add.w	r3, r7, #1856	; 0x740
   1281c:	ed93 7b00 	vldr	d7, [r3]
   12820:	ed9f 5b3f 	vldr	d5, [pc, #252]	; 12920 <G_q+0xa830>
   12824:	ee27 5b05 	vmul.f64	d5, d7, d5
   12828:	f507 63e8 	add.w	r3, r7, #1856	; 0x740
   1282c:	ed93 7b02 	vldr	d7, [r3, #8]
   12830:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   12834:	ee27 7b04 	vmul.f64	d7, d7, d4
   12838:	ee35 7b47 	vsub.f64	d7, d5, d7
   1283c:	ee36 7b47 	vsub.f64	d7, d6, d7
   12840:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   12844:	ed83 7b00 	vstr	d7, [r3]
  t20_re = (t162.re * 0.5 + t162.im * 0.0) - (t163.re * 0.5 + t163.im * 0.0);
   12848:	f507 63e6 	add.w	r3, r7, #1840	; 0x730
   1284c:	ed93 7b00 	vldr	d7, [r3]
   12850:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   12854:	ee27 6b06 	vmul.f64	d6, d7, d6
   12858:	f507 63e6 	add.w	r3, r7, #1840	; 0x730
   1285c:	ed93 7b02 	vldr	d7, [r3, #8]
   12860:	ed9f 5b2f 	vldr	d5, [pc, #188]	; 12920 <G_q+0xa830>
   12864:	ee27 7b05 	vmul.f64	d7, d7, d5
   12868:	ee36 6b07 	vadd.f64	d6, d6, d7
   1286c:	f507 63e8 	add.w	r3, r7, #1856	; 0x740
   12870:	ed93 7b00 	vldr	d7, [r3]
   12874:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   12878:	ee27 5b05 	vmul.f64	d5, d7, d5
   1287c:	f507 63e8 	add.w	r3, r7, #1856	; 0x740
   12880:	ed93 7b02 	vldr	d7, [r3, #8]
   12884:	ed9f 4b26 	vldr	d4, [pc, #152]	; 12920 <G_q+0xa830>
   12888:	ee27 7b04 	vmul.f64	d7, d7, d4
   1288c:	ee35 7b07 	vadd.f64	d7, d5, d7
   12890:	ee36 7b47 	vsub.f64	d7, d6, d7
   12894:	f241 3348 	movw	r3, #4936	; 0x1348
   12898:	443b      	add	r3, r7
   1289a:	ed83 7b00 	vstr	d7, [r3]
  if (t164.im == 0.0) {
   1289e:	f507 63ea 	add.w	r3, r7, #1872	; 0x750
   128a2:	ed93 7b02 	vldr	d7, [r3, #8]
   128a6:	eeb5 7b40 	vcmp.f64	d7, #0.0
   128aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   128ae:	d115      	bne.n	128dc <G_q+0xa7ec>
    t20_im = t164.re / 2.0;
   128b0:	f507 63ea 	add.w	r3, r7, #1872	; 0x750
   128b4:	ed93 6b00 	vldr	d6, [r3]
   128b8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   128bc:	ee86 7b05 	vdiv.f64	d7, d6, d5
   128c0:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   128c4:	ed83 7b00 	vstr	d7, [r3]
    t12_re = 0.0;
   128c8:	f04f 0300 	mov.w	r3, #0
   128cc:	f04f 0400 	mov.w	r4, #0
   128d0:	f241 3288 	movw	r2, #5000	; 0x1388
   128d4:	443a      	add	r2, r7
   128d6:	e9c2 3400 	strd	r3, r4, [r2]
   128da:	e040      	b.n	1295e <G_q+0xa86e>
  } else if (t164.re == 0.0) {
   128dc:	f507 63ea 	add.w	r3, r7, #1872	; 0x750
   128e0:	ed93 7b00 	vldr	d7, [r3]
   128e4:	eeb5 7b40 	vcmp.f64	d7, #0.0
   128e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   128ec:	d11e      	bne.n	1292c <G_q+0xa83c>
    t20_im = 0.0;
   128ee:	f04f 0300 	mov.w	r3, #0
   128f2:	f04f 0400 	mov.w	r4, #0
   128f6:	f507 529a 	add.w	r2, r7, #4928	; 0x1340
   128fa:	e9c2 3400 	strd	r3, r4, [r2]
    t12_re = t164.im / 2.0;
   128fe:	f507 63ea 	add.w	r3, r7, #1872	; 0x750
   12902:	ed93 6b02 	vldr	d6, [r3, #8]
   12906:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1290a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1290e:	f241 3388 	movw	r3, #5000	; 0x1388
   12912:	443b      	add	r3, r7
   12914:	ed83 7b00 	vstr	d7, [r3]
   12918:	e021      	b.n	1295e <G_q+0xa86e>
   1291a:	bf00      	nop
   1291c:	f3af 8000 	nop.w
	...
   12928:	ffffee30 	.word	0xffffee30
  } else {
    t20_im = t164.re / 2.0;
   1292c:	f507 63ea 	add.w	r3, r7, #1872	; 0x750
   12930:	ed93 6b00 	vldr	d6, [r3]
   12934:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12938:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1293c:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   12940:	ed83 7b00 	vstr	d7, [r3]
    t12_re = t164.im / 2.0;
   12944:	f507 63ea 	add.w	r3, r7, #1872	; 0x750
   12948:	ed93 6b02 	vldr	d6, [r3, #8]
   1294c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12950:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12954:	f241 3388 	movw	r3, #5000	; 0x1388
   12958:	443b      	add	r3, r7
   1295a:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t165.im == 0.0) {
   1295e:	f507 63ec 	add.w	r3, r7, #1888	; 0x760
   12962:	ed93 7b02 	vldr	d7, [r3, #8]
   12966:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1296a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1296e:	d116      	bne.n	1299e <G_q+0xa8ae>
    t34_re = t165.re / 2.0;
   12970:	f507 63ec 	add.w	r3, r7, #1888	; 0x760
   12974:	ed93 6b00 	vldr	d6, [r3]
   12978:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1297c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12980:	f241 33b8 	movw	r3, #5048	; 0x13b8
   12984:	443b      	add	r3, r7
   12986:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   1298a:	f04f 0300 	mov.w	r3, #0
   1298e:	f04f 0400 	mov.w	r4, #0
   12992:	f241 32b0 	movw	r2, #5040	; 0x13b0
   12996:	443a      	add	r2, r7
   12998:	e9c2 3400 	strd	r3, r4, [r2]
   1299c:	e039      	b.n	12a12 <G_q+0xa922>
  } else if (t165.re == 0.0) {
   1299e:	f507 63ec 	add.w	r3, r7, #1888	; 0x760
   129a2:	ed93 7b00 	vldr	d7, [r3]
   129a6:	eeb5 7b40 	vcmp.f64	d7, #0.0
   129aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   129ae:	d116      	bne.n	129de <G_q+0xa8ee>
    t34_re = 0.0;
   129b0:	f04f 0300 	mov.w	r3, #0
   129b4:	f04f 0400 	mov.w	r4, #0
   129b8:	f241 32b8 	movw	r2, #5048	; 0x13b8
   129bc:	443a      	add	r2, r7
   129be:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t165.im / 2.0;
   129c2:	f507 63ec 	add.w	r3, r7, #1888	; 0x760
   129c6:	ed93 6b02 	vldr	d6, [r3, #8]
   129ca:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   129ce:	ee86 7b05 	vdiv.f64	d7, d6, d5
   129d2:	f241 33b0 	movw	r3, #5040	; 0x13b0
   129d6:	443b      	add	r3, r7
   129d8:	ed83 7b00 	vstr	d7, [r3]
   129dc:	e019      	b.n	12a12 <G_q+0xa922>
  } else {
    t34_re = t165.re / 2.0;
   129de:	f507 63ec 	add.w	r3, r7, #1888	; 0x760
   129e2:	ed93 6b00 	vldr	d6, [r3]
   129e6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   129ea:	ee86 7b05 	vdiv.f64	d7, d6, d5
   129ee:	f241 33b8 	movw	r3, #5048	; 0x13b8
   129f2:	443b      	add	r3, r7
   129f4:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t165.im / 2.0;
   129f8:	f507 63ec 	add.w	r3, r7, #1888	; 0x760
   129fc:	ed93 6b02 	vldr	d6, [r3, #8]
   12a00:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12a04:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12a08:	f241 33b0 	movw	r3, #5040	; 0x13b0
   12a0c:	443b      	add	r3, r7
   12a0e:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t166.im == 0.0) {
   12a12:	f507 6369 	add.w	r3, r7, #3728	; 0xe90
   12a16:	ed93 7b02 	vldr	d7, [r3, #8]
   12a1a:	eeb5 7b40 	vcmp.f64	d7, #0.0
   12a1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   12a22:	d115      	bne.n	12a50 <G_q+0xa960>
    t12_im = t166.re / 2.0;
   12a24:	f507 6369 	add.w	r3, r7, #3728	; 0xe90
   12a28:	ed93 6b00 	vldr	d6, [r3]
   12a2c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12a30:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12a34:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   12a38:	ed83 7b00 	vstr	d7, [r3]
    b_t10_re = 0.0;
   12a3c:	f04f 0300 	mov.w	r3, #0
   12a40:	f04f 0400 	mov.w	r4, #0
   12a44:	f241 3238 	movw	r2, #4920	; 0x1338
   12a48:	443a      	add	r2, r7
   12a4a:	e9c2 3400 	strd	r3, r4, [r2]
   12a4e:	e037      	b.n	12ac0 <G_q+0xa9d0>
  } else if (t166.re == 0.0) {
   12a50:	f507 6369 	add.w	r3, r7, #3728	; 0xe90
   12a54:	ed93 7b00 	vldr	d7, [r3]
   12a58:	eeb5 7b40 	vcmp.f64	d7, #0.0
   12a5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   12a60:	d115      	bne.n	12a8e <G_q+0xa99e>
    t12_im = 0.0;
   12a62:	f04f 0300 	mov.w	r3, #0
   12a66:	f04f 0400 	mov.w	r4, #0
   12a6a:	f507 529c 	add.w	r2, r7, #4992	; 0x1380
   12a6e:	e9c2 3400 	strd	r3, r4, [r2]
    b_t10_re = t166.im / 2.0;
   12a72:	f507 6369 	add.w	r3, r7, #3728	; 0xe90
   12a76:	ed93 6b02 	vldr	d6, [r3, #8]
   12a7a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12a7e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12a82:	f241 3338 	movw	r3, #4920	; 0x1338
   12a86:	443b      	add	r3, r7
   12a88:	ed83 7b00 	vstr	d7, [r3]
   12a8c:	e018      	b.n	12ac0 <G_q+0xa9d0>
  } else {
    t12_im = t166.re / 2.0;
   12a8e:	f507 6369 	add.w	r3, r7, #3728	; 0xe90
   12a92:	ed93 6b00 	vldr	d6, [r3]
   12a96:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12a9a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12a9e:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   12aa2:	ed83 7b00 	vstr	d7, [r3]
    b_t10_re = t166.im / 2.0;
   12aa6:	f507 6369 	add.w	r3, r7, #3728	; 0xe90
   12aaa:	ed93 6b02 	vldr	d6, [r3, #8]
   12aae:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12ab2:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12ab6:	f241 3338 	movw	r3, #4920	; 0x1338
   12aba:	443b      	add	r3, r7
   12abc:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t167.im == 0.0) {
   12ac0:	f507 636a 	add.w	r3, r7, #3744	; 0xea0
   12ac4:	ed93 7b02 	vldr	d7, [r3, #8]
   12ac8:	eeb5 7b40 	vcmp.f64	d7, #0.0
   12acc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   12ad0:	d116      	bne.n	12b00 <G_q+0xaa10>
    t13_re = t167.re / 2.0;
   12ad2:	f507 636a 	add.w	r3, r7, #3744	; 0xea0
   12ad6:	ed93 6b00 	vldr	d6, [r3]
   12ada:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12ade:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12ae2:	f241 3378 	movw	r3, #4984	; 0x1378
   12ae6:	443b      	add	r3, r7
   12ae8:	ed83 7b00 	vstr	d7, [r3]
    t13_im = 0.0;
   12aec:	f04f 0300 	mov.w	r3, #0
   12af0:	f04f 0400 	mov.w	r4, #0
   12af4:	f241 3270 	movw	r2, #4976	; 0x1370
   12af8:	443a      	add	r2, r7
   12afa:	e9c2 3400 	strd	r3, r4, [r2]
   12afe:	e039      	b.n	12b74 <G_q+0xaa84>
  } else if (t167.re == 0.0) {
   12b00:	f507 636a 	add.w	r3, r7, #3744	; 0xea0
   12b04:	ed93 7b00 	vldr	d7, [r3]
   12b08:	eeb5 7b40 	vcmp.f64	d7, #0.0
   12b0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   12b10:	d116      	bne.n	12b40 <G_q+0xaa50>
    t13_re = 0.0;
   12b12:	f04f 0300 	mov.w	r3, #0
   12b16:	f04f 0400 	mov.w	r4, #0
   12b1a:	f241 3278 	movw	r2, #4984	; 0x1378
   12b1e:	443a      	add	r2, r7
   12b20:	e9c2 3400 	strd	r3, r4, [r2]
    t13_im = t167.im / 2.0;
   12b24:	f507 636a 	add.w	r3, r7, #3744	; 0xea0
   12b28:	ed93 6b02 	vldr	d6, [r3, #8]
   12b2c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12b30:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12b34:	f241 3370 	movw	r3, #4976	; 0x1370
   12b38:	443b      	add	r3, r7
   12b3a:	ed83 7b00 	vstr	d7, [r3]
   12b3e:	e019      	b.n	12b74 <G_q+0xaa84>
  } else {
    t13_re = t167.re / 2.0;
   12b40:	f507 636a 	add.w	r3, r7, #3744	; 0xea0
   12b44:	ed93 6b00 	vldr	d6, [r3]
   12b48:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12b4c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12b50:	f241 3378 	movw	r3, #4984	; 0x1378
   12b54:	443b      	add	r3, r7
   12b56:	ed83 7b00 	vstr	d7, [r3]
    t13_im = t167.im / 2.0;
   12b5a:	f507 636a 	add.w	r3, r7, #3744	; 0xea0
   12b5e:	ed93 6b02 	vldr	d6, [r3, #8]
   12b62:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   12b66:	ee86 7b05 	vdiv.f64	d7, d6, d5
   12b6a:	f241 3370 	movw	r3, #4976	; 0x1370
   12b6e:	443b      	add	r3, r7
   12b70:	ed83 7b00 	vstr	d7, [r3]
  }

  t20_im += t34_re;
   12b74:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   12b78:	ed93 6b00 	vldr	d6, [r3]
   12b7c:	f241 33b8 	movw	r3, #5048	; 0x13b8
   12b80:	443b      	add	r3, r7
   12b82:	ed93 7b00 	vldr	d7, [r3]
   12b86:	ee36 7b07 	vadd.f64	d7, d6, d7
   12b8a:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   12b8e:	ed83 7b00 	vstr	d7, [r3]
  t12_re += t34_im;
   12b92:	f241 3388 	movw	r3, #5000	; 0x1388
   12b96:	443b      	add	r3, r7
   12b98:	ed93 6b00 	vldr	d6, [r3]
   12b9c:	f241 33b0 	movw	r3, #5040	; 0x13b0
   12ba0:	443b      	add	r3, r7
   12ba2:	ed93 7b00 	vldr	d7, [r3]
   12ba6:	ee36 7b07 	vadd.f64	d7, d6, d7
   12baa:	f241 3388 	movw	r3, #5000	; 0x1388
   12bae:	443b      	add	r3, r7
   12bb0:	ed83 7b00 	vstr	d7, [r3]
  t12_im = (t12_im + t13_re) + 7.498798913309288E-33;
   12bb4:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   12bb8:	ed93 6b00 	vldr	d6, [r3]
   12bbc:	f241 3378 	movw	r3, #4984	; 0x1378
   12bc0:	443b      	add	r3, r7
   12bc2:	ed93 7b00 	vldr	d7, [r3]
   12bc6:	ee36 7b07 	vadd.f64	d7, d6, d7
   12bca:	ed9f 6be3 	vldr	d6, [pc, #908]	; 12f58 <G_q+0xae68>
   12bce:	ee37 7b06 	vadd.f64	d7, d7, d6
   12bd2:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   12bd6:	ed83 7b00 	vstr	d7, [r3]
  b_t10_re += t13_im;
   12bda:	f241 3338 	movw	r3, #4920	; 0x1338
   12bde:	443b      	add	r3, r7
   12be0:	ed93 6b00 	vldr	d6, [r3]
   12be4:	f241 3370 	movw	r3, #4976	; 0x1370
   12be8:	443b      	add	r3, r7
   12bea:	ed93 7b00 	vldr	d7, [r3]
   12bee:	ee36 7b07 	vadd.f64	d7, d6, d7
   12bf2:	f241 3338 	movw	r3, #4920	; 0x1338
   12bf6:	443b      	add	r3, r7
   12bf8:	ed83 7b00 	vstr	d7, [r3]
  t13_re = (t16_re * t16_im - t85_im * t20_re) + (t20_im * t12_im - t12_re *
   12bfc:	f241 3368 	movw	r3, #4968	; 0x1368
   12c00:	443b      	add	r3, r7
   12c02:	ed93 6b00 	vldr	d6, [r3]
   12c06:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   12c0a:	ed93 7b00 	vldr	d7, [r3]
   12c0e:	ee26 6b07 	vmul.f64	d6, d6, d7
   12c12:	f241 3318 	movw	r3, #4888	; 0x1318
   12c16:	443b      	add	r3, r7
   12c18:	ed93 5b00 	vldr	d5, [r3]
   12c1c:	f241 3348 	movw	r3, #4936	; 0x1348
   12c20:	443b      	add	r3, r7
   12c22:	ed93 7b00 	vldr	d7, [r3]
   12c26:	ee25 7b07 	vmul.f64	d7, d5, d7
   12c2a:	ee36 6b47 	vsub.f64	d6, d6, d7
   12c2e:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   12c32:	ed93 5b00 	vldr	d5, [r3]
   12c36:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   12c3a:	ed93 7b00 	vldr	d7, [r3]
   12c3e:	ee25 5b07 	vmul.f64	d5, d5, d7
   12c42:	f241 3388 	movw	r3, #5000	; 0x1388
   12c46:	443b      	add	r3, r7
   12c48:	ed93 4b00 	vldr	d4, [r3]
   12c4c:	f241 3338 	movw	r3, #4920	; 0x1338
   12c50:	443b      	add	r3, r7
   12c52:	ed93 7b00 	vldr	d7, [r3]
   12c56:	ee24 7b07 	vmul.f64	d7, d4, d7
   12c5a:	ee35 7b47 	vsub.f64	d7, d5, d7
   12c5e:	ee36 7b07 	vadd.f64	d7, d6, d7
   12c62:	f241 3378 	movw	r3, #4984	; 0x1378
   12c66:	443b      	add	r3, r7
   12c68:	ed83 7b00 	vstr	d7, [r3]
    b_t10_re);
  t85_im = (t16_re * t20_re + t85_im * t16_im) + (t20_im * b_t10_re + t12_re *
   12c6c:	f241 3368 	movw	r3, #4968	; 0x1368
   12c70:	443b      	add	r3, r7
   12c72:	ed93 6b00 	vldr	d6, [r3]
   12c76:	f241 3348 	movw	r3, #4936	; 0x1348
   12c7a:	443b      	add	r3, r7
   12c7c:	ed93 7b00 	vldr	d7, [r3]
   12c80:	ee26 6b07 	vmul.f64	d6, d6, d7
   12c84:	f241 3318 	movw	r3, #4888	; 0x1318
   12c88:	443b      	add	r3, r7
   12c8a:	ed93 5b00 	vldr	d5, [r3]
   12c8e:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   12c92:	ed93 7b00 	vldr	d7, [r3]
   12c96:	ee25 7b07 	vmul.f64	d7, d5, d7
   12c9a:	ee36 6b07 	vadd.f64	d6, d6, d7
   12c9e:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   12ca2:	ed93 5b00 	vldr	d5, [r3]
   12ca6:	f241 3338 	movw	r3, #4920	; 0x1338
   12caa:	443b      	add	r3, r7
   12cac:	ed93 7b00 	vldr	d7, [r3]
   12cb0:	ee25 5b07 	vmul.f64	d5, d5, d7
   12cb4:	f241 3388 	movw	r3, #5000	; 0x1388
   12cb8:	443b      	add	r3, r7
   12cba:	ed93 4b00 	vldr	d4, [r3]
   12cbe:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   12cc2:	ed93 7b00 	vldr	d7, [r3]
   12cc6:	ee24 7b07 	vmul.f64	d7, d4, d7
   12cca:	ee35 7b07 	vadd.f64	d7, d5, d7
   12cce:	ee36 7b07 	vadd.f64	d7, d6, d7
   12cd2:	f241 3318 	movw	r3, #4888	; 0x1318
   12cd6:	443b      	add	r3, r7
   12cd8:	ed83 7b00 	vstr	d7, [r3]
    t12_im);
  t34_re = (t158.re * 0.0 - t158.im * 0.5) - (t159.re * 0.0 - t159.im * 0.5);
   12cdc:	f507 7314 	add.w	r3, r7, #592	; 0x250
   12ce0:	ed93 7b00 	vldr	d7, [r3]
   12ce4:	ed9f 6b9e 	vldr	d6, [pc, #632]	; 12f60 <G_q+0xae70>
   12ce8:	ee27 6b06 	vmul.f64	d6, d7, d6
   12cec:	f507 7314 	add.w	r3, r7, #592	; 0x250
   12cf0:	ed93 7b02 	vldr	d7, [r3, #8]
   12cf4:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   12cf8:	ee27 7b05 	vmul.f64	d7, d7, d5
   12cfc:	ee36 6b47 	vsub.f64	d6, d6, d7
   12d00:	4b9f      	ldr	r3, [pc, #636]	; (12f80 <G_q+0xae90>)
   12d02:	f241 32d0 	movw	r2, #5072	; 0x13d0
   12d06:	443a      	add	r2, r7
   12d08:	4413      	add	r3, r2
   12d0a:	ed93 7b00 	vldr	d7, [r3]
   12d0e:	ed9f 5b94 	vldr	d5, [pc, #592]	; 12f60 <G_q+0xae70>
   12d12:	ee27 5b05 	vmul.f64	d5, d7, d5
   12d16:	4b9a      	ldr	r3, [pc, #616]	; (12f80 <G_q+0xae90>)
   12d18:	f241 32d0 	movw	r2, #5072	; 0x13d0
   12d1c:	443a      	add	r2, r7
   12d1e:	4413      	add	r3, r2
   12d20:	ed93 7b02 	vldr	d7, [r3, #8]
   12d24:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   12d28:	ee27 7b04 	vmul.f64	d7, d7, d4
   12d2c:	ee35 7b47 	vsub.f64	d7, d5, d7
   12d30:	ee36 7b47 	vsub.f64	d7, d6, d7
   12d34:	f241 33b8 	movw	r3, #5048	; 0x13b8
   12d38:	443b      	add	r3, r7
   12d3a:	ed83 7b00 	vstr	d7, [r3]
  t34_im = (t158.re * 0.5 + t158.im * 0.0) - (t159.re * 0.5 + t159.im * 0.0);
   12d3e:	f507 7314 	add.w	r3, r7, #592	; 0x250
   12d42:	ed93 7b00 	vldr	d7, [r3]
   12d46:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   12d4a:	ee27 6b06 	vmul.f64	d6, d7, d6
   12d4e:	f507 7314 	add.w	r3, r7, #592	; 0x250
   12d52:	ed93 7b02 	vldr	d7, [r3, #8]
   12d56:	ed9f 5b82 	vldr	d5, [pc, #520]	; 12f60 <G_q+0xae70>
   12d5a:	ee27 7b05 	vmul.f64	d7, d7, d5
   12d5e:	ee36 6b07 	vadd.f64	d6, d6, d7
   12d62:	4b87      	ldr	r3, [pc, #540]	; (12f80 <G_q+0xae90>)
   12d64:	f241 32d0 	movw	r2, #5072	; 0x13d0
   12d68:	443a      	add	r2, r7
   12d6a:	4413      	add	r3, r2
   12d6c:	ed93 7b00 	vldr	d7, [r3]
   12d70:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   12d74:	ee27 5b05 	vmul.f64	d5, d7, d5
   12d78:	4b81      	ldr	r3, [pc, #516]	; (12f80 <G_q+0xae90>)
   12d7a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   12d7e:	443a      	add	r2, r7
   12d80:	4413      	add	r3, r2
   12d82:	ed93 7b02 	vldr	d7, [r3, #8]
   12d86:	ed9f 4b76 	vldr	d4, [pc, #472]	; 12f60 <G_q+0xae70>
   12d8a:	ee27 7b04 	vmul.f64	d7, d7, d4
   12d8e:	ee35 7b07 	vadd.f64	d7, d5, d7
   12d92:	ee36 7b47 	vsub.f64	d7, d6, d7
   12d96:	f241 33b0 	movw	r3, #5040	; 0x13b0
   12d9a:	443b      	add	r3, r7
   12d9c:	ed83 7b00 	vstr	d7, [r3]
  b_G_q[2].re = -g * ((((((t8_im * t19_re_tmp - t54_re * t19_im_tmp) * 0.1376 +
   12da0:	4b78      	ldr	r3, [pc, #480]	; (12f84 <G_q+0xae94>)
   12da2:	f241 32d0 	movw	r2, #5072	; 0x13d0
   12da6:	443a      	add	r2, r7
   12da8:	4413      	add	r3, r2
   12daa:	ed93 7b00 	vldr	d7, [r3]
   12dae:	eeb1 6b47 	vneg.f64	d6, d7
   12db2:	f241 2370 	movw	r3, #4720	; 0x1270
   12db6:	443b      	add	r3, r7
   12db8:	f507 5299 	add.w	r2, r7, #4896	; 0x1320
   12dbc:	ed92 5b00 	vldr	d5, [r2]
   12dc0:	ed93 7b00 	vldr	d7, [r3]
   12dc4:	ee25 5b07 	vmul.f64	d5, d5, d7
   12dc8:	f241 2368 	movw	r3, #4712	; 0x1268
   12dcc:	443b      	add	r3, r7
   12dce:	f241 3228 	movw	r2, #4904	; 0x1328
   12dd2:	443a      	add	r2, r7
   12dd4:	ed92 4b00 	vldr	d4, [r2]
   12dd8:	ed93 7b00 	vldr	d7, [r3]
   12ddc:	ee24 7b07 	vmul.f64	d7, d4, d7
   12de0:	ee35 7b47 	vsub.f64	d7, d5, d7
   12de4:	ed9f 5b60 	vldr	d5, [pc, #384]	; 12f68 <G_q+0xae78>
   12de8:	ee27 5b05 	vmul.f64	d5, d7, d5
    (t43_re * t41_im - t41_re * t8_re) * 0.0215) + (t43_im * t55_im - b_t54_re *
   12dec:	f241 2358 	movw	r3, #4696	; 0x1258
   12df0:	443b      	add	r3, r7
   12df2:	ed93 4b00 	vldr	d4, [r3]
   12df6:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
   12dfa:	ed93 7b00 	vldr	d7, [r3]
   12dfe:	ee24 4b07 	vmul.f64	d4, d4, d7
   12e02:	f507 5393 	add.w	r3, r7, #4704	; 0x1260
   12e06:	f241 3208 	movw	r2, #4872	; 0x1308
   12e0a:	443a      	add	r2, r7
   12e0c:	ed92 3b00 	vldr	d3, [r2]
   12e10:	ed93 7b00 	vldr	d7, [r3]
   12e14:	ee23 7b07 	vmul.f64	d7, d3, d7
   12e18:	ee34 7b47 	vsub.f64	d7, d4, d7
   12e1c:	ed9f 4b54 	vldr	d4, [pc, #336]	; 12f70 <G_q+0xae80>
   12e20:	ee27 7b04 	vmul.f64	d7, d7, d4
  b_G_q[2].re = -g * ((((((t8_im * t19_re_tmp - t54_re * t19_im_tmp) * 0.1376 +
   12e24:	ee35 5b07 	vadd.f64	d5, d5, d7
    (t43_re * t41_im - t41_re * t8_re) * 0.0215) + (t43_im * t55_im - b_t54_re *
   12e28:	f241 23f8 	movw	r3, #4856	; 0x12f8
   12e2c:	443b      	add	r3, r7
   12e2e:	ed93 4b00 	vldr	d4, [r3]
   12e32:	f241 23d8 	movw	r3, #4824	; 0x12d8
   12e36:	443b      	add	r3, r7
   12e38:	ed93 7b00 	vldr	d7, [r3]
   12e3c:	ee24 4b07 	vmul.f64	d4, d4, d7
   12e40:	f241 23f0 	movw	r3, #4848	; 0x12f0
   12e44:	443b      	add	r3, r7
   12e46:	ed93 3b00 	vldr	d3, [r3]
   12e4a:	f241 23e8 	movw	r3, #4840	; 0x12e8
   12e4e:	443b      	add	r3, r7
   12e50:	ed93 7b00 	vldr	d7, [r3]
   12e54:	ee23 7b07 	vmul.f64	d7, d3, d7
   12e58:	ee34 7b47 	vsub.f64	d7, d4, d7
    b_t54_im) * 0.0215) - (t74_re * t3_im - t74_im * t72_re) * 0.1376) + (t60_re
   12e5c:	ed9f 4b44 	vldr	d4, [pc, #272]	; 12f70 <G_q+0xae80>
   12e60:	ee27 7b04 	vmul.f64	d7, d7, d4
    (t43_re * t41_im - t41_re * t8_re) * 0.0215) + (t43_im * t55_im - b_t54_re *
   12e64:	ee35 5b07 	vadd.f64	d5, d5, d7
    b_t54_im) * 0.0215) - (t74_re * t3_im - t74_im * t72_re) * 0.1376) + (t60_re
   12e68:	f241 23b8 	movw	r3, #4792	; 0x12b8
   12e6c:	443b      	add	r3, r7
   12e6e:	ed93 4b00 	vldr	d4, [r3]
   12e72:	f241 3310 	movw	r3, #4880	; 0x1310
   12e76:	443b      	add	r3, r7
   12e78:	ed93 7b00 	vldr	d7, [r3]
   12e7c:	ee24 4b07 	vmul.f64	d4, d4, d7
   12e80:	f241 22b0 	movw	r2, #4784	; 0x12b0
   12e84:	443a      	add	r2, r7
   12e86:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   12e8a:	ed92 3b00 	vldr	d3, [r2]
   12e8e:	ed93 7b00 	vldr	d7, [r3]
   12e92:	ee23 7b07 	vmul.f64	d7, d3, d7
   12e96:	ee34 7b47 	vsub.f64	d7, d4, d7
   12e9a:	ed9f 4b33 	vldr	d4, [pc, #204]	; 12f68 <G_q+0xae78>
   12e9e:	ee27 7b04 	vmul.f64	d7, d7, d4
   12ea2:	ee35 5b47 	vsub.f64	d5, d5, d7
    * t23_re - t76_re * t58_im) * 1.3164953090834051E-18) - (t13_re * t34_re -
   12ea6:	f241 2350 	movw	r3, #4688	; 0x1250
   12eaa:	443b      	add	r3, r7
   12eac:	ed93 4b00 	vldr	d4, [r3]
   12eb0:	f241 3330 	movw	r3, #4912	; 0x1330
   12eb4:	443b      	add	r3, r7
   12eb6:	ed93 7b00 	vldr	d7, [r3]
   12eba:	ee24 4b07 	vmul.f64	d4, d4, d7
   12ebe:	f241 22a8 	movw	r2, #4776	; 0x12a8
   12ec2:	443a      	add	r2, r7
   12ec4:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   12ec8:	ed92 3b00 	vldr	d3, [r2]
   12ecc:	ed93 7b00 	vldr	d7, [r3]
   12ed0:	ee23 7b07 	vmul.f64	d7, d3, d7
   12ed4:	ee34 7b47 	vsub.f64	d7, d4, d7
   12ed8:	ed9f 4b27 	vldr	d4, [pc, #156]	; 12f78 <G_q+0xae88>
   12edc:	ee27 7b04 	vmul.f64	d7, d7, d4
    b_t54_im) * 0.0215) - (t74_re * t3_im - t74_im * t72_re) * 0.1376) + (t60_re
   12ee0:	ee35 5b07 	vadd.f64	d5, d5, d7
    * t23_re - t76_re * t58_im) * 1.3164953090834051E-18) - (t13_re * t34_re -
   12ee4:	f241 3378 	movw	r3, #4984	; 0x1378
   12ee8:	443b      	add	r3, r7
   12eea:	ed93 4b00 	vldr	d4, [r3]
   12eee:	f241 33b8 	movw	r3, #5048	; 0x13b8
   12ef2:	443b      	add	r3, r7
   12ef4:	ed93 7b00 	vldr	d7, [r3]
   12ef8:	ee24 4b07 	vmul.f64	d4, d4, d7
    t85_im * t34_im) * 1.3164953090834051E-18);
   12efc:	f241 3318 	movw	r3, #4888	; 0x1318
   12f00:	443b      	add	r3, r7
   12f02:	ed93 3b00 	vldr	d3, [r3]
   12f06:	f241 33b0 	movw	r3, #5040	; 0x13b0
   12f0a:	443b      	add	r3, r7
   12f0c:	ed93 7b00 	vldr	d7, [r3]
   12f10:	ee23 7b07 	vmul.f64	d7, d3, d7
    * t23_re - t76_re * t58_im) * 1.3164953090834051E-18) - (t13_re * t34_re -
   12f14:	ee34 7b47 	vsub.f64	d7, d4, d7
    t85_im * t34_im) * 1.3164953090834051E-18);
   12f18:	ed9f 4b17 	vldr	d4, [pc, #92]	; 12f78 <G_q+0xae88>
   12f1c:	ee27 7b04 	vmul.f64	d7, d7, d4
    * t23_re - t76_re * t58_im) * 1.3164953090834051E-18) - (t13_re * t34_re -
   12f20:	ee35 7b47 	vsub.f64	d7, d5, d7
  b_G_q[2].re = -g * ((((((t8_im * t19_re_tmp - t54_re * t19_im_tmp) * 0.1376 +
   12f24:	4b18      	ldr	r3, [pc, #96]	; (12f88 <G_q+0xae98>)
   12f26:	f241 32d0 	movw	r2, #5072	; 0x13d0
   12f2a:	443a      	add	r2, r7
   12f2c:	4413      	add	r3, r2
   12f2e:	681b      	ldr	r3, [r3, #0]
   12f30:	3320      	adds	r3, #32
   12f32:	ee26 7b07 	vmul.f64	d7, d6, d7
   12f36:	ed83 7b00 	vstr	d7, [r3]
  b_G_q[2].im = -g * ((((((t8_im * t19_im_tmp + t54_re * t19_re_tmp) * 0.1376 +
   12f3a:	4b12      	ldr	r3, [pc, #72]	; (12f84 <G_q+0xae94>)
   12f3c:	f241 32d0 	movw	r2, #5072	; 0x13d0
   12f40:	443a      	add	r2, r7
   12f42:	4413      	add	r3, r2
   12f44:	ed93 7b00 	vldr	d7, [r3]
   12f48:	eeb1 6b47 	vneg.f64	d6, d7
   12f4c:	f241 2368 	movw	r3, #4712	; 0x1268
   12f50:	443b      	add	r3, r7
   12f52:	f507 5299 	add.w	r2, r7, #4896	; 0x1320
   12f56:	e019      	b.n	12f8c <G_q+0xae9c>
   12f58:	858a5d48 	.word	0x858a5d48
   12f5c:	394377ce 	.word	0x394377ce
	...
   12f68:	75f6fd22 	.word	0x75f6fd22
   12f6c:	3fc19ce0 	.word	0x3fc19ce0
   12f70:	9374bc6a 	.word	0x9374bc6a
   12f74:	3f960418 	.word	0x3f960418
   12f78:	2ba953a1 	.word	0x2ba953a1
   12f7c:	3c3848f9 	.word	0x3c3848f9
   12f80:	ffffee90 	.word	0xffffee90
   12f84:	ffffec58 	.word	0xffffec58
   12f88:	ffffec34 	.word	0xffffec34
   12f8c:	ed92 5b00 	vldr	d5, [r2]
   12f90:	ed93 7b00 	vldr	d7, [r3]
   12f94:	ee25 5b07 	vmul.f64	d5, d5, d7
   12f98:	f241 2370 	movw	r3, #4720	; 0x1270
   12f9c:	443b      	add	r3, r7
   12f9e:	f241 3228 	movw	r2, #4904	; 0x1328
   12fa2:	443a      	add	r2, r7
   12fa4:	ed92 4b00 	vldr	d4, [r2]
   12fa8:	ed93 7b00 	vldr	d7, [r3]
   12fac:	ee24 7b07 	vmul.f64	d7, d4, d7
   12fb0:	ee35 7b07 	vadd.f64	d7, d5, d7
   12fb4:	ed9f 5ba6 	vldr	d5, [pc, #664]	; 13250 <G_q+0xb160>
   12fb8:	ee27 5b05 	vmul.f64	d5, d7, d5
    (t43_re * t8_re + t41_re * t41_im) * 0.0215) + (t43_im * b_t54_im + b_t54_re
   12fbc:	f241 2258 	movw	r2, #4696	; 0x1258
   12fc0:	443a      	add	r2, r7
   12fc2:	f507 5393 	add.w	r3, r7, #4704	; 0x1260
   12fc6:	ed92 4b00 	vldr	d4, [r2]
   12fca:	ed93 7b00 	vldr	d7, [r3]
   12fce:	ee24 4b07 	vmul.f64	d4, d4, d7
   12fd2:	f241 3308 	movw	r3, #4872	; 0x1308
   12fd6:	443b      	add	r3, r7
   12fd8:	ed93 3b00 	vldr	d3, [r3]
   12fdc:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
   12fe0:	ed93 7b00 	vldr	d7, [r3]
   12fe4:	ee23 7b07 	vmul.f64	d7, d3, d7
   12fe8:	ee34 7b07 	vadd.f64	d7, d4, d7
   12fec:	ed9f 4b9a 	vldr	d4, [pc, #616]	; 13258 <G_q+0xb168>
   12ff0:	ee27 7b04 	vmul.f64	d7, d7, d4
  b_G_q[2].im = -g * ((((((t8_im * t19_im_tmp + t54_re * t19_re_tmp) * 0.1376 +
   12ff4:	ee35 5b07 	vadd.f64	d5, d5, d7
    (t43_re * t8_re + t41_re * t41_im) * 0.0215) + (t43_im * b_t54_im + b_t54_re
   12ff8:	f241 23f8 	movw	r3, #4856	; 0x12f8
   12ffc:	443b      	add	r3, r7
   12ffe:	ed93 4b00 	vldr	d4, [r3]
   13002:	f241 23e8 	movw	r3, #4840	; 0x12e8
   13006:	443b      	add	r3, r7
   13008:	ed93 7b00 	vldr	d7, [r3]
   1300c:	ee24 4b07 	vmul.f64	d4, d4, d7
    * t55_im) * 0.0215) - (t74_re * t72_re + t74_im * t3_im) * 0.1376) + (t60_re
   13010:	f241 23f0 	movw	r3, #4848	; 0x12f0
   13014:	443b      	add	r3, r7
   13016:	ed93 3b00 	vldr	d3, [r3]
   1301a:	f241 23d8 	movw	r3, #4824	; 0x12d8
   1301e:	443b      	add	r3, r7
   13020:	ed93 7b00 	vldr	d7, [r3]
   13024:	ee23 7b07 	vmul.f64	d7, d3, d7
    (t43_re * t8_re + t41_re * t41_im) * 0.0215) + (t43_im * b_t54_im + b_t54_re
   13028:	ee34 7b07 	vadd.f64	d7, d4, d7
    * t55_im) * 0.0215) - (t74_re * t72_re + t74_im * t3_im) * 0.1376) + (t60_re
   1302c:	ed9f 4b8a 	vldr	d4, [pc, #552]	; 13258 <G_q+0xb168>
   13030:	ee27 7b04 	vmul.f64	d7, d7, d4
    (t43_re * t8_re + t41_re * t41_im) * 0.0215) + (t43_im * b_t54_im + b_t54_re
   13034:	ee35 5b07 	vadd.f64	d5, d5, d7
    * t55_im) * 0.0215) - (t74_re * t72_re + t74_im * t3_im) * 0.1376) + (t60_re
   13038:	f241 22b8 	movw	r2, #4792	; 0x12b8
   1303c:	443a      	add	r2, r7
   1303e:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   13042:	ed92 4b00 	vldr	d4, [r2]
   13046:	ed93 7b00 	vldr	d7, [r3]
   1304a:	ee24 4b07 	vmul.f64	d4, d4, d7
   1304e:	f241 23b0 	movw	r3, #4784	; 0x12b0
   13052:	443b      	add	r3, r7
   13054:	ed93 3b00 	vldr	d3, [r3]
   13058:	f241 3310 	movw	r3, #4880	; 0x1310
   1305c:	443b      	add	r3, r7
   1305e:	ed93 7b00 	vldr	d7, [r3]
   13062:	ee23 7b07 	vmul.f64	d7, d3, d7
   13066:	ee34 7b07 	vadd.f64	d7, d4, d7
   1306a:	ed9f 4b79 	vldr	d4, [pc, #484]	; 13250 <G_q+0xb160>
   1306e:	ee27 7b04 	vmul.f64	d7, d7, d4
   13072:	ee35 5b47 	vsub.f64	d5, d5, d7
    * t58_im + t76_re * t23_re) * 1.3164953090834051E-18) - (t13_re * t34_im +
   13076:	f241 2250 	movw	r2, #4688	; 0x1250
   1307a:	443a      	add	r2, r7
   1307c:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   13080:	ed92 4b00 	vldr	d4, [r2]
   13084:	ed93 7b00 	vldr	d7, [r3]
   13088:	ee24 4b07 	vmul.f64	d4, d4, d7
   1308c:	f241 23a8 	movw	r3, #4776	; 0x12a8
   13090:	443b      	add	r3, r7
   13092:	ed93 3b00 	vldr	d3, [r3]
   13096:	f241 3330 	movw	r3, #4912	; 0x1330
   1309a:	443b      	add	r3, r7
   1309c:	ed93 7b00 	vldr	d7, [r3]
   130a0:	ee23 7b07 	vmul.f64	d7, d3, d7
   130a4:	ee34 7b07 	vadd.f64	d7, d4, d7
   130a8:	ed9f 4b6d 	vldr	d4, [pc, #436]	; 13260 <G_q+0xb170>
   130ac:	ee27 7b04 	vmul.f64	d7, d7, d4
    * t55_im) * 0.0215) - (t74_re * t72_re + t74_im * t3_im) * 0.1376) + (t60_re
   130b0:	ee35 5b07 	vadd.f64	d5, d5, d7
    * t58_im + t76_re * t23_re) * 1.3164953090834051E-18) - (t13_re * t34_im +
   130b4:	f241 3378 	movw	r3, #4984	; 0x1378
   130b8:	443b      	add	r3, r7
   130ba:	ed93 4b00 	vldr	d4, [r3]
   130be:	f241 33b0 	movw	r3, #5040	; 0x13b0
   130c2:	443b      	add	r3, r7
   130c4:	ed93 7b00 	vldr	d7, [r3]
   130c8:	ee24 4b07 	vmul.f64	d4, d4, d7
    t85_im * t34_re) * 1.3164953090834051E-18);
   130cc:	f241 3318 	movw	r3, #4888	; 0x1318
   130d0:	443b      	add	r3, r7
   130d2:	ed93 3b00 	vldr	d3, [r3]
   130d6:	f241 33b8 	movw	r3, #5048	; 0x13b8
   130da:	443b      	add	r3, r7
   130dc:	ed93 7b00 	vldr	d7, [r3]
   130e0:	ee23 7b07 	vmul.f64	d7, d3, d7
    * t58_im + t76_re * t23_re) * 1.3164953090834051E-18) - (t13_re * t34_im +
   130e4:	ee34 7b07 	vadd.f64	d7, d4, d7
    t85_im * t34_re) * 1.3164953090834051E-18);
   130e8:	ed9f 4b5d 	vldr	d4, [pc, #372]	; 13260 <G_q+0xb170>
   130ec:	ee27 7b04 	vmul.f64	d7, d7, d4
    * t58_im + t76_re * t23_re) * 1.3164953090834051E-18) - (t13_re * t34_im +
   130f0:	ee35 7b47 	vsub.f64	d7, d5, d7
  b_G_q[2].im = -g * ((((((t8_im * t19_im_tmp + t54_re * t19_re_tmp) * 0.1376 +
   130f4:	4b5c      	ldr	r3, [pc, #368]	; (13268 <G_q+0xb178>)
   130f6:	f241 32d0 	movw	r2, #5072	; 0x13d0
   130fa:	443a      	add	r2, r7
   130fc:	4413      	add	r3, r2
   130fe:	681b      	ldr	r3, [r3, #0]
   13100:	3320      	adds	r3, #32
   13102:	ee26 7b07 	vmul.f64	d7, d6, d7
   13106:	ed83 7b02 	vstr	d7, [r3, #8]
  if (t172.im == 0.0) {
   1310a:	f507 731c 	add.w	r3, r7, #624	; 0x270
   1310e:	ed93 7b02 	vldr	d7, [r3, #8]
   13112:	eeb5 7b40 	vcmp.f64	d7, #0.0
   13116:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1311a:	d115      	bne.n	13148 <G_q+0xb058>
    t85_im = t172.re / 2.0;
   1311c:	f507 731c 	add.w	r3, r7, #624	; 0x270
   13120:	ed93 6b00 	vldr	d6, [r3]
   13124:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13128:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1312c:	f241 3318 	movw	r3, #4888	; 0x1318
   13130:	443b      	add	r3, r7
   13132:	ed83 7b00 	vstr	d7, [r3]
    t41_im = 0.0;
   13136:	f04f 0300 	mov.w	r3, #0
   1313a:	f04f 0400 	mov.w	r4, #0
   1313e:	f507 5298 	add.w	r2, r7, #4864	; 0x1300
   13142:	e9c2 3400 	strd	r3, r4, [r2]
   13146:	e037      	b.n	131b8 <G_q+0xb0c8>
  } else if (t172.re == 0.0) {
   13148:	f507 731c 	add.w	r3, r7, #624	; 0x270
   1314c:	ed93 7b00 	vldr	d7, [r3]
   13150:	eeb5 7b40 	vcmp.f64	d7, #0.0
   13154:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   13158:	d115      	bne.n	13186 <G_q+0xb096>
    t85_im = 0.0;
   1315a:	f04f 0300 	mov.w	r3, #0
   1315e:	f04f 0400 	mov.w	r4, #0
   13162:	f241 3218 	movw	r2, #4888	; 0x1318
   13166:	443a      	add	r2, r7
   13168:	e9c2 3400 	strd	r3, r4, [r2]
    t41_im = t172.im / 2.0;
   1316c:	f507 731c 	add.w	r3, r7, #624	; 0x270
   13170:	ed93 6b02 	vldr	d6, [r3, #8]
   13174:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13178:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1317c:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
   13180:	ed83 7b00 	vstr	d7, [r3]
   13184:	e018      	b.n	131b8 <G_q+0xb0c8>
  } else {
    t85_im = t172.re / 2.0;
   13186:	f507 731c 	add.w	r3, r7, #624	; 0x270
   1318a:	ed93 6b00 	vldr	d6, [r3]
   1318e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13192:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13196:	f241 3318 	movw	r3, #4888	; 0x1318
   1319a:	443b      	add	r3, r7
   1319c:	ed83 7b00 	vstr	d7, [r3]
    t41_im = t172.im / 2.0;
   131a0:	f507 731c 	add.w	r3, r7, #624	; 0x270
   131a4:	ed93 6b02 	vldr	d6, [r3, #8]
   131a8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   131ac:	ee86 7b05 	vdiv.f64	d7, d6, d5
   131b0:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
   131b4:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t173.im == 0.0) {
   131b8:	4b2c      	ldr	r3, [pc, #176]	; (1326c <G_q+0xb17c>)
   131ba:	f241 32d0 	movw	r2, #5072	; 0x13d0
   131be:	443a      	add	r2, r7
   131c0:	4413      	add	r3, r2
   131c2:	ed93 7b02 	vldr	d7, [r3, #8]
   131c6:	eeb5 7b40 	vcmp.f64	d7, #0.0
   131ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   131ce:	d119      	bne.n	13204 <G_q+0xb114>
    t34_re = t173.re / 2.0;
   131d0:	4b26      	ldr	r3, [pc, #152]	; (1326c <G_q+0xb17c>)
   131d2:	f241 32d0 	movw	r2, #5072	; 0x13d0
   131d6:	443a      	add	r2, r7
   131d8:	4413      	add	r3, r2
   131da:	ed93 6b00 	vldr	d6, [r3]
   131de:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   131e2:	ee86 7b05 	vdiv.f64	d7, d6, d5
   131e6:	f241 33b8 	movw	r3, #5048	; 0x13b8
   131ea:	443b      	add	r3, r7
   131ec:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   131f0:	f04f 0300 	mov.w	r3, #0
   131f4:	f04f 0400 	mov.w	r4, #0
   131f8:	f241 32b0 	movw	r2, #5040	; 0x13b0
   131fc:	443a      	add	r2, r7
   131fe:	e9c2 3400 	strd	r3, r4, [r2]
   13202:	e055      	b.n	132b0 <G_q+0xb1c0>
  } else if (t173.re == 0.0) {
   13204:	4b19      	ldr	r3, [pc, #100]	; (1326c <G_q+0xb17c>)
   13206:	f241 32d0 	movw	r2, #5072	; 0x13d0
   1320a:	443a      	add	r2, r7
   1320c:	4413      	add	r3, r2
   1320e:	ed93 7b00 	vldr	d7, [r3]
   13212:	eeb5 7b40 	vcmp.f64	d7, #0.0
   13216:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1321a:	d129      	bne.n	13270 <G_q+0xb180>
    t34_re = 0.0;
   1321c:	f04f 0300 	mov.w	r3, #0
   13220:	f04f 0400 	mov.w	r4, #0
   13224:	f241 32b8 	movw	r2, #5048	; 0x13b8
   13228:	443a      	add	r2, r7
   1322a:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t173.im / 2.0;
   1322e:	4b0f      	ldr	r3, [pc, #60]	; (1326c <G_q+0xb17c>)
   13230:	f241 32d0 	movw	r2, #5072	; 0x13d0
   13234:	443a      	add	r2, r7
   13236:	4413      	add	r3, r2
   13238:	ed93 6b02 	vldr	d6, [r3, #8]
   1323c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13240:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13244:	f241 33b0 	movw	r3, #5040	; 0x13b0
   13248:	443b      	add	r3, r7
   1324a:	ed83 7b00 	vstr	d7, [r3]
   1324e:	e02f      	b.n	132b0 <G_q+0xb1c0>
   13250:	75f6fd22 	.word	0x75f6fd22
   13254:	3fc19ce0 	.word	0x3fc19ce0
   13258:	9374bc6a 	.word	0x9374bc6a
   1325c:	3f960418 	.word	0x3f960418
   13260:	2ba953a1 	.word	0x2ba953a1
   13264:	3c3848f9 	.word	0x3c3848f9
   13268:	ffffec34 	.word	0xffffec34
   1326c:	ffffeeb0 	.word	0xffffeeb0
  } else {
    t34_re = t173.re / 2.0;
   13270:	4bb5      	ldr	r3, [pc, #724]	; (13548 <G_q+0xb458>)
   13272:	f241 32d0 	movw	r2, #5072	; 0x13d0
   13276:	443a      	add	r2, r7
   13278:	4413      	add	r3, r2
   1327a:	ed93 6b00 	vldr	d6, [r3]
   1327e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13282:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13286:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1328a:	443b      	add	r3, r7
   1328c:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t173.im / 2.0;
   13290:	4bad      	ldr	r3, [pc, #692]	; (13548 <G_q+0xb458>)
   13292:	f241 32d0 	movw	r2, #5072	; 0x13d0
   13296:	443a      	add	r2, r7
   13298:	4413      	add	r3, r2
   1329a:	ed93 6b02 	vldr	d6, [r3, #8]
   1329e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   132a2:	ee86 7b05 	vdiv.f64	d7, d6, d5
   132a6:	f241 33b0 	movw	r3, #5040	; 0x13b0
   132aa:	443b      	add	r3, r7
   132ac:	ed83 7b00 	vstr	d7, [r3]
  }

  t16_re = (t182.re * 0.0 - t182.im * 3.061616997868383E-17) - (t183.re * 0.0 -
   132b0:	f507 63f6 	add.w	r3, r7, #1968	; 0x7b0
   132b4:	ed93 7b00 	vldr	d7, [r3]
   132b8:	ed9f 6b9f 	vldr	d6, [pc, #636]	; 13538 <G_q+0xb448>
   132bc:	ee27 6b06 	vmul.f64	d6, d7, d6
   132c0:	f507 63f6 	add.w	r3, r7, #1968	; 0x7b0
   132c4:	ed93 7b02 	vldr	d7, [r3, #8]
   132c8:	ed9f 5b9d 	vldr	d5, [pc, #628]	; 13540 <G_q+0xb450>
   132cc:	ee27 7b05 	vmul.f64	d7, d7, d5
   132d0:	ee36 6b47 	vsub.f64	d6, d6, d7
   132d4:	f507 63f8 	add.w	r3, r7, #1984	; 0x7c0
   132d8:	ed93 7b00 	vldr	d7, [r3]
   132dc:	ed9f 5b96 	vldr	d5, [pc, #600]	; 13538 <G_q+0xb448>
   132e0:	ee27 5b05 	vmul.f64	d5, d7, d5
    t183.im * 3.061616997868383E-17);
   132e4:	f507 63f8 	add.w	r3, r7, #1984	; 0x7c0
   132e8:	ed93 7b02 	vldr	d7, [r3, #8]
   132ec:	ed9f 4b94 	vldr	d4, [pc, #592]	; 13540 <G_q+0xb450>
   132f0:	ee27 7b04 	vmul.f64	d7, d7, d4
  t16_re = (t182.re * 0.0 - t182.im * 3.061616997868383E-17) - (t183.re * 0.0 -
   132f4:	ee35 7b47 	vsub.f64	d7, d5, d7
   132f8:	ee36 7b47 	vsub.f64	d7, d6, d7
   132fc:	f241 3368 	movw	r3, #4968	; 0x1368
   13300:	443b      	add	r3, r7
   13302:	ed83 7b00 	vstr	d7, [r3]
  t16_im = (t182.re * 3.061616997868383E-17 + t182.im * 0.0) - (t183.re *
   13306:	f507 63f6 	add.w	r3, r7, #1968	; 0x7b0
   1330a:	ed93 7b00 	vldr	d7, [r3]
   1330e:	ed9f 6b8c 	vldr	d6, [pc, #560]	; 13540 <G_q+0xb450>
   13312:	ee27 6b06 	vmul.f64	d6, d7, d6
   13316:	f507 63f6 	add.w	r3, r7, #1968	; 0x7b0
   1331a:	ed93 7b02 	vldr	d7, [r3, #8]
   1331e:	ed9f 5b86 	vldr	d5, [pc, #536]	; 13538 <G_q+0xb448>
   13322:	ee27 7b05 	vmul.f64	d7, d7, d5
   13326:	ee36 6b07 	vadd.f64	d6, d6, d7
   1332a:	f507 63f8 	add.w	r3, r7, #1984	; 0x7c0
   1332e:	ed93 7b00 	vldr	d7, [r3]
   13332:	ed9f 5b83 	vldr	d5, [pc, #524]	; 13540 <G_q+0xb450>
   13336:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t183.im * 0.0);
   1333a:	f507 63f8 	add.w	r3, r7, #1984	; 0x7c0
   1333e:	ed93 7b02 	vldr	d7, [r3, #8]
   13342:	ed9f 4b7d 	vldr	d4, [pc, #500]	; 13538 <G_q+0xb448>
   13346:	ee27 7b04 	vmul.f64	d7, d7, d4
   1334a:	ee35 7b07 	vadd.f64	d7, d5, d7
  t16_im = (t182.re * 3.061616997868383E-17 + t182.im * 0.0) - (t183.re *
   1334e:	ee36 7b47 	vsub.f64	d7, d6, d7
   13352:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   13356:	ed83 7b00 	vstr	d7, [r3]
  t20_re = (t180.re * 0.0 - t180.im * 0.5) - (t181.re * 0.0 - t181.im * 0.5);
   1335a:	f507 6371 	add.w	r3, r7, #3856	; 0xf10
   1335e:	ed93 7b00 	vldr	d7, [r3]
   13362:	ed9f 6b75 	vldr	d6, [pc, #468]	; 13538 <G_q+0xb448>
   13366:	ee27 6b06 	vmul.f64	d6, d7, d6
   1336a:	f507 6371 	add.w	r3, r7, #3856	; 0xf10
   1336e:	ed93 7b02 	vldr	d7, [r3, #8]
   13372:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   13376:	ee27 7b05 	vmul.f64	d7, d7, d5
   1337a:	ee36 6b47 	vsub.f64	d6, d6, d7
   1337e:	f507 6372 	add.w	r3, r7, #3872	; 0xf20
   13382:	ed93 7b00 	vldr	d7, [r3]
   13386:	ed9f 5b6c 	vldr	d5, [pc, #432]	; 13538 <G_q+0xb448>
   1338a:	ee27 5b05 	vmul.f64	d5, d7, d5
   1338e:	f507 6372 	add.w	r3, r7, #3872	; 0xf20
   13392:	ed93 7b02 	vldr	d7, [r3, #8]
   13396:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   1339a:	ee27 7b04 	vmul.f64	d7, d7, d4
   1339e:	ee35 7b47 	vsub.f64	d7, d5, d7
   133a2:	ee36 7b47 	vsub.f64	d7, d6, d7
   133a6:	f241 3348 	movw	r3, #4936	; 0x1348
   133aa:	443b      	add	r3, r7
   133ac:	ed83 7b00 	vstr	d7, [r3]
  t20_im = (t180.re * 0.5 + t180.im * 0.0) - (t181.re * 0.5 + t181.im * 0.0);
   133b0:	f507 6371 	add.w	r3, r7, #3856	; 0xf10
   133b4:	ed93 7b00 	vldr	d7, [r3]
   133b8:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   133bc:	ee27 6b06 	vmul.f64	d6, d7, d6
   133c0:	f507 6371 	add.w	r3, r7, #3856	; 0xf10
   133c4:	ed93 7b02 	vldr	d7, [r3, #8]
   133c8:	ed9f 5b5b 	vldr	d5, [pc, #364]	; 13538 <G_q+0xb448>
   133cc:	ee27 7b05 	vmul.f64	d7, d7, d5
   133d0:	ee36 6b07 	vadd.f64	d6, d6, d7
   133d4:	f507 6372 	add.w	r3, r7, #3872	; 0xf20
   133d8:	ed93 7b00 	vldr	d7, [r3]
   133dc:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   133e0:	ee27 5b05 	vmul.f64	d5, d7, d5
   133e4:	f507 6372 	add.w	r3, r7, #3872	; 0xf20
   133e8:	ed93 7b02 	vldr	d7, [r3, #8]
   133ec:	ed9f 4b52 	vldr	d4, [pc, #328]	; 13538 <G_q+0xb448>
   133f0:	ee27 7b04 	vmul.f64	d7, d7, d4
   133f4:	ee35 7b07 	vadd.f64	d7, d5, d7
   133f8:	ee36 7b47 	vsub.f64	d7, d6, d7
   133fc:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   13400:	ed83 7b00 	vstr	d7, [r3]
  if (t178.im == 0.0) {
   13404:	f507 636f 	add.w	r3, r7, #3824	; 0xef0
   13408:	ed93 7b02 	vldr	d7, [r3, #8]
   1340c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   13410:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   13414:	d115      	bne.n	13442 <G_q+0xb352>
    t12_re = t178.re / 2.0;
   13416:	f507 636f 	add.w	r3, r7, #3824	; 0xef0
   1341a:	ed93 6b00 	vldr	d6, [r3]
   1341e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13422:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13426:	f241 3388 	movw	r3, #5000	; 0x1388
   1342a:	443b      	add	r3, r7
   1342c:	ed83 7b00 	vstr	d7, [r3]
    t12_im = 0.0;
   13430:	f04f 0300 	mov.w	r3, #0
   13434:	f04f 0400 	mov.w	r4, #0
   13438:	f507 529c 	add.w	r2, r7, #4992	; 0x1380
   1343c:	e9c2 3400 	strd	r3, r4, [r2]
   13440:	e037      	b.n	134b2 <G_q+0xb3c2>
  } else if (t178.re == 0.0) {
   13442:	f507 636f 	add.w	r3, r7, #3824	; 0xef0
   13446:	ed93 7b00 	vldr	d7, [r3]
   1344a:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1344e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   13452:	d115      	bne.n	13480 <G_q+0xb390>
    t12_re = 0.0;
   13454:	f04f 0300 	mov.w	r3, #0
   13458:	f04f 0400 	mov.w	r4, #0
   1345c:	f241 3288 	movw	r2, #5000	; 0x1388
   13460:	443a      	add	r2, r7
   13462:	e9c2 3400 	strd	r3, r4, [r2]
    t12_im = t178.im / 2.0;
   13466:	f507 636f 	add.w	r3, r7, #3824	; 0xef0
   1346a:	ed93 6b02 	vldr	d6, [r3, #8]
   1346e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13472:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13476:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   1347a:	ed83 7b00 	vstr	d7, [r3]
   1347e:	e018      	b.n	134b2 <G_q+0xb3c2>
  } else {
    t12_re = t178.re / 2.0;
   13480:	f507 636f 	add.w	r3, r7, #3824	; 0xef0
   13484:	ed93 6b00 	vldr	d6, [r3]
   13488:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1348c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13490:	f241 3388 	movw	r3, #5000	; 0x1388
   13494:	443b      	add	r3, r7
   13496:	ed83 7b00 	vstr	d7, [r3]
    t12_im = t178.im / 2.0;
   1349a:	f507 636f 	add.w	r3, r7, #3824	; 0xef0
   1349e:	ed93 6b02 	vldr	d6, [r3, #8]
   134a2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   134a6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   134aa:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   134ae:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t179.im == 0.0) {
   134b2:	f507 6370 	add.w	r3, r7, #3840	; 0xf00
   134b6:	ed93 7b02 	vldr	d7, [r3, #8]
   134ba:	eeb5 7b40 	vcmp.f64	d7, #0.0
   134be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   134c2:	d116      	bne.n	134f2 <G_q+0xb402>
    t13_re = t179.re / 2.0;
   134c4:	f507 6370 	add.w	r3, r7, #3840	; 0xf00
   134c8:	ed93 6b00 	vldr	d6, [r3]
   134cc:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   134d0:	ee86 7b05 	vdiv.f64	d7, d6, d5
   134d4:	f241 3378 	movw	r3, #4984	; 0x1378
   134d8:	443b      	add	r3, r7
   134da:	ed83 7b00 	vstr	d7, [r3]
    t13_im = 0.0;
   134de:	f04f 0300 	mov.w	r3, #0
   134e2:	f04f 0400 	mov.w	r4, #0
   134e6:	f241 3270 	movw	r2, #4976	; 0x1370
   134ea:	443a      	add	r2, r7
   134ec:	e9c2 3400 	strd	r3, r4, [r2]
   134f0:	e046      	b.n	13580 <G_q+0xb490>
  } else if (t179.re == 0.0) {
   134f2:	f507 6370 	add.w	r3, r7, #3840	; 0xf00
   134f6:	ed93 7b00 	vldr	d7, [r3]
   134fa:	eeb5 7b40 	vcmp.f64	d7, #0.0
   134fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   13502:	d123      	bne.n	1354c <G_q+0xb45c>
    t13_re = 0.0;
   13504:	f04f 0300 	mov.w	r3, #0
   13508:	f04f 0400 	mov.w	r4, #0
   1350c:	f241 3278 	movw	r2, #4984	; 0x1378
   13510:	443a      	add	r2, r7
   13512:	e9c2 3400 	strd	r3, r4, [r2]
    t13_im = t179.im / 2.0;
   13516:	f507 6370 	add.w	r3, r7, #3840	; 0xf00
   1351a:	ed93 6b02 	vldr	d6, [r3, #8]
   1351e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13522:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13526:	f241 3370 	movw	r3, #4976	; 0x1370
   1352a:	443b      	add	r3, r7
   1352c:	ed83 7b00 	vstr	d7, [r3]
   13530:	e026      	b.n	13580 <G_q+0xb490>
   13532:	bf00      	nop
   13534:	f3af 8000 	nop.w
	...
   13540:	33145c07 	.word	0x33145c07
   13544:	3c81a626 	.word	0x3c81a626
   13548:	ffffeeb0 	.word	0xffffeeb0
  } else {
    t13_re = t179.re / 2.0;
   1354c:	f507 6370 	add.w	r3, r7, #3840	; 0xf00
   13550:	ed93 6b00 	vldr	d6, [r3]
   13554:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13558:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1355c:	f241 3378 	movw	r3, #4984	; 0x1378
   13560:	443b      	add	r3, r7
   13562:	ed83 7b00 	vstr	d7, [r3]
    t13_im = t179.im / 2.0;
   13566:	f507 6370 	add.w	r3, r7, #3840	; 0xf00
   1356a:	ed93 6b02 	vldr	d6, [r3, #8]
   1356e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13572:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13576:	f241 3370 	movw	r3, #4976	; 0x1370
   1357a:	443b      	add	r3, r7
   1357c:	ed83 7b00 	vstr	d7, [r3]
  }

  t23_re = t176.re * 3.061616997868383E-17 + t177.re * 3.061616997868383E-17;
   13580:	f507 63f2 	add.w	r3, r7, #1936	; 0x790
   13584:	ed93 7b00 	vldr	d7, [r3]
   13588:	ed9f 6bd1 	vldr	d6, [pc, #836]	; 138d0 <G_q+0xb7e0>
   1358c:	ee27 6b06 	vmul.f64	d6, d7, d6
   13590:	f507 63f4 	add.w	r3, r7, #1952	; 0x7a0
   13594:	ed93 7b00 	vldr	d7, [r3]
   13598:	ed9f 5bcd 	vldr	d5, [pc, #820]	; 138d0 <G_q+0xb7e0>
   1359c:	ee27 7b05 	vmul.f64	d7, d7, d5
   135a0:	ee36 7b07 	vadd.f64	d7, d6, d7
   135a4:	f241 3330 	movw	r3, #4912	; 0x1330
   135a8:	443b      	add	r3, r7
   135aa:	ed83 7b00 	vstr	d7, [r3]
  t3_im = t176.im * 3.061616997868383E-17 + t177.im * 3.061616997868383E-17;
   135ae:	f507 63f2 	add.w	r3, r7, #1936	; 0x790
   135b2:	ed93 7b02 	vldr	d7, [r3, #8]
   135b6:	ed9f 6bc6 	vldr	d6, [pc, #792]	; 138d0 <G_q+0xb7e0>
   135ba:	ee27 6b06 	vmul.f64	d6, d7, d6
   135be:	f507 63f4 	add.w	r3, r7, #1952	; 0x7a0
   135c2:	ed93 7b02 	vldr	d7, [r3, #8]
   135c6:	ed9f 5bc2 	vldr	d5, [pc, #776]	; 138d0 <G_q+0xb7e0>
   135ca:	ee27 7b05 	vmul.f64	d7, d7, d5
   135ce:	ee36 7b07 	vadd.f64	d7, d6, d7
   135d2:	f241 3310 	movw	r3, #4880	; 0x1310
   135d6:	443b      	add	r3, r7
   135d8:	ed83 7b00 	vstr	d7, [r3]
  t12_re = (t12_re + t13_re) + 7.498798913309288E-33;
   135dc:	f241 3388 	movw	r3, #5000	; 0x1388
   135e0:	443b      	add	r3, r7
   135e2:	ed93 6b00 	vldr	d6, [r3]
   135e6:	f241 3378 	movw	r3, #4984	; 0x1378
   135ea:	443b      	add	r3, r7
   135ec:	ed93 7b00 	vldr	d7, [r3]
   135f0:	ee36 7b07 	vadd.f64	d7, d6, d7
   135f4:	ed9f 6bbc 	vldr	d6, [pc, #752]	; 138e8 <G_q+0xb7f8>
   135f8:	ee37 7b06 	vadd.f64	d7, d7, d6
   135fc:	f241 3388 	movw	r3, #5000	; 0x1388
   13600:	443b      	add	r3, r7
   13602:	ed83 7b00 	vstr	d7, [r3]
  t12_im += t13_im;
   13606:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   1360a:	ed93 6b00 	vldr	d6, [r3]
   1360e:	f241 3370 	movw	r3, #4976	; 0x1370
   13612:	443b      	add	r3, r7
   13614:	ed93 7b00 	vldr	d7, [r3]
   13618:	ee36 7b07 	vadd.f64	d7, d6, d7
   1361c:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   13620:	ed83 7b00 	vstr	d7, [r3]
  t85_im += t34_re;
   13624:	f241 3318 	movw	r3, #4888	; 0x1318
   13628:	443b      	add	r3, r7
   1362a:	ed93 6b00 	vldr	d6, [r3]
   1362e:	f241 33b8 	movw	r3, #5048	; 0x13b8
   13632:	443b      	add	r3, r7
   13634:	ed93 7b00 	vldr	d7, [r3]
   13638:	ee36 7b07 	vadd.f64	d7, d6, d7
   1363c:	f241 3318 	movw	r3, #4888	; 0x1318
   13640:	443b      	add	r3, r7
   13642:	ed83 7b00 	vstr	d7, [r3]
  t41_im += t34_im;
   13646:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
   1364a:	ed93 6b00 	vldr	d6, [r3]
   1364e:	f241 33b0 	movw	r3, #5040	; 0x13b0
   13652:	443b      	add	r3, r7
   13654:	ed93 7b00 	vldr	d7, [r3]
   13658:	ee36 7b07 	vadd.f64	d7, d6, d7
   1365c:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
   13660:	ed83 7b00 	vstr	d7, [r3]
  b_t10_re = (((t174.re * 6.123233995736766E-17 + t175.re *
   13664:	f507 636d 	add.w	r3, r7, #3792	; 0xed0
   13668:	ed93 7b00 	vldr	d7, [r3]
   1366c:	ed9f 6b9a 	vldr	d6, [pc, #616]	; 138d8 <G_q+0xb7e8>
   13670:	ee27 6b06 	vmul.f64	d6, d7, d6
   13674:	f507 636e 	add.w	r3, r7, #3808	; 0xee0
   13678:	ed93 7b00 	vldr	d7, [r3]
   1367c:	ed9f 5b96 	vldr	d5, [pc, #600]	; 138d8 <G_q+0xb7e8>
   13680:	ee27 7b05 	vmul.f64	d7, d7, d5
   13684:	ee36 6b07 	vadd.f64	d6, d6, d7
                6.123233995736766E-17) + (t16_re * t20_re - t16_im * t20_im)) +
   13688:	f241 3368 	movw	r3, #4968	; 0x1368
   1368c:	443b      	add	r3, r7
   1368e:	ed93 5b00 	vldr	d5, [r3]
   13692:	f241 3348 	movw	r3, #4936	; 0x1348
   13696:	443b      	add	r3, r7
   13698:	ed93 7b00 	vldr	d7, [r3]
   1369c:	ee25 5b07 	vmul.f64	d5, d5, d7
   136a0:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   136a4:	ed93 4b00 	vldr	d4, [r3]
   136a8:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   136ac:	ed93 7b00 	vldr	d7, [r3]
   136b0:	ee24 7b07 	vmul.f64	d7, d4, d7
   136b4:	ee35 7b47 	vsub.f64	d7, d5, d7
   136b8:	ee36 6b07 	vadd.f64	d6, d6, d7
              (t23_re * t12_re - t3_im * t12_im)) - 6.123233995736766E-17;
   136bc:	f241 3330 	movw	r3, #4912	; 0x1330
   136c0:	443b      	add	r3, r7
   136c2:	ed93 5b00 	vldr	d5, [r3]
   136c6:	f241 3388 	movw	r3, #5000	; 0x1388
   136ca:	443b      	add	r3, r7
   136cc:	ed93 7b00 	vldr	d7, [r3]
   136d0:	ee25 5b07 	vmul.f64	d5, d5, d7
   136d4:	f241 3310 	movw	r3, #4880	; 0x1310
   136d8:	443b      	add	r3, r7
   136da:	ed93 4b00 	vldr	d4, [r3]
   136de:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   136e2:	ed93 7b00 	vldr	d7, [r3]
   136e6:	ee24 7b07 	vmul.f64	d7, d4, d7
   136ea:	ee35 7b47 	vsub.f64	d7, d5, d7
                6.123233995736766E-17) + (t16_re * t20_re - t16_im * t20_im)) +
   136ee:	ee36 7b07 	vadd.f64	d7, d6, d7
  b_t10_re = (((t174.re * 6.123233995736766E-17 + t175.re *
   136f2:	ed9f 6b79 	vldr	d6, [pc, #484]	; 138d8 <G_q+0xb7e8>
   136f6:	ee37 7b46 	vsub.f64	d7, d7, d6
   136fa:	f241 3338 	movw	r3, #4920	; 0x1338
   136fe:	443b      	add	r3, r7
   13700:	ed83 7b00 	vstr	d7, [r3]
  t23_re = ((t174.im * 6.123233995736766E-17 + t175.im * 6.123233995736766E-17)
   13704:	f507 636d 	add.w	r3, r7, #3792	; 0xed0
   13708:	ed93 7b02 	vldr	d7, [r3, #8]
   1370c:	ed9f 6b72 	vldr	d6, [pc, #456]	; 138d8 <G_q+0xb7e8>
   13710:	ee27 6b06 	vmul.f64	d6, d7, d6
   13714:	f507 636e 	add.w	r3, r7, #3808	; 0xee0
   13718:	ed93 7b02 	vldr	d7, [r3, #8]
   1371c:	ed9f 5b6e 	vldr	d5, [pc, #440]	; 138d8 <G_q+0xb7e8>
   13720:	ee27 7b05 	vmul.f64	d7, d7, d5
   13724:	ee36 6b07 	vadd.f64	d6, d6, d7
            + (t16_re * t20_im + t16_im * t20_re)) + (t23_re * t12_im + t3_im *
   13728:	f241 3368 	movw	r3, #4968	; 0x1368
   1372c:	443b      	add	r3, r7
   1372e:	ed93 5b00 	vldr	d5, [r3]
   13732:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   13736:	ed93 7b00 	vldr	d7, [r3]
   1373a:	ee25 5b07 	vmul.f64	d5, d5, d7
   1373e:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   13742:	ed93 4b00 	vldr	d4, [r3]
   13746:	f241 3348 	movw	r3, #4936	; 0x1348
   1374a:	443b      	add	r3, r7
   1374c:	ed93 7b00 	vldr	d7, [r3]
   13750:	ee24 7b07 	vmul.f64	d7, d4, d7
   13754:	ee35 7b07 	vadd.f64	d7, d5, d7
   13758:	ee36 6b07 	vadd.f64	d6, d6, d7
   1375c:	f241 3330 	movw	r3, #4912	; 0x1330
   13760:	443b      	add	r3, r7
   13762:	ed93 5b00 	vldr	d5, [r3]
   13766:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   1376a:	ed93 7b00 	vldr	d7, [r3]
   1376e:	ee25 5b07 	vmul.f64	d5, d5, d7
   13772:	f241 3310 	movw	r3, #4880	; 0x1310
   13776:	443b      	add	r3, r7
   13778:	ed93 4b00 	vldr	d4, [r3]
   1377c:	f241 3388 	movw	r3, #5000	; 0x1388
   13780:	443b      	add	r3, r7
   13782:	ed93 7b00 	vldr	d7, [r3]
   13786:	ee24 7b07 	vmul.f64	d7, d4, d7
   1378a:	ee35 7b07 	vadd.f64	d7, d5, d7
  t23_re = ((t174.im * 6.123233995736766E-17 + t175.im * 6.123233995736766E-17)
   1378e:	ee36 7b07 	vadd.f64	d7, d6, d7
   13792:	f241 3330 	movw	r3, #4912	; 0x1330
   13796:	443b      	add	r3, r7
   13798:	ed83 7b00 	vstr	d7, [r3]
    t12_re);
  if (t186.im == 0.0) {
   1379c:	f507 63fa 	add.w	r3, r7, #2000	; 0x7d0
   137a0:	ed93 7b02 	vldr	d7, [r3, #8]
   137a4:	eeb5 7b40 	vcmp.f64	d7, #0.0
   137a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   137ac:	d116      	bne.n	137dc <G_q+0xb6ec>
    t12_re = t186.re / 2.0;
   137ae:	f507 63fa 	add.w	r3, r7, #2000	; 0x7d0
   137b2:	ed93 6b00 	vldr	d6, [r3]
   137b6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   137ba:	ee86 7b05 	vdiv.f64	d7, d6, d5
   137be:	f241 3388 	movw	r3, #5000	; 0x1388
   137c2:	443b      	add	r3, r7
   137c4:	ed83 7b00 	vstr	d7, [r3]
    t3_im = 0.0;
   137c8:	f04f 0300 	mov.w	r3, #0
   137cc:	f04f 0400 	mov.w	r4, #0
   137d0:	f241 3210 	movw	r2, #4880	; 0x1310
   137d4:	443a      	add	r2, r7
   137d6:	e9c2 3400 	strd	r3, r4, [r2]
   137da:	e039      	b.n	13850 <G_q+0xb760>
  } else if (t186.re == 0.0) {
   137dc:	f507 63fa 	add.w	r3, r7, #2000	; 0x7d0
   137e0:	ed93 7b00 	vldr	d7, [r3]
   137e4:	eeb5 7b40 	vcmp.f64	d7, #0.0
   137e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   137ec:	d116      	bne.n	1381c <G_q+0xb72c>
    t12_re = 0.0;
   137ee:	f04f 0300 	mov.w	r3, #0
   137f2:	f04f 0400 	mov.w	r4, #0
   137f6:	f241 3288 	movw	r2, #5000	; 0x1388
   137fa:	443a      	add	r2, r7
   137fc:	e9c2 3400 	strd	r3, r4, [r2]
    t3_im = t186.im / 2.0;
   13800:	f507 63fa 	add.w	r3, r7, #2000	; 0x7d0
   13804:	ed93 6b02 	vldr	d6, [r3, #8]
   13808:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1380c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13810:	f241 3310 	movw	r3, #4880	; 0x1310
   13814:	443b      	add	r3, r7
   13816:	ed83 7b00 	vstr	d7, [r3]
   1381a:	e019      	b.n	13850 <G_q+0xb760>
  } else {
    t12_re = t186.re / 2.0;
   1381c:	f507 63fa 	add.w	r3, r7, #2000	; 0x7d0
   13820:	ed93 6b00 	vldr	d6, [r3]
   13824:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13828:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1382c:	f241 3388 	movw	r3, #5000	; 0x1388
   13830:	443b      	add	r3, r7
   13832:	ed83 7b00 	vstr	d7, [r3]
    t3_im = t186.im / 2.0;
   13836:	f507 63fa 	add.w	r3, r7, #2000	; 0x7d0
   1383a:	ed93 6b02 	vldr	d6, [r3, #8]
   1383e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13842:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13846:	f241 3310 	movw	r3, #4880	; 0x1310
   1384a:	443b      	add	r3, r7
   1384c:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t187.im == 0.0) {
   13850:	f507 63fc 	add.w	r3, r7, #2016	; 0x7e0
   13854:	ed93 7b02 	vldr	d7, [r3, #8]
   13858:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1385c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   13860:	d116      	bne.n	13890 <G_q+0xb7a0>
    t34_re = t187.re / 2.0;
   13862:	f507 63fc 	add.w	r3, r7, #2016	; 0x7e0
   13866:	ed93 6b00 	vldr	d6, [r3]
   1386a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1386e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13872:	f241 33b8 	movw	r3, #5048	; 0x13b8
   13876:	443b      	add	r3, r7
   13878:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   1387c:	f04f 0300 	mov.w	r3, #0
   13880:	f04f 0400 	mov.w	r4, #0
   13884:	f241 32b0 	movw	r2, #5040	; 0x13b0
   13888:	443a      	add	r2, r7
   1388a:	e9c2 3400 	strd	r3, r4, [r2]
   1388e:	e049      	b.n	13924 <G_q+0xb834>
  } else if (t187.re == 0.0) {
   13890:	f507 63fc 	add.w	r3, r7, #2016	; 0x7e0
   13894:	ed93 7b00 	vldr	d7, [r3]
   13898:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1389c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   138a0:	d126      	bne.n	138f0 <G_q+0xb800>
    t34_re = 0.0;
   138a2:	f04f 0300 	mov.w	r3, #0
   138a6:	f04f 0400 	mov.w	r4, #0
   138aa:	f241 32b8 	movw	r2, #5048	; 0x13b8
   138ae:	443a      	add	r2, r7
   138b0:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t187.im / 2.0;
   138b4:	f507 63fc 	add.w	r3, r7, #2016	; 0x7e0
   138b8:	ed93 6b02 	vldr	d6, [r3, #8]
   138bc:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   138c0:	ee86 7b05 	vdiv.f64	d7, d6, d5
   138c4:	f241 33b0 	movw	r3, #5040	; 0x13b0
   138c8:	443b      	add	r3, r7
   138ca:	ed83 7b00 	vstr	d7, [r3]
   138ce:	e029      	b.n	13924 <G_q+0xb834>
   138d0:	33145c07 	.word	0x33145c07
   138d4:	3c81a626 	.word	0x3c81a626
   138d8:	33145c07 	.word	0x33145c07
   138dc:	3c91a626 	.word	0x3c91a626
	...
   138e8:	858a5d48 	.word	0x858a5d48
   138ec:	394377ce 	.word	0x394377ce
  } else {
    t34_re = t187.re / 2.0;
   138f0:	f507 63fc 	add.w	r3, r7, #2016	; 0x7e0
   138f4:	ed93 6b00 	vldr	d6, [r3]
   138f8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   138fc:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13900:	f241 33b8 	movw	r3, #5048	; 0x13b8
   13904:	443b      	add	r3, r7
   13906:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t187.im / 2.0;
   1390a:	f507 63fc 	add.w	r3, r7, #2016	; 0x7e0
   1390e:	ed93 6b02 	vldr	d6, [r3, #8]
   13912:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13916:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1391a:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1391e:	443b      	add	r3, r7
   13920:	ed83 7b00 	vstr	d7, [r3]
  }

  t12_re += t34_re;
   13924:	f241 3388 	movw	r3, #5000	; 0x1388
   13928:	443b      	add	r3, r7
   1392a:	ed93 6b00 	vldr	d6, [r3]
   1392e:	f241 33b8 	movw	r3, #5048	; 0x13b8
   13932:	443b      	add	r3, r7
   13934:	ed93 7b00 	vldr	d7, [r3]
   13938:	ee36 7b07 	vadd.f64	d7, d6, d7
   1393c:	f241 3388 	movw	r3, #5000	; 0x1388
   13940:	443b      	add	r3, r7
   13942:	ed83 7b00 	vstr	d7, [r3]
  t3_im += t34_im;
   13946:	f241 3310 	movw	r3, #4880	; 0x1310
   1394a:	443b      	add	r3, r7
   1394c:	ed93 6b00 	vldr	d6, [r3]
   13950:	f241 33b0 	movw	r3, #5040	; 0x13b0
   13954:	443b      	add	r3, r7
   13956:	ed93 7b00 	vldr	d7, [r3]
   1395a:	ee36 7b07 	vadd.f64	d7, d6, d7
   1395e:	f241 3310 	movw	r3, #4880	; 0x1310
   13962:	443b      	add	r3, r7
   13964:	ed83 7b00 	vstr	d7, [r3]
  t13_re = (t188.re * 0.0 - t188.im * 0.5) - (t189.re * 0.0 - t189.im * 0.5);
   13968:	f507 6373 	add.w	r3, r7, #3888	; 0xf30
   1396c:	ed93 7b00 	vldr	d7, [r3]
   13970:	ed1f 6b25 	vldr	d6, [pc, #-148]	; 138e0 <G_q+0xb7f0>
   13974:	ee27 6b06 	vmul.f64	d6, d7, d6
   13978:	f507 6373 	add.w	r3, r7, #3888	; 0xf30
   1397c:	ed93 7b02 	vldr	d7, [r3, #8]
   13980:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   13984:	ee27 7b05 	vmul.f64	d7, d7, d5
   13988:	ee36 6b47 	vsub.f64	d6, d6, d7
   1398c:	f507 6374 	add.w	r3, r7, #3904	; 0xf40
   13990:	ed93 7b00 	vldr	d7, [r3]
   13994:	ed1f 5b2e 	vldr	d5, [pc, #-184]	; 138e0 <G_q+0xb7f0>
   13998:	ee27 5b05 	vmul.f64	d5, d7, d5
   1399c:	f507 6374 	add.w	r3, r7, #3904	; 0xf40
   139a0:	ed93 7b02 	vldr	d7, [r3, #8]
   139a4:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   139a8:	ee27 7b04 	vmul.f64	d7, d7, d4
   139ac:	ee35 7b47 	vsub.f64	d7, d5, d7
   139b0:	ee36 7b47 	vsub.f64	d7, d6, d7
   139b4:	f241 3378 	movw	r3, #4984	; 0x1378
   139b8:	443b      	add	r3, r7
   139ba:	ed83 7b00 	vstr	d7, [r3]
  t13_im = (t188.re * 0.5 + t188.im * 0.0) - (t189.re * 0.5 + t189.im * 0.0);
   139be:	f507 6373 	add.w	r3, r7, #3888	; 0xf30
   139c2:	ed93 7b00 	vldr	d7, [r3]
   139c6:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   139ca:	ee27 6b06 	vmul.f64	d6, d7, d6
   139ce:	f507 6373 	add.w	r3, r7, #3888	; 0xf30
   139d2:	ed93 7b02 	vldr	d7, [r3, #8]
   139d6:	ed1f 5b3e 	vldr	d5, [pc, #-248]	; 138e0 <G_q+0xb7f0>
   139da:	ee27 7b05 	vmul.f64	d7, d7, d5
   139de:	ee36 6b07 	vadd.f64	d6, d6, d7
   139e2:	f507 6374 	add.w	r3, r7, #3904	; 0xf40
   139e6:	ed93 7b00 	vldr	d7, [r3]
   139ea:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   139ee:	ee27 5b05 	vmul.f64	d5, d7, d5
   139f2:	f507 6374 	add.w	r3, r7, #3904	; 0xf40
   139f6:	ed93 7b02 	vldr	d7, [r3, #8]
   139fa:	ed1f 4b47 	vldr	d4, [pc, #-284]	; 138e0 <G_q+0xb7f0>
   139fe:	ee27 7b04 	vmul.f64	d7, d7, d4
   13a02:	ee35 7b07 	vadd.f64	d7, d5, d7
   13a06:	ee36 7b47 	vsub.f64	d7, d6, d7
   13a0a:	f241 3370 	movw	r3, #4976	; 0x1370
   13a0e:	443b      	add	r3, r7
   13a10:	ed83 7b00 	vstr	d7, [r3]
  if (t192.im == 0.0) {
   13a14:	f507 6375 	add.w	r3, r7, #3920	; 0xf50
   13a18:	ed93 7b02 	vldr	d7, [r3, #8]
   13a1c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   13a20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   13a24:	d115      	bne.n	13a52 <G_q+0xb962>
    t16_re = t192.re / 2.0;
   13a26:	f507 6375 	add.w	r3, r7, #3920	; 0xf50
   13a2a:	ed93 6b00 	vldr	d6, [r3]
   13a2e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13a32:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13a36:	f241 3368 	movw	r3, #4968	; 0x1368
   13a3a:	443b      	add	r3, r7
   13a3c:	ed83 7b00 	vstr	d7, [r3]
    t16_im = 0.0;
   13a40:	f04f 0300 	mov.w	r3, #0
   13a44:	f04f 0400 	mov.w	r4, #0
   13a48:	f507 529b 	add.w	r2, r7, #4960	; 0x1360
   13a4c:	e9c2 3400 	strd	r3, r4, [r2]
   13a50:	e037      	b.n	13ac2 <G_q+0xb9d2>
  } else if (t192.re == 0.0) {
   13a52:	f507 6375 	add.w	r3, r7, #3920	; 0xf50
   13a56:	ed93 7b00 	vldr	d7, [r3]
   13a5a:	eeb5 7b40 	vcmp.f64	d7, #0.0
   13a5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   13a62:	d115      	bne.n	13a90 <G_q+0xb9a0>
    t16_re = 0.0;
   13a64:	f04f 0300 	mov.w	r3, #0
   13a68:	f04f 0400 	mov.w	r4, #0
   13a6c:	f241 3268 	movw	r2, #4968	; 0x1368
   13a70:	443a      	add	r2, r7
   13a72:	e9c2 3400 	strd	r3, r4, [r2]
    t16_im = t192.im / 2.0;
   13a76:	f507 6375 	add.w	r3, r7, #3920	; 0xf50
   13a7a:	ed93 6b02 	vldr	d6, [r3, #8]
   13a7e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13a82:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13a86:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   13a8a:	ed83 7b00 	vstr	d7, [r3]
   13a8e:	e018      	b.n	13ac2 <G_q+0xb9d2>
  } else {
    t16_re = t192.re / 2.0;
   13a90:	f507 6375 	add.w	r3, r7, #3920	; 0xf50
   13a94:	ed93 6b00 	vldr	d6, [r3]
   13a98:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13a9c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13aa0:	f241 3368 	movw	r3, #4968	; 0x1368
   13aa4:	443b      	add	r3, r7
   13aa6:	ed83 7b00 	vstr	d7, [r3]
    t16_im = t192.im / 2.0;
   13aaa:	f507 6375 	add.w	r3, r7, #3920	; 0xf50
   13aae:	ed93 6b02 	vldr	d6, [r3, #8]
   13ab2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13ab6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13aba:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   13abe:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t193.im == 0.0) {
   13ac2:	f507 6376 	add.w	r3, r7, #3936	; 0xf60
   13ac6:	ed93 7b02 	vldr	d7, [r3, #8]
   13aca:	eeb5 7b40 	vcmp.f64	d7, #0.0
   13ace:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   13ad2:	d116      	bne.n	13b02 <G_q+0xba12>
    t34_re = t193.re / 2.0;
   13ad4:	f507 6376 	add.w	r3, r7, #3936	; 0xf60
   13ad8:	ed93 6b00 	vldr	d6, [r3]
   13adc:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13ae0:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13ae4:	f241 33b8 	movw	r3, #5048	; 0x13b8
   13ae8:	443b      	add	r3, r7
   13aea:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   13aee:	f04f 0300 	mov.w	r3, #0
   13af2:	f04f 0400 	mov.w	r4, #0
   13af6:	f241 32b0 	movw	r2, #5040	; 0x13b0
   13afa:	443a      	add	r2, r7
   13afc:	e9c2 3400 	strd	r3, r4, [r2]
   13b00:	e039      	b.n	13b76 <G_q+0xba86>
  } else if (t193.re == 0.0) {
   13b02:	f507 6376 	add.w	r3, r7, #3936	; 0xf60
   13b06:	ed93 7b00 	vldr	d7, [r3]
   13b0a:	eeb5 7b40 	vcmp.f64	d7, #0.0
   13b0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   13b12:	d116      	bne.n	13b42 <G_q+0xba52>
    t34_re = 0.0;
   13b14:	f04f 0300 	mov.w	r3, #0
   13b18:	f04f 0400 	mov.w	r4, #0
   13b1c:	f241 32b8 	movw	r2, #5048	; 0x13b8
   13b20:	443a      	add	r2, r7
   13b22:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t193.im / 2.0;
   13b26:	f507 6376 	add.w	r3, r7, #3936	; 0xf60
   13b2a:	ed93 6b02 	vldr	d6, [r3, #8]
   13b2e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13b32:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13b36:	f241 33b0 	movw	r3, #5040	; 0x13b0
   13b3a:	443b      	add	r3, r7
   13b3c:	ed83 7b00 	vstr	d7, [r3]
   13b40:	e019      	b.n	13b76 <G_q+0xba86>
  } else {
    t34_re = t193.re / 2.0;
   13b42:	f507 6376 	add.w	r3, r7, #3936	; 0xf60
   13b46:	ed93 6b00 	vldr	d6, [r3]
   13b4a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13b4e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13b52:	f241 33b8 	movw	r3, #5048	; 0x13b8
   13b56:	443b      	add	r3, r7
   13b58:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t193.im / 2.0;
   13b5c:	f507 6376 	add.w	r3, r7, #3936	; 0xf60
   13b60:	ed93 6b02 	vldr	d6, [r3, #8]
   13b64:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   13b68:	ee86 7b05 	vdiv.f64	d7, d6, d5
   13b6c:	f241 33b0 	movw	r3, #5040	; 0x13b0
   13b70:	443b      	add	r3, r7
   13b72:	ed83 7b00 	vstr	d7, [r3]
  }

  t20_re = (t190.re * 0.0 - t190.im * 0.5) - (t191.re * 0.0 - t191.im * 0.5);
   13b76:	f507 63fe 	add.w	r3, r7, #2032	; 0x7f0
   13b7a:	ed93 7b00 	vldr	d7, [r3]
   13b7e:	ed1f 6ba8 	vldr	d6, [pc, #-672]	; 138e0 <G_q+0xb7f0>
   13b82:	ee27 6b06 	vmul.f64	d6, d7, d6
   13b86:	f507 63fe 	add.w	r3, r7, #2032	; 0x7f0
   13b8a:	ed93 7b02 	vldr	d7, [r3, #8]
   13b8e:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   13b92:	ee27 7b05 	vmul.f64	d7, d7, d5
   13b96:	ee36 6b47 	vsub.f64	d6, d6, d7
   13b9a:	f507 6300 	add.w	r3, r7, #2048	; 0x800
   13b9e:	ed93 7b00 	vldr	d7, [r3]
   13ba2:	ed1f 5bb1 	vldr	d5, [pc, #-708]	; 138e0 <G_q+0xb7f0>
   13ba6:	ee27 5b05 	vmul.f64	d5, d7, d5
   13baa:	f507 6300 	add.w	r3, r7, #2048	; 0x800
   13bae:	ed93 7b02 	vldr	d7, [r3, #8]
   13bb2:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   13bb6:	ee27 7b04 	vmul.f64	d7, d7, d4
   13bba:	ee35 7b47 	vsub.f64	d7, d5, d7
   13bbe:	ee36 7b47 	vsub.f64	d7, d6, d7
   13bc2:	f241 3348 	movw	r3, #4936	; 0x1348
   13bc6:	443b      	add	r3, r7
   13bc8:	ed83 7b00 	vstr	d7, [r3]
  t20_im = (t190.re * 0.5 + t190.im * 0.0) - (t191.re * 0.5 + t191.im * 0.0);
   13bcc:	f507 63fe 	add.w	r3, r7, #2032	; 0x7f0
   13bd0:	ed93 7b00 	vldr	d7, [r3]
   13bd4:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   13bd8:	ee27 6b06 	vmul.f64	d6, d7, d6
   13bdc:	f507 63fe 	add.w	r3, r7, #2032	; 0x7f0
   13be0:	ed93 7b02 	vldr	d7, [r3, #8]
   13be4:	ed1f 5bc2 	vldr	d5, [pc, #-776]	; 138e0 <G_q+0xb7f0>
   13be8:	ee27 7b05 	vmul.f64	d7, d7, d5
   13bec:	ee36 6b07 	vadd.f64	d6, d6, d7
   13bf0:	f507 6300 	add.w	r3, r7, #2048	; 0x800
   13bf4:	ed93 7b00 	vldr	d7, [r3]
   13bf8:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   13bfc:	ee27 5b05 	vmul.f64	d5, d7, d5
   13c00:	f507 6300 	add.w	r3, r7, #2048	; 0x800
   13c04:	ed93 7b02 	vldr	d7, [r3, #8]
   13c08:	ed1f 4bcb 	vldr	d4, [pc, #-812]	; 138e0 <G_q+0xb7f0>
   13c0c:	ee27 7b04 	vmul.f64	d7, d7, d4
   13c10:	ee35 7b07 	vadd.f64	d7, d5, d7
   13c14:	ee36 7b47 	vsub.f64	d7, d6, d7
   13c18:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   13c1c:	ed83 7b00 	vstr	d7, [r3]
  t16_re = (t16_re + t34_re) + 7.498798913309288E-33;
   13c20:	f241 3368 	movw	r3, #4968	; 0x1368
   13c24:	443b      	add	r3, r7
   13c26:	ed93 6b00 	vldr	d6, [r3]
   13c2a:	f241 33b8 	movw	r3, #5048	; 0x13b8
   13c2e:	443b      	add	r3, r7
   13c30:	ed93 7b00 	vldr	d7, [r3]
   13c34:	ee36 7b07 	vadd.f64	d7, d6, d7
   13c38:	ed1f 6bd5 	vldr	d6, [pc, #-852]	; 138e8 <G_q+0xb7f8>
   13c3c:	ee37 7b06 	vadd.f64	d7, d7, d6
   13c40:	f241 3368 	movw	r3, #4968	; 0x1368
   13c44:	443b      	add	r3, r7
   13c46:	ed83 7b00 	vstr	d7, [r3]
  t16_im += t34_im;
   13c4a:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   13c4e:	ed93 6b00 	vldr	d6, [r3]
   13c52:	f241 33b0 	movw	r3, #5040	; 0x13b0
   13c56:	443b      	add	r3, r7
   13c58:	ed93 7b00 	vldr	d7, [r3]
   13c5c:	ee36 7b07 	vadd.f64	d7, d6, d7
   13c60:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   13c64:	ed83 7b00 	vstr	d7, [r3]
  t12_im = (t12_re * t13_re - t3_im * t13_im) - (t20_re * t16_re - t20_im *
   13c68:	f241 3388 	movw	r3, #5000	; 0x1388
   13c6c:	443b      	add	r3, r7
   13c6e:	ed93 6b00 	vldr	d6, [r3]
   13c72:	f241 3378 	movw	r3, #4984	; 0x1378
   13c76:	443b      	add	r3, r7
   13c78:	ed93 7b00 	vldr	d7, [r3]
   13c7c:	ee26 6b07 	vmul.f64	d6, d6, d7
   13c80:	f241 3310 	movw	r3, #4880	; 0x1310
   13c84:	443b      	add	r3, r7
   13c86:	ed93 5b00 	vldr	d5, [r3]
   13c8a:	f241 3370 	movw	r3, #4976	; 0x1370
   13c8e:	443b      	add	r3, r7
   13c90:	ed93 7b00 	vldr	d7, [r3]
   13c94:	ee25 7b07 	vmul.f64	d7, d5, d7
   13c98:	ee36 6b47 	vsub.f64	d6, d6, d7
   13c9c:	f241 3348 	movw	r3, #4936	; 0x1348
   13ca0:	443b      	add	r3, r7
   13ca2:	ed93 5b00 	vldr	d5, [r3]
   13ca6:	f241 3368 	movw	r3, #4968	; 0x1368
   13caa:	443b      	add	r3, r7
   13cac:	ed93 7b00 	vldr	d7, [r3]
   13cb0:	ee25 5b07 	vmul.f64	d5, d5, d7
   13cb4:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   13cb8:	ed93 4b00 	vldr	d4, [r3]
   13cbc:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   13cc0:	ed93 7b00 	vldr	d7, [r3]
   13cc4:	ee24 7b07 	vmul.f64	d7, d4, d7
   13cc8:	ee35 7b47 	vsub.f64	d7, d5, d7
   13ccc:	ee36 7b47 	vsub.f64	d7, d6, d7
   13cd0:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   13cd4:	ed83 7b00 	vstr	d7, [r3]
    t16_im);
  t3_im = (t12_re * t13_im + t3_im * t13_re) - (t20_re * t16_im + t20_im *
   13cd8:	f241 3388 	movw	r3, #5000	; 0x1388
   13cdc:	443b      	add	r3, r7
   13cde:	ed93 6b00 	vldr	d6, [r3]
   13ce2:	f241 3370 	movw	r3, #4976	; 0x1370
   13ce6:	443b      	add	r3, r7
   13ce8:	ed93 7b00 	vldr	d7, [r3]
   13cec:	ee26 6b07 	vmul.f64	d6, d6, d7
   13cf0:	f241 3310 	movw	r3, #4880	; 0x1310
   13cf4:	443b      	add	r3, r7
   13cf6:	ed93 5b00 	vldr	d5, [r3]
   13cfa:	f241 3378 	movw	r3, #4984	; 0x1378
   13cfe:	443b      	add	r3, r7
   13d00:	ed93 7b00 	vldr	d7, [r3]
   13d04:	ee25 7b07 	vmul.f64	d7, d5, d7
   13d08:	ee36 6b07 	vadd.f64	d6, d6, d7
   13d0c:	f241 3348 	movw	r3, #4936	; 0x1348
   13d10:	443b      	add	r3, r7
   13d12:	ed93 5b00 	vldr	d5, [r3]
   13d16:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   13d1a:	ed93 7b00 	vldr	d7, [r3]
   13d1e:	ee25 5b07 	vmul.f64	d5, d5, d7
   13d22:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   13d26:	ed93 4b00 	vldr	d4, [r3]
   13d2a:	f241 3368 	movw	r3, #4968	; 0x1368
   13d2e:	443b      	add	r3, r7
   13d30:	ed93 7b00 	vldr	d7, [r3]
   13d34:	ee24 7b07 	vmul.f64	d7, d4, d7
   13d38:	ee35 7b07 	vadd.f64	d7, d5, d7
   13d3c:	ee36 7b47 	vsub.f64	d7, d6, d7
   13d40:	f241 3310 	movw	r3, #4880	; 0x1310
   13d44:	443b      	add	r3, r7
   13d46:	ed83 7b00 	vstr	d7, [r3]
    t16_re);
  t34_re = (t184.re * 0.0 - t184.im * 0.5) - (t185.re * 0.0 - t185.im * 0.5);
   13d4a:	f507 7324 	add.w	r3, r7, #656	; 0x290
   13d4e:	ed93 7b00 	vldr	d7, [r3]
   13d52:	ed9f 6bed 	vldr	d6, [pc, #948]	; 14108 <G_q+0xc018>
   13d56:	ee27 6b06 	vmul.f64	d6, d7, d6
   13d5a:	f507 7324 	add.w	r3, r7, #656	; 0x290
   13d5e:	ed93 7b02 	vldr	d7, [r3, #8]
   13d62:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   13d66:	ee27 7b05 	vmul.f64	d7, d7, d5
   13d6a:	ee36 6b47 	vsub.f64	d6, d6, d7
   13d6e:	4bea      	ldr	r3, [pc, #936]	; (14118 <G_q+0xc028>)
   13d70:	f241 32d0 	movw	r2, #5072	; 0x13d0
   13d74:	443a      	add	r2, r7
   13d76:	4413      	add	r3, r2
   13d78:	ed93 7b00 	vldr	d7, [r3]
   13d7c:	ed9f 5be2 	vldr	d5, [pc, #904]	; 14108 <G_q+0xc018>
   13d80:	ee27 5b05 	vmul.f64	d5, d7, d5
   13d84:	4be4      	ldr	r3, [pc, #912]	; (14118 <G_q+0xc028>)
   13d86:	f241 32d0 	movw	r2, #5072	; 0x13d0
   13d8a:	443a      	add	r2, r7
   13d8c:	4413      	add	r3, r2
   13d8e:	ed93 7b02 	vldr	d7, [r3, #8]
   13d92:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   13d96:	ee27 7b04 	vmul.f64	d7, d7, d4
   13d9a:	ee35 7b47 	vsub.f64	d7, d5, d7
   13d9e:	ee36 7b47 	vsub.f64	d7, d6, d7
   13da2:	f241 33b8 	movw	r3, #5048	; 0x13b8
   13da6:	443b      	add	r3, r7
   13da8:	ed83 7b00 	vstr	d7, [r3]
  t34_im = (t184.re * 0.5 + t184.im * 0.0) - (t185.re * 0.5 + t185.im * 0.0);
   13dac:	f507 7324 	add.w	r3, r7, #656	; 0x290
   13db0:	ed93 7b00 	vldr	d7, [r3]
   13db4:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   13db8:	ee27 6b06 	vmul.f64	d6, d7, d6
   13dbc:	f507 7324 	add.w	r3, r7, #656	; 0x290
   13dc0:	ed93 7b02 	vldr	d7, [r3, #8]
   13dc4:	ed9f 5bd0 	vldr	d5, [pc, #832]	; 14108 <G_q+0xc018>
   13dc8:	ee27 7b05 	vmul.f64	d7, d7, d5
   13dcc:	ee36 6b07 	vadd.f64	d6, d6, d7
   13dd0:	4bd1      	ldr	r3, [pc, #836]	; (14118 <G_q+0xc028>)
   13dd2:	f241 32d0 	movw	r2, #5072	; 0x13d0
   13dd6:	443a      	add	r2, r7
   13dd8:	4413      	add	r3, r2
   13dda:	ed93 7b00 	vldr	d7, [r3]
   13dde:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   13de2:	ee27 5b05 	vmul.f64	d5, d7, d5
   13de6:	4bcc      	ldr	r3, [pc, #816]	; (14118 <G_q+0xc028>)
   13de8:	f241 32d0 	movw	r2, #5072	; 0x13d0
   13dec:	443a      	add	r2, r7
   13dee:	4413      	add	r3, r2
   13df0:	ed93 7b02 	vldr	d7, [r3, #8]
   13df4:	ed9f 4bc4 	vldr	d4, [pc, #784]	; 14108 <G_q+0xc018>
   13df8:	ee27 7b04 	vmul.f64	d7, d7, d4
   13dfc:	ee35 7b07 	vadd.f64	d7, d5, d7
   13e00:	ee36 7b47 	vsub.f64	d7, d6, d7
   13e04:	f241 33b0 	movw	r3, #5040	; 0x13b0
   13e08:	443b      	add	r3, r7
   13e0a:	ed83 7b00 	vstr	d7, [r3]
  b_t54_im = (t194.re * 0.0 - t194.im * 0.5) - (t195.re * 0.0 - t195.im * 0.5);
   13e0e:	f107 0390 	add.w	r3, r7, #144	; 0x90
   13e12:	ed93 7b00 	vldr	d7, [r3]
   13e16:	ed9f 6bbc 	vldr	d6, [pc, #752]	; 14108 <G_q+0xc018>
   13e1a:	ee27 6b06 	vmul.f64	d6, d7, d6
   13e1e:	f107 0390 	add.w	r3, r7, #144	; 0x90
   13e22:	ed93 7b02 	vldr	d7, [r3, #8]
   13e26:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   13e2a:	ee27 7b05 	vmul.f64	d7, d7, d5
   13e2e:	ee36 6b47 	vsub.f64	d6, d6, d7
   13e32:	4bba      	ldr	r3, [pc, #744]	; (1411c <G_q+0xc02c>)
   13e34:	f241 32d0 	movw	r2, #5072	; 0x13d0
   13e38:	443a      	add	r2, r7
   13e3a:	4413      	add	r3, r2
   13e3c:	ed93 7b00 	vldr	d7, [r3]
   13e40:	ed9f 5bb1 	vldr	d5, [pc, #708]	; 14108 <G_q+0xc018>
   13e44:	ee27 5b05 	vmul.f64	d5, d7, d5
   13e48:	4bb4      	ldr	r3, [pc, #720]	; (1411c <G_q+0xc02c>)
   13e4a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   13e4e:	443a      	add	r2, r7
   13e50:	4413      	add	r3, r2
   13e52:	ed93 7b02 	vldr	d7, [r3, #8]
   13e56:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   13e5a:	ee27 7b04 	vmul.f64	d7, d7, d4
   13e5e:	ee35 7b47 	vsub.f64	d7, d5, d7
   13e62:	ee36 7b47 	vsub.f64	d7, d6, d7
   13e66:	f241 23e8 	movw	r3, #4840	; 0x12e8
   13e6a:	443b      	add	r3, r7
   13e6c:	ed83 7b00 	vstr	d7, [r3]
  t43_re = (t194.re * 0.5 + t194.im * 0.0) - (t195.re * 0.5 + t195.im * 0.0);
   13e70:	f107 0390 	add.w	r3, r7, #144	; 0x90
   13e74:	ed93 7b00 	vldr	d7, [r3]
   13e78:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   13e7c:	ee27 6b06 	vmul.f64	d6, d7, d6
   13e80:	f107 0390 	add.w	r3, r7, #144	; 0x90
   13e84:	ed93 7b02 	vldr	d7, [r3, #8]
   13e88:	ed9f 5b9f 	vldr	d5, [pc, #636]	; 14108 <G_q+0xc018>
   13e8c:	ee27 7b05 	vmul.f64	d7, d7, d5
   13e90:	ee36 6b07 	vadd.f64	d6, d6, d7
   13e94:	4ba1      	ldr	r3, [pc, #644]	; (1411c <G_q+0xc02c>)
   13e96:	f241 32d0 	movw	r2, #5072	; 0x13d0
   13e9a:	443a      	add	r2, r7
   13e9c:	4413      	add	r3, r2
   13e9e:	ed93 7b00 	vldr	d7, [r3]
   13ea2:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   13ea6:	ee27 5b05 	vmul.f64	d5, d7, d5
   13eaa:	4b9c      	ldr	r3, [pc, #624]	; (1411c <G_q+0xc02c>)
   13eac:	f241 32d0 	movw	r2, #5072	; 0x13d0
   13eb0:	443a      	add	r2, r7
   13eb2:	4413      	add	r3, r2
   13eb4:	ed93 7b02 	vldr	d7, [r3, #8]
   13eb8:	ed9f 4b93 	vldr	d4, [pc, #588]	; 14108 <G_q+0xc018>
   13ebc:	ee27 7b04 	vmul.f64	d7, d7, d4
   13ec0:	ee35 7b07 	vadd.f64	d7, d5, d7
   13ec4:	f241 2358 	movw	r3, #4696	; 0x1258
   13ec8:	443b      	add	r3, r7
   13eca:	ee36 7b47 	vsub.f64	d7, d6, d7
   13ece:	ed83 7b00 	vstr	d7, [r3]
  t41_re = (t85_im * b_t10_re - t41_im * t23_re) + (t12_im * t34_re - t3_im *
   13ed2:	f241 3318 	movw	r3, #4888	; 0x1318
   13ed6:	443b      	add	r3, r7
   13ed8:	ed93 6b00 	vldr	d6, [r3]
   13edc:	f241 3338 	movw	r3, #4920	; 0x1338
   13ee0:	443b      	add	r3, r7
   13ee2:	ed93 7b00 	vldr	d7, [r3]
   13ee6:	ee26 6b07 	vmul.f64	d6, d6, d7
   13eea:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
   13eee:	ed93 5b00 	vldr	d5, [r3]
   13ef2:	f241 3330 	movw	r3, #4912	; 0x1330
   13ef6:	443b      	add	r3, r7
   13ef8:	ed93 7b00 	vldr	d7, [r3]
   13efc:	ee25 7b07 	vmul.f64	d7, d5, d7
   13f00:	ee36 6b47 	vsub.f64	d6, d6, d7
   13f04:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   13f08:	ed93 5b00 	vldr	d5, [r3]
   13f0c:	f241 33b8 	movw	r3, #5048	; 0x13b8
   13f10:	443b      	add	r3, r7
   13f12:	ed93 7b00 	vldr	d7, [r3]
   13f16:	ee25 5b07 	vmul.f64	d5, d5, d7
   13f1a:	f241 3310 	movw	r3, #4880	; 0x1310
   13f1e:	443b      	add	r3, r7
   13f20:	ed93 4b00 	vldr	d4, [r3]
   13f24:	f241 33b0 	movw	r3, #5040	; 0x13b0
   13f28:	443b      	add	r3, r7
   13f2a:	ed93 7b00 	vldr	d7, [r3]
   13f2e:	ee24 7b07 	vmul.f64	d7, d4, d7
   13f32:	ee35 7b47 	vsub.f64	d7, d5, d7
   13f36:	ee36 7b07 	vadd.f64	d7, d6, d7
   13f3a:	f241 3308 	movw	r3, #4872	; 0x1308
   13f3e:	443b      	add	r3, r7
   13f40:	ed83 7b00 	vstr	d7, [r3]
    t34_im);
  t41_im = (t85_im * t23_re + t41_im * b_t10_re) + (t12_im * t34_im + t3_im *
   13f44:	f241 3318 	movw	r3, #4888	; 0x1318
   13f48:	443b      	add	r3, r7
   13f4a:	ed93 6b00 	vldr	d6, [r3]
   13f4e:	f241 3330 	movw	r3, #4912	; 0x1330
   13f52:	443b      	add	r3, r7
   13f54:	ed93 7b00 	vldr	d7, [r3]
   13f58:	ee26 6b07 	vmul.f64	d6, d6, d7
   13f5c:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
   13f60:	ed93 5b00 	vldr	d5, [r3]
   13f64:	f241 3338 	movw	r3, #4920	; 0x1338
   13f68:	443b      	add	r3, r7
   13f6a:	ed93 7b00 	vldr	d7, [r3]
   13f6e:	ee25 7b07 	vmul.f64	d7, d5, d7
   13f72:	ee36 6b07 	vadd.f64	d6, d6, d7
   13f76:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   13f7a:	ed93 5b00 	vldr	d5, [r3]
   13f7e:	f241 33b0 	movw	r3, #5040	; 0x13b0
   13f82:	443b      	add	r3, r7
   13f84:	ed93 7b00 	vldr	d7, [r3]
   13f88:	ee25 5b07 	vmul.f64	d5, d5, d7
   13f8c:	f241 3310 	movw	r3, #4880	; 0x1310
   13f90:	443b      	add	r3, r7
   13f92:	ed93 4b00 	vldr	d4, [r3]
   13f96:	f241 33b8 	movw	r3, #5048	; 0x13b8
   13f9a:	443b      	add	r3, r7
   13f9c:	ed93 7b00 	vldr	d7, [r3]
   13fa0:	ee24 7b07 	vmul.f64	d7, d4, d7
   13fa4:	ee35 7b07 	vadd.f64	d7, d5, d7
   13fa8:	ee36 7b07 	vadd.f64	d7, d6, d7
   13fac:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
   13fb0:	ed83 7b00 	vstr	d7, [r3]
    t34_re);
  t16_re = (t206.re * 0.0 - t206.im * 3.061616997868383E-17) - (t207.re * 0.0 -
   13fb4:	f507 6303 	add.w	r3, r7, #2096	; 0x830
   13fb8:	ed93 7b00 	vldr	d7, [r3]
   13fbc:	ed9f 6b52 	vldr	d6, [pc, #328]	; 14108 <G_q+0xc018>
   13fc0:	ee27 6b06 	vmul.f64	d6, d7, d6
   13fc4:	f507 6303 	add.w	r3, r7, #2096	; 0x830
   13fc8:	ed93 7b02 	vldr	d7, [r3, #8]
   13fcc:	ed9f 5b50 	vldr	d5, [pc, #320]	; 14110 <G_q+0xc020>
   13fd0:	ee27 7b05 	vmul.f64	d7, d7, d5
   13fd4:	ee36 6b47 	vsub.f64	d6, d6, d7
   13fd8:	f507 6304 	add.w	r3, r7, #2112	; 0x840
   13fdc:	ed93 7b00 	vldr	d7, [r3]
   13fe0:	ed9f 5b49 	vldr	d5, [pc, #292]	; 14108 <G_q+0xc018>
   13fe4:	ee27 5b05 	vmul.f64	d5, d7, d5
    t207.im * 3.061616997868383E-17);
   13fe8:	f507 6304 	add.w	r3, r7, #2112	; 0x840
   13fec:	ed93 7b02 	vldr	d7, [r3, #8]
   13ff0:	ed9f 4b47 	vldr	d4, [pc, #284]	; 14110 <G_q+0xc020>
   13ff4:	ee27 7b04 	vmul.f64	d7, d7, d4
  t16_re = (t206.re * 0.0 - t206.im * 3.061616997868383E-17) - (t207.re * 0.0 -
   13ff8:	ee35 7b47 	vsub.f64	d7, d5, d7
   13ffc:	ee36 7b47 	vsub.f64	d7, d6, d7
   14000:	f241 3368 	movw	r3, #4968	; 0x1368
   14004:	443b      	add	r3, r7
   14006:	ed83 7b00 	vstr	d7, [r3]
  t16_im = (t206.re * 3.061616997868383E-17 + t206.im * 0.0) - (t207.re *
   1400a:	f507 6303 	add.w	r3, r7, #2096	; 0x830
   1400e:	ed93 7b00 	vldr	d7, [r3]
   14012:	ed9f 6b3f 	vldr	d6, [pc, #252]	; 14110 <G_q+0xc020>
   14016:	ee27 6b06 	vmul.f64	d6, d7, d6
   1401a:	f507 6303 	add.w	r3, r7, #2096	; 0x830
   1401e:	ed93 7b02 	vldr	d7, [r3, #8]
   14022:	ed9f 5b39 	vldr	d5, [pc, #228]	; 14108 <G_q+0xc018>
   14026:	ee27 7b05 	vmul.f64	d7, d7, d5
   1402a:	ee36 6b07 	vadd.f64	d6, d6, d7
   1402e:	f507 6304 	add.w	r3, r7, #2112	; 0x840
   14032:	ed93 7b00 	vldr	d7, [r3]
   14036:	ed9f 5b36 	vldr	d5, [pc, #216]	; 14110 <G_q+0xc020>
   1403a:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t207.im * 0.0);
   1403e:	f507 6304 	add.w	r3, r7, #2112	; 0x840
   14042:	ed93 7b02 	vldr	d7, [r3, #8]
   14046:	ed9f 4b30 	vldr	d4, [pc, #192]	; 14108 <G_q+0xc018>
   1404a:	ee27 7b04 	vmul.f64	d7, d7, d4
   1404e:	ee35 7b07 	vadd.f64	d7, d5, d7
  t16_im = (t206.re * 3.061616997868383E-17 + t206.im * 0.0) - (t207.re *
   14052:	ee36 7b47 	vsub.f64	d7, d6, d7
   14056:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   1405a:	ed83 7b00 	vstr	d7, [r3]
  t20_re = (t204.re * 0.0 - t204.im * 0.5) - (t205.re * 0.0 - t205.im * 0.5);
   1405e:	f507 637b 	add.w	r3, r7, #4016	; 0xfb0
   14062:	ed93 7b00 	vldr	d7, [r3]
   14066:	ed9f 6b28 	vldr	d6, [pc, #160]	; 14108 <G_q+0xc018>
   1406a:	ee27 6b06 	vmul.f64	d6, d7, d6
   1406e:	f507 637b 	add.w	r3, r7, #4016	; 0xfb0
   14072:	ed93 7b02 	vldr	d7, [r3, #8]
   14076:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   1407a:	ee27 7b05 	vmul.f64	d7, d7, d5
   1407e:	ee36 6b47 	vsub.f64	d6, d6, d7
   14082:	f507 637c 	add.w	r3, r7, #4032	; 0xfc0
   14086:	ed93 7b00 	vldr	d7, [r3]
   1408a:	ed9f 5b1f 	vldr	d5, [pc, #124]	; 14108 <G_q+0xc018>
   1408e:	ee27 5b05 	vmul.f64	d5, d7, d5
   14092:	f507 637c 	add.w	r3, r7, #4032	; 0xfc0
   14096:	ed93 7b02 	vldr	d7, [r3, #8]
   1409a:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   1409e:	ee27 7b04 	vmul.f64	d7, d7, d4
   140a2:	ee35 7b47 	vsub.f64	d7, d5, d7
   140a6:	ee36 7b47 	vsub.f64	d7, d6, d7
   140aa:	f241 3348 	movw	r3, #4936	; 0x1348
   140ae:	443b      	add	r3, r7
   140b0:	ed83 7b00 	vstr	d7, [r3]
  t20_im = (t204.re * 0.5 + t204.im * 0.0) - (t205.re * 0.5 + t205.im * 0.0);
   140b4:	f507 637b 	add.w	r3, r7, #4016	; 0xfb0
   140b8:	ed93 7b00 	vldr	d7, [r3]
   140bc:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   140c0:	ee27 6b06 	vmul.f64	d6, d7, d6
   140c4:	f507 637b 	add.w	r3, r7, #4016	; 0xfb0
   140c8:	ed93 7b02 	vldr	d7, [r3, #8]
   140cc:	ed9f 5b0e 	vldr	d5, [pc, #56]	; 14108 <G_q+0xc018>
   140d0:	ee27 7b05 	vmul.f64	d7, d7, d5
   140d4:	ee36 6b07 	vadd.f64	d6, d6, d7
   140d8:	f507 637c 	add.w	r3, r7, #4032	; 0xfc0
   140dc:	ed93 7b00 	vldr	d7, [r3]
   140e0:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   140e4:	ee27 5b05 	vmul.f64	d5, d7, d5
   140e8:	f507 637c 	add.w	r3, r7, #4032	; 0xfc0
   140ec:	ed93 7b02 	vldr	d7, [r3, #8]
   140f0:	ed9f 4b05 	vldr	d4, [pc, #20]	; 14108 <G_q+0xc018>
   140f4:	ee27 7b04 	vmul.f64	d7, d7, d4
   140f8:	ee35 7b07 	vadd.f64	d7, d5, d7
   140fc:	ee36 7b47 	vsub.f64	d7, d6, d7
   14100:	e00e      	b.n	14120 <G_q+0xc030>
   14102:	bf00      	nop
   14104:	f3af 8000 	nop.w
	...
   14110:	33145c07 	.word	0x33145c07
   14114:	3c81a626 	.word	0x3c81a626
   14118:	ffffeed0 	.word	0xffffeed0
   1411c:	ffffecd0 	.word	0xffffecd0
   14120:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   14124:	ed83 7b00 	vstr	d7, [r3]
  if (t202.im == 0.0) {
   14128:	f507 6379 	add.w	r3, r7, #3984	; 0xf90
   1412c:	ed93 7b02 	vldr	d7, [r3, #8]
   14130:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14134:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   14138:	d115      	bne.n	14166 <G_q+0xc076>
    t12_re = t202.re / 2.0;
   1413a:	f507 6379 	add.w	r3, r7, #3984	; 0xf90
   1413e:	ed93 6b00 	vldr	d6, [r3]
   14142:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14146:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1414a:	f241 3388 	movw	r3, #5000	; 0x1388
   1414e:	443b      	add	r3, r7
   14150:	ed83 7b00 	vstr	d7, [r3]
    t12_im = 0.0;
   14154:	f04f 0300 	mov.w	r3, #0
   14158:	f04f 0400 	mov.w	r4, #0
   1415c:	f507 529c 	add.w	r2, r7, #4992	; 0x1380
   14160:	e9c2 3400 	strd	r3, r4, [r2]
   14164:	e037      	b.n	141d6 <G_q+0xc0e6>
  } else if (t202.re == 0.0) {
   14166:	f507 6379 	add.w	r3, r7, #3984	; 0xf90
   1416a:	ed93 7b00 	vldr	d7, [r3]
   1416e:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14172:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   14176:	d115      	bne.n	141a4 <G_q+0xc0b4>
    t12_re = 0.0;
   14178:	f04f 0300 	mov.w	r3, #0
   1417c:	f04f 0400 	mov.w	r4, #0
   14180:	f241 3288 	movw	r2, #5000	; 0x1388
   14184:	443a      	add	r2, r7
   14186:	e9c2 3400 	strd	r3, r4, [r2]
    t12_im = t202.im / 2.0;
   1418a:	f507 6379 	add.w	r3, r7, #3984	; 0xf90
   1418e:	ed93 6b02 	vldr	d6, [r3, #8]
   14192:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14196:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1419a:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   1419e:	ed83 7b00 	vstr	d7, [r3]
   141a2:	e018      	b.n	141d6 <G_q+0xc0e6>
  } else {
    t12_re = t202.re / 2.0;
   141a4:	f507 6379 	add.w	r3, r7, #3984	; 0xf90
   141a8:	ed93 6b00 	vldr	d6, [r3]
   141ac:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   141b0:	ee86 7b05 	vdiv.f64	d7, d6, d5
   141b4:	f241 3388 	movw	r3, #5000	; 0x1388
   141b8:	443b      	add	r3, r7
   141ba:	ed83 7b00 	vstr	d7, [r3]
    t12_im = t202.im / 2.0;
   141be:	f507 6379 	add.w	r3, r7, #3984	; 0xf90
   141c2:	ed93 6b02 	vldr	d6, [r3, #8]
   141c6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   141ca:	ee86 7b05 	vdiv.f64	d7, d6, d5
   141ce:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   141d2:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t203.im == 0.0) {
   141d6:	f507 637a 	add.w	r3, r7, #4000	; 0xfa0
   141da:	ed93 7b02 	vldr	d7, [r3, #8]
   141de:	eeb5 7b40 	vcmp.f64	d7, #0.0
   141e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   141e6:	d116      	bne.n	14216 <G_q+0xc126>
    t34_re = t203.re / 2.0;
   141e8:	f507 637a 	add.w	r3, r7, #4000	; 0xfa0
   141ec:	ed93 6b00 	vldr	d6, [r3]
   141f0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   141f4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   141f8:	f241 33b8 	movw	r3, #5048	; 0x13b8
   141fc:	443b      	add	r3, r7
   141fe:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   14202:	f04f 0300 	mov.w	r3, #0
   14206:	f04f 0400 	mov.w	r4, #0
   1420a:	f241 32b0 	movw	r2, #5040	; 0x13b0
   1420e:	443a      	add	r2, r7
   14210:	e9c2 3400 	strd	r3, r4, [r2]
   14214:	e039      	b.n	1428a <G_q+0xc19a>
  } else if (t203.re == 0.0) {
   14216:	f507 637a 	add.w	r3, r7, #4000	; 0xfa0
   1421a:	ed93 7b00 	vldr	d7, [r3]
   1421e:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14222:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   14226:	d116      	bne.n	14256 <G_q+0xc166>
    t34_re = 0.0;
   14228:	f04f 0300 	mov.w	r3, #0
   1422c:	f04f 0400 	mov.w	r4, #0
   14230:	f241 32b8 	movw	r2, #5048	; 0x13b8
   14234:	443a      	add	r2, r7
   14236:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t203.im / 2.0;
   1423a:	f507 637a 	add.w	r3, r7, #4000	; 0xfa0
   1423e:	ed93 6b02 	vldr	d6, [r3, #8]
   14242:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14246:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1424a:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1424e:	443b      	add	r3, r7
   14250:	ed83 7b00 	vstr	d7, [r3]
   14254:	e019      	b.n	1428a <G_q+0xc19a>
  } else {
    t34_re = t203.re / 2.0;
   14256:	f507 637a 	add.w	r3, r7, #4000	; 0xfa0
   1425a:	ed93 6b00 	vldr	d6, [r3]
   1425e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14262:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14266:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1426a:	443b      	add	r3, r7
   1426c:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t203.im / 2.0;
   14270:	f507 637a 	add.w	r3, r7, #4000	; 0xfa0
   14274:	ed93 6b02 	vldr	d6, [r3, #8]
   14278:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1427c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14280:	f241 33b0 	movw	r3, #5040	; 0x13b0
   14284:	443b      	add	r3, r7
   14286:	ed83 7b00 	vstr	d7, [r3]
  }

  t23_re = t200.re * 3.061616997868383E-17 + t201.re * 3.061616997868383E-17;
   1428a:	f507 6301 	add.w	r3, r7, #2064	; 0x810
   1428e:	ed93 7b00 	vldr	d7, [r3]
   14292:	ed9f 6be3 	vldr	d6, [pc, #908]	; 14620 <G_q+0xc530>
   14296:	ee27 6b06 	vmul.f64	d6, d7, d6
   1429a:	f507 6302 	add.w	r3, r7, #2080	; 0x820
   1429e:	ed93 7b00 	vldr	d7, [r3]
   142a2:	ed9f 5bdf 	vldr	d5, [pc, #892]	; 14620 <G_q+0xc530>
   142a6:	ee27 7b05 	vmul.f64	d7, d7, d5
   142aa:	ee36 7b07 	vadd.f64	d7, d6, d7
   142ae:	f241 3330 	movw	r3, #4912	; 0x1330
   142b2:	443b      	add	r3, r7
   142b4:	ed83 7b00 	vstr	d7, [r3]
  t3_im = t200.im * 3.061616997868383E-17 + t201.im * 3.061616997868383E-17;
   142b8:	f507 6301 	add.w	r3, r7, #2064	; 0x810
   142bc:	ed93 7b02 	vldr	d7, [r3, #8]
   142c0:	ed9f 6bd7 	vldr	d6, [pc, #860]	; 14620 <G_q+0xc530>
   142c4:	ee27 6b06 	vmul.f64	d6, d7, d6
   142c8:	f507 6302 	add.w	r3, r7, #2080	; 0x820
   142cc:	ed93 7b02 	vldr	d7, [r3, #8]
   142d0:	ed9f 5bd3 	vldr	d5, [pc, #844]	; 14620 <G_q+0xc530>
   142d4:	ee27 7b05 	vmul.f64	d7, d7, d5
   142d8:	ee36 7b07 	vadd.f64	d7, d6, d7
   142dc:	f241 3310 	movw	r3, #4880	; 0x1310
   142e0:	443b      	add	r3, r7
   142e2:	ed83 7b00 	vstr	d7, [r3]
  t12_re = (t12_re + t34_re) + 7.498798913309288E-33;
   142e6:	f241 3388 	movw	r3, #5000	; 0x1388
   142ea:	443b      	add	r3, r7
   142ec:	ed93 6b00 	vldr	d6, [r3]
   142f0:	f241 33b8 	movw	r3, #5048	; 0x13b8
   142f4:	443b      	add	r3, r7
   142f6:	ed93 7b00 	vldr	d7, [r3]
   142fa:	ee36 7b07 	vadd.f64	d7, d6, d7
   142fe:	ed9f 6bca 	vldr	d6, [pc, #808]	; 14628 <G_q+0xc538>
   14302:	ee37 7b06 	vadd.f64	d7, d7, d6
   14306:	f241 3388 	movw	r3, #5000	; 0x1388
   1430a:	443b      	add	r3, r7
   1430c:	ed83 7b00 	vstr	d7, [r3]
  t12_im += t34_im;
   14310:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   14314:	ed93 6b00 	vldr	d6, [r3]
   14318:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1431c:	443b      	add	r3, r7
   1431e:	ed93 7b00 	vldr	d7, [r3]
   14322:	ee36 7b07 	vadd.f64	d7, d6, d7
   14326:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   1432a:	ed83 7b00 	vstr	d7, [r3]
  t70_im = (t196.re * 0.0 - t196.im * 0.5) - (t197.re * 0.0 - t197.im * 0.5);
   1432e:	f507 732c 	add.w	r3, r7, #688	; 0x2b0
   14332:	ed93 7b00 	vldr	d7, [r3]
   14336:	ed9f 6bbe 	vldr	d6, [pc, #760]	; 14630 <G_q+0xc540>
   1433a:	ee27 6b06 	vmul.f64	d6, d7, d6
   1433e:	f507 732c 	add.w	r3, r7, #688	; 0x2b0
   14342:	ed93 7b02 	vldr	d7, [r3, #8]
   14346:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   1434a:	ee27 7b05 	vmul.f64	d7, d7, d5
   1434e:	ee36 6b47 	vsub.f64	d6, d6, d7
   14352:	4bbb      	ldr	r3, [pc, #748]	; (14640 <G_q+0xc550>)
   14354:	f241 32d0 	movw	r2, #5072	; 0x13d0
   14358:	443a      	add	r2, r7
   1435a:	4413      	add	r3, r2
   1435c:	ed93 7b00 	vldr	d7, [r3]
   14360:	ed9f 5bb3 	vldr	d5, [pc, #716]	; 14630 <G_q+0xc540>
   14364:	ee27 5b05 	vmul.f64	d5, d7, d5
   14368:	4bb5      	ldr	r3, [pc, #724]	; (14640 <G_q+0xc550>)
   1436a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   1436e:	443a      	add	r2, r7
   14370:	4413      	add	r3, r2
   14372:	ed93 7b02 	vldr	d7, [r3, #8]
   14376:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   1437a:	ee27 7b04 	vmul.f64	d7, d7, d4
   1437e:	ee35 7b47 	vsub.f64	d7, d5, d7
   14382:	f241 23c8 	movw	r3, #4808	; 0x12c8
   14386:	443b      	add	r3, r7
   14388:	ee36 7b47 	vsub.f64	d7, d6, d7
   1438c:	ed83 7b00 	vstr	d7, [r3]
  t43_im = (t196.re * 0.5 + t196.im * 0.0) - (t197.re * 0.5 + t197.im * 0.0);
   14390:	f507 732c 	add.w	r3, r7, #688	; 0x2b0
   14394:	ed93 7b00 	vldr	d7, [r3]
   14398:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   1439c:	ee27 6b06 	vmul.f64	d6, d7, d6
   143a0:	f507 732c 	add.w	r3, r7, #688	; 0x2b0
   143a4:	ed93 7b02 	vldr	d7, [r3, #8]
   143a8:	ed9f 5ba1 	vldr	d5, [pc, #644]	; 14630 <G_q+0xc540>
   143ac:	ee27 7b05 	vmul.f64	d7, d7, d5
   143b0:	ee36 6b07 	vadd.f64	d6, d6, d7
   143b4:	4ba2      	ldr	r3, [pc, #648]	; (14640 <G_q+0xc550>)
   143b6:	f241 32d0 	movw	r2, #5072	; 0x13d0
   143ba:	443a      	add	r2, r7
   143bc:	4413      	add	r3, r2
   143be:	ed93 7b00 	vldr	d7, [r3]
   143c2:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   143c6:	ee27 5b05 	vmul.f64	d5, d7, d5
   143ca:	4b9d      	ldr	r3, [pc, #628]	; (14640 <G_q+0xc550>)
   143cc:	f241 32d0 	movw	r2, #5072	; 0x13d0
   143d0:	443a      	add	r2, r7
   143d2:	4413      	add	r3, r2
   143d4:	ed93 7b02 	vldr	d7, [r3, #8]
   143d8:	ed9f 4b95 	vldr	d4, [pc, #596]	; 14630 <G_q+0xc540>
   143dc:	ee27 7b04 	vmul.f64	d7, d7, d4
   143e0:	ee35 7b07 	vadd.f64	d7, d5, d7
   143e4:	ee36 7b47 	vsub.f64	d7, d6, d7
   143e8:	f241 23f8 	movw	r3, #4856	; 0x12f8
   143ec:	443b      	add	r3, r7
   143ee:	ed83 7b00 	vstr	d7, [r3]
  b_t54_re = (((t198.re * 6.123233995736766E-17 + t199.re *
   143f2:	f507 6377 	add.w	r3, r7, #3952	; 0xf70
   143f6:	ed93 7b00 	vldr	d7, [r3]
   143fa:	ed9f 6b8f 	vldr	d6, [pc, #572]	; 14638 <G_q+0xc548>
   143fe:	ee27 6b06 	vmul.f64	d6, d7, d6
   14402:	f507 6378 	add.w	r3, r7, #3968	; 0xf80
   14406:	ed93 7b00 	vldr	d7, [r3]
   1440a:	ed9f 5b8b 	vldr	d5, [pc, #556]	; 14638 <G_q+0xc548>
   1440e:	ee27 7b05 	vmul.f64	d7, d7, d5
   14412:	ee36 6b07 	vadd.f64	d6, d6, d7
                6.123233995736766E-17) + (t16_re * t20_re - t16_im * t20_im)) +
   14416:	f241 3368 	movw	r3, #4968	; 0x1368
   1441a:	443b      	add	r3, r7
   1441c:	ed93 5b00 	vldr	d5, [r3]
   14420:	f241 3348 	movw	r3, #4936	; 0x1348
   14424:	443b      	add	r3, r7
   14426:	ed93 7b00 	vldr	d7, [r3]
   1442a:	ee25 5b07 	vmul.f64	d5, d5, d7
   1442e:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   14432:	ed93 4b00 	vldr	d4, [r3]
   14436:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   1443a:	ed93 7b00 	vldr	d7, [r3]
   1443e:	ee24 7b07 	vmul.f64	d7, d4, d7
   14442:	ee35 7b47 	vsub.f64	d7, d5, d7
   14446:	ee36 6b07 	vadd.f64	d6, d6, d7
              (t23_re * t12_re - t3_im * t12_im)) - 6.123233995736766E-17;
   1444a:	f241 3330 	movw	r3, #4912	; 0x1330
   1444e:	443b      	add	r3, r7
   14450:	ed93 5b00 	vldr	d5, [r3]
   14454:	f241 3388 	movw	r3, #5000	; 0x1388
   14458:	443b      	add	r3, r7
   1445a:	ed93 7b00 	vldr	d7, [r3]
   1445e:	ee25 5b07 	vmul.f64	d5, d5, d7
   14462:	f241 3310 	movw	r3, #4880	; 0x1310
   14466:	443b      	add	r3, r7
   14468:	ed93 4b00 	vldr	d4, [r3]
   1446c:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   14470:	ed93 7b00 	vldr	d7, [r3]
   14474:	ee24 7b07 	vmul.f64	d7, d4, d7
   14478:	ee35 7b47 	vsub.f64	d7, d5, d7
                6.123233995736766E-17) + (t16_re * t20_re - t16_im * t20_im)) +
   1447c:	ee36 7b07 	vadd.f64	d7, d6, d7
  b_t54_re = (((t198.re * 6.123233995736766E-17 + t199.re *
   14480:	ed9f 6b6d 	vldr	d6, [pc, #436]	; 14638 <G_q+0xc548>
   14484:	ee37 7b46 	vsub.f64	d7, d7, d6
   14488:	f241 23f0 	movw	r3, #4848	; 0x12f0
   1448c:	443b      	add	r3, r7
   1448e:	ed83 7b00 	vstr	d7, [r3]
  t55_im = ((t198.im * 6.123233995736766E-17 + t199.im * 6.123233995736766E-17)
   14492:	f507 6377 	add.w	r3, r7, #3952	; 0xf70
   14496:	ed93 7b02 	vldr	d7, [r3, #8]
   1449a:	ed9f 6b67 	vldr	d6, [pc, #412]	; 14638 <G_q+0xc548>
   1449e:	ee27 6b06 	vmul.f64	d6, d7, d6
   144a2:	f507 6378 	add.w	r3, r7, #3968	; 0xf80
   144a6:	ed93 7b02 	vldr	d7, [r3, #8]
   144aa:	ed9f 5b63 	vldr	d5, [pc, #396]	; 14638 <G_q+0xc548>
   144ae:	ee27 7b05 	vmul.f64	d7, d7, d5
   144b2:	ee36 6b07 	vadd.f64	d6, d6, d7
            + (t16_re * t20_im + t16_im * t20_re)) + (t23_re * t12_im + t3_im *
   144b6:	f241 3368 	movw	r3, #4968	; 0x1368
   144ba:	443b      	add	r3, r7
   144bc:	ed93 5b00 	vldr	d5, [r3]
   144c0:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   144c4:	ed93 7b00 	vldr	d7, [r3]
   144c8:	ee25 5b07 	vmul.f64	d5, d5, d7
   144cc:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   144d0:	ed93 4b00 	vldr	d4, [r3]
   144d4:	f241 3348 	movw	r3, #4936	; 0x1348
   144d8:	443b      	add	r3, r7
   144da:	ed93 7b00 	vldr	d7, [r3]
   144de:	ee24 7b07 	vmul.f64	d7, d4, d7
   144e2:	ee35 7b07 	vadd.f64	d7, d5, d7
   144e6:	ee36 6b07 	vadd.f64	d6, d6, d7
   144ea:	f241 3330 	movw	r3, #4912	; 0x1330
   144ee:	443b      	add	r3, r7
   144f0:	ed93 5b00 	vldr	d5, [r3]
   144f4:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   144f8:	ed93 7b00 	vldr	d7, [r3]
   144fc:	ee25 5b07 	vmul.f64	d5, d5, d7
   14500:	f241 3310 	movw	r3, #4880	; 0x1310
   14504:	443b      	add	r3, r7
   14506:	ed93 4b00 	vldr	d4, [r3]
   1450a:	f241 3388 	movw	r3, #5000	; 0x1388
   1450e:	443b      	add	r3, r7
   14510:	ed93 7b00 	vldr	d7, [r3]
   14514:	ee24 7b07 	vmul.f64	d7, d4, d7
   14518:	ee35 7b07 	vadd.f64	d7, d5, d7
  t55_im = ((t198.im * 6.123233995736766E-17 + t199.im * 6.123233995736766E-17)
   1451c:	ee36 7b07 	vadd.f64	d7, d6, d7
   14520:	f241 23d8 	movw	r3, #4824	; 0x12d8
   14524:	443b      	add	r3, r7
   14526:	ed83 7b00 	vstr	d7, [r3]
    t12_re);
  if (t210.im == 0.0) {
   1452a:	f507 6305 	add.w	r3, r7, #2128	; 0x850
   1452e:	ed93 7b02 	vldr	d7, [r3, #8]
   14532:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14536:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1453a:	d116      	bne.n	1456a <G_q+0xc47a>
    t20_re = t210.re / 2.0;
   1453c:	f507 6305 	add.w	r3, r7, #2128	; 0x850
   14540:	ed93 6b00 	vldr	d6, [r3]
   14544:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14548:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1454c:	f241 3348 	movw	r3, #4936	; 0x1348
   14550:	443b      	add	r3, r7
   14552:	ed83 7b00 	vstr	d7, [r3]
    t70_re = 0.0;
   14556:	f241 22d0 	movw	r2, #4816	; 0x12d0
   1455a:	443a      	add	r2, r7
   1455c:	f04f 0300 	mov.w	r3, #0
   14560:	f04f 0400 	mov.w	r4, #0
   14564:	e9c2 3400 	strd	r3, r4, [r2]
   14568:	e039      	b.n	145de <G_q+0xc4ee>
  } else if (t210.re == 0.0) {
   1456a:	f507 6305 	add.w	r3, r7, #2128	; 0x850
   1456e:	ed93 7b00 	vldr	d7, [r3]
   14572:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14576:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1457a:	d116      	bne.n	145aa <G_q+0xc4ba>
    t20_re = 0.0;
   1457c:	f04f 0300 	mov.w	r3, #0
   14580:	f04f 0400 	mov.w	r4, #0
   14584:	f241 3248 	movw	r2, #4936	; 0x1348
   14588:	443a      	add	r2, r7
   1458a:	e9c2 3400 	strd	r3, r4, [r2]
    t70_re = t210.im / 2.0;
   1458e:	f507 6305 	add.w	r3, r7, #2128	; 0x850
   14592:	ed93 6b02 	vldr	d6, [r3, #8]
   14596:	f241 23d0 	movw	r3, #4816	; 0x12d0
   1459a:	443b      	add	r3, r7
   1459c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   145a0:	ee86 7b05 	vdiv.f64	d7, d6, d5
   145a4:	ed83 7b00 	vstr	d7, [r3]
   145a8:	e019      	b.n	145de <G_q+0xc4ee>
  } else {
    t20_re = t210.re / 2.0;
   145aa:	f507 6305 	add.w	r3, r7, #2128	; 0x850
   145ae:	ed93 6b00 	vldr	d6, [r3]
   145b2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   145b6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   145ba:	f241 3348 	movw	r3, #4936	; 0x1348
   145be:	443b      	add	r3, r7
   145c0:	ed83 7b00 	vstr	d7, [r3]
    t70_re = t210.im / 2.0;
   145c4:	f507 6305 	add.w	r3, r7, #2128	; 0x850
   145c8:	ed93 6b02 	vldr	d6, [r3, #8]
   145cc:	f241 23d0 	movw	r3, #4816	; 0x12d0
   145d0:	443b      	add	r3, r7
   145d2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   145d6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   145da:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t211.im == 0.0) {
   145de:	f507 6306 	add.w	r3, r7, #2144	; 0x860
   145e2:	ed93 7b02 	vldr	d7, [r3, #8]
   145e6:	eeb5 7b40 	vcmp.f64	d7, #0.0
   145ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   145ee:	d129      	bne.n	14644 <G_q+0xc554>
    t34_re = t211.re / 2.0;
   145f0:	f507 6306 	add.w	r3, r7, #2144	; 0x860
   145f4:	ed93 6b00 	vldr	d6, [r3]
   145f8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   145fc:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14600:	f241 33b8 	movw	r3, #5048	; 0x13b8
   14604:	443b      	add	r3, r7
   14606:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   1460a:	f04f 0300 	mov.w	r3, #0
   1460e:	f04f 0400 	mov.w	r4, #0
   14612:	f241 32b0 	movw	r2, #5040	; 0x13b0
   14616:	443a      	add	r2, r7
   14618:	e9c2 3400 	strd	r3, r4, [r2]
   1461c:	e04c      	b.n	146b8 <G_q+0xc5c8>
   1461e:	bf00      	nop
   14620:	33145c07 	.word	0x33145c07
   14624:	3c81a626 	.word	0x3c81a626
   14628:	858a5d48 	.word	0x858a5d48
   1462c:	394377ce 	.word	0x394377ce
	...
   14638:	33145c07 	.word	0x33145c07
   1463c:	3c91a626 	.word	0x3c91a626
   14640:	ffffeef0 	.word	0xffffeef0
  } else if (t211.re == 0.0) {
   14644:	f507 6306 	add.w	r3, r7, #2144	; 0x860
   14648:	ed93 7b00 	vldr	d7, [r3]
   1464c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14650:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   14654:	d116      	bne.n	14684 <G_q+0xc594>
    t34_re = 0.0;
   14656:	f04f 0300 	mov.w	r3, #0
   1465a:	f04f 0400 	mov.w	r4, #0
   1465e:	f241 32b8 	movw	r2, #5048	; 0x13b8
   14662:	443a      	add	r2, r7
   14664:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t211.im / 2.0;
   14668:	f507 6306 	add.w	r3, r7, #2144	; 0x860
   1466c:	ed93 6b02 	vldr	d6, [r3, #8]
   14670:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14674:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14678:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1467c:	443b      	add	r3, r7
   1467e:	ed83 7b00 	vstr	d7, [r3]
   14682:	e019      	b.n	146b8 <G_q+0xc5c8>
  } else {
    t34_re = t211.re / 2.0;
   14684:	f507 6306 	add.w	r3, r7, #2144	; 0x860
   14688:	ed93 6b00 	vldr	d6, [r3]
   1468c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14690:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14694:	f241 33b8 	movw	r3, #5048	; 0x13b8
   14698:	443b      	add	r3, r7
   1469a:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t211.im / 2.0;
   1469e:	f507 6306 	add.w	r3, r7, #2144	; 0x860
   146a2:	ed93 6b02 	vldr	d6, [r3, #8]
   146a6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   146aa:	ee86 7b05 	vdiv.f64	d7, d6, d5
   146ae:	f241 33b0 	movw	r3, #5040	; 0x13b0
   146b2:	443b      	add	r3, r7
   146b4:	ed83 7b00 	vstr	d7, [r3]
  }

  t20_re += t34_re;
   146b8:	f241 3348 	movw	r3, #4936	; 0x1348
   146bc:	443b      	add	r3, r7
   146be:	ed93 6b00 	vldr	d6, [r3]
   146c2:	f241 33b8 	movw	r3, #5048	; 0x13b8
   146c6:	443b      	add	r3, r7
   146c8:	ed93 7b00 	vldr	d7, [r3]
   146cc:	ee36 7b07 	vadd.f64	d7, d6, d7
   146d0:	f241 3348 	movw	r3, #4936	; 0x1348
   146d4:	443b      	add	r3, r7
   146d6:	ed83 7b00 	vstr	d7, [r3]
  t70_re += t34_im;
   146da:	f241 23d0 	movw	r3, #4816	; 0x12d0
   146de:	443b      	add	r3, r7
   146e0:	f241 22d0 	movw	r2, #4816	; 0x12d0
   146e4:	443a      	add	r2, r7
   146e6:	ed92 6b00 	vldr	d6, [r2]
   146ea:	f241 32b0 	movw	r2, #5040	; 0x13b0
   146ee:	443a      	add	r2, r7
   146f0:	ed92 7b00 	vldr	d7, [r2]
   146f4:	ee36 7b07 	vadd.f64	d7, d6, d7
   146f8:	ed83 7b00 	vstr	d7, [r3]
  t23_re = (t212.re * 0.0 - t212.im * 0.5) - (t213.re * 0.0 - t213.im * 0.5);
   146fc:	f507 637d 	add.w	r3, r7, #4048	; 0xfd0
   14700:	ed93 7b00 	vldr	d7, [r3]
   14704:	ed9f 6be0 	vldr	d6, [pc, #896]	; 14a88 <G_q+0xc998>
   14708:	ee27 6b06 	vmul.f64	d6, d7, d6
   1470c:	f507 637d 	add.w	r3, r7, #4048	; 0xfd0
   14710:	ed93 7b02 	vldr	d7, [r3, #8]
   14714:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   14718:	ee27 7b05 	vmul.f64	d7, d7, d5
   1471c:	ee36 6b47 	vsub.f64	d6, d6, d7
   14720:	f507 637e 	add.w	r3, r7, #4064	; 0xfe0
   14724:	ed93 7b00 	vldr	d7, [r3]
   14728:	ed9f 5bd7 	vldr	d5, [pc, #860]	; 14a88 <G_q+0xc998>
   1472c:	ee27 5b05 	vmul.f64	d5, d7, d5
   14730:	f507 637e 	add.w	r3, r7, #4064	; 0xfe0
   14734:	ed93 7b02 	vldr	d7, [r3, #8]
   14738:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   1473c:	ee27 7b04 	vmul.f64	d7, d7, d4
   14740:	ee35 7b47 	vsub.f64	d7, d5, d7
   14744:	ee36 7b47 	vsub.f64	d7, d6, d7
   14748:	f241 3330 	movw	r3, #4912	; 0x1330
   1474c:	443b      	add	r3, r7
   1474e:	ed83 7b00 	vstr	d7, [r3]
  t3_im = (t212.re * 0.5 + t212.im * 0.0) - (t213.re * 0.5 + t213.im * 0.0);
   14752:	f507 637d 	add.w	r3, r7, #4048	; 0xfd0
   14756:	ed93 7b00 	vldr	d7, [r3]
   1475a:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   1475e:	ee27 6b06 	vmul.f64	d6, d7, d6
   14762:	f507 637d 	add.w	r3, r7, #4048	; 0xfd0
   14766:	ed93 7b02 	vldr	d7, [r3, #8]
   1476a:	ed9f 5bc7 	vldr	d5, [pc, #796]	; 14a88 <G_q+0xc998>
   1476e:	ee27 7b05 	vmul.f64	d7, d7, d5
   14772:	ee36 6b07 	vadd.f64	d6, d6, d7
   14776:	f507 637e 	add.w	r3, r7, #4064	; 0xfe0
   1477a:	ed93 7b00 	vldr	d7, [r3]
   1477e:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   14782:	ee27 5b05 	vmul.f64	d5, d7, d5
   14786:	f507 637e 	add.w	r3, r7, #4064	; 0xfe0
   1478a:	ed93 7b02 	vldr	d7, [r3, #8]
   1478e:	ed9f 4bbe 	vldr	d4, [pc, #760]	; 14a88 <G_q+0xc998>
   14792:	ee27 7b04 	vmul.f64	d7, d7, d4
   14796:	ee35 7b07 	vadd.f64	d7, d5, d7
   1479a:	ee36 7b47 	vsub.f64	d7, d6, d7
   1479e:	f241 3310 	movw	r3, #4880	; 0x1310
   147a2:	443b      	add	r3, r7
   147a4:	ed83 7b00 	vstr	d7, [r3]
  if (t216.im == 0.0) {
   147a8:	f507 637f 	add.w	r3, r7, #4080	; 0xff0
   147ac:	ed93 7b02 	vldr	d7, [r3, #8]
   147b0:	eeb5 7b40 	vcmp.f64	d7, #0.0
   147b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   147b8:	d116      	bne.n	147e8 <G_q+0xc6f8>
    t13_re = t216.re / 2.0;
   147ba:	f507 637f 	add.w	r3, r7, #4080	; 0xff0
   147be:	ed93 6b00 	vldr	d6, [r3]
   147c2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   147c6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   147ca:	f241 3378 	movw	r3, #4984	; 0x1378
   147ce:	443b      	add	r3, r7
   147d0:	ed83 7b00 	vstr	d7, [r3]
    t13_im = 0.0;
   147d4:	f04f 0300 	mov.w	r3, #0
   147d8:	f04f 0400 	mov.w	r4, #0
   147dc:	f241 3270 	movw	r2, #4976	; 0x1370
   147e0:	443a      	add	r2, r7
   147e2:	e9c2 3400 	strd	r3, r4, [r2]
   147e6:	e039      	b.n	1485c <G_q+0xc76c>
  } else if (t216.re == 0.0) {
   147e8:	f507 637f 	add.w	r3, r7, #4080	; 0xff0
   147ec:	ed93 7b00 	vldr	d7, [r3]
   147f0:	eeb5 7b40 	vcmp.f64	d7, #0.0
   147f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   147f8:	d116      	bne.n	14828 <G_q+0xc738>
    t13_re = 0.0;
   147fa:	f04f 0300 	mov.w	r3, #0
   147fe:	f04f 0400 	mov.w	r4, #0
   14802:	f241 3278 	movw	r2, #4984	; 0x1378
   14806:	443a      	add	r2, r7
   14808:	e9c2 3400 	strd	r3, r4, [r2]
    t13_im = t216.im / 2.0;
   1480c:	f507 637f 	add.w	r3, r7, #4080	; 0xff0
   14810:	ed93 6b02 	vldr	d6, [r3, #8]
   14814:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14818:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1481c:	f241 3370 	movw	r3, #4976	; 0x1370
   14820:	443b      	add	r3, r7
   14822:	ed83 7b00 	vstr	d7, [r3]
   14826:	e019      	b.n	1485c <G_q+0xc76c>
  } else {
    t13_re = t216.re / 2.0;
   14828:	f507 637f 	add.w	r3, r7, #4080	; 0xff0
   1482c:	ed93 6b00 	vldr	d6, [r3]
   14830:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14834:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14838:	f241 3378 	movw	r3, #4984	; 0x1378
   1483c:	443b      	add	r3, r7
   1483e:	ed83 7b00 	vstr	d7, [r3]
    t13_im = t216.im / 2.0;
   14842:	f507 637f 	add.w	r3, r7, #4080	; 0xff0
   14846:	ed93 6b02 	vldr	d6, [r3, #8]
   1484a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1484e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14852:	f241 3370 	movw	r3, #4976	; 0x1370
   14856:	443b      	add	r3, r7
   14858:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t217.im == 0.0) {
   1485c:	f507 5380 	add.w	r3, r7, #4096	; 0x1000
   14860:	ed93 7b02 	vldr	d7, [r3, #8]
   14864:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14868:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1486c:	d116      	bne.n	1489c <G_q+0xc7ac>
    t34_re = t217.re / 2.0;
   1486e:	f507 5380 	add.w	r3, r7, #4096	; 0x1000
   14872:	ed93 6b00 	vldr	d6, [r3]
   14876:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1487a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1487e:	f241 33b8 	movw	r3, #5048	; 0x13b8
   14882:	443b      	add	r3, r7
   14884:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   14888:	f04f 0300 	mov.w	r3, #0
   1488c:	f04f 0400 	mov.w	r4, #0
   14890:	f241 32b0 	movw	r2, #5040	; 0x13b0
   14894:	443a      	add	r2, r7
   14896:	e9c2 3400 	strd	r3, r4, [r2]
   1489a:	e039      	b.n	14910 <G_q+0xc820>
  } else if (t217.re == 0.0) {
   1489c:	f507 5380 	add.w	r3, r7, #4096	; 0x1000
   148a0:	ed93 7b00 	vldr	d7, [r3]
   148a4:	eeb5 7b40 	vcmp.f64	d7, #0.0
   148a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   148ac:	d116      	bne.n	148dc <G_q+0xc7ec>
    t34_re = 0.0;
   148ae:	f04f 0300 	mov.w	r3, #0
   148b2:	f04f 0400 	mov.w	r4, #0
   148b6:	f241 32b8 	movw	r2, #5048	; 0x13b8
   148ba:	443a      	add	r2, r7
   148bc:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t217.im / 2.0;
   148c0:	f507 5380 	add.w	r3, r7, #4096	; 0x1000
   148c4:	ed93 6b02 	vldr	d6, [r3, #8]
   148c8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   148cc:	ee86 7b05 	vdiv.f64	d7, d6, d5
   148d0:	f241 33b0 	movw	r3, #5040	; 0x13b0
   148d4:	443b      	add	r3, r7
   148d6:	ed83 7b00 	vstr	d7, [r3]
   148da:	e019      	b.n	14910 <G_q+0xc820>
  } else {
    t34_re = t217.re / 2.0;
   148dc:	f507 5380 	add.w	r3, r7, #4096	; 0x1000
   148e0:	ed93 6b00 	vldr	d6, [r3]
   148e4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   148e8:	ee86 7b05 	vdiv.f64	d7, d6, d5
   148ec:	f241 33b8 	movw	r3, #5048	; 0x13b8
   148f0:	443b      	add	r3, r7
   148f2:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t217.im / 2.0;
   148f6:	f507 5380 	add.w	r3, r7, #4096	; 0x1000
   148fa:	ed93 6b02 	vldr	d6, [r3, #8]
   148fe:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14902:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14906:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1490a:	443b      	add	r3, r7
   1490c:	ed83 7b00 	vstr	d7, [r3]
  }

  t16_re = (t214.re * 0.0 - t214.im * 0.5) - (t215.re * 0.0 - t215.im * 0.5);
   14910:	f507 6307 	add.w	r3, r7, #2160	; 0x870
   14914:	ed93 7b00 	vldr	d7, [r3]
   14918:	ed9f 6b5b 	vldr	d6, [pc, #364]	; 14a88 <G_q+0xc998>
   1491c:	ee27 6b06 	vmul.f64	d6, d7, d6
   14920:	f507 6307 	add.w	r3, r7, #2160	; 0x870
   14924:	ed93 7b02 	vldr	d7, [r3, #8]
   14928:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   1492c:	ee27 7b05 	vmul.f64	d7, d7, d5
   14930:	ee36 6b47 	vsub.f64	d6, d6, d7
   14934:	f507 6308 	add.w	r3, r7, #2176	; 0x880
   14938:	ed93 7b00 	vldr	d7, [r3]
   1493c:	ed9f 5b52 	vldr	d5, [pc, #328]	; 14a88 <G_q+0xc998>
   14940:	ee27 5b05 	vmul.f64	d5, d7, d5
   14944:	f507 6308 	add.w	r3, r7, #2176	; 0x880
   14948:	ed93 7b02 	vldr	d7, [r3, #8]
   1494c:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   14950:	ee27 7b04 	vmul.f64	d7, d7, d4
   14954:	ee35 7b47 	vsub.f64	d7, d5, d7
   14958:	ee36 7b47 	vsub.f64	d7, d6, d7
   1495c:	f241 3368 	movw	r3, #4968	; 0x1368
   14960:	443b      	add	r3, r7
   14962:	ed83 7b00 	vstr	d7, [r3]
  t16_im = (t214.re * 0.5 + t214.im * 0.0) - (t215.re * 0.5 + t215.im * 0.0);
   14966:	f507 6307 	add.w	r3, r7, #2160	; 0x870
   1496a:	ed93 7b00 	vldr	d7, [r3]
   1496e:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   14972:	ee27 6b06 	vmul.f64	d6, d7, d6
   14976:	f507 6307 	add.w	r3, r7, #2160	; 0x870
   1497a:	ed93 7b02 	vldr	d7, [r3, #8]
   1497e:	ed9f 5b42 	vldr	d5, [pc, #264]	; 14a88 <G_q+0xc998>
   14982:	ee27 7b05 	vmul.f64	d7, d7, d5
   14986:	ee36 6b07 	vadd.f64	d6, d6, d7
   1498a:	f507 6308 	add.w	r3, r7, #2176	; 0x880
   1498e:	ed93 7b00 	vldr	d7, [r3]
   14992:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   14996:	ee27 5b05 	vmul.f64	d5, d7, d5
   1499a:	f507 6308 	add.w	r3, r7, #2176	; 0x880
   1499e:	ed93 7b02 	vldr	d7, [r3, #8]
   149a2:	ed9f 4b39 	vldr	d4, [pc, #228]	; 14a88 <G_q+0xc998>
   149a6:	ee27 7b04 	vmul.f64	d7, d7, d4
   149aa:	ee35 7b07 	vadd.f64	d7, d5, d7
   149ae:	ee36 7b47 	vsub.f64	d7, d6, d7
   149b2:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   149b6:	ed83 7b00 	vstr	d7, [r3]
  t13_re = (t13_re + t34_re) + 7.498798913309288E-33;
   149ba:	f241 3378 	movw	r3, #4984	; 0x1378
   149be:	443b      	add	r3, r7
   149c0:	ed93 6b00 	vldr	d6, [r3]
   149c4:	f241 33b8 	movw	r3, #5048	; 0x13b8
   149c8:	443b      	add	r3, r7
   149ca:	ed93 7b00 	vldr	d7, [r3]
   149ce:	ee36 7b07 	vadd.f64	d7, d6, d7
   149d2:	ed9f 6b2f 	vldr	d6, [pc, #188]	; 14a90 <G_q+0xc9a0>
   149d6:	ee37 7b06 	vadd.f64	d7, d7, d6
   149da:	f241 3378 	movw	r3, #4984	; 0x1378
   149de:	443b      	add	r3, r7
   149e0:	ed83 7b00 	vstr	d7, [r3]
  t13_im += t34_im;
   149e4:	f241 3370 	movw	r3, #4976	; 0x1370
   149e8:	443b      	add	r3, r7
   149ea:	ed93 6b00 	vldr	d6, [r3]
   149ee:	f241 33b0 	movw	r3, #5040	; 0x13b0
   149f2:	443b      	add	r3, r7
   149f4:	ed93 7b00 	vldr	d7, [r3]
   149f8:	ee36 7b07 	vadd.f64	d7, d6, d7
   149fc:	f241 3370 	movw	r3, #4976	; 0x1370
   14a00:	443b      	add	r3, r7
   14a02:	ed83 7b00 	vstr	d7, [r3]
  if (t208.im == 0.0) {
   14a06:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
   14a0a:	ed93 7b02 	vldr	d7, [r3, #8]
   14a0e:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14a12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   14a16:	d116      	bne.n	14a46 <G_q+0xc956>
    t74_re = t208.re / 2.0;
   14a18:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
   14a1c:	ed93 6b00 	vldr	d6, [r3]
   14a20:	f241 23b8 	movw	r3, #4792	; 0x12b8
   14a24:	443b      	add	r3, r7
   14a26:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14a2a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14a2e:	ed83 7b00 	vstr	d7, [r3]
    t74_im = 0.0;
   14a32:	f241 22b0 	movw	r2, #4784	; 0x12b0
   14a36:	443a      	add	r2, r7
   14a38:	f04f 0300 	mov.w	r3, #0
   14a3c:	f04f 0400 	mov.w	r4, #0
   14a40:	e9c2 3400 	strd	r3, r4, [r2]
   14a44:	e042      	b.n	14acc <G_q+0xc9dc>
  } else if (t208.re == 0.0) {
   14a46:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
   14a4a:	ed93 7b00 	vldr	d7, [r3]
   14a4e:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14a52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   14a56:	d11f      	bne.n	14a98 <G_q+0xc9a8>
    t74_re = 0.0;
   14a58:	f241 22b8 	movw	r2, #4792	; 0x12b8
   14a5c:	443a      	add	r2, r7
   14a5e:	f04f 0300 	mov.w	r3, #0
   14a62:	f04f 0400 	mov.w	r4, #0
   14a66:	e9c2 3400 	strd	r3, r4, [r2]
    t74_im = t208.im / 2.0;
   14a6a:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
   14a6e:	ed93 6b02 	vldr	d6, [r3, #8]
   14a72:	f241 23b0 	movw	r3, #4784	; 0x12b0
   14a76:	443b      	add	r3, r7
   14a78:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14a7c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14a80:	ed83 7b00 	vstr	d7, [r3]
   14a84:	e022      	b.n	14acc <G_q+0xc9dc>
   14a86:	bf00      	nop
	...
   14a90:	858a5d48 	.word	0x858a5d48
   14a94:	394377ce 	.word	0x394377ce
  } else {
    t74_re = t208.re / 2.0;
   14a98:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
   14a9c:	ed93 6b00 	vldr	d6, [r3]
   14aa0:	f241 23b8 	movw	r3, #4792	; 0x12b8
   14aa4:	443b      	add	r3, r7
   14aa6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14aaa:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14aae:	ed83 7b00 	vstr	d7, [r3]
    t74_im = t208.im / 2.0;
   14ab2:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
   14ab6:	ed93 6b02 	vldr	d6, [r3, #8]
   14aba:	f241 23b0 	movw	r3, #4784	; 0x12b0
   14abe:	443b      	add	r3, r7
   14ac0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14ac4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14ac8:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t209.im == 0.0) {
   14acc:	4b25      	ldr	r3, [pc, #148]	; (14b64 <G_q+0xca74>)
   14ace:	f241 32d0 	movw	r2, #5072	; 0x13d0
   14ad2:	443a      	add	r2, r7
   14ad4:	4413      	add	r3, r2
   14ad6:	ed93 7b02 	vldr	d7, [r3, #8]
   14ada:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14ade:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   14ae2:	d119      	bne.n	14b18 <G_q+0xca28>
    t34_re = t209.re / 2.0;
   14ae4:	4b1f      	ldr	r3, [pc, #124]	; (14b64 <G_q+0xca74>)
   14ae6:	f241 32d0 	movw	r2, #5072	; 0x13d0
   14aea:	443a      	add	r2, r7
   14aec:	4413      	add	r3, r2
   14aee:	ed93 6b00 	vldr	d6, [r3]
   14af2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14af6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14afa:	f241 33b8 	movw	r3, #5048	; 0x13b8
   14afe:	443b      	add	r3, r7
   14b00:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   14b04:	f04f 0300 	mov.w	r3, #0
   14b08:	f04f 0400 	mov.w	r4, #0
   14b0c:	f241 32b0 	movw	r2, #5040	; 0x13b0
   14b10:	443a      	add	r2, r7
   14b12:	e9c2 3400 	strd	r3, r4, [r2]
   14b16:	e047      	b.n	14ba8 <G_q+0xcab8>
  } else if (t209.re == 0.0) {
   14b18:	4b12      	ldr	r3, [pc, #72]	; (14b64 <G_q+0xca74>)
   14b1a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   14b1e:	443a      	add	r2, r7
   14b20:	4413      	add	r3, r2
   14b22:	ed93 7b00 	vldr	d7, [r3]
   14b26:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14b2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   14b2e:	d11b      	bne.n	14b68 <G_q+0xca78>
    t34_re = 0.0;
   14b30:	f04f 0300 	mov.w	r3, #0
   14b34:	f04f 0400 	mov.w	r4, #0
   14b38:	f241 32b8 	movw	r2, #5048	; 0x13b8
   14b3c:	443a      	add	r2, r7
   14b3e:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t209.im / 2.0;
   14b42:	4b08      	ldr	r3, [pc, #32]	; (14b64 <G_q+0xca74>)
   14b44:	f241 32d0 	movw	r2, #5072	; 0x13d0
   14b48:	443a      	add	r2, r7
   14b4a:	4413      	add	r3, r2
   14b4c:	ed93 6b02 	vldr	d6, [r3, #8]
   14b50:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14b54:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14b58:	f241 33b0 	movw	r3, #5040	; 0x13b0
   14b5c:	443b      	add	r3, r7
   14b5e:	ed83 7b00 	vstr	d7, [r3]
   14b62:	e021      	b.n	14ba8 <G_q+0xcab8>
   14b64:	ffffef10 	.word	0xffffef10
  } else {
    t34_re = t209.re / 2.0;
   14b68:	4bd7      	ldr	r3, [pc, #860]	; (14ec8 <G_q+0xcdd8>)
   14b6a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   14b6e:	443a      	add	r2, r7
   14b70:	4413      	add	r3, r2
   14b72:	ed93 6b00 	vldr	d6, [r3]
   14b76:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14b7a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14b7e:	f241 33b8 	movw	r3, #5048	; 0x13b8
   14b82:	443b      	add	r3, r7
   14b84:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t209.im / 2.0;
   14b88:	4bcf      	ldr	r3, [pc, #828]	; (14ec8 <G_q+0xcdd8>)
   14b8a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   14b8e:	443a      	add	r2, r7
   14b90:	4413      	add	r3, r2
   14b92:	ed93 6b02 	vldr	d6, [r3, #8]
   14b96:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14b9a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14b9e:	f241 33b0 	movw	r3, #5040	; 0x13b0
   14ba2:	443b      	add	r3, r7
   14ba4:	ed83 7b00 	vstr	d7, [r3]
  }

  t55_re = (t20_re * t23_re - t70_re * t3_im) - (t16_re * t13_re - t16_im *
   14ba8:	f241 3348 	movw	r3, #4936	; 0x1348
   14bac:	443b      	add	r3, r7
   14bae:	ed93 6b00 	vldr	d6, [r3]
   14bb2:	f241 3330 	movw	r3, #4912	; 0x1330
   14bb6:	443b      	add	r3, r7
   14bb8:	ed93 7b00 	vldr	d7, [r3]
   14bbc:	ee26 6b07 	vmul.f64	d6, d6, d7
   14bc0:	f241 23d0 	movw	r3, #4816	; 0x12d0
   14bc4:	443b      	add	r3, r7
   14bc6:	ed93 5b00 	vldr	d5, [r3]
   14bca:	f241 3310 	movw	r3, #4880	; 0x1310
   14bce:	443b      	add	r3, r7
   14bd0:	ed93 7b00 	vldr	d7, [r3]
   14bd4:	ee25 7b07 	vmul.f64	d7, d5, d7
   14bd8:	ee36 6b47 	vsub.f64	d6, d6, d7
   14bdc:	f241 3368 	movw	r3, #4968	; 0x1368
   14be0:	443b      	add	r3, r7
   14be2:	ed93 5b00 	vldr	d5, [r3]
   14be6:	f241 3378 	movw	r3, #4984	; 0x1378
   14bea:	443b      	add	r3, r7
   14bec:	ed93 7b00 	vldr	d7, [r3]
   14bf0:	ee25 5b07 	vmul.f64	d5, d5, d7
   14bf4:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   14bf8:	ed93 4b00 	vldr	d4, [r3]
   14bfc:	f241 3370 	movw	r3, #4976	; 0x1370
   14c00:	443b      	add	r3, r7
   14c02:	ed93 7b00 	vldr	d7, [r3]
   14c06:	ee24 7b07 	vmul.f64	d7, d4, d7
   14c0a:	ee35 7b47 	vsub.f64	d7, d5, d7
   14c0e:	ee36 7b47 	vsub.f64	d7, d6, d7
   14c12:	f507 5397 	add.w	r3, r7, #4832	; 0x12e0
   14c16:	ed83 7b00 	vstr	d7, [r3]
    t13_im);
  t70_re = (t20_re * t3_im + t70_re * t23_re) - (t16_re * t13_im + t16_im *
   14c1a:	f241 3348 	movw	r3, #4936	; 0x1348
   14c1e:	443b      	add	r3, r7
   14c20:	ed93 6b00 	vldr	d6, [r3]
   14c24:	f241 3310 	movw	r3, #4880	; 0x1310
   14c28:	443b      	add	r3, r7
   14c2a:	ed93 7b00 	vldr	d7, [r3]
   14c2e:	ee26 6b07 	vmul.f64	d6, d6, d7
   14c32:	f241 23d0 	movw	r3, #4816	; 0x12d0
   14c36:	443b      	add	r3, r7
   14c38:	ed93 5b00 	vldr	d5, [r3]
   14c3c:	f241 3330 	movw	r3, #4912	; 0x1330
   14c40:	443b      	add	r3, r7
   14c42:	ed93 7b00 	vldr	d7, [r3]
   14c46:	ee25 7b07 	vmul.f64	d7, d5, d7
   14c4a:	ee36 6b07 	vadd.f64	d6, d6, d7
   14c4e:	f241 3368 	movw	r3, #4968	; 0x1368
   14c52:	443b      	add	r3, r7
   14c54:	ed93 5b00 	vldr	d5, [r3]
   14c58:	f241 3370 	movw	r3, #4976	; 0x1370
   14c5c:	443b      	add	r3, r7
   14c5e:	ed93 7b00 	vldr	d7, [r3]
   14c62:	ee25 5b07 	vmul.f64	d5, d5, d7
   14c66:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   14c6a:	ed93 4b00 	vldr	d4, [r3]
   14c6e:	f241 3378 	movw	r3, #4984	; 0x1378
   14c72:	443b      	add	r3, r7
   14c74:	ed93 7b00 	vldr	d7, [r3]
   14c78:	ee24 7b07 	vmul.f64	d7, d4, d7
   14c7c:	ee35 7b07 	vadd.f64	d7, d5, d7
   14c80:	f241 23d0 	movw	r3, #4816	; 0x12d0
   14c84:	443b      	add	r3, r7
   14c86:	ee36 7b47 	vsub.f64	d7, d6, d7
   14c8a:	ed83 7b00 	vstr	d7, [r3]
    t13_re);
  t74_re += t34_re;
   14c8e:	f241 23b8 	movw	r3, #4792	; 0x12b8
   14c92:	443b      	add	r3, r7
   14c94:	f241 22b8 	movw	r2, #4792	; 0x12b8
   14c98:	443a      	add	r2, r7
   14c9a:	ed92 6b00 	vldr	d6, [r2]
   14c9e:	f241 32b8 	movw	r2, #5048	; 0x13b8
   14ca2:	443a      	add	r2, r7
   14ca4:	ed92 7b00 	vldr	d7, [r2]
   14ca8:	ee36 7b07 	vadd.f64	d7, d6, d7
   14cac:	ed83 7b00 	vstr	d7, [r3]
  t74_im += t34_im;
   14cb0:	f241 23b0 	movw	r3, #4784	; 0x12b0
   14cb4:	443b      	add	r3, r7
   14cb6:	f241 22b0 	movw	r2, #4784	; 0x12b0
   14cba:	443a      	add	r2, r7
   14cbc:	ed92 6b00 	vldr	d6, [r2]
   14cc0:	f241 32b0 	movw	r2, #5040	; 0x13b0
   14cc4:	443a      	add	r2, r7
   14cc6:	ed92 7b00 	vldr	d7, [r2]
   14cca:	ee36 7b07 	vadd.f64	d7, d6, d7
   14cce:	ed83 7b00 	vstr	d7, [r3]
  t13_re = (t240.re * 0.0 - t240.im * 3.061616997868383E-17) - (t241.re * 0.0 -
   14cd2:	f507 630f 	add.w	r3, r7, #2288	; 0x8f0
   14cd6:	ed93 7b00 	vldr	d7, [r3]
   14cda:	ed9f 6b77 	vldr	d6, [pc, #476]	; 14eb8 <G_q+0xcdc8>
   14cde:	ee27 6b06 	vmul.f64	d6, d7, d6
   14ce2:	f507 630f 	add.w	r3, r7, #2288	; 0x8f0
   14ce6:	ed93 7b02 	vldr	d7, [r3, #8]
   14cea:	ed9f 5b75 	vldr	d5, [pc, #468]	; 14ec0 <G_q+0xcdd0>
   14cee:	ee27 7b05 	vmul.f64	d7, d7, d5
   14cf2:	ee36 6b47 	vsub.f64	d6, d6, d7
   14cf6:	f507 6310 	add.w	r3, r7, #2304	; 0x900
   14cfa:	ed93 7b00 	vldr	d7, [r3]
   14cfe:	ed9f 5b6e 	vldr	d5, [pc, #440]	; 14eb8 <G_q+0xcdc8>
   14d02:	ee27 5b05 	vmul.f64	d5, d7, d5
    t241.im * 3.061616997868383E-17);
   14d06:	f507 6310 	add.w	r3, r7, #2304	; 0x900
   14d0a:	ed93 7b02 	vldr	d7, [r3, #8]
   14d0e:	ed9f 4b6c 	vldr	d4, [pc, #432]	; 14ec0 <G_q+0xcdd0>
   14d12:	ee27 7b04 	vmul.f64	d7, d7, d4
  t13_re = (t240.re * 0.0 - t240.im * 3.061616997868383E-17) - (t241.re * 0.0 -
   14d16:	ee35 7b47 	vsub.f64	d7, d5, d7
   14d1a:	ee36 7b47 	vsub.f64	d7, d6, d7
   14d1e:	f241 3378 	movw	r3, #4984	; 0x1378
   14d22:	443b      	add	r3, r7
   14d24:	ed83 7b00 	vstr	d7, [r3]
  t13_im = (t240.re * 3.061616997868383E-17 + t240.im * 0.0) - (t241.re *
   14d28:	f507 630f 	add.w	r3, r7, #2288	; 0x8f0
   14d2c:	ed93 7b00 	vldr	d7, [r3]
   14d30:	ed9f 6b63 	vldr	d6, [pc, #396]	; 14ec0 <G_q+0xcdd0>
   14d34:	ee27 6b06 	vmul.f64	d6, d7, d6
   14d38:	f507 630f 	add.w	r3, r7, #2288	; 0x8f0
   14d3c:	ed93 7b02 	vldr	d7, [r3, #8]
   14d40:	ed9f 5b5d 	vldr	d5, [pc, #372]	; 14eb8 <G_q+0xcdc8>
   14d44:	ee27 7b05 	vmul.f64	d7, d7, d5
   14d48:	ee36 6b07 	vadd.f64	d6, d6, d7
   14d4c:	f507 6310 	add.w	r3, r7, #2304	; 0x900
   14d50:	ed93 7b00 	vldr	d7, [r3]
   14d54:	ed9f 5b5a 	vldr	d5, [pc, #360]	; 14ec0 <G_q+0xcdd0>
   14d58:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t241.im * 0.0);
   14d5c:	f507 6310 	add.w	r3, r7, #2304	; 0x900
   14d60:	ed93 7b02 	vldr	d7, [r3, #8]
   14d64:	ed9f 4b54 	vldr	d4, [pc, #336]	; 14eb8 <G_q+0xcdc8>
   14d68:	ee27 7b04 	vmul.f64	d7, d7, d4
   14d6c:	ee35 7b07 	vadd.f64	d7, d5, d7
  t13_im = (t240.re * 3.061616997868383E-17 + t240.im * 0.0) - (t241.re *
   14d70:	ee36 7b47 	vsub.f64	d7, d6, d7
   14d74:	f241 3370 	movw	r3, #4976	; 0x1370
   14d78:	443b      	add	r3, r7
   14d7a:	ed83 7b00 	vstr	d7, [r3]
  t16_re = (t238.re * 0.0 - t238.im * 0.5) - (t239.re * 0.0 - t239.im * 0.5);
   14d7e:	f241 0390 	movw	r3, #4240	; 0x1090
   14d82:	443b      	add	r3, r7
   14d84:	ed93 7b00 	vldr	d7, [r3]
   14d88:	ed9f 6b4b 	vldr	d6, [pc, #300]	; 14eb8 <G_q+0xcdc8>
   14d8c:	ee27 6b06 	vmul.f64	d6, d7, d6
   14d90:	f241 0390 	movw	r3, #4240	; 0x1090
   14d94:	443b      	add	r3, r7
   14d96:	ed93 7b02 	vldr	d7, [r3, #8]
   14d9a:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   14d9e:	ee27 7b05 	vmul.f64	d7, d7, d5
   14da2:	ee36 6b47 	vsub.f64	d6, d6, d7
   14da6:	f507 5385 	add.w	r3, r7, #4256	; 0x10a0
   14daa:	ed93 7b00 	vldr	d7, [r3]
   14dae:	ed9f 5b42 	vldr	d5, [pc, #264]	; 14eb8 <G_q+0xcdc8>
   14db2:	ee27 5b05 	vmul.f64	d5, d7, d5
   14db6:	f507 5385 	add.w	r3, r7, #4256	; 0x10a0
   14dba:	ed93 7b02 	vldr	d7, [r3, #8]
   14dbe:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   14dc2:	ee27 7b04 	vmul.f64	d7, d7, d4
   14dc6:	ee35 7b47 	vsub.f64	d7, d5, d7
   14dca:	ee36 7b47 	vsub.f64	d7, d6, d7
   14dce:	f241 3368 	movw	r3, #4968	; 0x1368
   14dd2:	443b      	add	r3, r7
   14dd4:	ed83 7b00 	vstr	d7, [r3]
  t16_im = (t238.re * 0.5 + t238.im * 0.0) - (t239.re * 0.5 + t239.im * 0.0);
   14dd8:	f241 0390 	movw	r3, #4240	; 0x1090
   14ddc:	443b      	add	r3, r7
   14dde:	ed93 7b00 	vldr	d7, [r3]
   14de2:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   14de6:	ee27 6b06 	vmul.f64	d6, d7, d6
   14dea:	f241 0390 	movw	r3, #4240	; 0x1090
   14dee:	443b      	add	r3, r7
   14df0:	ed93 7b02 	vldr	d7, [r3, #8]
   14df4:	ed9f 5b30 	vldr	d5, [pc, #192]	; 14eb8 <G_q+0xcdc8>
   14df8:	ee27 7b05 	vmul.f64	d7, d7, d5
   14dfc:	ee36 6b07 	vadd.f64	d6, d6, d7
   14e00:	f507 5385 	add.w	r3, r7, #4256	; 0x10a0
   14e04:	ed93 7b00 	vldr	d7, [r3]
   14e08:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   14e0c:	ee27 5b05 	vmul.f64	d5, d7, d5
   14e10:	f507 5385 	add.w	r3, r7, #4256	; 0x10a0
   14e14:	ed93 7b02 	vldr	d7, [r3, #8]
   14e18:	ed9f 4b27 	vldr	d4, [pc, #156]	; 14eb8 <G_q+0xcdc8>
   14e1c:	ee27 7b04 	vmul.f64	d7, d7, d4
   14e20:	ee35 7b07 	vadd.f64	d7, d5, d7
   14e24:	ee36 7b47 	vsub.f64	d7, d6, d7
   14e28:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   14e2c:	ed83 7b00 	vstr	d7, [r3]
  if (t236.im == 0.0) {
   14e30:	f241 0370 	movw	r3, #4208	; 0x1070
   14e34:	443b      	add	r3, r7
   14e36:	ed93 7b02 	vldr	d7, [r3, #8]
   14e3a:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14e3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   14e42:	d116      	bne.n	14e72 <G_q+0xcd82>
    t20_re = t236.re / 2.0;
   14e44:	f241 0370 	movw	r3, #4208	; 0x1070
   14e48:	443b      	add	r3, r7
   14e4a:	ed93 6b00 	vldr	d6, [r3]
   14e4e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14e52:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14e56:	f241 3348 	movw	r3, #4936	; 0x1348
   14e5a:	443b      	add	r3, r7
   14e5c:	ed83 7b00 	vstr	d7, [r3]
    t20_im = 0.0;
   14e60:	f04f 0300 	mov.w	r3, #0
   14e64:	f04f 0400 	mov.w	r4, #0
   14e68:	f507 529a 	add.w	r2, r7, #4928	; 0x1340
   14e6c:	e9c2 3400 	strd	r3, r4, [r2]
   14e70:	e047      	b.n	14f02 <G_q+0xce12>
  } else if (t236.re == 0.0) {
   14e72:	f241 0370 	movw	r3, #4208	; 0x1070
   14e76:	443b      	add	r3, r7
   14e78:	ed93 7b00 	vldr	d7, [r3]
   14e7c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14e80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   14e84:	d122      	bne.n	14ecc <G_q+0xcddc>
    t20_re = 0.0;
   14e86:	f04f 0300 	mov.w	r3, #0
   14e8a:	f04f 0400 	mov.w	r4, #0
   14e8e:	f241 3248 	movw	r2, #4936	; 0x1348
   14e92:	443a      	add	r2, r7
   14e94:	e9c2 3400 	strd	r3, r4, [r2]
    t20_im = t236.im / 2.0;
   14e98:	f241 0370 	movw	r3, #4208	; 0x1070
   14e9c:	443b      	add	r3, r7
   14e9e:	ed93 6b02 	vldr	d6, [r3, #8]
   14ea2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14ea6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14eaa:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   14eae:	ed83 7b00 	vstr	d7, [r3]
   14eb2:	e026      	b.n	14f02 <G_q+0xce12>
   14eb4:	f3af 8000 	nop.w
	...
   14ec0:	33145c07 	.word	0x33145c07
   14ec4:	3c81a626 	.word	0x3c81a626
   14ec8:	ffffef10 	.word	0xffffef10
  } else {
    t20_re = t236.re / 2.0;
   14ecc:	f241 0370 	movw	r3, #4208	; 0x1070
   14ed0:	443b      	add	r3, r7
   14ed2:	ed93 6b00 	vldr	d6, [r3]
   14ed6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14eda:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14ede:	f241 3348 	movw	r3, #4936	; 0x1348
   14ee2:	443b      	add	r3, r7
   14ee4:	ed83 7b00 	vstr	d7, [r3]
    t20_im = t236.im / 2.0;
   14ee8:	f241 0370 	movw	r3, #4208	; 0x1070
   14eec:	443b      	add	r3, r7
   14eee:	ed93 6b02 	vldr	d6, [r3, #8]
   14ef2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14ef6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14efa:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   14efe:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t237.im == 0.0) {
   14f02:	f507 5384 	add.w	r3, r7, #4224	; 0x1080
   14f06:	ed93 7b02 	vldr	d7, [r3, #8]
   14f0a:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14f0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   14f12:	d116      	bne.n	14f42 <G_q+0xce52>
    t34_re = t237.re / 2.0;
   14f14:	f507 5384 	add.w	r3, r7, #4224	; 0x1080
   14f18:	ed93 6b00 	vldr	d6, [r3]
   14f1c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14f20:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14f24:	f241 33b8 	movw	r3, #5048	; 0x13b8
   14f28:	443b      	add	r3, r7
   14f2a:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   14f2e:	f04f 0300 	mov.w	r3, #0
   14f32:	f04f 0400 	mov.w	r4, #0
   14f36:	f241 32b0 	movw	r2, #5040	; 0x13b0
   14f3a:	443a      	add	r2, r7
   14f3c:	e9c2 3400 	strd	r3, r4, [r2]
   14f40:	e039      	b.n	14fb6 <G_q+0xcec6>
  } else if (t237.re == 0.0) {
   14f42:	f507 5384 	add.w	r3, r7, #4224	; 0x1080
   14f46:	ed93 7b00 	vldr	d7, [r3]
   14f4a:	eeb5 7b40 	vcmp.f64	d7, #0.0
   14f4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   14f52:	d116      	bne.n	14f82 <G_q+0xce92>
    t34_re = 0.0;
   14f54:	f04f 0300 	mov.w	r3, #0
   14f58:	f04f 0400 	mov.w	r4, #0
   14f5c:	f241 32b8 	movw	r2, #5048	; 0x13b8
   14f60:	443a      	add	r2, r7
   14f62:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t237.im / 2.0;
   14f66:	f507 5384 	add.w	r3, r7, #4224	; 0x1080
   14f6a:	ed93 6b02 	vldr	d6, [r3, #8]
   14f6e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14f72:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14f76:	f241 33b0 	movw	r3, #5040	; 0x13b0
   14f7a:	443b      	add	r3, r7
   14f7c:	ed83 7b00 	vstr	d7, [r3]
   14f80:	e019      	b.n	14fb6 <G_q+0xcec6>
  } else {
    t34_re = t237.re / 2.0;
   14f82:	f507 5384 	add.w	r3, r7, #4224	; 0x1080
   14f86:	ed93 6b00 	vldr	d6, [r3]
   14f8a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14f8e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14f92:	f241 33b8 	movw	r3, #5048	; 0x13b8
   14f96:	443b      	add	r3, r7
   14f98:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t237.im / 2.0;
   14f9c:	f507 5384 	add.w	r3, r7, #4224	; 0x1080
   14fa0:	ed93 6b02 	vldr	d6, [r3, #8]
   14fa4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   14fa8:	ee86 7b05 	vdiv.f64	d7, d6, d5
   14fac:	f241 33b0 	movw	r3, #5040	; 0x13b0
   14fb0:	443b      	add	r3, r7
   14fb2:	ed83 7b00 	vstr	d7, [r3]
  }

  t23_re = t234.re * 3.061616997868383E-17 + t235.re * 3.061616997868383E-17;
   14fb6:	f507 630d 	add.w	r3, r7, #2256	; 0x8d0
   14fba:	ed93 7b00 	vldr	d7, [r3]
   14fbe:	ed9f 6be4 	vldr	d6, [pc, #912]	; 15350 <G_q+0xd260>
   14fc2:	ee27 6b06 	vmul.f64	d6, d7, d6
   14fc6:	f507 630e 	add.w	r3, r7, #2272	; 0x8e0
   14fca:	ed93 7b00 	vldr	d7, [r3]
   14fce:	ed9f 5be0 	vldr	d5, [pc, #896]	; 15350 <G_q+0xd260>
   14fd2:	ee27 7b05 	vmul.f64	d7, d7, d5
   14fd6:	ee36 7b07 	vadd.f64	d7, d6, d7
   14fda:	f241 3330 	movw	r3, #4912	; 0x1330
   14fde:	443b      	add	r3, r7
   14fe0:	ed83 7b00 	vstr	d7, [r3]
  t3_im = t234.im * 3.061616997868383E-17 + t235.im * 3.061616997868383E-17;
   14fe4:	f507 630d 	add.w	r3, r7, #2256	; 0x8d0
   14fe8:	ed93 7b02 	vldr	d7, [r3, #8]
   14fec:	ed9f 6bd8 	vldr	d6, [pc, #864]	; 15350 <G_q+0xd260>
   14ff0:	ee27 6b06 	vmul.f64	d6, d7, d6
   14ff4:	f507 630e 	add.w	r3, r7, #2272	; 0x8e0
   14ff8:	ed93 7b02 	vldr	d7, [r3, #8]
   14ffc:	ed9f 5bd4 	vldr	d5, [pc, #848]	; 15350 <G_q+0xd260>
   15000:	ee27 7b05 	vmul.f64	d7, d7, d5
   15004:	ee36 7b07 	vadd.f64	d7, d6, d7
   15008:	f241 3310 	movw	r3, #4880	; 0x1310
   1500c:	443b      	add	r3, r7
   1500e:	ed83 7b00 	vstr	d7, [r3]
  t20_re = (t20_re + t34_re) + 7.498798913309288E-33;
   15012:	f241 3348 	movw	r3, #4936	; 0x1348
   15016:	443b      	add	r3, r7
   15018:	ed93 6b00 	vldr	d6, [r3]
   1501c:	f241 33b8 	movw	r3, #5048	; 0x13b8
   15020:	443b      	add	r3, r7
   15022:	ed93 7b00 	vldr	d7, [r3]
   15026:	ee36 7b07 	vadd.f64	d7, d6, d7
   1502a:	ed9f 6bcb 	vldr	d6, [pc, #812]	; 15358 <G_q+0xd268>
   1502e:	ee37 7b06 	vadd.f64	d7, d7, d6
   15032:	f241 3348 	movw	r3, #4936	; 0x1348
   15036:	443b      	add	r3, r7
   15038:	ed83 7b00 	vstr	d7, [r3]
  t20_im += t34_im;
   1503c:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   15040:	ed93 6b00 	vldr	d6, [r3]
   15044:	f241 33b0 	movw	r3, #5040	; 0x13b0
   15048:	443b      	add	r3, r7
   1504a:	ed93 7b00 	vldr	d7, [r3]
   1504e:	ee36 7b07 	vadd.f64	d7, d6, d7
   15052:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   15056:	ed83 7b00 	vstr	d7, [r3]
  t60_re = (t230.re * 0.0 - t230.im * 3.061616997868383E-17) - (t231.re * 0.0 -
   1505a:	f507 7344 	add.w	r3, r7, #784	; 0x310
   1505e:	ed93 7b00 	vldr	d7, [r3]
   15062:	ed9f 6bbf 	vldr	d6, [pc, #764]	; 15360 <G_q+0xd270>
   15066:	ee27 6b06 	vmul.f64	d6, d7, d6
   1506a:	f507 7344 	add.w	r3, r7, #784	; 0x310
   1506e:	ed93 7b02 	vldr	d7, [r3, #8]
   15072:	ed9f 5bb7 	vldr	d5, [pc, #732]	; 15350 <G_q+0xd260>
   15076:	ee27 7b05 	vmul.f64	d7, d7, d5
   1507a:	ee36 6b47 	vsub.f64	d6, d6, d7
   1507e:	4bbc      	ldr	r3, [pc, #752]	; (15370 <G_q+0xd280>)
   15080:	f241 32d0 	movw	r2, #5072	; 0x13d0
   15084:	443a      	add	r2, r7
   15086:	4413      	add	r3, r2
   15088:	ed93 7b00 	vldr	d7, [r3]
   1508c:	ed9f 5bb4 	vldr	d5, [pc, #720]	; 15360 <G_q+0xd270>
   15090:	ee27 5b05 	vmul.f64	d5, d7, d5
    t231.im * 3.061616997868383E-17);
   15094:	4bb6      	ldr	r3, [pc, #728]	; (15370 <G_q+0xd280>)
   15096:	f241 32d0 	movw	r2, #5072	; 0x13d0
   1509a:	443a      	add	r2, r7
   1509c:	4413      	add	r3, r2
   1509e:	ed93 7b02 	vldr	d7, [r3, #8]
   150a2:	ed9f 4bab 	vldr	d4, [pc, #684]	; 15350 <G_q+0xd260>
   150a6:	ee27 7b04 	vmul.f64	d7, d7, d4
  t60_re = (t230.re * 0.0 - t230.im * 3.061616997868383E-17) - (t231.re * 0.0 -
   150aa:	ee35 7b47 	vsub.f64	d7, d5, d7
   150ae:	f241 2350 	movw	r3, #4688	; 0x1250
   150b2:	443b      	add	r3, r7
   150b4:	ee36 7b47 	vsub.f64	d7, d6, d7
   150b8:	ed83 7b00 	vstr	d7, [r3]
  t76_re = (t230.re * 3.061616997868383E-17 + t230.im * 0.0) - (t231.re *
   150bc:	f507 7344 	add.w	r3, r7, #784	; 0x310
   150c0:	ed93 7b00 	vldr	d7, [r3]
   150c4:	ed9f 6ba2 	vldr	d6, [pc, #648]	; 15350 <G_q+0xd260>
   150c8:	ee27 6b06 	vmul.f64	d6, d7, d6
   150cc:	f507 7344 	add.w	r3, r7, #784	; 0x310
   150d0:	ed93 7b02 	vldr	d7, [r3, #8]
   150d4:	ed9f 5ba2 	vldr	d5, [pc, #648]	; 15360 <G_q+0xd270>
   150d8:	ee27 7b05 	vmul.f64	d7, d7, d5
   150dc:	ee36 6b07 	vadd.f64	d6, d6, d7
   150e0:	4ba3      	ldr	r3, [pc, #652]	; (15370 <G_q+0xd280>)
   150e2:	f241 32d0 	movw	r2, #5072	; 0x13d0
   150e6:	443a      	add	r2, r7
   150e8:	4413      	add	r3, r2
   150ea:	ed93 7b00 	vldr	d7, [r3]
   150ee:	ed9f 5b98 	vldr	d5, [pc, #608]	; 15350 <G_q+0xd260>
   150f2:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t231.im * 0.0);
   150f6:	4b9e      	ldr	r3, [pc, #632]	; (15370 <G_q+0xd280>)
   150f8:	f241 32d0 	movw	r2, #5072	; 0x13d0
   150fc:	443a      	add	r2, r7
   150fe:	4413      	add	r3, r2
   15100:	ed93 7b02 	vldr	d7, [r3, #8]
   15104:	ed9f 4b96 	vldr	d4, [pc, #600]	; 15360 <G_q+0xd270>
   15108:	ee27 7b04 	vmul.f64	d7, d7, d4
   1510c:	ee35 7b07 	vadd.f64	d7, d5, d7
  t76_re = (t230.re * 3.061616997868383E-17 + t230.im * 0.0) - (t231.re *
   15110:	f241 23a8 	movw	r3, #4776	; 0x12a8
   15114:	443b      	add	r3, r7
   15116:	ee36 7b47 	vsub.f64	d7, d6, d7
   1511a:	ed83 7b00 	vstr	d7, [r3]
  t72_re = (((t232.re * 6.123233995736766E-17 + t233.re * 6.123233995736766E-17)
   1511e:	f241 0350 	movw	r3, #4176	; 0x1050
   15122:	443b      	add	r3, r7
   15124:	ed93 7b00 	vldr	d7, [r3]
   15128:	ed9f 6b8f 	vldr	d6, [pc, #572]	; 15368 <G_q+0xd278>
   1512c:	ee27 6b06 	vmul.f64	d6, d7, d6
   15130:	f507 5383 	add.w	r3, r7, #4192	; 0x1060
   15134:	ed93 7b00 	vldr	d7, [r3]
   15138:	ed9f 5b8b 	vldr	d5, [pc, #556]	; 15368 <G_q+0xd278>
   1513c:	ee27 7b05 	vmul.f64	d7, d7, d5
   15140:	ee36 6b07 	vadd.f64	d6, d6, d7
             + (t13_re * t16_re - t13_im * t16_im)) + (t23_re * t20_re - t3_im *
   15144:	f241 3378 	movw	r3, #4984	; 0x1378
   15148:	443b      	add	r3, r7
   1514a:	ed93 5b00 	vldr	d5, [r3]
   1514e:	f241 3368 	movw	r3, #4968	; 0x1368
   15152:	443b      	add	r3, r7
   15154:	ed93 7b00 	vldr	d7, [r3]
   15158:	ee25 5b07 	vmul.f64	d5, d5, d7
   1515c:	f241 3370 	movw	r3, #4976	; 0x1370
   15160:	443b      	add	r3, r7
   15162:	ed93 4b00 	vldr	d4, [r3]
   15166:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   1516a:	ed93 7b00 	vldr	d7, [r3]
   1516e:	ee24 7b07 	vmul.f64	d7, d4, d7
   15172:	ee35 7b47 	vsub.f64	d7, d5, d7
   15176:	ee36 6b07 	vadd.f64	d6, d6, d7
   1517a:	f241 3330 	movw	r3, #4912	; 0x1330
   1517e:	443b      	add	r3, r7
   15180:	ed93 5b00 	vldr	d5, [r3]
   15184:	f241 3348 	movw	r3, #4936	; 0x1348
   15188:	443b      	add	r3, r7
   1518a:	ed93 7b00 	vldr	d7, [r3]
   1518e:	ee25 5b07 	vmul.f64	d5, d5, d7
   15192:	f241 3310 	movw	r3, #4880	; 0x1310
   15196:	443b      	add	r3, r7
   15198:	ed93 4b00 	vldr	d4, [r3]
   1519c:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   151a0:	ed93 7b00 	vldr	d7, [r3]
   151a4:	ee24 7b07 	vmul.f64	d7, d4, d7
   151a8:	ee35 7b47 	vsub.f64	d7, d5, d7
   151ac:	ee36 7b07 	vadd.f64	d7, d6, d7
  t72_re = (((t232.re * 6.123233995736766E-17 + t233.re * 6.123233995736766E-17)
   151b0:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   151b4:	ed9f 6b6c 	vldr	d6, [pc, #432]	; 15368 <G_q+0xd278>
   151b8:	ee37 7b46 	vsub.f64	d7, d7, d6
   151bc:	ed83 7b00 	vstr	d7, [r3]
             t20_im)) - 6.123233995736766E-17;
  t23_re = ((t232.im * 6.123233995736766E-17 + t233.im * 6.123233995736766E-17)
   151c0:	f241 0350 	movw	r3, #4176	; 0x1050
   151c4:	443b      	add	r3, r7
   151c6:	ed93 7b02 	vldr	d7, [r3, #8]
   151ca:	ed9f 6b67 	vldr	d6, [pc, #412]	; 15368 <G_q+0xd278>
   151ce:	ee27 6b06 	vmul.f64	d6, d7, d6
   151d2:	f507 5383 	add.w	r3, r7, #4192	; 0x1060
   151d6:	ed93 7b02 	vldr	d7, [r3, #8]
   151da:	ed9f 5b63 	vldr	d5, [pc, #396]	; 15368 <G_q+0xd278>
   151de:	ee27 7b05 	vmul.f64	d7, d7, d5
   151e2:	ee36 6b07 	vadd.f64	d6, d6, d7
            + (t13_re * t16_im + t13_im * t16_re)) + (t23_re * t20_im + t3_im *
   151e6:	f241 3378 	movw	r3, #4984	; 0x1378
   151ea:	443b      	add	r3, r7
   151ec:	ed93 5b00 	vldr	d5, [r3]
   151f0:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   151f4:	ed93 7b00 	vldr	d7, [r3]
   151f8:	ee25 5b07 	vmul.f64	d5, d5, d7
   151fc:	f241 3370 	movw	r3, #4976	; 0x1370
   15200:	443b      	add	r3, r7
   15202:	ed93 4b00 	vldr	d4, [r3]
   15206:	f241 3368 	movw	r3, #4968	; 0x1368
   1520a:	443b      	add	r3, r7
   1520c:	ed93 7b00 	vldr	d7, [r3]
   15210:	ee24 7b07 	vmul.f64	d7, d4, d7
   15214:	ee35 7b07 	vadd.f64	d7, d5, d7
   15218:	ee36 6b07 	vadd.f64	d6, d6, d7
   1521c:	f241 3330 	movw	r3, #4912	; 0x1330
   15220:	443b      	add	r3, r7
   15222:	ed93 5b00 	vldr	d5, [r3]
   15226:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   1522a:	ed93 7b00 	vldr	d7, [r3]
   1522e:	ee25 5b07 	vmul.f64	d5, d5, d7
   15232:	f241 3310 	movw	r3, #4880	; 0x1310
   15236:	443b      	add	r3, r7
   15238:	ed93 4b00 	vldr	d4, [r3]
   1523c:	f241 3348 	movw	r3, #4936	; 0x1348
   15240:	443b      	add	r3, r7
   15242:	ed93 7b00 	vldr	d7, [r3]
   15246:	ee24 7b07 	vmul.f64	d7, d4, d7
   1524a:	ee35 7b07 	vadd.f64	d7, d5, d7
  t23_re = ((t232.im * 6.123233995736766E-17 + t233.im * 6.123233995736766E-17)
   1524e:	ee36 7b07 	vadd.f64	d7, d6, d7
   15252:	f241 3330 	movw	r3, #4912	; 0x1330
   15256:	443b      	add	r3, r7
   15258:	ed83 7b00 	vstr	d7, [r3]
    t20_re);
  if (t220.im == 0.0) {
   1525c:	f507 6309 	add.w	r3, r7, #2192	; 0x890
   15260:	ed93 7b02 	vldr	d7, [r3, #8]
   15264:	eeb5 7b40 	vcmp.f64	d7, #0.0
   15268:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1526c:	d115      	bne.n	1529a <G_q+0xd1aa>
    t12_re = t220.re / 2.0;
   1526e:	f507 6309 	add.w	r3, r7, #2192	; 0x890
   15272:	ed93 6b00 	vldr	d6, [r3]
   15276:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1527a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1527e:	f241 3388 	movw	r3, #5000	; 0x1388
   15282:	443b      	add	r3, r7
   15284:	ed83 7b00 	vstr	d7, [r3]
    t58_im = 0.0;
   15288:	f507 5295 	add.w	r2, r7, #4768	; 0x12a0
   1528c:	f04f 0300 	mov.w	r3, #0
   15290:	f04f 0400 	mov.w	r4, #0
   15294:	e9c2 3400 	strd	r3, r4, [r2]
   15298:	e037      	b.n	1530a <G_q+0xd21a>
  } else if (t220.re == 0.0) {
   1529a:	f507 6309 	add.w	r3, r7, #2192	; 0x890
   1529e:	ed93 7b00 	vldr	d7, [r3]
   152a2:	eeb5 7b40 	vcmp.f64	d7, #0.0
   152a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   152aa:	d115      	bne.n	152d8 <G_q+0xd1e8>
    t12_re = 0.0;
   152ac:	f04f 0300 	mov.w	r3, #0
   152b0:	f04f 0400 	mov.w	r4, #0
   152b4:	f241 3288 	movw	r2, #5000	; 0x1388
   152b8:	443a      	add	r2, r7
   152ba:	e9c2 3400 	strd	r3, r4, [r2]
    t58_im = t220.im / 2.0;
   152be:	f507 6309 	add.w	r3, r7, #2192	; 0x890
   152c2:	ed93 6b02 	vldr	d6, [r3, #8]
   152c6:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   152ca:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   152ce:	ee86 7b05 	vdiv.f64	d7, d6, d5
   152d2:	ed83 7b00 	vstr	d7, [r3]
   152d6:	e018      	b.n	1530a <G_q+0xd21a>
  } else {
    t12_re = t220.re / 2.0;
   152d8:	f507 6309 	add.w	r3, r7, #2192	; 0x890
   152dc:	ed93 6b00 	vldr	d6, [r3]
   152e0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   152e4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   152e8:	f241 3388 	movw	r3, #5000	; 0x1388
   152ec:	443b      	add	r3, r7
   152ee:	ed83 7b00 	vstr	d7, [r3]
    t58_im = t220.im / 2.0;
   152f2:	f507 6309 	add.w	r3, r7, #2192	; 0x890
   152f6:	ed93 6b02 	vldr	d6, [r3, #8]
   152fa:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   152fe:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15302:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15306:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t221.im == 0.0) {
   1530a:	f507 630a 	add.w	r3, r7, #2208	; 0x8a0
   1530e:	ed93 7b02 	vldr	d7, [r3, #8]
   15312:	eeb5 7b40 	vcmp.f64	d7, #0.0
   15316:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1531a:	d12b      	bne.n	15374 <G_q+0xd284>
    t34_re = t221.re / 2.0;
   1531c:	f507 630a 	add.w	r3, r7, #2208	; 0x8a0
   15320:	ed93 6b00 	vldr	d6, [r3]
   15324:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15328:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1532c:	f241 33b8 	movw	r3, #5048	; 0x13b8
   15330:	443b      	add	r3, r7
   15332:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   15336:	f04f 0300 	mov.w	r3, #0
   1533a:	f04f 0400 	mov.w	r4, #0
   1533e:	f241 32b0 	movw	r2, #5040	; 0x13b0
   15342:	443a      	add	r2, r7
   15344:	e9c2 3400 	strd	r3, r4, [r2]
   15348:	e04e      	b.n	153e8 <G_q+0xd2f8>
   1534a:	bf00      	nop
   1534c:	f3af 8000 	nop.w
   15350:	33145c07 	.word	0x33145c07
   15354:	3c81a626 	.word	0x3c81a626
   15358:	858a5d48 	.word	0x858a5d48
   1535c:	394377ce 	.word	0x394377ce
	...
   15368:	33145c07 	.word	0x33145c07
   1536c:	3c91a626 	.word	0x3c91a626
   15370:	ffffef50 	.word	0xffffef50
  } else if (t221.re == 0.0) {
   15374:	f507 630a 	add.w	r3, r7, #2208	; 0x8a0
   15378:	ed93 7b00 	vldr	d7, [r3]
   1537c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   15380:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   15384:	d116      	bne.n	153b4 <G_q+0xd2c4>
    t34_re = 0.0;
   15386:	f04f 0300 	mov.w	r3, #0
   1538a:	f04f 0400 	mov.w	r4, #0
   1538e:	f241 32b8 	movw	r2, #5048	; 0x13b8
   15392:	443a      	add	r2, r7
   15394:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t221.im / 2.0;
   15398:	f507 630a 	add.w	r3, r7, #2208	; 0x8a0
   1539c:	ed93 6b02 	vldr	d6, [r3, #8]
   153a0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   153a4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   153a8:	f241 33b0 	movw	r3, #5040	; 0x13b0
   153ac:	443b      	add	r3, r7
   153ae:	ed83 7b00 	vstr	d7, [r3]
   153b2:	e019      	b.n	153e8 <G_q+0xd2f8>
  } else {
    t34_re = t221.re / 2.0;
   153b4:	f507 630a 	add.w	r3, r7, #2208	; 0x8a0
   153b8:	ed93 6b00 	vldr	d6, [r3]
   153bc:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   153c0:	ee86 7b05 	vdiv.f64	d7, d6, d5
   153c4:	f241 33b8 	movw	r3, #5048	; 0x13b8
   153c8:	443b      	add	r3, r7
   153ca:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t221.im / 2.0;
   153ce:	f507 630a 	add.w	r3, r7, #2208	; 0x8a0
   153d2:	ed93 6b02 	vldr	d6, [r3, #8]
   153d6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   153da:	ee86 7b05 	vdiv.f64	d7, d6, d5
   153de:	f241 33b0 	movw	r3, #5040	; 0x13b0
   153e2:	443b      	add	r3, r7
   153e4:	ed83 7b00 	vstr	d7, [r3]
  }

  t12_re += t34_re;
   153e8:	f241 3388 	movw	r3, #5000	; 0x1388
   153ec:	443b      	add	r3, r7
   153ee:	ed93 6b00 	vldr	d6, [r3]
   153f2:	f241 33b8 	movw	r3, #5048	; 0x13b8
   153f6:	443b      	add	r3, r7
   153f8:	ed93 7b00 	vldr	d7, [r3]
   153fc:	ee36 7b07 	vadd.f64	d7, d6, d7
   15400:	f241 3388 	movw	r3, #5000	; 0x1388
   15404:	443b      	add	r3, r7
   15406:	ed83 7b00 	vstr	d7, [r3]
  t58_im += t34_im;
   1540a:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   1540e:	f507 5295 	add.w	r2, r7, #4768	; 0x12a0
   15412:	ed92 6b00 	vldr	d6, [r2]
   15416:	f241 32b0 	movw	r2, #5040	; 0x13b0
   1541a:	443a      	add	r2, r7
   1541c:	ed92 7b00 	vldr	d7, [r2]
   15420:	ee36 7b07 	vadd.f64	d7, d6, d7
   15424:	ed83 7b00 	vstr	d7, [r3]
  t13_re = (t222.re * 0.0 - t222.im * 0.5) - (t223.re * 0.0 - t223.im * 0.5);
   15428:	f241 0310 	movw	r3, #4112	; 0x1010
   1542c:	443b      	add	r3, r7
   1542e:	ed93 7b00 	vldr	d7, [r3]
   15432:	ed9f 6b79 	vldr	d6, [pc, #484]	; 15618 <G_q+0xd528>
   15436:	ee27 6b06 	vmul.f64	d6, d7, d6
   1543a:	f241 0310 	movw	r3, #4112	; 0x1010
   1543e:	443b      	add	r3, r7
   15440:	ed93 7b02 	vldr	d7, [r3, #8]
   15444:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   15448:	ee27 7b05 	vmul.f64	d7, d7, d5
   1544c:	ee36 6b47 	vsub.f64	d6, d6, d7
   15450:	f507 5381 	add.w	r3, r7, #4128	; 0x1020
   15454:	ed93 7b00 	vldr	d7, [r3]
   15458:	ed9f 5b6f 	vldr	d5, [pc, #444]	; 15618 <G_q+0xd528>
   1545c:	ee27 5b05 	vmul.f64	d5, d7, d5
   15460:	f507 5381 	add.w	r3, r7, #4128	; 0x1020
   15464:	ed93 7b02 	vldr	d7, [r3, #8]
   15468:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   1546c:	ee27 7b04 	vmul.f64	d7, d7, d4
   15470:	ee35 7b47 	vsub.f64	d7, d5, d7
   15474:	ee36 7b47 	vsub.f64	d7, d6, d7
   15478:	f241 3378 	movw	r3, #4984	; 0x1378
   1547c:	443b      	add	r3, r7
   1547e:	ed83 7b00 	vstr	d7, [r3]
  t13_im = (t222.re * 0.5 + t222.im * 0.0) - (t223.re * 0.5 + t223.im * 0.0);
   15482:	f241 0310 	movw	r3, #4112	; 0x1010
   15486:	443b      	add	r3, r7
   15488:	ed93 7b00 	vldr	d7, [r3]
   1548c:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   15490:	ee27 6b06 	vmul.f64	d6, d7, d6
   15494:	f241 0310 	movw	r3, #4112	; 0x1010
   15498:	443b      	add	r3, r7
   1549a:	ed93 7b02 	vldr	d7, [r3, #8]
   1549e:	ed9f 5b5e 	vldr	d5, [pc, #376]	; 15618 <G_q+0xd528>
   154a2:	ee27 7b05 	vmul.f64	d7, d7, d5
   154a6:	ee36 6b07 	vadd.f64	d6, d6, d7
   154aa:	f507 5381 	add.w	r3, r7, #4128	; 0x1020
   154ae:	ed93 7b00 	vldr	d7, [r3]
   154b2:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   154b6:	ee27 5b05 	vmul.f64	d5, d7, d5
   154ba:	f507 5381 	add.w	r3, r7, #4128	; 0x1020
   154be:	ed93 7b02 	vldr	d7, [r3, #8]
   154c2:	ed9f 4b55 	vldr	d4, [pc, #340]	; 15618 <G_q+0xd528>
   154c6:	ee27 7b04 	vmul.f64	d7, d7, d4
   154ca:	ee35 7b07 	vadd.f64	d7, d5, d7
   154ce:	ee36 7b47 	vsub.f64	d7, d6, d7
   154d2:	f241 3370 	movw	r3, #4976	; 0x1370
   154d6:	443b      	add	r3, r7
   154d8:	ed83 7b00 	vstr	d7, [r3]
  if (t226.im == 0.0) {
   154dc:	f241 0330 	movw	r3, #4144	; 0x1030
   154e0:	443b      	add	r3, r7
   154e2:	ed93 7b02 	vldr	d7, [r3, #8]
   154e6:	eeb5 7b40 	vcmp.f64	d7, #0.0
   154ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   154ee:	d116      	bne.n	1551e <G_q+0xd42e>
    t16_re = t226.re / 2.0;
   154f0:	f241 0330 	movw	r3, #4144	; 0x1030
   154f4:	443b      	add	r3, r7
   154f6:	ed93 6b00 	vldr	d6, [r3]
   154fa:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   154fe:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15502:	f241 3368 	movw	r3, #4968	; 0x1368
   15506:	443b      	add	r3, r7
   15508:	ed83 7b00 	vstr	d7, [r3]
    t16_im = 0.0;
   1550c:	f04f 0300 	mov.w	r3, #0
   15510:	f04f 0400 	mov.w	r4, #0
   15514:	f507 529b 	add.w	r2, r7, #4960	; 0x1360
   15518:	e9c2 3400 	strd	r3, r4, [r2]
   1551c:	e03b      	b.n	15596 <G_q+0xd4a6>
  } else if (t226.re == 0.0) {
   1551e:	f241 0330 	movw	r3, #4144	; 0x1030
   15522:	443b      	add	r3, r7
   15524:	ed93 7b00 	vldr	d7, [r3]
   15528:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1552c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   15530:	d116      	bne.n	15560 <G_q+0xd470>
    t16_re = 0.0;
   15532:	f04f 0300 	mov.w	r3, #0
   15536:	f04f 0400 	mov.w	r4, #0
   1553a:	f241 3268 	movw	r2, #4968	; 0x1368
   1553e:	443a      	add	r2, r7
   15540:	e9c2 3400 	strd	r3, r4, [r2]
    t16_im = t226.im / 2.0;
   15544:	f241 0330 	movw	r3, #4144	; 0x1030
   15548:	443b      	add	r3, r7
   1554a:	ed93 6b02 	vldr	d6, [r3, #8]
   1554e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15552:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15556:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   1555a:	ed83 7b00 	vstr	d7, [r3]
   1555e:	e01a      	b.n	15596 <G_q+0xd4a6>
  } else {
    t16_re = t226.re / 2.0;
   15560:	f241 0330 	movw	r3, #4144	; 0x1030
   15564:	443b      	add	r3, r7
   15566:	ed93 6b00 	vldr	d6, [r3]
   1556a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1556e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15572:	f241 3368 	movw	r3, #4968	; 0x1368
   15576:	443b      	add	r3, r7
   15578:	ed83 7b00 	vstr	d7, [r3]
    t16_im = t226.im / 2.0;
   1557c:	f241 0330 	movw	r3, #4144	; 0x1030
   15580:	443b      	add	r3, r7
   15582:	ed93 6b02 	vldr	d6, [r3, #8]
   15586:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1558a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1558e:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   15592:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t227.im == 0.0) {
   15596:	f507 5382 	add.w	r3, r7, #4160	; 0x1040
   1559a:	ed93 7b02 	vldr	d7, [r3, #8]
   1559e:	eeb5 7b40 	vcmp.f64	d7, #0.0
   155a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   155a6:	d116      	bne.n	155d6 <G_q+0xd4e6>
    t34_re = t227.re / 2.0;
   155a8:	f507 5382 	add.w	r3, r7, #4160	; 0x1040
   155ac:	ed93 6b00 	vldr	d6, [r3]
   155b0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   155b4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   155b8:	f241 33b8 	movw	r3, #5048	; 0x13b8
   155bc:	443b      	add	r3, r7
   155be:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   155c2:	f04f 0300 	mov.w	r3, #0
   155c6:	f04f 0400 	mov.w	r4, #0
   155ca:	f241 32b0 	movw	r2, #5040	; 0x13b0
   155ce:	443a      	add	r2, r7
   155d0:	e9c2 3400 	strd	r3, r4, [r2]
   155d4:	e03e      	b.n	15654 <G_q+0xd564>
  } else if (t227.re == 0.0) {
   155d6:	f507 5382 	add.w	r3, r7, #4160	; 0x1040
   155da:	ed93 7b00 	vldr	d7, [r3]
   155de:	eeb5 7b40 	vcmp.f64	d7, #0.0
   155e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   155e6:	d11b      	bne.n	15620 <G_q+0xd530>
    t34_re = 0.0;
   155e8:	f04f 0300 	mov.w	r3, #0
   155ec:	f04f 0400 	mov.w	r4, #0
   155f0:	f241 32b8 	movw	r2, #5048	; 0x13b8
   155f4:	443a      	add	r2, r7
   155f6:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t227.im / 2.0;
   155fa:	f507 5382 	add.w	r3, r7, #4160	; 0x1040
   155fe:	ed93 6b02 	vldr	d6, [r3, #8]
   15602:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15606:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1560a:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1560e:	443b      	add	r3, r7
   15610:	ed83 7b00 	vstr	d7, [r3]
   15614:	e01e      	b.n	15654 <G_q+0xd564>
   15616:	bf00      	nop
	...
  } else {
    t34_re = t227.re / 2.0;
   15620:	f507 5382 	add.w	r3, r7, #4160	; 0x1040
   15624:	ed93 6b00 	vldr	d6, [r3]
   15628:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1562c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15630:	f241 33b8 	movw	r3, #5048	; 0x13b8
   15634:	443b      	add	r3, r7
   15636:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t227.im / 2.0;
   1563a:	f507 5382 	add.w	r3, r7, #4160	; 0x1040
   1563e:	ed93 6b02 	vldr	d6, [r3, #8]
   15642:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15646:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1564a:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1564e:	443b      	add	r3, r7
   15650:	ed83 7b00 	vstr	d7, [r3]
  }

  t20_re = (t224.re * 0.0 - t224.im * 0.5) - (t225.re * 0.0 - t225.im * 0.5);
   15654:	f507 630b 	add.w	r3, r7, #2224	; 0x8b0
   15658:	ed93 7b00 	vldr	d7, [r3]
   1565c:	ed9f 6bde 	vldr	d6, [pc, #888]	; 159d8 <G_q+0xd8e8>
   15660:	ee27 6b06 	vmul.f64	d6, d7, d6
   15664:	f507 630b 	add.w	r3, r7, #2224	; 0x8b0
   15668:	ed93 7b02 	vldr	d7, [r3, #8]
   1566c:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   15670:	ee27 7b05 	vmul.f64	d7, d7, d5
   15674:	ee36 6b47 	vsub.f64	d6, d6, d7
   15678:	f507 630c 	add.w	r3, r7, #2240	; 0x8c0
   1567c:	ed93 7b00 	vldr	d7, [r3]
   15680:	ed9f 5bd5 	vldr	d5, [pc, #852]	; 159d8 <G_q+0xd8e8>
   15684:	ee27 5b05 	vmul.f64	d5, d7, d5
   15688:	f507 630c 	add.w	r3, r7, #2240	; 0x8c0
   1568c:	ed93 7b02 	vldr	d7, [r3, #8]
   15690:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   15694:	ee27 7b04 	vmul.f64	d7, d7, d4
   15698:	ee35 7b47 	vsub.f64	d7, d5, d7
   1569c:	ee36 7b47 	vsub.f64	d7, d6, d7
   156a0:	f241 3348 	movw	r3, #4936	; 0x1348
   156a4:	443b      	add	r3, r7
   156a6:	ed83 7b00 	vstr	d7, [r3]
  t20_im = (t224.re * 0.5 + t224.im * 0.0) - (t225.re * 0.5 + t225.im * 0.0);
   156aa:	f507 630b 	add.w	r3, r7, #2224	; 0x8b0
   156ae:	ed93 7b00 	vldr	d7, [r3]
   156b2:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   156b6:	ee27 6b06 	vmul.f64	d6, d7, d6
   156ba:	f507 630b 	add.w	r3, r7, #2224	; 0x8b0
   156be:	ed93 7b02 	vldr	d7, [r3, #8]
   156c2:	ed9f 5bc5 	vldr	d5, [pc, #788]	; 159d8 <G_q+0xd8e8>
   156c6:	ee27 7b05 	vmul.f64	d7, d7, d5
   156ca:	ee36 6b07 	vadd.f64	d6, d6, d7
   156ce:	f507 630c 	add.w	r3, r7, #2240	; 0x8c0
   156d2:	ed93 7b00 	vldr	d7, [r3]
   156d6:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   156da:	ee27 5b05 	vmul.f64	d5, d7, d5
   156de:	f507 630c 	add.w	r3, r7, #2240	; 0x8c0
   156e2:	ed93 7b02 	vldr	d7, [r3, #8]
   156e6:	ed9f 4bbc 	vldr	d4, [pc, #752]	; 159d8 <G_q+0xd8e8>
   156ea:	ee27 7b04 	vmul.f64	d7, d7, d4
   156ee:	ee35 7b07 	vadd.f64	d7, d5, d7
   156f2:	ee36 7b47 	vsub.f64	d7, d6, d7
   156f6:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   156fa:	ed83 7b00 	vstr	d7, [r3]
  t16_re = (t16_re + t34_re) + 7.498798913309288E-33;
   156fe:	f241 3368 	movw	r3, #4968	; 0x1368
   15702:	443b      	add	r3, r7
   15704:	ed93 6b00 	vldr	d6, [r3]
   15708:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1570c:	443b      	add	r3, r7
   1570e:	ed93 7b00 	vldr	d7, [r3]
   15712:	ee36 7b07 	vadd.f64	d7, d6, d7
   15716:	ed9f 6bb2 	vldr	d6, [pc, #712]	; 159e0 <G_q+0xd8f0>
   1571a:	ee37 7b06 	vadd.f64	d7, d7, d6
   1571e:	f241 3368 	movw	r3, #4968	; 0x1368
   15722:	443b      	add	r3, r7
   15724:	ed83 7b00 	vstr	d7, [r3]
  t16_im += t34_im;
   15728:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   1572c:	ed93 6b00 	vldr	d6, [r3]
   15730:	f241 33b0 	movw	r3, #5040	; 0x13b0
   15734:	443b      	add	r3, r7
   15736:	ed93 7b00 	vldr	d7, [r3]
   1573a:	ee36 7b07 	vadd.f64	d7, d6, d7
   1573e:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   15742:	ed83 7b00 	vstr	d7, [r3]
  t12_im = t228.re * 3.061616997868383E-17 + t229.re * 3.061616997868383E-17;
   15746:	f507 733c 	add.w	r3, r7, #752	; 0x2f0
   1574a:	ed93 7b00 	vldr	d7, [r3]
   1574e:	ed9f 6ba6 	vldr	d6, [pc, #664]	; 159e8 <G_q+0xd8f8>
   15752:	ee27 6b06 	vmul.f64	d6, d7, d6
   15756:	4ba6      	ldr	r3, [pc, #664]	; (159f0 <G_q+0xd900>)
   15758:	f241 32d0 	movw	r2, #5072	; 0x13d0
   1575c:	443a      	add	r2, r7
   1575e:	4413      	add	r3, r2
   15760:	ed93 7b00 	vldr	d7, [r3]
   15764:	ed9f 5ba0 	vldr	d5, [pc, #640]	; 159e8 <G_q+0xd8f8>
   15768:	ee27 7b05 	vmul.f64	d7, d7, d5
   1576c:	ee36 7b07 	vadd.f64	d7, d6, d7
   15770:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   15774:	ed83 7b00 	vstr	d7, [r3]
  b_t10_re = t228.im * 3.061616997868383E-17 + t229.im * 3.061616997868383E-17;
   15778:	f507 733c 	add.w	r3, r7, #752	; 0x2f0
   1577c:	ed93 7b02 	vldr	d7, [r3, #8]
   15780:	ed9f 6b99 	vldr	d6, [pc, #612]	; 159e8 <G_q+0xd8f8>
   15784:	ee27 6b06 	vmul.f64	d6, d7, d6
   15788:	4b99      	ldr	r3, [pc, #612]	; (159f0 <G_q+0xd900>)
   1578a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   1578e:	443a      	add	r2, r7
   15790:	4413      	add	r3, r2
   15792:	ed93 7b02 	vldr	d7, [r3, #8]
   15796:	ed9f 5b94 	vldr	d5, [pc, #592]	; 159e8 <G_q+0xd8f8>
   1579a:	ee27 7b05 	vmul.f64	d7, d7, d5
   1579e:	ee36 7b07 	vadd.f64	d7, d6, d7
   157a2:	f241 3338 	movw	r3, #4920	; 0x1338
   157a6:	443b      	add	r3, r7
   157a8:	ed83 7b00 	vstr	d7, [r3]
  t85_im = (t12_re * t13_re - t58_im * t13_im) - (t20_re * t16_re - t20_im *
   157ac:	f241 3388 	movw	r3, #5000	; 0x1388
   157b0:	443b      	add	r3, r7
   157b2:	ed93 6b00 	vldr	d6, [r3]
   157b6:	f241 3378 	movw	r3, #4984	; 0x1378
   157ba:	443b      	add	r3, r7
   157bc:	ed93 7b00 	vldr	d7, [r3]
   157c0:	ee26 6b07 	vmul.f64	d6, d6, d7
   157c4:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   157c8:	ed93 5b00 	vldr	d5, [r3]
   157cc:	f241 3370 	movw	r3, #4976	; 0x1370
   157d0:	443b      	add	r3, r7
   157d2:	ed93 7b00 	vldr	d7, [r3]
   157d6:	ee25 7b07 	vmul.f64	d7, d5, d7
   157da:	ee36 6b47 	vsub.f64	d6, d6, d7
   157de:	f241 3348 	movw	r3, #4936	; 0x1348
   157e2:	443b      	add	r3, r7
   157e4:	ed93 5b00 	vldr	d5, [r3]
   157e8:	f241 3368 	movw	r3, #4968	; 0x1368
   157ec:	443b      	add	r3, r7
   157ee:	ed93 7b00 	vldr	d7, [r3]
   157f2:	ee25 5b07 	vmul.f64	d5, d5, d7
   157f6:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   157fa:	ed93 4b00 	vldr	d4, [r3]
   157fe:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   15802:	ed93 7b00 	vldr	d7, [r3]
   15806:	ee24 7b07 	vmul.f64	d7, d4, d7
   1580a:	ee35 7b47 	vsub.f64	d7, d5, d7
   1580e:	ee36 7b47 	vsub.f64	d7, d6, d7
   15812:	f241 3318 	movw	r3, #4888	; 0x1318
   15816:	443b      	add	r3, r7
   15818:	ed83 7b00 	vstr	d7, [r3]
    t16_im);
  t58_im = (t12_re * t13_im + t58_im * t13_re) - (t20_re * t16_im + t20_im *
   1581c:	f241 3388 	movw	r3, #5000	; 0x1388
   15820:	443b      	add	r3, r7
   15822:	ed93 6b00 	vldr	d6, [r3]
   15826:	f241 3370 	movw	r3, #4976	; 0x1370
   1582a:	443b      	add	r3, r7
   1582c:	ed93 7b00 	vldr	d7, [r3]
   15830:	ee26 6b07 	vmul.f64	d6, d6, d7
   15834:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   15838:	ed93 5b00 	vldr	d5, [r3]
   1583c:	f241 3378 	movw	r3, #4984	; 0x1378
   15840:	443b      	add	r3, r7
   15842:	ed93 7b00 	vldr	d7, [r3]
   15846:	ee25 7b07 	vmul.f64	d7, d5, d7
   1584a:	ee36 6b07 	vadd.f64	d6, d6, d7
   1584e:	f241 3348 	movw	r3, #4936	; 0x1348
   15852:	443b      	add	r3, r7
   15854:	ed93 5b00 	vldr	d5, [r3]
   15858:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   1585c:	ed93 7b00 	vldr	d7, [r3]
   15860:	ee25 5b07 	vmul.f64	d5, d5, d7
   15864:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   15868:	ed93 4b00 	vldr	d4, [r3]
   1586c:	f241 3368 	movw	r3, #4968	; 0x1368
   15870:	443b      	add	r3, r7
   15872:	ed93 7b00 	vldr	d7, [r3]
   15876:	ee24 7b07 	vmul.f64	d7, d4, d7
   1587a:	ee35 7b07 	vadd.f64	d7, d5, d7
   1587e:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   15882:	ee36 7b47 	vsub.f64	d7, d6, d7
   15886:	ed83 7b00 	vstr	d7, [r3]
    t16_re);
  if (t218.im == 0.0) {
   1588a:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
   1588e:	ed93 7b02 	vldr	d7, [r3, #8]
   15892:	eeb5 7b40 	vcmp.f64	d7, #0.0
   15896:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1589a:	d116      	bne.n	158ca <G_q+0xd7da>
    t34_re = t218.re / 2.0;
   1589c:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
   158a0:	ed93 6b00 	vldr	d6, [r3]
   158a4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   158a8:	ee86 7b05 	vdiv.f64	d7, d6, d5
   158ac:	f241 33b8 	movw	r3, #5048	; 0x13b8
   158b0:	443b      	add	r3, r7
   158b2:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   158b6:	f04f 0300 	mov.w	r3, #0
   158ba:	f04f 0400 	mov.w	r4, #0
   158be:	f241 32b0 	movw	r2, #5040	; 0x13b0
   158c2:	443a      	add	r2, r7
   158c4:	e9c2 3400 	strd	r3, r4, [r2]
   158c8:	e039      	b.n	1593e <G_q+0xd84e>
  } else if (t218.re == 0.0) {
   158ca:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
   158ce:	ed93 7b00 	vldr	d7, [r3]
   158d2:	eeb5 7b40 	vcmp.f64	d7, #0.0
   158d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   158da:	d116      	bne.n	1590a <G_q+0xd81a>
    t34_re = 0.0;
   158dc:	f04f 0300 	mov.w	r3, #0
   158e0:	f04f 0400 	mov.w	r4, #0
   158e4:	f241 32b8 	movw	r2, #5048	; 0x13b8
   158e8:	443a      	add	r2, r7
   158ea:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t218.im / 2.0;
   158ee:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
   158f2:	ed93 6b02 	vldr	d6, [r3, #8]
   158f6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   158fa:	ee86 7b05 	vdiv.f64	d7, d6, d5
   158fe:	f241 33b0 	movw	r3, #5040	; 0x13b0
   15902:	443b      	add	r3, r7
   15904:	ed83 7b00 	vstr	d7, [r3]
   15908:	e019      	b.n	1593e <G_q+0xd84e>
  } else {
    t34_re = t218.re / 2.0;
   1590a:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
   1590e:	ed93 6b00 	vldr	d6, [r3]
   15912:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15916:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1591a:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1591e:	443b      	add	r3, r7
   15920:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t218.im / 2.0;
   15924:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
   15928:	ed93 6b02 	vldr	d6, [r3, #8]
   1592c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15930:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15934:	f241 33b0 	movw	r3, #5040	; 0x13b0
   15938:	443b      	add	r3, r7
   1593a:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t219.im == 0.0) {
   1593e:	4b2d      	ldr	r3, [pc, #180]	; (159f4 <G_q+0xd904>)
   15940:	f241 32d0 	movw	r2, #5072	; 0x13d0
   15944:	443a      	add	r2, r7
   15946:	4413      	add	r3, r2
   15948:	ed93 7b02 	vldr	d7, [r3, #8]
   1594c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   15950:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   15954:	d119      	bne.n	1598a <G_q+0xd89a>
    t13_re = t219.re / 2.0;
   15956:	4b27      	ldr	r3, [pc, #156]	; (159f4 <G_q+0xd904>)
   15958:	f241 32d0 	movw	r2, #5072	; 0x13d0
   1595c:	443a      	add	r2, r7
   1595e:	4413      	add	r3, r2
   15960:	ed93 6b00 	vldr	d6, [r3]
   15964:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15968:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1596c:	f241 3378 	movw	r3, #4984	; 0x1378
   15970:	443b      	add	r3, r7
   15972:	ed83 7b00 	vstr	d7, [r3]
    t13_im = 0.0;
   15976:	f04f 0300 	mov.w	r3, #0
   1597a:	f04f 0400 	mov.w	r4, #0
   1597e:	f241 3270 	movw	r2, #4976	; 0x1370
   15982:	443a      	add	r2, r7
   15984:	e9c2 3400 	strd	r3, r4, [r2]
   15988:	e056      	b.n	15a38 <G_q+0xd948>
  } else if (t219.re == 0.0) {
   1598a:	4b1a      	ldr	r3, [pc, #104]	; (159f4 <G_q+0xd904>)
   1598c:	f241 32d0 	movw	r2, #5072	; 0x13d0
   15990:	443a      	add	r2, r7
   15992:	4413      	add	r3, r2
   15994:	ed93 7b00 	vldr	d7, [r3]
   15998:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1599c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   159a0:	d12a      	bne.n	159f8 <G_q+0xd908>
    t13_re = 0.0;
   159a2:	f04f 0300 	mov.w	r3, #0
   159a6:	f04f 0400 	mov.w	r4, #0
   159aa:	f241 3278 	movw	r2, #4984	; 0x1378
   159ae:	443a      	add	r2, r7
   159b0:	e9c2 3400 	strd	r3, r4, [r2]
    t13_im = t219.im / 2.0;
   159b4:	4b0f      	ldr	r3, [pc, #60]	; (159f4 <G_q+0xd904>)
   159b6:	f241 32d0 	movw	r2, #5072	; 0x13d0
   159ba:	443a      	add	r2, r7
   159bc:	4413      	add	r3, r2
   159be:	ed93 6b02 	vldr	d6, [r3, #8]
   159c2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   159c6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   159ca:	f241 3370 	movw	r3, #4976	; 0x1370
   159ce:	443b      	add	r3, r7
   159d0:	ed83 7b00 	vstr	d7, [r3]
   159d4:	e030      	b.n	15a38 <G_q+0xd948>
   159d6:	bf00      	nop
	...
   159e0:	858a5d48 	.word	0x858a5d48
   159e4:	394377ce 	.word	0x394377ce
   159e8:	33145c07 	.word	0x33145c07
   159ec:	3c81a626 	.word	0x3c81a626
   159f0:	ffffef30 	.word	0xffffef30
   159f4:	ffffecf0 	.word	0xffffecf0
  } else {
    t13_re = t219.re / 2.0;
   159f8:	4be1      	ldr	r3, [pc, #900]	; (15d80 <G_q+0xdc90>)
   159fa:	f241 32d0 	movw	r2, #5072	; 0x13d0
   159fe:	443a      	add	r2, r7
   15a00:	4413      	add	r3, r2
   15a02:	ed93 6b00 	vldr	d6, [r3]
   15a06:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15a0a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15a0e:	f241 3378 	movw	r3, #4984	; 0x1378
   15a12:	443b      	add	r3, r7
   15a14:	ed83 7b00 	vstr	d7, [r3]
    t13_im = t219.im / 2.0;
   15a18:	4bd9      	ldr	r3, [pc, #868]	; (15d80 <G_q+0xdc90>)
   15a1a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   15a1e:	443a      	add	r2, r7
   15a20:	4413      	add	r3, r2
   15a22:	ed93 6b02 	vldr	d6, [r3, #8]
   15a26:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15a2a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15a2e:	f241 3370 	movw	r3, #4976	; 0x1370
   15a32:	443b      	add	r3, r7
   15a34:	ed83 7b00 	vstr	d7, [r3]
  }

  t16_re = (t60_re * t72_re - t76_re * t23_re) - (t12_im * t85_im - b_t10_re *
   15a38:	f241 2250 	movw	r2, #4688	; 0x1250
   15a3c:	443a      	add	r2, r7
   15a3e:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   15a42:	ed92 6b00 	vldr	d6, [r2]
   15a46:	ed93 7b00 	vldr	d7, [r3]
   15a4a:	ee26 6b07 	vmul.f64	d6, d6, d7
   15a4e:	f241 23a8 	movw	r3, #4776	; 0x12a8
   15a52:	443b      	add	r3, r7
   15a54:	ed93 5b00 	vldr	d5, [r3]
   15a58:	f241 3330 	movw	r3, #4912	; 0x1330
   15a5c:	443b      	add	r3, r7
   15a5e:	ed93 7b00 	vldr	d7, [r3]
   15a62:	ee25 7b07 	vmul.f64	d7, d5, d7
   15a66:	ee36 6b47 	vsub.f64	d6, d6, d7
   15a6a:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   15a6e:	ed93 5b00 	vldr	d5, [r3]
   15a72:	f241 3318 	movw	r3, #4888	; 0x1318
   15a76:	443b      	add	r3, r7
   15a78:	ed93 7b00 	vldr	d7, [r3]
   15a7c:	ee25 5b07 	vmul.f64	d5, d5, d7
   15a80:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   15a84:	f241 3238 	movw	r2, #4920	; 0x1338
   15a88:	443a      	add	r2, r7
   15a8a:	ed92 4b00 	vldr	d4, [r2]
   15a8e:	ed93 7b00 	vldr	d7, [r3]
   15a92:	ee24 7b07 	vmul.f64	d7, d4, d7
   15a96:	ee35 7b47 	vsub.f64	d7, d5, d7
   15a9a:	ee36 7b47 	vsub.f64	d7, d6, d7
   15a9e:	f241 3368 	movw	r3, #4968	; 0x1368
   15aa2:	443b      	add	r3, r7
   15aa4:	ed83 7b00 	vstr	d7, [r3]
    t58_im);
  t76_re = (t60_re * t23_re + t76_re * t72_re) - (t12_im * t58_im + b_t10_re *
   15aa8:	f241 2350 	movw	r3, #4688	; 0x1250
   15aac:	443b      	add	r3, r7
   15aae:	ed93 6b00 	vldr	d6, [r3]
   15ab2:	f241 3330 	movw	r3, #4912	; 0x1330
   15ab6:	443b      	add	r3, r7
   15ab8:	ed93 7b00 	vldr	d7, [r3]
   15abc:	ee26 6b07 	vmul.f64	d6, d6, d7
   15ac0:	f241 22a8 	movw	r2, #4776	; 0x12a8
   15ac4:	443a      	add	r2, r7
   15ac6:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   15aca:	ed92 5b00 	vldr	d5, [r2]
   15ace:	ed93 7b00 	vldr	d7, [r3]
   15ad2:	ee25 7b07 	vmul.f64	d7, d5, d7
   15ad6:	ee36 6b07 	vadd.f64	d6, d6, d7
   15ada:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   15ade:	f507 529c 	add.w	r2, r7, #4992	; 0x1380
   15ae2:	ed92 5b00 	vldr	d5, [r2]
   15ae6:	ed93 7b00 	vldr	d7, [r3]
   15aea:	ee25 5b07 	vmul.f64	d5, d5, d7
   15aee:	f241 3338 	movw	r3, #4920	; 0x1338
   15af2:	443b      	add	r3, r7
   15af4:	ed93 4b00 	vldr	d4, [r3]
   15af8:	f241 3318 	movw	r3, #4888	; 0x1318
   15afc:	443b      	add	r3, r7
   15afe:	ed93 7b00 	vldr	d7, [r3]
   15b02:	ee24 7b07 	vmul.f64	d7, d4, d7
   15b06:	ee35 7b07 	vadd.f64	d7, d5, d7
   15b0a:	f241 23a8 	movw	r3, #4776	; 0x12a8
   15b0e:	443b      	add	r3, r7
   15b10:	ee36 7b47 	vsub.f64	d7, d6, d7
   15b14:	ed83 7b00 	vstr	d7, [r3]
    t85_im);
  t34_re += t13_re;
   15b18:	f241 33b8 	movw	r3, #5048	; 0x13b8
   15b1c:	443b      	add	r3, r7
   15b1e:	ed93 6b00 	vldr	d6, [r3]
   15b22:	f241 3378 	movw	r3, #4984	; 0x1378
   15b26:	443b      	add	r3, r7
   15b28:	ed93 7b00 	vldr	d7, [r3]
   15b2c:	ee36 7b07 	vadd.f64	d7, d6, d7
   15b30:	f241 33b8 	movw	r3, #5048	; 0x13b8
   15b34:	443b      	add	r3, r7
   15b36:	ed83 7b00 	vstr	d7, [r3]
  t34_im += t13_im;
   15b3a:	f241 33b0 	movw	r3, #5040	; 0x13b0
   15b3e:	443b      	add	r3, r7
   15b40:	ed93 6b00 	vldr	d6, [r3]
   15b44:	f241 3370 	movw	r3, #4976	; 0x1370
   15b48:	443b      	add	r3, r7
   15b4a:	ed93 7b00 	vldr	d7, [r3]
   15b4e:	ee36 7b07 	vadd.f64	d7, d6, d7
   15b52:	f241 33b0 	movw	r3, #5040	; 0x13b0
   15b56:	443b      	add	r3, r7
   15b58:	ed83 7b00 	vstr	d7, [r3]
  b_G_q[3].re = -g * ((((b_t54_im * t41_re - t43_re * t41_im) * 0.0215 - (t70_im
   15b5c:	4b89      	ldr	r3, [pc, #548]	; (15d84 <G_q+0xdc94>)
   15b5e:	f241 32d0 	movw	r2, #5072	; 0x13d0
   15b62:	443a      	add	r2, r7
   15b64:	4413      	add	r3, r2
   15b66:	ed93 7b00 	vldr	d7, [r3]
   15b6a:	eeb1 6b47 	vneg.f64	d6, d7
   15b6e:	f241 23e8 	movw	r3, #4840	; 0x12e8
   15b72:	443b      	add	r3, r7
   15b74:	ed93 5b00 	vldr	d5, [r3]
   15b78:	f241 3308 	movw	r3, #4872	; 0x1308
   15b7c:	443b      	add	r3, r7
   15b7e:	ed93 7b00 	vldr	d7, [r3]
   15b82:	ee25 5b07 	vmul.f64	d5, d5, d7
   15b86:	f241 2358 	movw	r3, #4696	; 0x1258
   15b8a:	443b      	add	r3, r7
   15b8c:	ed93 4b00 	vldr	d4, [r3]
   15b90:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
   15b94:	ed93 7b00 	vldr	d7, [r3]
   15b98:	ee24 7b07 	vmul.f64	d7, d4, d7
   15b9c:	ee35 7b47 	vsub.f64	d7, d5, d7
   15ba0:	ed9f 5b73 	vldr	d5, [pc, #460]	; 15d70 <G_q+0xdc80>
   15ba4:	ee27 5b05 	vmul.f64	d5, d7, d5
    * b_t54_re - t43_im * t55_im) * 1.3164953090834051E-18) + (t55_re * t74_re -
   15ba8:	f241 23c8 	movw	r3, #4808	; 0x12c8
   15bac:	443b      	add	r3, r7
   15bae:	ed93 4b00 	vldr	d4, [r3]
   15bb2:	f241 23f0 	movw	r3, #4848	; 0x12f0
   15bb6:	443b      	add	r3, r7
   15bb8:	ed93 7b00 	vldr	d7, [r3]
   15bbc:	ee24 4b07 	vmul.f64	d4, d4, d7
   15bc0:	f241 23f8 	movw	r3, #4856	; 0x12f8
   15bc4:	443b      	add	r3, r7
   15bc6:	ed93 3b00 	vldr	d3, [r3]
   15bca:	f241 23d8 	movw	r3, #4824	; 0x12d8
   15bce:	443b      	add	r3, r7
   15bd0:	ed93 7b00 	vldr	d7, [r3]
   15bd4:	ee23 7b07 	vmul.f64	d7, d3, d7
   15bd8:	ee34 7b47 	vsub.f64	d7, d4, d7
   15bdc:	ed9f 4b66 	vldr	d4, [pc, #408]	; 15d78 <G_q+0xdc88>
   15be0:	ee27 7b04 	vmul.f64	d7, d7, d4
  b_G_q[3].re = -g * ((((b_t54_im * t41_re - t43_re * t41_im) * 0.0215 - (t70_im
   15be4:	ee35 5b47 	vsub.f64	d5, d5, d7
    * b_t54_re - t43_im * t55_im) * 1.3164953090834051E-18) + (t55_re * t74_re -
   15be8:	f241 23b8 	movw	r3, #4792	; 0x12b8
   15bec:	443b      	add	r3, r7
   15bee:	f507 5297 	add.w	r2, r7, #4832	; 0x12e0
   15bf2:	ed92 4b00 	vldr	d4, [r2]
   15bf6:	ed93 7b00 	vldr	d7, [r3]
   15bfa:	ee24 4b07 	vmul.f64	d4, d4, d7
    t70_re * t74_im) * 1.3164953090834051E-18) + (t16_re * t34_re - t76_re *
   15bfe:	f241 22d0 	movw	r2, #4816	; 0x12d0
   15c02:	443a      	add	r2, r7
   15c04:	f241 23b0 	movw	r3, #4784	; 0x12b0
   15c08:	443b      	add	r3, r7
   15c0a:	ed92 3b00 	vldr	d3, [r2]
   15c0e:	ed93 7b00 	vldr	d7, [r3]
   15c12:	ee23 7b07 	vmul.f64	d7, d3, d7
    * b_t54_re - t43_im * t55_im) * 1.3164953090834051E-18) + (t55_re * t74_re -
   15c16:	ee34 7b47 	vsub.f64	d7, d4, d7
    t70_re * t74_im) * 1.3164953090834051E-18) + (t16_re * t34_re - t76_re *
   15c1a:	ed9f 4b57 	vldr	d4, [pc, #348]	; 15d78 <G_q+0xdc88>
   15c1e:	ee27 7b04 	vmul.f64	d7, d7, d4
    * b_t54_re - t43_im * t55_im) * 1.3164953090834051E-18) + (t55_re * t74_re -
   15c22:	ee35 5b07 	vadd.f64	d5, d5, d7
    t70_re * t74_im) * 1.3164953090834051E-18) + (t16_re * t34_re - t76_re *
   15c26:	f241 3368 	movw	r3, #4968	; 0x1368
   15c2a:	443b      	add	r3, r7
   15c2c:	ed93 4b00 	vldr	d4, [r3]
   15c30:	f241 33b8 	movw	r3, #5048	; 0x13b8
   15c34:	443b      	add	r3, r7
   15c36:	ed93 7b00 	vldr	d7, [r3]
   15c3a:	ee24 4b07 	vmul.f64	d4, d4, d7
   15c3e:	f241 23a8 	movw	r3, #4776	; 0x12a8
   15c42:	443b      	add	r3, r7
   15c44:	ed93 3b00 	vldr	d3, [r3]
   15c48:	f241 33b0 	movw	r3, #5040	; 0x13b0
   15c4c:	443b      	add	r3, r7
   15c4e:	ed93 7b00 	vldr	d7, [r3]
   15c52:	ee23 7b07 	vmul.f64	d7, d3, d7
   15c56:	ee34 7b47 	vsub.f64	d7, d4, d7
    t34_im) * 0.0215);
   15c5a:	ed9f 4b45 	vldr	d4, [pc, #276]	; 15d70 <G_q+0xdc80>
   15c5e:	ee27 7b04 	vmul.f64	d7, d7, d4
    t70_re * t74_im) * 1.3164953090834051E-18) + (t16_re * t34_re - t76_re *
   15c62:	ee35 7b07 	vadd.f64	d7, d5, d7
  b_G_q[3].re = -g * ((((b_t54_im * t41_re - t43_re * t41_im) * 0.0215 - (t70_im
   15c66:	4b48      	ldr	r3, [pc, #288]	; (15d88 <G_q+0xdc98>)
   15c68:	f241 32d0 	movw	r2, #5072	; 0x13d0
   15c6c:	443a      	add	r2, r7
   15c6e:	4413      	add	r3, r2
   15c70:	681b      	ldr	r3, [r3, #0]
   15c72:	3330      	adds	r3, #48	; 0x30
   15c74:	ee26 7b07 	vmul.f64	d7, d6, d7
   15c78:	ed83 7b00 	vstr	d7, [r3]
  b_G_q[3].im = -g * ((((b_t54_im * t41_im + t43_re * t41_re) * 0.0215 - (t70_im
   15c7c:	4b41      	ldr	r3, [pc, #260]	; (15d84 <G_q+0xdc94>)
   15c7e:	f241 32d0 	movw	r2, #5072	; 0x13d0
   15c82:	443a      	add	r2, r7
   15c84:	4413      	add	r3, r2
   15c86:	ed93 7b00 	vldr	d7, [r3]
   15c8a:	eeb1 6b47 	vneg.f64	d6, d7
   15c8e:	f241 23e8 	movw	r3, #4840	; 0x12e8
   15c92:	443b      	add	r3, r7
   15c94:	ed93 5b00 	vldr	d5, [r3]
   15c98:	f507 5398 	add.w	r3, r7, #4864	; 0x1300
   15c9c:	ed93 7b00 	vldr	d7, [r3]
   15ca0:	ee25 5b07 	vmul.f64	d5, d5, d7
   15ca4:	f241 2358 	movw	r3, #4696	; 0x1258
   15ca8:	443b      	add	r3, r7
   15caa:	ed93 4b00 	vldr	d4, [r3]
   15cae:	f241 3308 	movw	r3, #4872	; 0x1308
   15cb2:	443b      	add	r3, r7
   15cb4:	ed93 7b00 	vldr	d7, [r3]
   15cb8:	ee24 7b07 	vmul.f64	d7, d4, d7
   15cbc:	ee35 7b07 	vadd.f64	d7, d5, d7
   15cc0:	ed9f 5b2b 	vldr	d5, [pc, #172]	; 15d70 <G_q+0xdc80>
   15cc4:	ee27 5b05 	vmul.f64	d5, d7, d5
    * t55_im + t43_im * b_t54_re) * 1.3164953090834051E-18) + (t55_re * t74_im +
   15cc8:	f241 23c8 	movw	r3, #4808	; 0x12c8
   15ccc:	443b      	add	r3, r7
   15cce:	ed93 4b00 	vldr	d4, [r3]
   15cd2:	f241 23d8 	movw	r3, #4824	; 0x12d8
   15cd6:	443b      	add	r3, r7
   15cd8:	ed93 7b00 	vldr	d7, [r3]
   15cdc:	ee24 4b07 	vmul.f64	d4, d4, d7
   15ce0:	f241 23f8 	movw	r3, #4856	; 0x12f8
   15ce4:	443b      	add	r3, r7
   15ce6:	ed93 3b00 	vldr	d3, [r3]
   15cea:	f241 23f0 	movw	r3, #4848	; 0x12f0
   15cee:	443b      	add	r3, r7
   15cf0:	ed93 7b00 	vldr	d7, [r3]
   15cf4:	ee23 7b07 	vmul.f64	d7, d3, d7
   15cf8:	ee34 7b07 	vadd.f64	d7, d4, d7
   15cfc:	ed9f 4b1e 	vldr	d4, [pc, #120]	; 15d78 <G_q+0xdc88>
   15d00:	ee27 7b04 	vmul.f64	d7, d7, d4
  b_G_q[3].im = -g * ((((b_t54_im * t41_im + t43_re * t41_re) * 0.0215 - (t70_im
   15d04:	ee35 5b47 	vsub.f64	d5, d5, d7
    * t55_im + t43_im * b_t54_re) * 1.3164953090834051E-18) + (t55_re * t74_im +
   15d08:	f241 23b0 	movw	r3, #4784	; 0x12b0
   15d0c:	443b      	add	r3, r7
   15d0e:	f507 5297 	add.w	r2, r7, #4832	; 0x12e0
   15d12:	ed92 4b00 	vldr	d4, [r2]
   15d16:	ed93 7b00 	vldr	d7, [r3]
   15d1a:	ee24 4b07 	vmul.f64	d4, d4, d7
    t70_re * t74_re) * 1.3164953090834051E-18) + (t16_re * t34_im + t76_re *
   15d1e:	f241 22d0 	movw	r2, #4816	; 0x12d0
   15d22:	443a      	add	r2, r7
   15d24:	f241 23b8 	movw	r3, #4792	; 0x12b8
   15d28:	443b      	add	r3, r7
   15d2a:	ed92 3b00 	vldr	d3, [r2]
   15d2e:	ed93 7b00 	vldr	d7, [r3]
   15d32:	ee23 7b07 	vmul.f64	d7, d3, d7
    * t55_im + t43_im * b_t54_re) * 1.3164953090834051E-18) + (t55_re * t74_im +
   15d36:	ee34 7b07 	vadd.f64	d7, d4, d7
    t70_re * t74_re) * 1.3164953090834051E-18) + (t16_re * t34_im + t76_re *
   15d3a:	ed9f 4b0f 	vldr	d4, [pc, #60]	; 15d78 <G_q+0xdc88>
   15d3e:	ee27 7b04 	vmul.f64	d7, d7, d4
    * t55_im + t43_im * b_t54_re) * 1.3164953090834051E-18) + (t55_re * t74_im +
   15d42:	ee35 5b07 	vadd.f64	d5, d5, d7
    t70_re * t74_re) * 1.3164953090834051E-18) + (t16_re * t34_im + t76_re *
   15d46:	f241 3368 	movw	r3, #4968	; 0x1368
   15d4a:	443b      	add	r3, r7
   15d4c:	ed93 4b00 	vldr	d4, [r3]
   15d50:	f241 33b0 	movw	r3, #5040	; 0x13b0
   15d54:	443b      	add	r3, r7
   15d56:	ed93 7b00 	vldr	d7, [r3]
   15d5a:	ee24 4b07 	vmul.f64	d4, d4, d7
   15d5e:	f241 23a8 	movw	r3, #4776	; 0x12a8
   15d62:	443b      	add	r3, r7
   15d64:	ed93 3b00 	vldr	d3, [r3]
   15d68:	e010      	b.n	15d8c <G_q+0xdc9c>
   15d6a:	bf00      	nop
   15d6c:	f3af 8000 	nop.w
   15d70:	9374bc6a 	.word	0x9374bc6a
   15d74:	3f960418 	.word	0x3f960418
   15d78:	2ba953a1 	.word	0x2ba953a1
   15d7c:	3c3848f9 	.word	0x3c3848f9
   15d80:	ffffecf0 	.word	0xffffecf0
   15d84:	ffffec58 	.word	0xffffec58
   15d88:	ffffec34 	.word	0xffffec34
   15d8c:	f241 33b8 	movw	r3, #5048	; 0x13b8
   15d90:	443b      	add	r3, r7
   15d92:	ed93 7b00 	vldr	d7, [r3]
   15d96:	ee23 7b07 	vmul.f64	d7, d3, d7
   15d9a:	ee34 7b07 	vadd.f64	d7, d4, d7
    t34_re) * 0.0215);
   15d9e:	ed9f 4bd2 	vldr	d4, [pc, #840]	; 160e8 <G_q+0xdff8>
   15da2:	ee27 7b04 	vmul.f64	d7, d7, d4
    t70_re * t74_re) * 1.3164953090834051E-18) + (t16_re * t34_im + t76_re *
   15da6:	ee35 7b07 	vadd.f64	d7, d5, d7
  b_G_q[3].im = -g * ((((b_t54_im * t41_im + t43_re * t41_re) * 0.0215 - (t70_im
   15daa:	4bd5      	ldr	r3, [pc, #852]	; (16100 <G_q+0xe010>)
   15dac:	f241 32d0 	movw	r2, #5072	; 0x13d0
   15db0:	443a      	add	r2, r7
   15db2:	4413      	add	r3, r2
   15db4:	681b      	ldr	r3, [r3, #0]
   15db6:	3330      	adds	r3, #48	; 0x30
   15db8:	ee26 7b07 	vmul.f64	d7, d6, d7
   15dbc:	ed83 7b02 	vstr	d7, [r3, #8]
  if (t264.im == 0.0) {
   15dc0:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
   15dc4:	ed93 7b02 	vldr	d7, [r3, #8]
   15dc8:	eeb5 7b40 	vcmp.f64	d7, #0.0
   15dcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   15dd0:	d116      	bne.n	15e00 <G_q+0xdd10>
    t70_im = t264.re / 2.0;
   15dd2:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
   15dd6:	ed93 6b00 	vldr	d6, [r3]
   15dda:	f241 23c8 	movw	r3, #4808	; 0x12c8
   15dde:	443b      	add	r3, r7
   15de0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15de4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15de8:	ed83 7b00 	vstr	d7, [r3]
    t43_im = 0.0;
   15dec:	f04f 0300 	mov.w	r3, #0
   15df0:	f04f 0400 	mov.w	r4, #0
   15df4:	f241 22f8 	movw	r2, #4856	; 0x12f8
   15df8:	443a      	add	r2, r7
   15dfa:	e9c2 3400 	strd	r3, r4, [r2]
   15dfe:	e039      	b.n	15e74 <G_q+0xdd84>
  } else if (t264.re == 0.0) {
   15e00:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
   15e04:	ed93 7b00 	vldr	d7, [r3]
   15e08:	eeb5 7b40 	vcmp.f64	d7, #0.0
   15e0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   15e10:	d116      	bne.n	15e40 <G_q+0xdd50>
    t70_im = 0.0;
   15e12:	f241 22c8 	movw	r2, #4808	; 0x12c8
   15e16:	443a      	add	r2, r7
   15e18:	f04f 0300 	mov.w	r3, #0
   15e1c:	f04f 0400 	mov.w	r4, #0
   15e20:	e9c2 3400 	strd	r3, r4, [r2]
    t43_im = t264.im / 2.0;
   15e24:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
   15e28:	ed93 6b02 	vldr	d6, [r3, #8]
   15e2c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15e30:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15e34:	f241 23f8 	movw	r3, #4856	; 0x12f8
   15e38:	443b      	add	r3, r7
   15e3a:	ed83 7b00 	vstr	d7, [r3]
   15e3e:	e019      	b.n	15e74 <G_q+0xdd84>
  } else {
    t70_im = t264.re / 2.0;
   15e40:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
   15e44:	ed93 6b00 	vldr	d6, [r3]
   15e48:	f241 23c8 	movw	r3, #4808	; 0x12c8
   15e4c:	443b      	add	r3, r7
   15e4e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15e52:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15e56:	ed83 7b00 	vstr	d7, [r3]
    t43_im = t264.im / 2.0;
   15e5a:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
   15e5e:	ed93 6b02 	vldr	d6, [r3, #8]
   15e62:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15e66:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15e6a:	f241 23f8 	movw	r3, #4856	; 0x12f8
   15e6e:	443b      	add	r3, r7
   15e70:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t265.im == 0.0) {
   15e74:	4ba3      	ldr	r3, [pc, #652]	; (16104 <G_q+0xe014>)
   15e76:	f241 32d0 	movw	r2, #5072	; 0x13d0
   15e7a:	443a      	add	r2, r7
   15e7c:	4413      	add	r3, r2
   15e7e:	ed93 7b02 	vldr	d7, [r3, #8]
   15e82:	eeb5 7b40 	vcmp.f64	d7, #0.0
   15e86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   15e8a:	d118      	bne.n	15ebe <G_q+0xddce>
    t76_re = t265.re / 2.0;
   15e8c:	4b9d      	ldr	r3, [pc, #628]	; (16104 <G_q+0xe014>)
   15e8e:	f241 32d0 	movw	r2, #5072	; 0x13d0
   15e92:	443a      	add	r2, r7
   15e94:	4413      	add	r3, r2
   15e96:	ed93 6b00 	vldr	d6, [r3]
   15e9a:	f241 23a8 	movw	r3, #4776	; 0x12a8
   15e9e:	443b      	add	r3, r7
   15ea0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15ea4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15ea8:	ed83 7b00 	vstr	d7, [r3]
    t72_re = 0.0;
   15eac:	f507 5296 	add.w	r2, r7, #4800	; 0x12c0
   15eb0:	f04f 0300 	mov.w	r3, #0
   15eb4:	f04f 0400 	mov.w	r4, #0
   15eb8:	e9c2 3400 	strd	r3, r4, [r2]
   15ebc:	e043      	b.n	15f46 <G_q+0xde56>
  } else if (t265.re == 0.0) {
   15ebe:	4b91      	ldr	r3, [pc, #580]	; (16104 <G_q+0xe014>)
   15ec0:	f241 32d0 	movw	r2, #5072	; 0x13d0
   15ec4:	443a      	add	r2, r7
   15ec6:	4413      	add	r3, r2
   15ec8:	ed93 7b00 	vldr	d7, [r3]
   15ecc:	eeb5 7b40 	vcmp.f64	d7, #0.0
   15ed0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   15ed4:	d118      	bne.n	15f08 <G_q+0xde18>
    t76_re = 0.0;
   15ed6:	f241 22a8 	movw	r2, #4776	; 0x12a8
   15eda:	443a      	add	r2, r7
   15edc:	f04f 0300 	mov.w	r3, #0
   15ee0:	f04f 0400 	mov.w	r4, #0
   15ee4:	e9c2 3400 	strd	r3, r4, [r2]
    t72_re = t265.im / 2.0;
   15ee8:	4b86      	ldr	r3, [pc, #536]	; (16104 <G_q+0xe014>)
   15eea:	f241 32d0 	movw	r2, #5072	; 0x13d0
   15eee:	443a      	add	r2, r7
   15ef0:	4413      	add	r3, r2
   15ef2:	ed93 6b02 	vldr	d6, [r3, #8]
   15ef6:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   15efa:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15efe:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15f02:	ed83 7b00 	vstr	d7, [r3]
   15f06:	e01e      	b.n	15f46 <G_q+0xde56>
  } else {
    t76_re = t265.re / 2.0;
   15f08:	4b7e      	ldr	r3, [pc, #504]	; (16104 <G_q+0xe014>)
   15f0a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   15f0e:	443a      	add	r2, r7
   15f10:	4413      	add	r3, r2
   15f12:	ed93 6b00 	vldr	d6, [r3]
   15f16:	f241 23a8 	movw	r3, #4776	; 0x12a8
   15f1a:	443b      	add	r3, r7
   15f1c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15f20:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15f24:	ed83 7b00 	vstr	d7, [r3]
    t72_re = t265.im / 2.0;
   15f28:	4b76      	ldr	r3, [pc, #472]	; (16104 <G_q+0xe014>)
   15f2a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   15f2e:	443a      	add	r2, r7
   15f30:	4413      	add	r3, r2
   15f32:	ed93 6b02 	vldr	d6, [r3, #8]
   15f36:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   15f3a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   15f3e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   15f42:	ed83 7b00 	vstr	d7, [r3]
  }

  t16_re = (t252.re * 0.0 - t252.im * 3.061616997868383E-17) - (t253.re * 0.0 -
   15f46:	f507 6313 	add.w	r3, r7, #2352	; 0x930
   15f4a:	ed93 7b00 	vldr	d7, [r3]
   15f4e:	ed9f 6b68 	vldr	d6, [pc, #416]	; 160f0 <G_q+0xe000>
   15f52:	ee27 6b06 	vmul.f64	d6, d7, d6
   15f56:	f507 6313 	add.w	r3, r7, #2352	; 0x930
   15f5a:	ed93 7b02 	vldr	d7, [r3, #8]
   15f5e:	ed9f 5b66 	vldr	d5, [pc, #408]	; 160f8 <G_q+0xe008>
   15f62:	ee27 7b05 	vmul.f64	d7, d7, d5
   15f66:	ee36 6b47 	vsub.f64	d6, d6, d7
   15f6a:	f507 6314 	add.w	r3, r7, #2368	; 0x940
   15f6e:	ed93 7b00 	vldr	d7, [r3]
   15f72:	ed9f 5b5f 	vldr	d5, [pc, #380]	; 160f0 <G_q+0xe000>
   15f76:	ee27 5b05 	vmul.f64	d5, d7, d5
    t253.im * 3.061616997868383E-17);
   15f7a:	f507 6314 	add.w	r3, r7, #2368	; 0x940
   15f7e:	ed93 7b02 	vldr	d7, [r3, #8]
   15f82:	ed9f 4b5d 	vldr	d4, [pc, #372]	; 160f8 <G_q+0xe008>
   15f86:	ee27 7b04 	vmul.f64	d7, d7, d4
  t16_re = (t252.re * 0.0 - t252.im * 3.061616997868383E-17) - (t253.re * 0.0 -
   15f8a:	ee35 7b47 	vsub.f64	d7, d5, d7
   15f8e:	ee36 7b47 	vsub.f64	d7, d6, d7
   15f92:	f241 3368 	movw	r3, #4968	; 0x1368
   15f96:	443b      	add	r3, r7
   15f98:	ed83 7b00 	vstr	d7, [r3]
  t16_im = (t252.re * 3.061616997868383E-17 + t252.im * 0.0) - (t253.re *
   15f9c:	f507 6313 	add.w	r3, r7, #2352	; 0x930
   15fa0:	ed93 7b00 	vldr	d7, [r3]
   15fa4:	ed9f 6b54 	vldr	d6, [pc, #336]	; 160f8 <G_q+0xe008>
   15fa8:	ee27 6b06 	vmul.f64	d6, d7, d6
   15fac:	f507 6313 	add.w	r3, r7, #2352	; 0x930
   15fb0:	ed93 7b02 	vldr	d7, [r3, #8]
   15fb4:	ed9f 5b4e 	vldr	d5, [pc, #312]	; 160f0 <G_q+0xe000>
   15fb8:	ee27 7b05 	vmul.f64	d7, d7, d5
   15fbc:	ee36 6b07 	vadd.f64	d6, d6, d7
   15fc0:	f507 6314 	add.w	r3, r7, #2368	; 0x940
   15fc4:	ed93 7b00 	vldr	d7, [r3]
   15fc8:	ed9f 5b4b 	vldr	d5, [pc, #300]	; 160f8 <G_q+0xe008>
   15fcc:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t253.im * 0.0);
   15fd0:	f507 6314 	add.w	r3, r7, #2368	; 0x940
   15fd4:	ed93 7b02 	vldr	d7, [r3, #8]
   15fd8:	ed9f 4b45 	vldr	d4, [pc, #276]	; 160f0 <G_q+0xe000>
   15fdc:	ee27 7b04 	vmul.f64	d7, d7, d4
   15fe0:	ee35 7b07 	vadd.f64	d7, d5, d7
  t16_im = (t252.re * 3.061616997868383E-17 + t252.im * 0.0) - (t253.re *
   15fe4:	ee36 7b47 	vsub.f64	d7, d6, d7
   15fe8:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   15fec:	ed83 7b00 	vstr	d7, [r3]
  t20_re = (t250.re * 0.0 - t250.im * 0.5) - (t251.re * 0.0 - t251.im * 0.5);
   15ff0:	f241 03f0 	movw	r3, #4336	; 0x10f0
   15ff4:	443b      	add	r3, r7
   15ff6:	ed93 7b00 	vldr	d7, [r3]
   15ffa:	ed9f 6b3d 	vldr	d6, [pc, #244]	; 160f0 <G_q+0xe000>
   15ffe:	ee27 6b06 	vmul.f64	d6, d7, d6
   16002:	f241 03f0 	movw	r3, #4336	; 0x10f0
   16006:	443b      	add	r3, r7
   16008:	ed93 7b02 	vldr	d7, [r3, #8]
   1600c:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   16010:	ee27 7b05 	vmul.f64	d7, d7, d5
   16014:	ee36 6b47 	vsub.f64	d6, d6, d7
   16018:	f507 5388 	add.w	r3, r7, #4352	; 0x1100
   1601c:	ed93 7b00 	vldr	d7, [r3]
   16020:	ed9f 5b33 	vldr	d5, [pc, #204]	; 160f0 <G_q+0xe000>
   16024:	ee27 5b05 	vmul.f64	d5, d7, d5
   16028:	f507 5388 	add.w	r3, r7, #4352	; 0x1100
   1602c:	ed93 7b02 	vldr	d7, [r3, #8]
   16030:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   16034:	ee27 7b04 	vmul.f64	d7, d7, d4
   16038:	ee35 7b47 	vsub.f64	d7, d5, d7
   1603c:	ee36 7b47 	vsub.f64	d7, d6, d7
   16040:	f241 3348 	movw	r3, #4936	; 0x1348
   16044:	443b      	add	r3, r7
   16046:	ed83 7b00 	vstr	d7, [r3]
  t20_im = (t250.re * 0.5 + t250.im * 0.0) - (t251.re * 0.5 + t251.im * 0.0);
   1604a:	f241 03f0 	movw	r3, #4336	; 0x10f0
   1604e:	443b      	add	r3, r7
   16050:	ed93 7b00 	vldr	d7, [r3]
   16054:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   16058:	ee27 6b06 	vmul.f64	d6, d7, d6
   1605c:	f241 03f0 	movw	r3, #4336	; 0x10f0
   16060:	443b      	add	r3, r7
   16062:	ed93 7b02 	vldr	d7, [r3, #8]
   16066:	ed9f 5b22 	vldr	d5, [pc, #136]	; 160f0 <G_q+0xe000>
   1606a:	ee27 7b05 	vmul.f64	d7, d7, d5
   1606e:	ee36 6b07 	vadd.f64	d6, d6, d7
   16072:	f507 5388 	add.w	r3, r7, #4352	; 0x1100
   16076:	ed93 7b00 	vldr	d7, [r3]
   1607a:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   1607e:	ee27 5b05 	vmul.f64	d5, d7, d5
   16082:	f507 5388 	add.w	r3, r7, #4352	; 0x1100
   16086:	ed93 7b02 	vldr	d7, [r3, #8]
   1608a:	ed9f 4b19 	vldr	d4, [pc, #100]	; 160f0 <G_q+0xe000>
   1608e:	ee27 7b04 	vmul.f64	d7, d7, d4
   16092:	ee35 7b07 	vadd.f64	d7, d5, d7
   16096:	ee36 7b47 	vsub.f64	d7, d6, d7
   1609a:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   1609e:	ed83 7b00 	vstr	d7, [r3]
  if (t248.im == 0.0) {
   160a2:	f241 03d0 	movw	r3, #4304	; 0x10d0
   160a6:	443b      	add	r3, r7
   160a8:	ed93 7b02 	vldr	d7, [r3, #8]
   160ac:	eeb5 7b40 	vcmp.f64	d7, #0.0
   160b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   160b4:	d128      	bne.n	16108 <G_q+0xe018>
    t12_re = t248.re / 2.0;
   160b6:	f241 03d0 	movw	r3, #4304	; 0x10d0
   160ba:	443b      	add	r3, r7
   160bc:	ed93 6b00 	vldr	d6, [r3]
   160c0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   160c4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   160c8:	f241 3388 	movw	r3, #5000	; 0x1388
   160cc:	443b      	add	r3, r7
   160ce:	ed83 7b00 	vstr	d7, [r3]
    t12_im = 0.0;
   160d2:	f04f 0300 	mov.w	r3, #0
   160d6:	f04f 0400 	mov.w	r4, #0
   160da:	f507 529c 	add.w	r2, r7, #4992	; 0x1380
   160de:	e9c2 3400 	strd	r3, r4, [r2]
   160e2:	e04d      	b.n	16180 <G_q+0xe090>
   160e4:	f3af 8000 	nop.w
   160e8:	9374bc6a 	.word	0x9374bc6a
   160ec:	3f960418 	.word	0x3f960418
	...
   160f8:	33145c07 	.word	0x33145c07
   160fc:	3c81a626 	.word	0x3c81a626
   16100:	ffffec34 	.word	0xffffec34
   16104:	ffffed10 	.word	0xffffed10
  } else if (t248.re == 0.0) {
   16108:	f241 03d0 	movw	r3, #4304	; 0x10d0
   1610c:	443b      	add	r3, r7
   1610e:	ed93 7b00 	vldr	d7, [r3]
   16112:	eeb5 7b40 	vcmp.f64	d7, #0.0
   16116:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1611a:	d116      	bne.n	1614a <G_q+0xe05a>
    t12_re = 0.0;
   1611c:	f04f 0300 	mov.w	r3, #0
   16120:	f04f 0400 	mov.w	r4, #0
   16124:	f241 3288 	movw	r2, #5000	; 0x1388
   16128:	443a      	add	r2, r7
   1612a:	e9c2 3400 	strd	r3, r4, [r2]
    t12_im = t248.im / 2.0;
   1612e:	f241 03d0 	movw	r3, #4304	; 0x10d0
   16132:	443b      	add	r3, r7
   16134:	ed93 6b02 	vldr	d6, [r3, #8]
   16138:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1613c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16140:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   16144:	ed83 7b00 	vstr	d7, [r3]
   16148:	e01a      	b.n	16180 <G_q+0xe090>
  } else {
    t12_re = t248.re / 2.0;
   1614a:	f241 03d0 	movw	r3, #4304	; 0x10d0
   1614e:	443b      	add	r3, r7
   16150:	ed93 6b00 	vldr	d6, [r3]
   16154:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16158:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1615c:	f241 3388 	movw	r3, #5000	; 0x1388
   16160:	443b      	add	r3, r7
   16162:	ed83 7b00 	vstr	d7, [r3]
    t12_im = t248.im / 2.0;
   16166:	f241 03d0 	movw	r3, #4304	; 0x10d0
   1616a:	443b      	add	r3, r7
   1616c:	ed93 6b02 	vldr	d6, [r3, #8]
   16170:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16174:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16178:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   1617c:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t249.im == 0.0) {
   16180:	f507 5387 	add.w	r3, r7, #4320	; 0x10e0
   16184:	ed93 7b02 	vldr	d7, [r3, #8]
   16188:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1618c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   16190:	d116      	bne.n	161c0 <G_q+0xe0d0>
    t34_re = t249.re / 2.0;
   16192:	f507 5387 	add.w	r3, r7, #4320	; 0x10e0
   16196:	ed93 6b00 	vldr	d6, [r3]
   1619a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1619e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   161a2:	f241 33b8 	movw	r3, #5048	; 0x13b8
   161a6:	443b      	add	r3, r7
   161a8:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   161ac:	f04f 0300 	mov.w	r3, #0
   161b0:	f04f 0400 	mov.w	r4, #0
   161b4:	f241 32b0 	movw	r2, #5040	; 0x13b0
   161b8:	443a      	add	r2, r7
   161ba:	e9c2 3400 	strd	r3, r4, [r2]
   161be:	e039      	b.n	16234 <G_q+0xe144>
  } else if (t249.re == 0.0) {
   161c0:	f507 5387 	add.w	r3, r7, #4320	; 0x10e0
   161c4:	ed93 7b00 	vldr	d7, [r3]
   161c8:	eeb5 7b40 	vcmp.f64	d7, #0.0
   161cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   161d0:	d116      	bne.n	16200 <G_q+0xe110>
    t34_re = 0.0;
   161d2:	f04f 0300 	mov.w	r3, #0
   161d6:	f04f 0400 	mov.w	r4, #0
   161da:	f241 32b8 	movw	r2, #5048	; 0x13b8
   161de:	443a      	add	r2, r7
   161e0:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t249.im / 2.0;
   161e4:	f507 5387 	add.w	r3, r7, #4320	; 0x10e0
   161e8:	ed93 6b02 	vldr	d6, [r3, #8]
   161ec:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   161f0:	ee86 7b05 	vdiv.f64	d7, d6, d5
   161f4:	f241 33b0 	movw	r3, #5040	; 0x13b0
   161f8:	443b      	add	r3, r7
   161fa:	ed83 7b00 	vstr	d7, [r3]
   161fe:	e019      	b.n	16234 <G_q+0xe144>
  } else {
    t34_re = t249.re / 2.0;
   16200:	f507 5387 	add.w	r3, r7, #4320	; 0x10e0
   16204:	ed93 6b00 	vldr	d6, [r3]
   16208:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1620c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16210:	f241 33b8 	movw	r3, #5048	; 0x13b8
   16214:	443b      	add	r3, r7
   16216:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t249.im / 2.0;
   1621a:	f507 5387 	add.w	r3, r7, #4320	; 0x10e0
   1621e:	ed93 6b02 	vldr	d6, [r3, #8]
   16222:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16226:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1622a:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1622e:	443b      	add	r3, r7
   16230:	ed83 7b00 	vstr	d7, [r3]
  }

  t23_re = t246.re * 3.061616997868383E-17 + t247.re * 3.061616997868383E-17;
   16234:	f507 6311 	add.w	r3, r7, #2320	; 0x910
   16238:	ed93 7b00 	vldr	d7, [r3]
   1623c:	ed9f 6be2 	vldr	d6, [pc, #904]	; 165c8 <G_q+0xe4d8>
   16240:	ee27 6b06 	vmul.f64	d6, d7, d6
   16244:	f507 6312 	add.w	r3, r7, #2336	; 0x920
   16248:	ed93 7b00 	vldr	d7, [r3]
   1624c:	ed9f 5bde 	vldr	d5, [pc, #888]	; 165c8 <G_q+0xe4d8>
   16250:	ee27 7b05 	vmul.f64	d7, d7, d5
   16254:	ee36 7b07 	vadd.f64	d7, d6, d7
   16258:	f241 3330 	movw	r3, #4912	; 0x1330
   1625c:	443b      	add	r3, r7
   1625e:	ed83 7b00 	vstr	d7, [r3]
  t3_im = t246.im * 3.061616997868383E-17 + t247.im * 3.061616997868383E-17;
   16262:	f507 6311 	add.w	r3, r7, #2320	; 0x910
   16266:	ed93 7b02 	vldr	d7, [r3, #8]
   1626a:	ed9f 6bd7 	vldr	d6, [pc, #860]	; 165c8 <G_q+0xe4d8>
   1626e:	ee27 6b06 	vmul.f64	d6, d7, d6
   16272:	f507 6312 	add.w	r3, r7, #2336	; 0x920
   16276:	ed93 7b02 	vldr	d7, [r3, #8]
   1627a:	ed9f 5bd3 	vldr	d5, [pc, #844]	; 165c8 <G_q+0xe4d8>
   1627e:	ee27 7b05 	vmul.f64	d7, d7, d5
   16282:	ee36 7b07 	vadd.f64	d7, d6, d7
   16286:	f241 3310 	movw	r3, #4880	; 0x1310
   1628a:	443b      	add	r3, r7
   1628c:	ed83 7b00 	vstr	d7, [r3]
  t12_re = (t12_re + t34_re) + 7.498798913309288E-33;
   16290:	f241 3388 	movw	r3, #5000	; 0x1388
   16294:	443b      	add	r3, r7
   16296:	ed93 6b00 	vldr	d6, [r3]
   1629a:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1629e:	443b      	add	r3, r7
   162a0:	ed93 7b00 	vldr	d7, [r3]
   162a4:	ee36 7b07 	vadd.f64	d7, d6, d7
   162a8:	ed9f 6bc9 	vldr	d6, [pc, #804]	; 165d0 <G_q+0xe4e0>
   162ac:	ee37 7b06 	vadd.f64	d7, d7, d6
   162b0:	f241 3388 	movw	r3, #5000	; 0x1388
   162b4:	443b      	add	r3, r7
   162b6:	ed83 7b00 	vstr	d7, [r3]
  t12_im += t34_im;
   162ba:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   162be:	ed93 6b00 	vldr	d6, [r3]
   162c2:	f241 33b0 	movw	r3, #5040	; 0x13b0
   162c6:	443b      	add	r3, r7
   162c8:	ed93 7b00 	vldr	d7, [r3]
   162cc:	ee36 7b07 	vadd.f64	d7, d6, d7
   162d0:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   162d4:	ed83 7b00 	vstr	d7, [r3]
  t58_im = (t242.re * 0.0 - t242.im * 0.5) - (t243.re * 0.0 - t243.im * 0.5);
   162d8:	f507 734c 	add.w	r3, r7, #816	; 0x330
   162dc:	ed93 7b00 	vldr	d7, [r3]
   162e0:	ed9f 6bbd 	vldr	d6, [pc, #756]	; 165d8 <G_q+0xe4e8>
   162e4:	ee27 6b06 	vmul.f64	d6, d7, d6
   162e8:	f507 734c 	add.w	r3, r7, #816	; 0x330
   162ec:	ed93 7b02 	vldr	d7, [r3, #8]
   162f0:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   162f4:	ee27 7b05 	vmul.f64	d7, d7, d5
   162f8:	ee36 6b47 	vsub.f64	d6, d6, d7
   162fc:	4bba      	ldr	r3, [pc, #744]	; (165e8 <G_q+0xe4f8>)
   162fe:	f241 32d0 	movw	r2, #5072	; 0x13d0
   16302:	443a      	add	r2, r7
   16304:	4413      	add	r3, r2
   16306:	ed93 7b00 	vldr	d7, [r3]
   1630a:	ed9f 5bb3 	vldr	d5, [pc, #716]	; 165d8 <G_q+0xe4e8>
   1630e:	ee27 5b05 	vmul.f64	d5, d7, d5
   16312:	4bb5      	ldr	r3, [pc, #724]	; (165e8 <G_q+0xe4f8>)
   16314:	f241 32d0 	movw	r2, #5072	; 0x13d0
   16318:	443a      	add	r2, r7
   1631a:	4413      	add	r3, r2
   1631c:	ed93 7b02 	vldr	d7, [r3, #8]
   16320:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   16324:	ee27 7b04 	vmul.f64	d7, d7, d4
   16328:	ee35 7b47 	vsub.f64	d7, d5, d7
   1632c:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   16330:	ee36 7b47 	vsub.f64	d7, d6, d7
   16334:	ed83 7b00 	vstr	d7, [r3]
  t70_re = (t242.re * 0.5 + t242.im * 0.0) - (t243.re * 0.5 + t243.im * 0.0);
   16338:	f507 734c 	add.w	r3, r7, #816	; 0x330
   1633c:	ed93 7b00 	vldr	d7, [r3]
   16340:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   16344:	ee27 6b06 	vmul.f64	d6, d7, d6
   16348:	f507 734c 	add.w	r3, r7, #816	; 0x330
   1634c:	ed93 7b02 	vldr	d7, [r3, #8]
   16350:	ed9f 5ba1 	vldr	d5, [pc, #644]	; 165d8 <G_q+0xe4e8>
   16354:	ee27 7b05 	vmul.f64	d7, d7, d5
   16358:	ee36 6b07 	vadd.f64	d6, d6, d7
   1635c:	4ba2      	ldr	r3, [pc, #648]	; (165e8 <G_q+0xe4f8>)
   1635e:	f241 32d0 	movw	r2, #5072	; 0x13d0
   16362:	443a      	add	r2, r7
   16364:	4413      	add	r3, r2
   16366:	ed93 7b00 	vldr	d7, [r3]
   1636a:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   1636e:	ee27 5b05 	vmul.f64	d5, d7, d5
   16372:	4b9d      	ldr	r3, [pc, #628]	; (165e8 <G_q+0xe4f8>)
   16374:	f241 32d0 	movw	r2, #5072	; 0x13d0
   16378:	443a      	add	r2, r7
   1637a:	4413      	add	r3, r2
   1637c:	ed93 7b02 	vldr	d7, [r3, #8]
   16380:	ed9f 4b95 	vldr	d4, [pc, #596]	; 165d8 <G_q+0xe4e8>
   16384:	ee27 7b04 	vmul.f64	d7, d7, d4
   16388:	ee35 7b07 	vadd.f64	d7, d5, d7
   1638c:	f241 23d0 	movw	r3, #4816	; 0x12d0
   16390:	443b      	add	r3, r7
   16392:	ee36 7b47 	vsub.f64	d7, d6, d7
   16396:	ed83 7b00 	vstr	d7, [r3]
  t60_re = (((t244.re * 6.123233995736766E-17 + t245.re * 6.123233995736766E-17)
   1639a:	f241 03b0 	movw	r3, #4272	; 0x10b0
   1639e:	443b      	add	r3, r7
   163a0:	ed93 7b00 	vldr	d7, [r3]
   163a4:	ed9f 6b8e 	vldr	d6, [pc, #568]	; 165e0 <G_q+0xe4f0>
   163a8:	ee27 6b06 	vmul.f64	d6, d7, d6
   163ac:	f507 5386 	add.w	r3, r7, #4288	; 0x10c0
   163b0:	ed93 7b00 	vldr	d7, [r3]
   163b4:	ed9f 5b8a 	vldr	d5, [pc, #552]	; 165e0 <G_q+0xe4f0>
   163b8:	ee27 7b05 	vmul.f64	d7, d7, d5
   163bc:	ee36 6b07 	vadd.f64	d6, d6, d7
             + (t16_re * t20_re - t16_im * t20_im)) + (t23_re * t12_re - t3_im *
   163c0:	f241 3368 	movw	r3, #4968	; 0x1368
   163c4:	443b      	add	r3, r7
   163c6:	ed93 5b00 	vldr	d5, [r3]
   163ca:	f241 3348 	movw	r3, #4936	; 0x1348
   163ce:	443b      	add	r3, r7
   163d0:	ed93 7b00 	vldr	d7, [r3]
   163d4:	ee25 5b07 	vmul.f64	d5, d5, d7
   163d8:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   163dc:	ed93 4b00 	vldr	d4, [r3]
   163e0:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   163e4:	ed93 7b00 	vldr	d7, [r3]
   163e8:	ee24 7b07 	vmul.f64	d7, d4, d7
   163ec:	ee35 7b47 	vsub.f64	d7, d5, d7
   163f0:	ee36 6b07 	vadd.f64	d6, d6, d7
   163f4:	f241 3330 	movw	r3, #4912	; 0x1330
   163f8:	443b      	add	r3, r7
   163fa:	ed93 5b00 	vldr	d5, [r3]
   163fe:	f241 3388 	movw	r3, #5000	; 0x1388
   16402:	443b      	add	r3, r7
   16404:	ed93 7b00 	vldr	d7, [r3]
   16408:	ee25 5b07 	vmul.f64	d5, d5, d7
   1640c:	f241 3310 	movw	r3, #4880	; 0x1310
   16410:	443b      	add	r3, r7
   16412:	ed93 4b00 	vldr	d4, [r3]
   16416:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   1641a:	ed93 7b00 	vldr	d7, [r3]
   1641e:	ee24 7b07 	vmul.f64	d7, d4, d7
   16422:	ee35 7b47 	vsub.f64	d7, d5, d7
   16426:	ee36 7b07 	vadd.f64	d7, d6, d7
  t60_re = (((t244.re * 6.123233995736766E-17 + t245.re * 6.123233995736766E-17)
   1642a:	f241 2350 	movw	r3, #4688	; 0x1250
   1642e:	443b      	add	r3, r7
   16430:	ed9f 6b6b 	vldr	d6, [pc, #428]	; 165e0 <G_q+0xe4f0>
   16434:	ee37 7b46 	vsub.f64	d7, d7, d6
   16438:	ed83 7b00 	vstr	d7, [r3]
             t12_im)) - 6.123233995736766E-17;
  b_t10_re = ((t244.im * 6.123233995736766E-17 + t245.im * 6.123233995736766E-17)
   1643c:	f241 03b0 	movw	r3, #4272	; 0x10b0
   16440:	443b      	add	r3, r7
   16442:	ed93 7b02 	vldr	d7, [r3, #8]
   16446:	ed9f 6b66 	vldr	d6, [pc, #408]	; 165e0 <G_q+0xe4f0>
   1644a:	ee27 6b06 	vmul.f64	d6, d7, d6
   1644e:	f507 5386 	add.w	r3, r7, #4288	; 0x10c0
   16452:	ed93 7b02 	vldr	d7, [r3, #8]
   16456:	ed9f 5b62 	vldr	d5, [pc, #392]	; 165e0 <G_q+0xe4f0>
   1645a:	ee27 7b05 	vmul.f64	d7, d7, d5
   1645e:	ee36 6b07 	vadd.f64	d6, d6, d7
              + (t16_re * t20_im + t16_im * t20_re)) + (t23_re * t12_im + t3_im *
   16462:	f241 3368 	movw	r3, #4968	; 0x1368
   16466:	443b      	add	r3, r7
   16468:	ed93 5b00 	vldr	d5, [r3]
   1646c:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   16470:	ed93 7b00 	vldr	d7, [r3]
   16474:	ee25 5b07 	vmul.f64	d5, d5, d7
   16478:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   1647c:	ed93 4b00 	vldr	d4, [r3]
   16480:	f241 3348 	movw	r3, #4936	; 0x1348
   16484:	443b      	add	r3, r7
   16486:	ed93 7b00 	vldr	d7, [r3]
   1648a:	ee24 7b07 	vmul.f64	d7, d4, d7
   1648e:	ee35 7b07 	vadd.f64	d7, d5, d7
   16492:	ee36 6b07 	vadd.f64	d6, d6, d7
   16496:	f241 3330 	movw	r3, #4912	; 0x1330
   1649a:	443b      	add	r3, r7
   1649c:	ed93 5b00 	vldr	d5, [r3]
   164a0:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   164a4:	ed93 7b00 	vldr	d7, [r3]
   164a8:	ee25 5b07 	vmul.f64	d5, d5, d7
   164ac:	f241 3310 	movw	r3, #4880	; 0x1310
   164b0:	443b      	add	r3, r7
   164b2:	ed93 4b00 	vldr	d4, [r3]
   164b6:	f241 3388 	movw	r3, #5000	; 0x1388
   164ba:	443b      	add	r3, r7
   164bc:	ed93 7b00 	vldr	d7, [r3]
   164c0:	ee24 7b07 	vmul.f64	d7, d4, d7
   164c4:	ee35 7b07 	vadd.f64	d7, d5, d7
  b_t10_re = ((t244.im * 6.123233995736766E-17 + t245.im * 6.123233995736766E-17)
   164c8:	ee36 7b07 	vadd.f64	d7, d6, d7
   164cc:	f241 3338 	movw	r3, #4920	; 0x1338
   164d0:	443b      	add	r3, r7
   164d2:	ed83 7b00 	vstr	d7, [r3]
    t12_re);
  if (t256.im == 0.0) {
   164d6:	f507 6315 	add.w	r3, r7, #2384	; 0x950
   164da:	ed93 7b02 	vldr	d7, [r3, #8]
   164de:	eeb5 7b40 	vcmp.f64	d7, #0.0
   164e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   164e6:	d115      	bne.n	16514 <G_q+0xe424>
    t20_im = t256.re / 2.0;
   164e8:	f507 6315 	add.w	r3, r7, #2384	; 0x950
   164ec:	ed93 6b00 	vldr	d6, [r3]
   164f0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   164f4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   164f8:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   164fc:	ed83 7b00 	vstr	d7, [r3]
    t85_im = 0.0;
   16500:	f04f 0300 	mov.w	r3, #0
   16504:	f04f 0400 	mov.w	r4, #0
   16508:	f241 3218 	movw	r2, #4888	; 0x1318
   1650c:	443a      	add	r2, r7
   1650e:	e9c2 3400 	strd	r3, r4, [r2]
   16512:	e037      	b.n	16584 <G_q+0xe494>
  } else if (t256.re == 0.0) {
   16514:	f507 6315 	add.w	r3, r7, #2384	; 0x950
   16518:	ed93 7b00 	vldr	d7, [r3]
   1651c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   16520:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   16524:	d115      	bne.n	16552 <G_q+0xe462>
    t20_im = 0.0;
   16526:	f04f 0300 	mov.w	r3, #0
   1652a:	f04f 0400 	mov.w	r4, #0
   1652e:	f507 529a 	add.w	r2, r7, #4928	; 0x1340
   16532:	e9c2 3400 	strd	r3, r4, [r2]
    t85_im = t256.im / 2.0;
   16536:	f507 6315 	add.w	r3, r7, #2384	; 0x950
   1653a:	ed93 6b02 	vldr	d6, [r3, #8]
   1653e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16542:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16546:	f241 3318 	movw	r3, #4888	; 0x1318
   1654a:	443b      	add	r3, r7
   1654c:	ed83 7b00 	vstr	d7, [r3]
   16550:	e018      	b.n	16584 <G_q+0xe494>
  } else {
    t20_im = t256.re / 2.0;
   16552:	f507 6315 	add.w	r3, r7, #2384	; 0x950
   16556:	ed93 6b00 	vldr	d6, [r3]
   1655a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1655e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16562:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   16566:	ed83 7b00 	vstr	d7, [r3]
    t85_im = t256.im / 2.0;
   1656a:	f507 6315 	add.w	r3, r7, #2384	; 0x950
   1656e:	ed93 6b02 	vldr	d6, [r3, #8]
   16572:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16576:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1657a:	f241 3318 	movw	r3, #4888	; 0x1318
   1657e:	443b      	add	r3, r7
   16580:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t257.im == 0.0) {
   16584:	f507 6316 	add.w	r3, r7, #2400	; 0x960
   16588:	ed93 7b02 	vldr	d7, [r3, #8]
   1658c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   16590:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   16594:	d12a      	bne.n	165ec <G_q+0xe4fc>
    t34_re = t257.re / 2.0;
   16596:	f507 6316 	add.w	r3, r7, #2400	; 0x960
   1659a:	ed93 6b00 	vldr	d6, [r3]
   1659e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   165a2:	ee86 7b05 	vdiv.f64	d7, d6, d5
   165a6:	f241 33b8 	movw	r3, #5048	; 0x13b8
   165aa:	443b      	add	r3, r7
   165ac:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   165b0:	f04f 0300 	mov.w	r3, #0
   165b4:	f04f 0400 	mov.w	r4, #0
   165b8:	f241 32b0 	movw	r2, #5040	; 0x13b0
   165bc:	443a      	add	r2, r7
   165be:	e9c2 3400 	strd	r3, r4, [r2]
   165c2:	e04d      	b.n	16660 <G_q+0xe570>
   165c4:	f3af 8000 	nop.w
   165c8:	33145c07 	.word	0x33145c07
   165cc:	3c81a626 	.word	0x3c81a626
   165d0:	858a5d48 	.word	0x858a5d48
   165d4:	394377ce 	.word	0x394377ce
	...
   165e0:	33145c07 	.word	0x33145c07
   165e4:	3c91a626 	.word	0x3c91a626
   165e8:	ffffef70 	.word	0xffffef70
  } else if (t257.re == 0.0) {
   165ec:	f507 6316 	add.w	r3, r7, #2400	; 0x960
   165f0:	ed93 7b00 	vldr	d7, [r3]
   165f4:	eeb5 7b40 	vcmp.f64	d7, #0.0
   165f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   165fc:	d116      	bne.n	1662c <G_q+0xe53c>
    t34_re = 0.0;
   165fe:	f04f 0300 	mov.w	r3, #0
   16602:	f04f 0400 	mov.w	r4, #0
   16606:	f241 32b8 	movw	r2, #5048	; 0x13b8
   1660a:	443a      	add	r2, r7
   1660c:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t257.im / 2.0;
   16610:	f507 6316 	add.w	r3, r7, #2400	; 0x960
   16614:	ed93 6b02 	vldr	d6, [r3, #8]
   16618:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1661c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16620:	f241 33b0 	movw	r3, #5040	; 0x13b0
   16624:	443b      	add	r3, r7
   16626:	ed83 7b00 	vstr	d7, [r3]
   1662a:	e019      	b.n	16660 <G_q+0xe570>
  } else {
    t34_re = t257.re / 2.0;
   1662c:	f507 6316 	add.w	r3, r7, #2400	; 0x960
   16630:	ed93 6b00 	vldr	d6, [r3]
   16634:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16638:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1663c:	f241 33b8 	movw	r3, #5048	; 0x13b8
   16640:	443b      	add	r3, r7
   16642:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t257.im / 2.0;
   16646:	f507 6316 	add.w	r3, r7, #2400	; 0x960
   1664a:	ed93 6b02 	vldr	d6, [r3, #8]
   1664e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16652:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16656:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1665a:	443b      	add	r3, r7
   1665c:	ed83 7b00 	vstr	d7, [r3]
  }

  t20_im += t34_re;
   16660:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   16664:	ed93 6b00 	vldr	d6, [r3]
   16668:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1666c:	443b      	add	r3, r7
   1666e:	ed93 7b00 	vldr	d7, [r3]
   16672:	ee36 7b07 	vadd.f64	d7, d6, d7
   16676:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   1667a:	ed83 7b00 	vstr	d7, [r3]
  t85_im += t34_im;
   1667e:	f241 3318 	movw	r3, #4888	; 0x1318
   16682:	443b      	add	r3, r7
   16684:	ed93 6b00 	vldr	d6, [r3]
   16688:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1668c:	443b      	add	r3, r7
   1668e:	ed93 7b00 	vldr	d7, [r3]
   16692:	ee36 7b07 	vadd.f64	d7, d6, d7
   16696:	f241 3318 	movw	r3, #4888	; 0x1318
   1669a:	443b      	add	r3, r7
   1669c:	ed83 7b00 	vstr	d7, [r3]
  t3_im = (t258.re * 0.0 - t258.im * 0.5) - (t259.re * 0.0 - t259.im * 0.5);
   166a0:	f241 1310 	movw	r3, #4368	; 0x1110
   166a4:	443b      	add	r3, r7
   166a6:	ed93 7b00 	vldr	d7, [r3]
   166aa:	ed9f 6bd5 	vldr	d6, [pc, #852]	; 16a00 <G_q+0xe910>
   166ae:	ee27 6b06 	vmul.f64	d6, d7, d6
   166b2:	f241 1310 	movw	r3, #4368	; 0x1110
   166b6:	443b      	add	r3, r7
   166b8:	ed93 7b02 	vldr	d7, [r3, #8]
   166bc:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   166c0:	ee27 7b05 	vmul.f64	d7, d7, d5
   166c4:	ee36 6b47 	vsub.f64	d6, d6, d7
   166c8:	f507 5389 	add.w	r3, r7, #4384	; 0x1120
   166cc:	ed93 7b00 	vldr	d7, [r3]
   166d0:	ed9f 5bcb 	vldr	d5, [pc, #812]	; 16a00 <G_q+0xe910>
   166d4:	ee27 5b05 	vmul.f64	d5, d7, d5
   166d8:	f507 5389 	add.w	r3, r7, #4384	; 0x1120
   166dc:	ed93 7b02 	vldr	d7, [r3, #8]
   166e0:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   166e4:	ee27 7b04 	vmul.f64	d7, d7, d4
   166e8:	ee35 7b47 	vsub.f64	d7, d5, d7
   166ec:	ee36 7b47 	vsub.f64	d7, d6, d7
   166f0:	f241 3310 	movw	r3, #4880	; 0x1310
   166f4:	443b      	add	r3, r7
   166f6:	ed83 7b00 	vstr	d7, [r3]
  t13_re = (t258.re * 0.5 + t258.im * 0.0) - (t259.re * 0.5 + t259.im * 0.0);
   166fa:	f241 1310 	movw	r3, #4368	; 0x1110
   166fe:	443b      	add	r3, r7
   16700:	ed93 7b00 	vldr	d7, [r3]
   16704:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   16708:	ee27 6b06 	vmul.f64	d6, d7, d6
   1670c:	f241 1310 	movw	r3, #4368	; 0x1110
   16710:	443b      	add	r3, r7
   16712:	ed93 7b02 	vldr	d7, [r3, #8]
   16716:	ed9f 5bba 	vldr	d5, [pc, #744]	; 16a00 <G_q+0xe910>
   1671a:	ee27 7b05 	vmul.f64	d7, d7, d5
   1671e:	ee36 6b07 	vadd.f64	d6, d6, d7
   16722:	f507 5389 	add.w	r3, r7, #4384	; 0x1120
   16726:	ed93 7b00 	vldr	d7, [r3]
   1672a:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   1672e:	ee27 5b05 	vmul.f64	d5, d7, d5
   16732:	f507 5389 	add.w	r3, r7, #4384	; 0x1120
   16736:	ed93 7b02 	vldr	d7, [r3, #8]
   1673a:	ed9f 4bb1 	vldr	d4, [pc, #708]	; 16a00 <G_q+0xe910>
   1673e:	ee27 7b04 	vmul.f64	d7, d7, d4
   16742:	ee35 7b07 	vadd.f64	d7, d5, d7
   16746:	ee36 7b47 	vsub.f64	d7, d6, d7
   1674a:	f241 3378 	movw	r3, #4984	; 0x1378
   1674e:	443b      	add	r3, r7
   16750:	ed83 7b00 	vstr	d7, [r3]
  if (t262.im == 0.0) {
   16754:	f241 1330 	movw	r3, #4400	; 0x1130
   16758:	443b      	add	r3, r7
   1675a:	ed93 7b02 	vldr	d7, [r3, #8]
   1675e:	eeb5 7b40 	vcmp.f64	d7, #0.0
   16762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   16766:	d117      	bne.n	16798 <G_q+0xe6a8>
    t13_im = t262.re / 2.0;
   16768:	f241 1330 	movw	r3, #4400	; 0x1130
   1676c:	443b      	add	r3, r7
   1676e:	ed93 6b00 	vldr	d6, [r3]
   16772:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16776:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1677a:	f241 3370 	movw	r3, #4976	; 0x1370
   1677e:	443b      	add	r3, r7
   16780:	ed83 7b00 	vstr	d7, [r3]
    t16_re = 0.0;
   16784:	f04f 0300 	mov.w	r3, #0
   16788:	f04f 0400 	mov.w	r4, #0
   1678c:	f241 3268 	movw	r2, #4968	; 0x1368
   16790:	443a      	add	r2, r7
   16792:	e9c2 3400 	strd	r3, r4, [r2]
   16796:	e03d      	b.n	16814 <G_q+0xe724>
  } else if (t262.re == 0.0) {
   16798:	f241 1330 	movw	r3, #4400	; 0x1130
   1679c:	443b      	add	r3, r7
   1679e:	ed93 7b00 	vldr	d7, [r3]
   167a2:	eeb5 7b40 	vcmp.f64	d7, #0.0
   167a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   167aa:	d117      	bne.n	167dc <G_q+0xe6ec>
    t13_im = 0.0;
   167ac:	f04f 0300 	mov.w	r3, #0
   167b0:	f04f 0400 	mov.w	r4, #0
   167b4:	f241 3270 	movw	r2, #4976	; 0x1370
   167b8:	443a      	add	r2, r7
   167ba:	e9c2 3400 	strd	r3, r4, [r2]
    t16_re = t262.im / 2.0;
   167be:	f241 1330 	movw	r3, #4400	; 0x1130
   167c2:	443b      	add	r3, r7
   167c4:	ed93 6b02 	vldr	d6, [r3, #8]
   167c8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   167cc:	ee86 7b05 	vdiv.f64	d7, d6, d5
   167d0:	f241 3368 	movw	r3, #4968	; 0x1368
   167d4:	443b      	add	r3, r7
   167d6:	ed83 7b00 	vstr	d7, [r3]
   167da:	e01b      	b.n	16814 <G_q+0xe724>
  } else {
    t13_im = t262.re / 2.0;
   167dc:	f241 1330 	movw	r3, #4400	; 0x1130
   167e0:	443b      	add	r3, r7
   167e2:	ed93 6b00 	vldr	d6, [r3]
   167e6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   167ea:	ee86 7b05 	vdiv.f64	d7, d6, d5
   167ee:	f241 3370 	movw	r3, #4976	; 0x1370
   167f2:	443b      	add	r3, r7
   167f4:	ed83 7b00 	vstr	d7, [r3]
    t16_re = t262.im / 2.0;
   167f8:	f241 1330 	movw	r3, #4400	; 0x1130
   167fc:	443b      	add	r3, r7
   167fe:	ed93 6b02 	vldr	d6, [r3, #8]
   16802:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16806:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1680a:	f241 3368 	movw	r3, #4968	; 0x1368
   1680e:	443b      	add	r3, r7
   16810:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t263.im == 0.0) {
   16814:	f507 538a 	add.w	r3, r7, #4416	; 0x1140
   16818:	ed93 7b02 	vldr	d7, [r3, #8]
   1681c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   16820:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   16824:	d116      	bne.n	16854 <G_q+0xe764>
    t34_re = t263.re / 2.0;
   16826:	f507 538a 	add.w	r3, r7, #4416	; 0x1140
   1682a:	ed93 6b00 	vldr	d6, [r3]
   1682e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16832:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16836:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1683a:	443b      	add	r3, r7
   1683c:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   16840:	f04f 0300 	mov.w	r3, #0
   16844:	f04f 0400 	mov.w	r4, #0
   16848:	f241 32b0 	movw	r2, #5040	; 0x13b0
   1684c:	443a      	add	r2, r7
   1684e:	e9c2 3400 	strd	r3, r4, [r2]
   16852:	e039      	b.n	168c8 <G_q+0xe7d8>
  } else if (t263.re == 0.0) {
   16854:	f507 538a 	add.w	r3, r7, #4416	; 0x1140
   16858:	ed93 7b00 	vldr	d7, [r3]
   1685c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   16860:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   16864:	d116      	bne.n	16894 <G_q+0xe7a4>
    t34_re = 0.0;
   16866:	f04f 0300 	mov.w	r3, #0
   1686a:	f04f 0400 	mov.w	r4, #0
   1686e:	f241 32b8 	movw	r2, #5048	; 0x13b8
   16872:	443a      	add	r2, r7
   16874:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t263.im / 2.0;
   16878:	f507 538a 	add.w	r3, r7, #4416	; 0x1140
   1687c:	ed93 6b02 	vldr	d6, [r3, #8]
   16880:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16884:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16888:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1688c:	443b      	add	r3, r7
   1688e:	ed83 7b00 	vstr	d7, [r3]
   16892:	e019      	b.n	168c8 <G_q+0xe7d8>
  } else {
    t34_re = t263.re / 2.0;
   16894:	f507 538a 	add.w	r3, r7, #4416	; 0x1140
   16898:	ed93 6b00 	vldr	d6, [r3]
   1689c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   168a0:	ee86 7b05 	vdiv.f64	d7, d6, d5
   168a4:	f241 33b8 	movw	r3, #5048	; 0x13b8
   168a8:	443b      	add	r3, r7
   168aa:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t263.im / 2.0;
   168ae:	f507 538a 	add.w	r3, r7, #4416	; 0x1140
   168b2:	ed93 6b02 	vldr	d6, [r3, #8]
   168b6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   168ba:	ee86 7b05 	vdiv.f64	d7, d6, d5
   168be:	f241 33b0 	movw	r3, #5040	; 0x13b0
   168c2:	443b      	add	r3, r7
   168c4:	ed83 7b00 	vstr	d7, [r3]
  }

  t16_im = (t260.re * 0.0 - t260.im * 0.5) - (t261.re * 0.0 - t261.im * 0.5);
   168c8:	f507 6317 	add.w	r3, r7, #2416	; 0x970
   168cc:	ed93 7b00 	vldr	d7, [r3]
   168d0:	ed9f 6b4b 	vldr	d6, [pc, #300]	; 16a00 <G_q+0xe910>
   168d4:	ee27 6b06 	vmul.f64	d6, d7, d6
   168d8:	f507 6317 	add.w	r3, r7, #2416	; 0x970
   168dc:	ed93 7b02 	vldr	d7, [r3, #8]
   168e0:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   168e4:	ee27 7b05 	vmul.f64	d7, d7, d5
   168e8:	ee36 6b47 	vsub.f64	d6, d6, d7
   168ec:	f507 6318 	add.w	r3, r7, #2432	; 0x980
   168f0:	ed93 7b00 	vldr	d7, [r3]
   168f4:	ed9f 5b42 	vldr	d5, [pc, #264]	; 16a00 <G_q+0xe910>
   168f8:	ee27 5b05 	vmul.f64	d5, d7, d5
   168fc:	f507 6318 	add.w	r3, r7, #2432	; 0x980
   16900:	ed93 7b02 	vldr	d7, [r3, #8]
   16904:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   16908:	ee27 7b04 	vmul.f64	d7, d7, d4
   1690c:	ee35 7b47 	vsub.f64	d7, d5, d7
   16910:	ee36 7b47 	vsub.f64	d7, d6, d7
   16914:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   16918:	ed83 7b00 	vstr	d7, [r3]
  t20_re = (t260.re * 0.5 + t260.im * 0.0) - (t261.re * 0.5 + t261.im * 0.0);
   1691c:	f507 6317 	add.w	r3, r7, #2416	; 0x970
   16920:	ed93 7b00 	vldr	d7, [r3]
   16924:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   16928:	ee27 6b06 	vmul.f64	d6, d7, d6
   1692c:	f507 6317 	add.w	r3, r7, #2416	; 0x970
   16930:	ed93 7b02 	vldr	d7, [r3, #8]
   16934:	ed9f 5b32 	vldr	d5, [pc, #200]	; 16a00 <G_q+0xe910>
   16938:	ee27 7b05 	vmul.f64	d7, d7, d5
   1693c:	ee36 6b07 	vadd.f64	d6, d6, d7
   16940:	f507 6318 	add.w	r3, r7, #2432	; 0x980
   16944:	ed93 7b00 	vldr	d7, [r3]
   16948:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   1694c:	ee27 5b05 	vmul.f64	d5, d7, d5
   16950:	f507 6318 	add.w	r3, r7, #2432	; 0x980
   16954:	ed93 7b02 	vldr	d7, [r3, #8]
   16958:	ed9f 4b29 	vldr	d4, [pc, #164]	; 16a00 <G_q+0xe910>
   1695c:	ee27 7b04 	vmul.f64	d7, d7, d4
   16960:	ee35 7b07 	vadd.f64	d7, d5, d7
   16964:	ee36 7b47 	vsub.f64	d7, d6, d7
   16968:	f241 3348 	movw	r3, #4936	; 0x1348
   1696c:	443b      	add	r3, r7
   1696e:	ed83 7b00 	vstr	d7, [r3]
  t13_im = (t13_im + t34_re) + 7.498798913309288E-33;
   16972:	f241 3370 	movw	r3, #4976	; 0x1370
   16976:	443b      	add	r3, r7
   16978:	ed93 6b00 	vldr	d6, [r3]
   1697c:	f241 33b8 	movw	r3, #5048	; 0x13b8
   16980:	443b      	add	r3, r7
   16982:	ed93 7b00 	vldr	d7, [r3]
   16986:	ee36 7b07 	vadd.f64	d7, d6, d7
   1698a:	ed9f 6b1f 	vldr	d6, [pc, #124]	; 16a08 <G_q+0xe918>
   1698e:	ee37 7b06 	vadd.f64	d7, d7, d6
   16992:	f241 3370 	movw	r3, #4976	; 0x1370
   16996:	443b      	add	r3, r7
   16998:	ed83 7b00 	vstr	d7, [r3]
  t16_re += t34_im;
   1699c:	f241 3368 	movw	r3, #4968	; 0x1368
   169a0:	443b      	add	r3, r7
   169a2:	ed93 6b00 	vldr	d6, [r3]
   169a6:	f241 33b0 	movw	r3, #5040	; 0x13b0
   169aa:	443b      	add	r3, r7
   169ac:	ed93 7b00 	vldr	d7, [r3]
   169b0:	ee36 7b07 	vadd.f64	d7, d6, d7
   169b4:	f241 3368 	movw	r3, #4968	; 0x1368
   169b8:	443b      	add	r3, r7
   169ba:	ed83 7b00 	vstr	d7, [r3]
  if (t254.im == 0.0) {
   169be:	f507 7354 	add.w	r3, r7, #848	; 0x350
   169c2:	ed93 7b02 	vldr	d7, [r3, #8]
   169c6:	eeb5 7b40 	vcmp.f64	d7, #0.0
   169ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   169ce:	d11f      	bne.n	16a10 <G_q+0xe920>
    t12_re = t254.re / 2.0;
   169d0:	f507 7354 	add.w	r3, r7, #848	; 0x350
   169d4:	ed93 6b00 	vldr	d6, [r3]
   169d8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   169dc:	ee86 7b05 	vdiv.f64	d7, d6, d5
   169e0:	f241 3388 	movw	r3, #5000	; 0x1388
   169e4:	443b      	add	r3, r7
   169e6:	ed83 7b00 	vstr	d7, [r3]
    t12_im = 0.0;
   169ea:	f04f 0300 	mov.w	r3, #0
   169ee:	f04f 0400 	mov.w	r4, #0
   169f2:	f507 529c 	add.w	r2, r7, #4992	; 0x1380
   169f6:	e9c2 3400 	strd	r3, r4, [r2]
   169fa:	e041      	b.n	16a80 <G_q+0xe990>
   169fc:	f3af 8000 	nop.w
	...
   16a08:	858a5d48 	.word	0x858a5d48
   16a0c:	394377ce 	.word	0x394377ce
  } else if (t254.re == 0.0) {
   16a10:	f507 7354 	add.w	r3, r7, #848	; 0x350
   16a14:	ed93 7b00 	vldr	d7, [r3]
   16a18:	eeb5 7b40 	vcmp.f64	d7, #0.0
   16a1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   16a20:	d115      	bne.n	16a4e <G_q+0xe95e>
    t12_re = 0.0;
   16a22:	f04f 0300 	mov.w	r3, #0
   16a26:	f04f 0400 	mov.w	r4, #0
   16a2a:	f241 3288 	movw	r2, #5000	; 0x1388
   16a2e:	443a      	add	r2, r7
   16a30:	e9c2 3400 	strd	r3, r4, [r2]
    t12_im = t254.im / 2.0;
   16a34:	f507 7354 	add.w	r3, r7, #848	; 0x350
   16a38:	ed93 6b02 	vldr	d6, [r3, #8]
   16a3c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16a40:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16a44:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   16a48:	ed83 7b00 	vstr	d7, [r3]
   16a4c:	e018      	b.n	16a80 <G_q+0xe990>
  } else {
    t12_re = t254.re / 2.0;
   16a4e:	f507 7354 	add.w	r3, r7, #848	; 0x350
   16a52:	ed93 6b00 	vldr	d6, [r3]
   16a56:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16a5a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16a5e:	f241 3388 	movw	r3, #5000	; 0x1388
   16a62:	443b      	add	r3, r7
   16a64:	ed83 7b00 	vstr	d7, [r3]
    t12_im = t254.im / 2.0;
   16a68:	f507 7354 	add.w	r3, r7, #848	; 0x350
   16a6c:	ed93 6b02 	vldr	d6, [r3, #8]
   16a70:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16a74:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16a78:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   16a7c:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t255.im == 0.0) {
   16a80:	4b25      	ldr	r3, [pc, #148]	; (16b18 <G_q+0xea28>)
   16a82:	f241 32d0 	movw	r2, #5072	; 0x13d0
   16a86:	443a      	add	r2, r7
   16a88:	4413      	add	r3, r2
   16a8a:	ed93 7b02 	vldr	d7, [r3, #8]
   16a8e:	eeb5 7b40 	vcmp.f64	d7, #0.0
   16a92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   16a96:	d119      	bne.n	16acc <G_q+0xe9dc>
    t34_re = t255.re / 2.0;
   16a98:	4b1f      	ldr	r3, [pc, #124]	; (16b18 <G_q+0xea28>)
   16a9a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   16a9e:	443a      	add	r2, r7
   16aa0:	4413      	add	r3, r2
   16aa2:	ed93 6b00 	vldr	d6, [r3]
   16aa6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16aaa:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16aae:	f241 33b8 	movw	r3, #5048	; 0x13b8
   16ab2:	443b      	add	r3, r7
   16ab4:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   16ab8:	f04f 0300 	mov.w	r3, #0
   16abc:	f04f 0400 	mov.w	r4, #0
   16ac0:	f241 32b0 	movw	r2, #5040	; 0x13b0
   16ac4:	443a      	add	r2, r7
   16ac6:	e9c2 3400 	strd	r3, r4, [r2]
   16aca:	e047      	b.n	16b5c <G_q+0xea6c>
  } else if (t255.re == 0.0) {
   16acc:	4b12      	ldr	r3, [pc, #72]	; (16b18 <G_q+0xea28>)
   16ace:	f241 32d0 	movw	r2, #5072	; 0x13d0
   16ad2:	443a      	add	r2, r7
   16ad4:	4413      	add	r3, r2
   16ad6:	ed93 7b00 	vldr	d7, [r3]
   16ada:	eeb5 7b40 	vcmp.f64	d7, #0.0
   16ade:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   16ae2:	d11b      	bne.n	16b1c <G_q+0xea2c>
    t34_re = 0.0;
   16ae4:	f04f 0300 	mov.w	r3, #0
   16ae8:	f04f 0400 	mov.w	r4, #0
   16aec:	f241 32b8 	movw	r2, #5048	; 0x13b8
   16af0:	443a      	add	r2, r7
   16af2:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t255.im / 2.0;
   16af6:	4b08      	ldr	r3, [pc, #32]	; (16b18 <G_q+0xea28>)
   16af8:	f241 32d0 	movw	r2, #5072	; 0x13d0
   16afc:	443a      	add	r2, r7
   16afe:	4413      	add	r3, r2
   16b00:	ed93 6b02 	vldr	d6, [r3, #8]
   16b04:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16b08:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16b0c:	f241 33b0 	movw	r3, #5040	; 0x13b0
   16b10:	443b      	add	r3, r7
   16b12:	ed83 7b00 	vstr	d7, [r3]
   16b16:	e021      	b.n	16b5c <G_q+0xea6c>
   16b18:	ffffef90 	.word	0xffffef90
  } else {
    t34_re = t255.re / 2.0;
   16b1c:	4be4      	ldr	r3, [pc, #912]	; (16eb0 <G_q+0xedc0>)
   16b1e:	f241 32d0 	movw	r2, #5072	; 0x13d0
   16b22:	443a      	add	r2, r7
   16b24:	4413      	add	r3, r2
   16b26:	ed93 6b00 	vldr	d6, [r3]
   16b2a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16b2e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16b32:	f241 33b8 	movw	r3, #5048	; 0x13b8
   16b36:	443b      	add	r3, r7
   16b38:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t255.im / 2.0;
   16b3c:	4bdc      	ldr	r3, [pc, #880]	; (16eb0 <G_q+0xedc0>)
   16b3e:	f241 32d0 	movw	r2, #5072	; 0x13d0
   16b42:	443a      	add	r2, r7
   16b44:	4413      	add	r3, r2
   16b46:	ed93 6b02 	vldr	d6, [r3, #8]
   16b4a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   16b4e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   16b52:	f241 33b0 	movw	r3, #5040	; 0x13b0
   16b56:	443b      	add	r3, r7
   16b58:	ed83 7b00 	vstr	d7, [r3]
  }

  t23_re = (t20_im * t3_im - t85_im * t13_re) - (t16_im * t13_im - t20_re *
   16b5c:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   16b60:	ed93 6b00 	vldr	d6, [r3]
   16b64:	f241 3310 	movw	r3, #4880	; 0x1310
   16b68:	443b      	add	r3, r7
   16b6a:	ed93 7b00 	vldr	d7, [r3]
   16b6e:	ee26 6b07 	vmul.f64	d6, d6, d7
   16b72:	f241 3318 	movw	r3, #4888	; 0x1318
   16b76:	443b      	add	r3, r7
   16b78:	ed93 5b00 	vldr	d5, [r3]
   16b7c:	f241 3378 	movw	r3, #4984	; 0x1378
   16b80:	443b      	add	r3, r7
   16b82:	ed93 7b00 	vldr	d7, [r3]
   16b86:	ee25 7b07 	vmul.f64	d7, d5, d7
   16b8a:	ee36 6b47 	vsub.f64	d6, d6, d7
   16b8e:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   16b92:	ed93 5b00 	vldr	d5, [r3]
   16b96:	f241 3370 	movw	r3, #4976	; 0x1370
   16b9a:	443b      	add	r3, r7
   16b9c:	ed93 7b00 	vldr	d7, [r3]
   16ba0:	ee25 5b07 	vmul.f64	d5, d5, d7
   16ba4:	f241 3348 	movw	r3, #4936	; 0x1348
   16ba8:	443b      	add	r3, r7
   16baa:	ed93 4b00 	vldr	d4, [r3]
   16bae:	f241 3368 	movw	r3, #4968	; 0x1368
   16bb2:	443b      	add	r3, r7
   16bb4:	ed93 7b00 	vldr	d7, [r3]
   16bb8:	ee24 7b07 	vmul.f64	d7, d4, d7
   16bbc:	ee35 7b47 	vsub.f64	d7, d5, d7
   16bc0:	ee36 7b47 	vsub.f64	d7, d6, d7
   16bc4:	f241 3330 	movw	r3, #4912	; 0x1330
   16bc8:	443b      	add	r3, r7
   16bca:	ed83 7b00 	vstr	d7, [r3]
    t16_re);
  t85_im = (t20_im * t13_re + t85_im * t3_im) - (t16_im * t16_re + t20_re *
   16bce:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   16bd2:	ed93 6b00 	vldr	d6, [r3]
   16bd6:	f241 3378 	movw	r3, #4984	; 0x1378
   16bda:	443b      	add	r3, r7
   16bdc:	ed93 7b00 	vldr	d7, [r3]
   16be0:	ee26 6b07 	vmul.f64	d6, d6, d7
   16be4:	f241 3318 	movw	r3, #4888	; 0x1318
   16be8:	443b      	add	r3, r7
   16bea:	ed93 5b00 	vldr	d5, [r3]
   16bee:	f241 3310 	movw	r3, #4880	; 0x1310
   16bf2:	443b      	add	r3, r7
   16bf4:	ed93 7b00 	vldr	d7, [r3]
   16bf8:	ee25 7b07 	vmul.f64	d7, d5, d7
   16bfc:	ee36 6b07 	vadd.f64	d6, d6, d7
   16c00:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   16c04:	ed93 5b00 	vldr	d5, [r3]
   16c08:	f241 3368 	movw	r3, #4968	; 0x1368
   16c0c:	443b      	add	r3, r7
   16c0e:	ed93 7b00 	vldr	d7, [r3]
   16c12:	ee25 5b07 	vmul.f64	d5, d5, d7
   16c16:	f241 3348 	movw	r3, #4936	; 0x1348
   16c1a:	443b      	add	r3, r7
   16c1c:	ed93 4b00 	vldr	d4, [r3]
   16c20:	f241 3370 	movw	r3, #4976	; 0x1370
   16c24:	443b      	add	r3, r7
   16c26:	ed93 7b00 	vldr	d7, [r3]
   16c2a:	ee24 7b07 	vmul.f64	d7, d4, d7
   16c2e:	ee35 7b07 	vadd.f64	d7, d5, d7
   16c32:	ee36 7b47 	vsub.f64	d7, d6, d7
   16c36:	f241 3318 	movw	r3, #4888	; 0x1318
   16c3a:	443b      	add	r3, r7
   16c3c:	ed83 7b00 	vstr	d7, [r3]
    t13_im);
  t12_re += t34_re;
   16c40:	f241 3388 	movw	r3, #5000	; 0x1388
   16c44:	443b      	add	r3, r7
   16c46:	ed93 6b00 	vldr	d6, [r3]
   16c4a:	f241 33b8 	movw	r3, #5048	; 0x13b8
   16c4e:	443b      	add	r3, r7
   16c50:	ed93 7b00 	vldr	d7, [r3]
   16c54:	ee36 7b07 	vadd.f64	d7, d6, d7
   16c58:	f241 3388 	movw	r3, #5000	; 0x1388
   16c5c:	443b      	add	r3, r7
   16c5e:	ed83 7b00 	vstr	d7, [r3]
  t12_im += t34_im;
   16c62:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   16c66:	ed93 6b00 	vldr	d6, [r3]
   16c6a:	f241 33b0 	movw	r3, #5040	; 0x13b0
   16c6e:	443b      	add	r3, r7
   16c70:	ed93 7b00 	vldr	d7, [r3]
   16c74:	ee36 7b07 	vadd.f64	d7, d6, d7
   16c78:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   16c7c:	ed83 7b00 	vstr	d7, [r3]
  t70_im += t76_re;
   16c80:	f241 23c8 	movw	r3, #4808	; 0x12c8
   16c84:	443b      	add	r3, r7
   16c86:	f241 21c8 	movw	r1, #4808	; 0x12c8
   16c8a:	4439      	add	r1, r7
   16c8c:	f241 22a8 	movw	r2, #4776	; 0x12a8
   16c90:	443a      	add	r2, r7
   16c92:	ed91 6b00 	vldr	d6, [r1]
   16c96:	ed92 7b00 	vldr	d7, [r2]
   16c9a:	ee36 7b07 	vadd.f64	d7, d6, d7
   16c9e:	ed83 7b00 	vstr	d7, [r3]
  t43_im += t72_re;
   16ca2:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   16ca6:	f241 22f8 	movw	r2, #4856	; 0x12f8
   16caa:	443a      	add	r2, r7
   16cac:	ed92 6b00 	vldr	d6, [r2]
   16cb0:	ed93 7b00 	vldr	d7, [r3]
   16cb4:	ee36 7b07 	vadd.f64	d7, d6, d7
   16cb8:	f241 23f8 	movw	r3, #4856	; 0x12f8
   16cbc:	443b      	add	r3, r7
   16cbe:	ed83 7b00 	vstr	d7, [r3]
  t55_im = (t58_im * t60_re - t70_re * b_t10_re) - (t23_re * t12_re - t85_im *
   16cc2:	f507 5295 	add.w	r2, r7, #4768	; 0x12a0
   16cc6:	f241 2350 	movw	r3, #4688	; 0x1250
   16cca:	443b      	add	r3, r7
   16ccc:	ed92 6b00 	vldr	d6, [r2]
   16cd0:	ed93 7b00 	vldr	d7, [r3]
   16cd4:	ee26 6b07 	vmul.f64	d6, d6, d7
   16cd8:	f241 23d0 	movw	r3, #4816	; 0x12d0
   16cdc:	443b      	add	r3, r7
   16cde:	ed93 5b00 	vldr	d5, [r3]
   16ce2:	f241 3338 	movw	r3, #4920	; 0x1338
   16ce6:	443b      	add	r3, r7
   16ce8:	ed93 7b00 	vldr	d7, [r3]
   16cec:	ee25 7b07 	vmul.f64	d7, d5, d7
   16cf0:	ee36 6b47 	vsub.f64	d6, d6, d7
   16cf4:	f241 3330 	movw	r3, #4912	; 0x1330
   16cf8:	443b      	add	r3, r7
   16cfa:	ed93 5b00 	vldr	d5, [r3]
   16cfe:	f241 3388 	movw	r3, #5000	; 0x1388
   16d02:	443b      	add	r3, r7
   16d04:	ed93 7b00 	vldr	d7, [r3]
   16d08:	ee25 5b07 	vmul.f64	d5, d5, d7
   16d0c:	f241 3318 	movw	r3, #4888	; 0x1318
   16d10:	443b      	add	r3, r7
   16d12:	ed93 4b00 	vldr	d4, [r3]
   16d16:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   16d1a:	ed93 7b00 	vldr	d7, [r3]
   16d1e:	ee24 7b07 	vmul.f64	d7, d4, d7
   16d22:	ee35 7b47 	vsub.f64	d7, d5, d7
   16d26:	ee36 7b47 	vsub.f64	d7, d6, d7
   16d2a:	f241 23d8 	movw	r3, #4824	; 0x12d8
   16d2e:	443b      	add	r3, r7
   16d30:	ed83 7b00 	vstr	d7, [r3]
    t12_im);
  t70_re = (t58_im * b_t10_re + t70_re * t60_re) - (t23_re * t12_im + t85_im *
   16d34:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   16d38:	ed93 6b00 	vldr	d6, [r3]
   16d3c:	f241 3338 	movw	r3, #4920	; 0x1338
   16d40:	443b      	add	r3, r7
   16d42:	ed93 7b00 	vldr	d7, [r3]
   16d46:	ee26 6b07 	vmul.f64	d6, d6, d7
   16d4a:	f241 22d0 	movw	r2, #4816	; 0x12d0
   16d4e:	443a      	add	r2, r7
   16d50:	f241 2350 	movw	r3, #4688	; 0x1250
   16d54:	443b      	add	r3, r7
   16d56:	ed92 5b00 	vldr	d5, [r2]
   16d5a:	ed93 7b00 	vldr	d7, [r3]
   16d5e:	ee25 7b07 	vmul.f64	d7, d5, d7
   16d62:	ee36 6b07 	vadd.f64	d6, d6, d7
   16d66:	f241 3330 	movw	r3, #4912	; 0x1330
   16d6a:	443b      	add	r3, r7
   16d6c:	ed93 5b00 	vldr	d5, [r3]
   16d70:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   16d74:	ed93 7b00 	vldr	d7, [r3]
   16d78:	ee25 5b07 	vmul.f64	d5, d5, d7
   16d7c:	f241 3318 	movw	r3, #4888	; 0x1318
   16d80:	443b      	add	r3, r7
   16d82:	ed93 4b00 	vldr	d4, [r3]
   16d86:	f241 3388 	movw	r3, #5000	; 0x1388
   16d8a:	443b      	add	r3, r7
   16d8c:	ed93 7b00 	vldr	d7, [r3]
   16d90:	ee24 7b07 	vmul.f64	d7, d4, d7
   16d94:	ee35 7b07 	vadd.f64	d7, d5, d7
   16d98:	f241 23d0 	movw	r3, #4816	; 0x12d0
   16d9c:	443b      	add	r3, r7
   16d9e:	ee36 7b47 	vsub.f64	d7, d6, d7
   16da2:	ed83 7b00 	vstr	d7, [r3]
    t12_re);
  t72_re = (t280.re * 0.0 - t280.im * 0.5) - (t281.re * 0.0 - t281.im * 0.5);
   16da6:	f241 13b0 	movw	r3, #4528	; 0x11b0
   16daa:	443b      	add	r3, r7
   16dac:	ed93 7b00 	vldr	d7, [r3]
   16db0:	ed9f 6b3d 	vldr	d6, [pc, #244]	; 16ea8 <G_q+0xedb8>
   16db4:	ee27 6b06 	vmul.f64	d6, d7, d6
   16db8:	f241 13b0 	movw	r3, #4528	; 0x11b0
   16dbc:	443b      	add	r3, r7
   16dbe:	ed93 7b02 	vldr	d7, [r3, #8]
   16dc2:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   16dc6:	ee27 7b05 	vmul.f64	d7, d7, d5
   16dca:	ee36 6b47 	vsub.f64	d6, d6, d7
   16dce:	f507 538e 	add.w	r3, r7, #4544	; 0x11c0
   16dd2:	ed93 7b00 	vldr	d7, [r3]
   16dd6:	ed9f 5b34 	vldr	d5, [pc, #208]	; 16ea8 <G_q+0xedb8>
   16dda:	ee27 5b05 	vmul.f64	d5, d7, d5
   16dde:	f507 538e 	add.w	r3, r7, #4544	; 0x11c0
   16de2:	ed93 7b02 	vldr	d7, [r3, #8]
   16de6:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   16dea:	ee27 7b04 	vmul.f64	d7, d7, d4
   16dee:	ee35 7b47 	vsub.f64	d7, d5, d7
   16df2:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   16df6:	ee36 7b47 	vsub.f64	d7, d6, d7
   16dfa:	ed83 7b00 	vstr	d7, [r3]
  t74_re = (t280.re * 0.5 + t280.im * 0.0) - (t281.re * 0.5 + t281.im * 0.0);
   16dfe:	f241 13b0 	movw	r3, #4528	; 0x11b0
   16e02:	443b      	add	r3, r7
   16e04:	ed93 7b00 	vldr	d7, [r3]
   16e08:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   16e0c:	ee27 6b06 	vmul.f64	d6, d7, d6
   16e10:	f241 13b0 	movw	r3, #4528	; 0x11b0
   16e14:	443b      	add	r3, r7
   16e16:	ed93 7b02 	vldr	d7, [r3, #8]
   16e1a:	ed9f 5b23 	vldr	d5, [pc, #140]	; 16ea8 <G_q+0xedb8>
   16e1e:	ee27 7b05 	vmul.f64	d7, d7, d5
   16e22:	ee36 6b07 	vadd.f64	d6, d6, d7
   16e26:	f507 538e 	add.w	r3, r7, #4544	; 0x11c0
   16e2a:	ed93 7b00 	vldr	d7, [r3]
   16e2e:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   16e32:	ee27 5b05 	vmul.f64	d5, d7, d5
   16e36:	f507 538e 	add.w	r3, r7, #4544	; 0x11c0
   16e3a:	ed93 7b02 	vldr	d7, [r3, #8]
   16e3e:	ed9f 4b1a 	vldr	d4, [pc, #104]	; 16ea8 <G_q+0xedb8>
   16e42:	ee27 7b04 	vmul.f64	d7, d7, d4
   16e46:	ee35 7b07 	vadd.f64	d7, d5, d7
   16e4a:	f241 23b8 	movw	r3, #4792	; 0x12b8
   16e4e:	443b      	add	r3, r7
   16e50:	ee36 7b47 	vsub.f64	d7, d6, d7
   16e54:	ed83 7b00 	vstr	d7, [r3]
  t74_im = (t282.re * 0.0 - t282.im * 0.5) - (t283.re * 0.0 - t283.im * 0.5);
   16e58:	f507 631d 	add.w	r3, r7, #2512	; 0x9d0
   16e5c:	ed93 7b00 	vldr	d7, [r3]
   16e60:	ed9f 6b11 	vldr	d6, [pc, #68]	; 16ea8 <G_q+0xedb8>
   16e64:	ee27 6b06 	vmul.f64	d6, d7, d6
   16e68:	f507 631d 	add.w	r3, r7, #2512	; 0x9d0
   16e6c:	ed93 7b02 	vldr	d7, [r3, #8]
   16e70:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   16e74:	ee27 7b05 	vmul.f64	d7, d7, d5
   16e78:	ee36 6b47 	vsub.f64	d6, d6, d7
   16e7c:	f507 631e 	add.w	r3, r7, #2528	; 0x9e0
   16e80:	ed93 7b00 	vldr	d7, [r3]
   16e84:	ed9f 5b08 	vldr	d5, [pc, #32]	; 16ea8 <G_q+0xedb8>
   16e88:	ee27 5b05 	vmul.f64	d5, d7, d5
   16e8c:	f507 631e 	add.w	r3, r7, #2528	; 0x9e0
   16e90:	ed93 7b02 	vldr	d7, [r3, #8]
   16e94:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   16e98:	ee27 7b04 	vmul.f64	d7, d7, d4
   16e9c:	ee35 7b47 	vsub.f64	d7, d5, d7
   16ea0:	f241 23b0 	movw	r3, #4784	; 0x12b0
   16ea4:	443b      	add	r3, r7
   16ea6:	e005      	b.n	16eb4 <G_q+0xedc4>
	...
   16eb0:	ffffef90 	.word	0xffffef90
   16eb4:	ee36 7b47 	vsub.f64	d7, d6, d7
   16eb8:	ed83 7b00 	vstr	d7, [r3]
  t55_re = (t282.re * 0.5 + t282.im * 0.0) - (t283.re * 0.5 + t283.im * 0.0);
   16ebc:	f507 631d 	add.w	r3, r7, #2512	; 0x9d0
   16ec0:	ed93 7b00 	vldr	d7, [r3]
   16ec4:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   16ec8:	ee27 6b06 	vmul.f64	d6, d7, d6
   16ecc:	f507 631d 	add.w	r3, r7, #2512	; 0x9d0
   16ed0:	ed93 7b02 	vldr	d7, [r3, #8]
   16ed4:	ed9f 5bb6 	vldr	d5, [pc, #728]	; 171b0 <G_q+0xf0c0>
   16ed8:	ee27 7b05 	vmul.f64	d7, d7, d5
   16edc:	ee36 6b07 	vadd.f64	d6, d6, d7
   16ee0:	f507 631e 	add.w	r3, r7, #2528	; 0x9e0
   16ee4:	ed93 7b00 	vldr	d7, [r3]
   16ee8:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   16eec:	ee27 5b05 	vmul.f64	d5, d7, d5
   16ef0:	f507 631e 	add.w	r3, r7, #2528	; 0x9e0
   16ef4:	ed93 7b02 	vldr	d7, [r3, #8]
   16ef8:	ed9f 4bad 	vldr	d4, [pc, #692]	; 171b0 <G_q+0xf0c0>
   16efc:	ee27 7b04 	vmul.f64	d7, d7, d4
   16f00:	ee35 7b07 	vadd.f64	d7, d5, d7
   16f04:	ee36 7b47 	vsub.f64	d7, d6, d7
   16f08:	f507 5397 	add.w	r3, r7, #4832	; 0x12e0
   16f0c:	ed83 7b00 	vstr	d7, [r3]
  t12_re = (t294.re * 0.0 - t294.im * 3.061616997868383E-17) - (t295.re * 0.0 -
   16f10:	f507 6321 	add.w	r3, r7, #2576	; 0xa10
   16f14:	ed93 7b00 	vldr	d7, [r3]
   16f18:	ed9f 6ba5 	vldr	d6, [pc, #660]	; 171b0 <G_q+0xf0c0>
   16f1c:	ee27 6b06 	vmul.f64	d6, d7, d6
   16f20:	f507 6321 	add.w	r3, r7, #2576	; 0xa10
   16f24:	ed93 7b02 	vldr	d7, [r3, #8]
   16f28:	ed9f 5ba5 	vldr	d5, [pc, #660]	; 171c0 <G_q+0xf0d0>
   16f2c:	ee27 7b05 	vmul.f64	d7, d7, d5
   16f30:	ee36 6b47 	vsub.f64	d6, d6, d7
   16f34:	f507 6322 	add.w	r3, r7, #2592	; 0xa20
   16f38:	ed93 7b00 	vldr	d7, [r3]
   16f3c:	ed9f 5b9c 	vldr	d5, [pc, #624]	; 171b0 <G_q+0xf0c0>
   16f40:	ee27 5b05 	vmul.f64	d5, d7, d5
    t295.im * 3.061616997868383E-17);
   16f44:	f507 6322 	add.w	r3, r7, #2592	; 0xa20
   16f48:	ed93 7b02 	vldr	d7, [r3, #8]
   16f4c:	ed9f 4b9c 	vldr	d4, [pc, #624]	; 171c0 <G_q+0xf0d0>
   16f50:	ee27 7b04 	vmul.f64	d7, d7, d4
  t12_re = (t294.re * 0.0 - t294.im * 3.061616997868383E-17) - (t295.re * 0.0 -
   16f54:	ee35 7b47 	vsub.f64	d7, d5, d7
   16f58:	ee36 7b47 	vsub.f64	d7, d6, d7
   16f5c:	f241 3388 	movw	r3, #5000	; 0x1388
   16f60:	443b      	add	r3, r7
   16f62:	ed83 7b00 	vstr	d7, [r3]
  t12_im = (t294.re * 3.061616997868383E-17 + t294.im * 0.0) - (t295.re *
   16f66:	f507 6321 	add.w	r3, r7, #2576	; 0xa10
   16f6a:	ed93 7b00 	vldr	d7, [r3]
   16f6e:	ed9f 6b94 	vldr	d6, [pc, #592]	; 171c0 <G_q+0xf0d0>
   16f72:	ee27 6b06 	vmul.f64	d6, d7, d6
   16f76:	f507 6321 	add.w	r3, r7, #2576	; 0xa10
   16f7a:	ed93 7b02 	vldr	d7, [r3, #8]
   16f7e:	ed9f 5b8c 	vldr	d5, [pc, #560]	; 171b0 <G_q+0xf0c0>
   16f82:	ee27 7b05 	vmul.f64	d7, d7, d5
   16f86:	ee36 6b07 	vadd.f64	d6, d6, d7
   16f8a:	f507 6322 	add.w	r3, r7, #2592	; 0xa20
   16f8e:	ed93 7b00 	vldr	d7, [r3]
   16f92:	ed9f 5b8b 	vldr	d5, [pc, #556]	; 171c0 <G_q+0xf0d0>
   16f96:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t295.im * 0.0);
   16f9a:	f507 6322 	add.w	r3, r7, #2592	; 0xa20
   16f9e:	ed93 7b02 	vldr	d7, [r3, #8]
   16fa2:	ed9f 4b83 	vldr	d4, [pc, #524]	; 171b0 <G_q+0xf0c0>
   16fa6:	ee27 7b04 	vmul.f64	d7, d7, d4
   16faa:	ee35 7b07 	vadd.f64	d7, d5, d7
  t12_im = (t294.re * 3.061616997868383E-17 + t294.im * 0.0) - (t295.re *
   16fae:	ee36 7b47 	vsub.f64	d7, d6, d7
   16fb2:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   16fb6:	ed83 7b00 	vstr	d7, [r3]
  t23_re = (t292.re * 0.0 - t292.im * 0.5) - (t293.re * 0.0 - t293.im * 0.5);
   16fba:	f241 2310 	movw	r3, #4624	; 0x1210
   16fbe:	443b      	add	r3, r7
   16fc0:	ed93 7b00 	vldr	d7, [r3]
   16fc4:	ed9f 6b7a 	vldr	d6, [pc, #488]	; 171b0 <G_q+0xf0c0>
   16fc8:	ee27 6b06 	vmul.f64	d6, d7, d6
   16fcc:	f241 2310 	movw	r3, #4624	; 0x1210
   16fd0:	443b      	add	r3, r7
   16fd2:	ed93 7b02 	vldr	d7, [r3, #8]
   16fd6:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   16fda:	ee27 7b05 	vmul.f64	d7, d7, d5
   16fde:	ee36 6b47 	vsub.f64	d6, d6, d7
   16fe2:	f507 5391 	add.w	r3, r7, #4640	; 0x1220
   16fe6:	ed93 7b00 	vldr	d7, [r3]
   16fea:	ed9f 5b71 	vldr	d5, [pc, #452]	; 171b0 <G_q+0xf0c0>
   16fee:	ee27 5b05 	vmul.f64	d5, d7, d5
   16ff2:	f507 5391 	add.w	r3, r7, #4640	; 0x1220
   16ff6:	ed93 7b02 	vldr	d7, [r3, #8]
   16ffa:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   16ffe:	ee27 7b04 	vmul.f64	d7, d7, d4
   17002:	ee35 7b47 	vsub.f64	d7, d5, d7
   17006:	ee36 7b47 	vsub.f64	d7, d6, d7
   1700a:	f241 3330 	movw	r3, #4912	; 0x1330
   1700e:	443b      	add	r3, r7
   17010:	ed83 7b00 	vstr	d7, [r3]
  t3_im = (t292.re * 0.5 + t292.im * 0.0) - (t293.re * 0.5 + t293.im * 0.0);
   17014:	f241 2310 	movw	r3, #4624	; 0x1210
   17018:	443b      	add	r3, r7
   1701a:	ed93 7b00 	vldr	d7, [r3]
   1701e:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   17022:	ee27 6b06 	vmul.f64	d6, d7, d6
   17026:	f241 2310 	movw	r3, #4624	; 0x1210
   1702a:	443b      	add	r3, r7
   1702c:	ed93 7b02 	vldr	d7, [r3, #8]
   17030:	ed9f 5b5f 	vldr	d5, [pc, #380]	; 171b0 <G_q+0xf0c0>
   17034:	ee27 7b05 	vmul.f64	d7, d7, d5
   17038:	ee36 6b07 	vadd.f64	d6, d6, d7
   1703c:	f507 5391 	add.w	r3, r7, #4640	; 0x1220
   17040:	ed93 7b00 	vldr	d7, [r3]
   17044:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   17048:	ee27 5b05 	vmul.f64	d5, d7, d5
   1704c:	f507 5391 	add.w	r3, r7, #4640	; 0x1220
   17050:	ed93 7b02 	vldr	d7, [r3, #8]
   17054:	ed9f 4b56 	vldr	d4, [pc, #344]	; 171b0 <G_q+0xf0c0>
   17058:	ee27 7b04 	vmul.f64	d7, d7, d4
   1705c:	ee35 7b07 	vadd.f64	d7, d5, d7
   17060:	ee36 7b47 	vsub.f64	d7, d6, d7
   17064:	f241 3310 	movw	r3, #4880	; 0x1310
   17068:	443b      	add	r3, r7
   1706a:	ed83 7b00 	vstr	d7, [r3]
  if (t290.im == 0.0) {
   1706e:	f241 13f0 	movw	r3, #4592	; 0x11f0
   17072:	443b      	add	r3, r7
   17074:	ed93 7b02 	vldr	d7, [r3, #8]
   17078:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1707c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   17080:	d117      	bne.n	170b2 <G_q+0xefc2>
    t13_re = t290.re / 2.0;
   17082:	f241 13f0 	movw	r3, #4592	; 0x11f0
   17086:	443b      	add	r3, r7
   17088:	ed93 6b00 	vldr	d6, [r3]
   1708c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17090:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17094:	f241 3378 	movw	r3, #4984	; 0x1378
   17098:	443b      	add	r3, r7
   1709a:	ed83 7b00 	vstr	d7, [r3]
    t13_im = 0.0;
   1709e:	f04f 0300 	mov.w	r3, #0
   170a2:	f04f 0400 	mov.w	r4, #0
   170a6:	f241 3270 	movw	r2, #4976	; 0x1370
   170aa:	443a      	add	r2, r7
   170ac:	e9c2 3400 	strd	r3, r4, [r2]
   170b0:	e03d      	b.n	1712e <G_q+0xf03e>
  } else if (t290.re == 0.0) {
   170b2:	f241 13f0 	movw	r3, #4592	; 0x11f0
   170b6:	443b      	add	r3, r7
   170b8:	ed93 7b00 	vldr	d7, [r3]
   170bc:	eeb5 7b40 	vcmp.f64	d7, #0.0
   170c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   170c4:	d117      	bne.n	170f6 <G_q+0xf006>
    t13_re = 0.0;
   170c6:	f04f 0300 	mov.w	r3, #0
   170ca:	f04f 0400 	mov.w	r4, #0
   170ce:	f241 3278 	movw	r2, #4984	; 0x1378
   170d2:	443a      	add	r2, r7
   170d4:	e9c2 3400 	strd	r3, r4, [r2]
    t13_im = t290.im / 2.0;
   170d8:	f241 13f0 	movw	r3, #4592	; 0x11f0
   170dc:	443b      	add	r3, r7
   170de:	ed93 6b02 	vldr	d6, [r3, #8]
   170e2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   170e6:	ee86 7b05 	vdiv.f64	d7, d6, d5
   170ea:	f241 3370 	movw	r3, #4976	; 0x1370
   170ee:	443b      	add	r3, r7
   170f0:	ed83 7b00 	vstr	d7, [r3]
   170f4:	e01b      	b.n	1712e <G_q+0xf03e>
  } else {
    t13_re = t290.re / 2.0;
   170f6:	f241 13f0 	movw	r3, #4592	; 0x11f0
   170fa:	443b      	add	r3, r7
   170fc:	ed93 6b00 	vldr	d6, [r3]
   17100:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17104:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17108:	f241 3378 	movw	r3, #4984	; 0x1378
   1710c:	443b      	add	r3, r7
   1710e:	ed83 7b00 	vstr	d7, [r3]
    t13_im = t290.im / 2.0;
   17112:	f241 13f0 	movw	r3, #4592	; 0x11f0
   17116:	443b      	add	r3, r7
   17118:	ed93 6b02 	vldr	d6, [r3, #8]
   1711c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17120:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17124:	f241 3370 	movw	r3, #4976	; 0x1370
   17128:	443b      	add	r3, r7
   1712a:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t291.im == 0.0) {
   1712e:	f507 5390 	add.w	r3, r7, #4608	; 0x1200
   17132:	ed93 7b02 	vldr	d7, [r3, #8]
   17136:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1713a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1713e:	d116      	bne.n	1716e <G_q+0xf07e>
    t34_re = t291.re / 2.0;
   17140:	f507 5390 	add.w	r3, r7, #4608	; 0x1200
   17144:	ed93 6b00 	vldr	d6, [r3]
   17148:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1714c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17150:	f241 33b8 	movw	r3, #5048	; 0x13b8
   17154:	443b      	add	r3, r7
   17156:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   1715a:	f04f 0300 	mov.w	r3, #0
   1715e:	f04f 0400 	mov.w	r4, #0
   17162:	f241 32b0 	movw	r2, #5040	; 0x13b0
   17166:	443a      	add	r2, r7
   17168:	e9c2 3400 	strd	r3, r4, [r2]
   1716c:	e046      	b.n	171fc <G_q+0xf10c>
  } else if (t291.re == 0.0) {
   1716e:	f507 5390 	add.w	r3, r7, #4608	; 0x1200
   17172:	ed93 7b00 	vldr	d7, [r3]
   17176:	eeb5 7b40 	vcmp.f64	d7, #0.0
   1717a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1717e:	d123      	bne.n	171c8 <G_q+0xf0d8>
    t34_re = 0.0;
   17180:	f04f 0300 	mov.w	r3, #0
   17184:	f04f 0400 	mov.w	r4, #0
   17188:	f241 32b8 	movw	r2, #5048	; 0x13b8
   1718c:	443a      	add	r2, r7
   1718e:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t291.im / 2.0;
   17192:	f507 5390 	add.w	r3, r7, #4608	; 0x1200
   17196:	ed93 6b02 	vldr	d6, [r3, #8]
   1719a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1719e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   171a2:	f241 33b0 	movw	r3, #5040	; 0x13b0
   171a6:	443b      	add	r3, r7
   171a8:	ed83 7b00 	vstr	d7, [r3]
   171ac:	e026      	b.n	171fc <G_q+0xf10c>
   171ae:	bf00      	nop
	...
   171b8:	858a5d48 	.word	0x858a5d48
   171bc:	394377ce 	.word	0x394377ce
   171c0:	33145c07 	.word	0x33145c07
   171c4:	3c81a626 	.word	0x3c81a626
  } else {
    t34_re = t291.re / 2.0;
   171c8:	f507 5390 	add.w	r3, r7, #4608	; 0x1200
   171cc:	ed93 6b00 	vldr	d6, [r3]
   171d0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   171d4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   171d8:	f241 33b8 	movw	r3, #5048	; 0x13b8
   171dc:	443b      	add	r3, r7
   171de:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t291.im / 2.0;
   171e2:	f507 5390 	add.w	r3, r7, #4608	; 0x1200
   171e6:	ed93 6b02 	vldr	d6, [r3, #8]
   171ea:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   171ee:	ee86 7b05 	vdiv.f64	d7, d6, d5
   171f2:	f241 33b0 	movw	r3, #5040	; 0x13b0
   171f6:	443b      	add	r3, r7
   171f8:	ed83 7b00 	vstr	d7, [r3]
  }

  t16_re = t288.re * 3.061616997868383E-17 + t289.re * 3.061616997868383E-17;
   171fc:	f507 631f 	add.w	r3, r7, #2544	; 0x9f0
   17200:	ed93 7b00 	vldr	d7, [r3]
   17204:	ed1f 6b12 	vldr	d6, [pc, #-72]	; 171c0 <G_q+0xf0d0>
   17208:	ee27 6b06 	vmul.f64	d6, d7, d6
   1720c:	f507 6320 	add.w	r3, r7, #2560	; 0xa00
   17210:	ed93 7b00 	vldr	d7, [r3]
   17214:	ed1f 5b16 	vldr	d5, [pc, #-88]	; 171c0 <G_q+0xf0d0>
   17218:	ee27 7b05 	vmul.f64	d7, d7, d5
   1721c:	ee36 7b07 	vadd.f64	d7, d6, d7
   17220:	f241 3368 	movw	r3, #4968	; 0x1368
   17224:	443b      	add	r3, r7
   17226:	ed83 7b00 	vstr	d7, [r3]
  t16_im = t288.im * 3.061616997868383E-17 + t289.im * 3.061616997868383E-17;
   1722a:	f507 631f 	add.w	r3, r7, #2544	; 0x9f0
   1722e:	ed93 7b02 	vldr	d7, [r3, #8]
   17232:	ed1f 6b1d 	vldr	d6, [pc, #-116]	; 171c0 <G_q+0xf0d0>
   17236:	ee27 6b06 	vmul.f64	d6, d7, d6
   1723a:	f507 6320 	add.w	r3, r7, #2560	; 0xa00
   1723e:	ed93 7b02 	vldr	d7, [r3, #8]
   17242:	ed1f 5b21 	vldr	d5, [pc, #-132]	; 171c0 <G_q+0xf0d0>
   17246:	ee27 7b05 	vmul.f64	d7, d7, d5
   1724a:	ee36 7b07 	vadd.f64	d7, d6, d7
   1724e:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   17252:	ed83 7b00 	vstr	d7, [r3]
  t13_re = (t13_re + t34_re) + 7.498798913309288E-33;
   17256:	f241 3378 	movw	r3, #4984	; 0x1378
   1725a:	443b      	add	r3, r7
   1725c:	ed93 6b00 	vldr	d6, [r3]
   17260:	f241 33b8 	movw	r3, #5048	; 0x13b8
   17264:	443b      	add	r3, r7
   17266:	ed93 7b00 	vldr	d7, [r3]
   1726a:	ee36 7b07 	vadd.f64	d7, d6, d7
   1726e:	ed1f 6b2e 	vldr	d6, [pc, #-184]	; 171b8 <G_q+0xf0c8>
   17272:	ee37 7b06 	vadd.f64	d7, d7, d6
   17276:	f241 3378 	movw	r3, #4984	; 0x1378
   1727a:	443b      	add	r3, r7
   1727c:	ed83 7b00 	vstr	d7, [r3]
  t13_im += t34_im;
   17280:	f241 3370 	movw	r3, #4976	; 0x1370
   17284:	443b      	add	r3, r7
   17286:	ed93 6b00 	vldr	d6, [r3]
   1728a:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1728e:	443b      	add	r3, r7
   17290:	ed93 7b00 	vldr	d7, [r3]
   17294:	ee36 7b07 	vadd.f64	d7, d6, d7
   17298:	f241 3370 	movw	r3, #4976	; 0x1370
   1729c:	443b      	add	r3, r7
   1729e:	ed83 7b00 	vstr	d7, [r3]
  t58_im = t284.re * 3.061616997868383E-17 + t285.re * 3.061616997868383E-17;
   172a2:	f507 7364 	add.w	r3, r7, #912	; 0x390
   172a6:	ed93 7b00 	vldr	d7, [r3]
   172aa:	ed1f 6b3b 	vldr	d6, [pc, #-236]	; 171c0 <G_q+0xf0d0>
   172ae:	ee27 6b06 	vmul.f64	d6, d7, d6
   172b2:	4bb7      	ldr	r3, [pc, #732]	; (17590 <G_q+0xf4a0>)
   172b4:	f241 32d0 	movw	r2, #5072	; 0x13d0
   172b8:	443a      	add	r2, r7
   172ba:	4413      	add	r3, r2
   172bc:	ed93 7b00 	vldr	d7, [r3]
   172c0:	ed9f 5baf 	vldr	d5, [pc, #700]	; 17580 <G_q+0xf490>
   172c4:	ee27 7b05 	vmul.f64	d7, d7, d5
   172c8:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   172cc:	ee36 7b07 	vadd.f64	d7, d6, d7
   172d0:	ed83 7b00 	vstr	d7, [r3]
  t60_re = t284.im * 3.061616997868383E-17 + t285.im * 3.061616997868383E-17;
   172d4:	f507 7364 	add.w	r3, r7, #912	; 0x390
   172d8:	ed93 7b02 	vldr	d7, [r3, #8]
   172dc:	ed9f 6ba8 	vldr	d6, [pc, #672]	; 17580 <G_q+0xf490>
   172e0:	ee27 6b06 	vmul.f64	d6, d7, d6
   172e4:	4baa      	ldr	r3, [pc, #680]	; (17590 <G_q+0xf4a0>)
   172e6:	f241 32d0 	movw	r2, #5072	; 0x13d0
   172ea:	443a      	add	r2, r7
   172ec:	4413      	add	r3, r2
   172ee:	ed93 7b02 	vldr	d7, [r3, #8]
   172f2:	ed9f 5ba3 	vldr	d5, [pc, #652]	; 17580 <G_q+0xf490>
   172f6:	ee27 7b05 	vmul.f64	d7, d7, d5
   172fa:	f241 2350 	movw	r3, #4688	; 0x1250
   172fe:	443b      	add	r3, r7
   17300:	ee36 7b07 	vadd.f64	d7, d6, d7
   17304:	ed83 7b00 	vstr	d7, [r3]
  t76_re = (((t286.re * 6.123233995736766E-17 + t287.re * 6.123233995736766E-17)
   17308:	f241 13d0 	movw	r3, #4560	; 0x11d0
   1730c:	443b      	add	r3, r7
   1730e:	ed93 7b00 	vldr	d7, [r3]
   17312:	ed9f 6b9d 	vldr	d6, [pc, #628]	; 17588 <G_q+0xf498>
   17316:	ee27 6b06 	vmul.f64	d6, d7, d6
   1731a:	f507 538f 	add.w	r3, r7, #4576	; 0x11e0
   1731e:	ed93 7b00 	vldr	d7, [r3]
   17322:	ed9f 5b99 	vldr	d5, [pc, #612]	; 17588 <G_q+0xf498>
   17326:	ee27 7b05 	vmul.f64	d7, d7, d5
   1732a:	ee36 6b07 	vadd.f64	d6, d6, d7
             + (t12_re * t23_re - t12_im * t3_im)) + (t16_re * t13_re - t16_im *
   1732e:	f241 3388 	movw	r3, #5000	; 0x1388
   17332:	443b      	add	r3, r7
   17334:	ed93 5b00 	vldr	d5, [r3]
   17338:	f241 3330 	movw	r3, #4912	; 0x1330
   1733c:	443b      	add	r3, r7
   1733e:	ed93 7b00 	vldr	d7, [r3]
   17342:	ee25 5b07 	vmul.f64	d5, d5, d7
   17346:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   1734a:	ed93 4b00 	vldr	d4, [r3]
   1734e:	f241 3310 	movw	r3, #4880	; 0x1310
   17352:	443b      	add	r3, r7
   17354:	ed93 7b00 	vldr	d7, [r3]
   17358:	ee24 7b07 	vmul.f64	d7, d4, d7
   1735c:	ee35 7b47 	vsub.f64	d7, d5, d7
   17360:	ee36 6b07 	vadd.f64	d6, d6, d7
   17364:	f241 3368 	movw	r3, #4968	; 0x1368
   17368:	443b      	add	r3, r7
   1736a:	ed93 5b00 	vldr	d5, [r3]
   1736e:	f241 3378 	movw	r3, #4984	; 0x1378
   17372:	443b      	add	r3, r7
   17374:	ed93 7b00 	vldr	d7, [r3]
   17378:	ee25 5b07 	vmul.f64	d5, d5, d7
   1737c:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   17380:	ed93 4b00 	vldr	d4, [r3]
   17384:	f241 3370 	movw	r3, #4976	; 0x1370
   17388:	443b      	add	r3, r7
   1738a:	ed93 7b00 	vldr	d7, [r3]
   1738e:	ee24 7b07 	vmul.f64	d7, d4, d7
   17392:	ee35 7b47 	vsub.f64	d7, d5, d7
   17396:	ee36 7b07 	vadd.f64	d7, d6, d7
  t76_re = (((t286.re * 6.123233995736766E-17 + t287.re * 6.123233995736766E-17)
   1739a:	f241 23a8 	movw	r3, #4776	; 0x12a8
   1739e:	443b      	add	r3, r7
   173a0:	ed9f 6b79 	vldr	d6, [pc, #484]	; 17588 <G_q+0xf498>
   173a4:	ee37 7b46 	vsub.f64	d7, d7, d6
   173a8:	ed83 7b00 	vstr	d7, [r3]
             t13_im)) - 6.123233995736766E-17;
  t85_im = ((t286.im * 6.123233995736766E-17 + t287.im * 6.123233995736766E-17)
   173ac:	f241 13d0 	movw	r3, #4560	; 0x11d0
   173b0:	443b      	add	r3, r7
   173b2:	ed93 7b02 	vldr	d7, [r3, #8]
   173b6:	ed9f 6b74 	vldr	d6, [pc, #464]	; 17588 <G_q+0xf498>
   173ba:	ee27 6b06 	vmul.f64	d6, d7, d6
   173be:	f507 538f 	add.w	r3, r7, #4576	; 0x11e0
   173c2:	ed93 7b02 	vldr	d7, [r3, #8]
   173c6:	ed9f 5b70 	vldr	d5, [pc, #448]	; 17588 <G_q+0xf498>
   173ca:	ee27 7b05 	vmul.f64	d7, d7, d5
   173ce:	ee36 6b07 	vadd.f64	d6, d6, d7
            + (t12_re * t3_im + t12_im * t23_re)) + (t16_re * t13_im + t16_im *
   173d2:	f241 3388 	movw	r3, #5000	; 0x1388
   173d6:	443b      	add	r3, r7
   173d8:	ed93 5b00 	vldr	d5, [r3]
   173dc:	f241 3310 	movw	r3, #4880	; 0x1310
   173e0:	443b      	add	r3, r7
   173e2:	ed93 7b00 	vldr	d7, [r3]
   173e6:	ee25 5b07 	vmul.f64	d5, d5, d7
   173ea:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   173ee:	ed93 4b00 	vldr	d4, [r3]
   173f2:	f241 3330 	movw	r3, #4912	; 0x1330
   173f6:	443b      	add	r3, r7
   173f8:	ed93 7b00 	vldr	d7, [r3]
   173fc:	ee24 7b07 	vmul.f64	d7, d4, d7
   17400:	ee35 7b07 	vadd.f64	d7, d5, d7
   17404:	ee36 6b07 	vadd.f64	d6, d6, d7
   17408:	f241 3368 	movw	r3, #4968	; 0x1368
   1740c:	443b      	add	r3, r7
   1740e:	ed93 5b00 	vldr	d5, [r3]
   17412:	f241 3370 	movw	r3, #4976	; 0x1370
   17416:	443b      	add	r3, r7
   17418:	ed93 7b00 	vldr	d7, [r3]
   1741c:	ee25 5b07 	vmul.f64	d5, d5, d7
   17420:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   17424:	ed93 4b00 	vldr	d4, [r3]
   17428:	f241 3378 	movw	r3, #4984	; 0x1378
   1742c:	443b      	add	r3, r7
   1742e:	ed93 7b00 	vldr	d7, [r3]
   17432:	ee24 7b07 	vmul.f64	d7, d4, d7
   17436:	ee35 7b07 	vadd.f64	d7, d5, d7
  t85_im = ((t286.im * 6.123233995736766E-17 + t287.im * 6.123233995736766E-17)
   1743a:	ee36 7b07 	vadd.f64	d7, d6, d7
   1743e:	f241 3318 	movw	r3, #4888	; 0x1318
   17442:	443b      	add	r3, r7
   17444:	ed83 7b00 	vstr	d7, [r3]
    t13_re);
  if (t270.im == 0.0) {
   17448:	f507 6319 	add.w	r3, r7, #2448	; 0x990
   1744c:	ed93 7b02 	vldr	d7, [r3, #8]
   17450:	eeb5 7b40 	vcmp.f64	d7, #0.0
   17454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   17458:	d116      	bne.n	17488 <G_q+0xf398>
    t3_im = t270.re / 2.0;
   1745a:	f507 6319 	add.w	r3, r7, #2448	; 0x990
   1745e:	ed93 6b00 	vldr	d6, [r3]
   17462:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17466:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1746a:	f241 3310 	movw	r3, #4880	; 0x1310
   1746e:	443b      	add	r3, r7
   17470:	ed83 7b00 	vstr	d7, [r3]
    t23_re = 0.0;
   17474:	f04f 0300 	mov.w	r3, #0
   17478:	f04f 0400 	mov.w	r4, #0
   1747c:	f241 3230 	movw	r2, #4912	; 0x1330
   17480:	443a      	add	r2, r7
   17482:	e9c2 3400 	strd	r3, r4, [r2]
   17486:	e039      	b.n	174fc <G_q+0xf40c>
  } else if (t270.re == 0.0) {
   17488:	f507 6319 	add.w	r3, r7, #2448	; 0x990
   1748c:	ed93 7b00 	vldr	d7, [r3]
   17490:	eeb5 7b40 	vcmp.f64	d7, #0.0
   17494:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   17498:	d116      	bne.n	174c8 <G_q+0xf3d8>
    t3_im = 0.0;
   1749a:	f04f 0300 	mov.w	r3, #0
   1749e:	f04f 0400 	mov.w	r4, #0
   174a2:	f241 3210 	movw	r2, #4880	; 0x1310
   174a6:	443a      	add	r2, r7
   174a8:	e9c2 3400 	strd	r3, r4, [r2]
    t23_re = t270.im / 2.0;
   174ac:	f507 6319 	add.w	r3, r7, #2448	; 0x990
   174b0:	ed93 6b02 	vldr	d6, [r3, #8]
   174b4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   174b8:	ee86 7b05 	vdiv.f64	d7, d6, d5
   174bc:	f241 3330 	movw	r3, #4912	; 0x1330
   174c0:	443b      	add	r3, r7
   174c2:	ed83 7b00 	vstr	d7, [r3]
   174c6:	e019      	b.n	174fc <G_q+0xf40c>
  } else {
    t3_im = t270.re / 2.0;
   174c8:	f507 6319 	add.w	r3, r7, #2448	; 0x990
   174cc:	ed93 6b00 	vldr	d6, [r3]
   174d0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   174d4:	ee86 7b05 	vdiv.f64	d7, d6, d5
   174d8:	f241 3310 	movw	r3, #4880	; 0x1310
   174dc:	443b      	add	r3, r7
   174de:	ed83 7b00 	vstr	d7, [r3]
    t23_re = t270.im / 2.0;
   174e2:	f507 6319 	add.w	r3, r7, #2448	; 0x990
   174e6:	ed93 6b02 	vldr	d6, [r3, #8]
   174ea:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   174ee:	ee86 7b05 	vdiv.f64	d7, d6, d5
   174f2:	f241 3330 	movw	r3, #4912	; 0x1330
   174f6:	443b      	add	r3, r7
   174f8:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t271.im == 0.0) {
   174fc:	f507 631a 	add.w	r3, r7, #2464	; 0x9a0
   17500:	ed93 7b02 	vldr	d7, [r3, #8]
   17504:	eeb5 7b40 	vcmp.f64	d7, #0.0
   17508:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1750c:	d116      	bne.n	1753c <G_q+0xf44c>
    t34_re = t271.re / 2.0;
   1750e:	f507 631a 	add.w	r3, r7, #2464	; 0x9a0
   17512:	ed93 6b00 	vldr	d6, [r3]
   17516:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1751a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1751e:	f241 33b8 	movw	r3, #5048	; 0x13b8
   17522:	443b      	add	r3, r7
   17524:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   17528:	f04f 0300 	mov.w	r3, #0
   1752c:	f04f 0400 	mov.w	r4, #0
   17530:	f241 32b0 	movw	r2, #5040	; 0x13b0
   17534:	443a      	add	r2, r7
   17536:	e9c2 3400 	strd	r3, r4, [r2]
   1753a:	e045      	b.n	175c8 <G_q+0xf4d8>
  } else if (t271.re == 0.0) {
   1753c:	f507 631a 	add.w	r3, r7, #2464	; 0x9a0
   17540:	ed93 7b00 	vldr	d7, [r3]
   17544:	eeb5 7b40 	vcmp.f64	d7, #0.0
   17548:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1754c:	d122      	bne.n	17594 <G_q+0xf4a4>
    t34_re = 0.0;
   1754e:	f04f 0300 	mov.w	r3, #0
   17552:	f04f 0400 	mov.w	r4, #0
   17556:	f241 32b8 	movw	r2, #5048	; 0x13b8
   1755a:	443a      	add	r2, r7
   1755c:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t271.im / 2.0;
   17560:	f507 631a 	add.w	r3, r7, #2464	; 0x9a0
   17564:	ed93 6b02 	vldr	d6, [r3, #8]
   17568:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1756c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17570:	f241 33b0 	movw	r3, #5040	; 0x13b0
   17574:	443b      	add	r3, r7
   17576:	ed83 7b00 	vstr	d7, [r3]
   1757a:	e025      	b.n	175c8 <G_q+0xf4d8>
   1757c:	f3af 8000 	nop.w
   17580:	33145c07 	.word	0x33145c07
   17584:	3c81a626 	.word	0x3c81a626
   17588:	33145c07 	.word	0x33145c07
   1758c:	3c91a626 	.word	0x3c91a626
   17590:	ffffefd0 	.word	0xffffefd0
  } else {
    t34_re = t271.re / 2.0;
   17594:	f507 631a 	add.w	r3, r7, #2464	; 0x9a0
   17598:	ed93 6b00 	vldr	d6, [r3]
   1759c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   175a0:	ee86 7b05 	vdiv.f64	d7, d6, d5
   175a4:	f241 33b8 	movw	r3, #5048	; 0x13b8
   175a8:	443b      	add	r3, r7
   175aa:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t271.im / 2.0;
   175ae:	f507 631a 	add.w	r3, r7, #2464	; 0x9a0
   175b2:	ed93 6b02 	vldr	d6, [r3, #8]
   175b6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   175ba:	ee86 7b05 	vdiv.f64	d7, d6, d5
   175be:	f241 33b0 	movw	r3, #5040	; 0x13b0
   175c2:	443b      	add	r3, r7
   175c4:	ed83 7b00 	vstr	d7, [r3]
  }

  t3_im += t34_re;
   175c8:	f241 3310 	movw	r3, #4880	; 0x1310
   175cc:	443b      	add	r3, r7
   175ce:	ed93 6b00 	vldr	d6, [r3]
   175d2:	f241 33b8 	movw	r3, #5048	; 0x13b8
   175d6:	443b      	add	r3, r7
   175d8:	ed93 7b00 	vldr	d7, [r3]
   175dc:	ee36 7b07 	vadd.f64	d7, d6, d7
   175e0:	f241 3310 	movw	r3, #4880	; 0x1310
   175e4:	443b      	add	r3, r7
   175e6:	ed83 7b00 	vstr	d7, [r3]
  t23_re += t34_im;
   175ea:	f241 3330 	movw	r3, #4912	; 0x1330
   175ee:	443b      	add	r3, r7
   175f0:	ed93 6b00 	vldr	d6, [r3]
   175f4:	f241 33b0 	movw	r3, #5040	; 0x13b0
   175f8:	443b      	add	r3, r7
   175fa:	ed93 7b00 	vldr	d7, [r3]
   175fe:	ee36 7b07 	vadd.f64	d7, d6, d7
   17602:	f241 3330 	movw	r3, #4912	; 0x1330
   17606:	443b      	add	r3, r7
   17608:	ed83 7b00 	vstr	d7, [r3]
  t13_re = (t272.re * 0.0 - t272.im * 0.5) - (t273.re * 0.0 - t273.im * 0.5);
   1760c:	f241 1370 	movw	r3, #4464	; 0x1170
   17610:	443b      	add	r3, r7
   17612:	ed93 7b00 	vldr	d7, [r3]
   17616:	ed9f 6b7a 	vldr	d6, [pc, #488]	; 17800 <G_q+0xf710>
   1761a:	ee27 6b06 	vmul.f64	d6, d7, d6
   1761e:	f241 1370 	movw	r3, #4464	; 0x1170
   17622:	443b      	add	r3, r7
   17624:	ed93 7b02 	vldr	d7, [r3, #8]
   17628:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   1762c:	ee27 7b05 	vmul.f64	d7, d7, d5
   17630:	ee36 6b47 	vsub.f64	d6, d6, d7
   17634:	f507 538c 	add.w	r3, r7, #4480	; 0x1180
   17638:	ed93 7b00 	vldr	d7, [r3]
   1763c:	ed9f 5b70 	vldr	d5, [pc, #448]	; 17800 <G_q+0xf710>
   17640:	ee27 5b05 	vmul.f64	d5, d7, d5
   17644:	f507 538c 	add.w	r3, r7, #4480	; 0x1180
   17648:	ed93 7b02 	vldr	d7, [r3, #8]
   1764c:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   17650:	ee27 7b04 	vmul.f64	d7, d7, d4
   17654:	ee35 7b47 	vsub.f64	d7, d5, d7
   17658:	ee36 7b47 	vsub.f64	d7, d6, d7
   1765c:	f241 3378 	movw	r3, #4984	; 0x1378
   17660:	443b      	add	r3, r7
   17662:	ed83 7b00 	vstr	d7, [r3]
  t13_im = (t272.re * 0.5 + t272.im * 0.0) - (t273.re * 0.5 + t273.im * 0.0);
   17666:	f241 1370 	movw	r3, #4464	; 0x1170
   1766a:	443b      	add	r3, r7
   1766c:	ed93 7b00 	vldr	d7, [r3]
   17670:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   17674:	ee27 6b06 	vmul.f64	d6, d7, d6
   17678:	f241 1370 	movw	r3, #4464	; 0x1170
   1767c:	443b      	add	r3, r7
   1767e:	ed93 7b02 	vldr	d7, [r3, #8]
   17682:	ed9f 5b5f 	vldr	d5, [pc, #380]	; 17800 <G_q+0xf710>
   17686:	ee27 7b05 	vmul.f64	d7, d7, d5
   1768a:	ee36 6b07 	vadd.f64	d6, d6, d7
   1768e:	f507 538c 	add.w	r3, r7, #4480	; 0x1180
   17692:	ed93 7b00 	vldr	d7, [r3]
   17696:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   1769a:	ee27 5b05 	vmul.f64	d5, d7, d5
   1769e:	f507 538c 	add.w	r3, r7, #4480	; 0x1180
   176a2:	ed93 7b02 	vldr	d7, [r3, #8]
   176a6:	ed9f 4b56 	vldr	d4, [pc, #344]	; 17800 <G_q+0xf710>
   176aa:	ee27 7b04 	vmul.f64	d7, d7, d4
   176ae:	ee35 7b07 	vadd.f64	d7, d5, d7
   176b2:	ee36 7b47 	vsub.f64	d7, d6, d7
   176b6:	f241 3370 	movw	r3, #4976	; 0x1370
   176ba:	443b      	add	r3, r7
   176bc:	ed83 7b00 	vstr	d7, [r3]
  if (t276.im == 0.0) {
   176c0:	f241 1390 	movw	r3, #4496	; 0x1190
   176c4:	443b      	add	r3, r7
   176c6:	ed93 7b02 	vldr	d7, [r3, #8]
   176ca:	eeb5 7b40 	vcmp.f64	d7, #0.0
   176ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   176d2:	d116      	bne.n	17702 <G_q+0xf612>
    t16_re = t276.re / 2.0;
   176d4:	f241 1390 	movw	r3, #4496	; 0x1190
   176d8:	443b      	add	r3, r7
   176da:	ed93 6b00 	vldr	d6, [r3]
   176de:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   176e2:	ee86 7b05 	vdiv.f64	d7, d6, d5
   176e6:	f241 3368 	movw	r3, #4968	; 0x1368
   176ea:	443b      	add	r3, r7
   176ec:	ed83 7b00 	vstr	d7, [r3]
    t16_im = 0.0;
   176f0:	f04f 0300 	mov.w	r3, #0
   176f4:	f04f 0400 	mov.w	r4, #0
   176f8:	f507 529b 	add.w	r2, r7, #4960	; 0x1360
   176fc:	e9c2 3400 	strd	r3, r4, [r2]
   17700:	e03b      	b.n	1777a <G_q+0xf68a>
  } else if (t276.re == 0.0) {
   17702:	f241 1390 	movw	r3, #4496	; 0x1190
   17706:	443b      	add	r3, r7
   17708:	ed93 7b00 	vldr	d7, [r3]
   1770c:	eeb5 7b40 	vcmp.f64	d7, #0.0
   17710:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   17714:	d116      	bne.n	17744 <G_q+0xf654>
    t16_re = 0.0;
   17716:	f04f 0300 	mov.w	r3, #0
   1771a:	f04f 0400 	mov.w	r4, #0
   1771e:	f241 3268 	movw	r2, #4968	; 0x1368
   17722:	443a      	add	r2, r7
   17724:	e9c2 3400 	strd	r3, r4, [r2]
    t16_im = t276.im / 2.0;
   17728:	f241 1390 	movw	r3, #4496	; 0x1190
   1772c:	443b      	add	r3, r7
   1772e:	ed93 6b02 	vldr	d6, [r3, #8]
   17732:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17736:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1773a:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   1773e:	ed83 7b00 	vstr	d7, [r3]
   17742:	e01a      	b.n	1777a <G_q+0xf68a>
  } else {
    t16_re = t276.re / 2.0;
   17744:	f241 1390 	movw	r3, #4496	; 0x1190
   17748:	443b      	add	r3, r7
   1774a:	ed93 6b00 	vldr	d6, [r3]
   1774e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17752:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17756:	f241 3368 	movw	r3, #4968	; 0x1368
   1775a:	443b      	add	r3, r7
   1775c:	ed83 7b00 	vstr	d7, [r3]
    t16_im = t276.im / 2.0;
   17760:	f241 1390 	movw	r3, #4496	; 0x1190
   17764:	443b      	add	r3, r7
   17766:	ed93 6b02 	vldr	d6, [r3, #8]
   1776a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1776e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17772:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   17776:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t277.im == 0.0) {
   1777a:	f507 538d 	add.w	r3, r7, #4512	; 0x11a0
   1777e:	ed93 7b02 	vldr	d7, [r3, #8]
   17782:	eeb5 7b40 	vcmp.f64	d7, #0.0
   17786:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1778a:	d116      	bne.n	177ba <G_q+0xf6ca>
    t34_re = t277.re / 2.0;
   1778c:	f507 538d 	add.w	r3, r7, #4512	; 0x11a0
   17790:	ed93 6b00 	vldr	d6, [r3]
   17794:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17798:	ee86 7b05 	vdiv.f64	d7, d6, d5
   1779c:	f241 33b8 	movw	r3, #5048	; 0x13b8
   177a0:	443b      	add	r3, r7
   177a2:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   177a6:	f04f 0300 	mov.w	r3, #0
   177aa:	f04f 0400 	mov.w	r4, #0
   177ae:	f241 32b0 	movw	r2, #5040	; 0x13b0
   177b2:	443a      	add	r2, r7
   177b4:	e9c2 3400 	strd	r3, r4, [r2]
   177b8:	e040      	b.n	1783c <G_q+0xf74c>
  } else if (t277.re == 0.0) {
   177ba:	f507 538d 	add.w	r3, r7, #4512	; 0x11a0
   177be:	ed93 7b00 	vldr	d7, [r3]
   177c2:	eeb5 7b40 	vcmp.f64	d7, #0.0
   177c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   177ca:	d11d      	bne.n	17808 <G_q+0xf718>
    t34_re = 0.0;
   177cc:	f04f 0300 	mov.w	r3, #0
   177d0:	f04f 0400 	mov.w	r4, #0
   177d4:	f241 32b8 	movw	r2, #5048	; 0x13b8
   177d8:	443a      	add	r2, r7
   177da:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t277.im / 2.0;
   177de:	f507 538d 	add.w	r3, r7, #4512	; 0x11a0
   177e2:	ed93 6b02 	vldr	d6, [r3, #8]
   177e6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   177ea:	ee86 7b05 	vdiv.f64	d7, d6, d5
   177ee:	f241 33b0 	movw	r3, #5040	; 0x13b0
   177f2:	443b      	add	r3, r7
   177f4:	ed83 7b00 	vstr	d7, [r3]
   177f8:	e020      	b.n	1783c <G_q+0xf74c>
   177fa:	bf00      	nop
   177fc:	f3af 8000 	nop.w
	...
  } else {
    t34_re = t277.re / 2.0;
   17808:	f507 538d 	add.w	r3, r7, #4512	; 0x11a0
   1780c:	ed93 6b00 	vldr	d6, [r3]
   17810:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17814:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17818:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1781c:	443b      	add	r3, r7
   1781e:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t277.im / 2.0;
   17822:	f507 538d 	add.w	r3, r7, #4512	; 0x11a0
   17826:	ed93 6b02 	vldr	d6, [r3, #8]
   1782a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   1782e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17832:	f241 33b0 	movw	r3, #5040	; 0x13b0
   17836:	443b      	add	r3, r7
   17838:	ed83 7b00 	vstr	d7, [r3]
  }

  t20_re = (t274.re * 0.0 - t274.im * 0.5) - (t275.re * 0.0 - t275.im * 0.5);
   1783c:	f507 631b 	add.w	r3, r7, #2480	; 0x9b0
   17840:	ed93 7b00 	vldr	d7, [r3]
   17844:	ed9f 6be0 	vldr	d6, [pc, #896]	; 17bc8 <G_q+0xfad8>
   17848:	ee27 6b06 	vmul.f64	d6, d7, d6
   1784c:	f507 631b 	add.w	r3, r7, #2480	; 0x9b0
   17850:	ed93 7b02 	vldr	d7, [r3, #8]
   17854:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   17858:	ee27 7b05 	vmul.f64	d7, d7, d5
   1785c:	ee36 6b47 	vsub.f64	d6, d6, d7
   17860:	f507 631c 	add.w	r3, r7, #2496	; 0x9c0
   17864:	ed93 7b00 	vldr	d7, [r3]
   17868:	ed9f 5bd7 	vldr	d5, [pc, #860]	; 17bc8 <G_q+0xfad8>
   1786c:	ee27 5b05 	vmul.f64	d5, d7, d5
   17870:	f507 631c 	add.w	r3, r7, #2496	; 0x9c0
   17874:	ed93 7b02 	vldr	d7, [r3, #8]
   17878:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   1787c:	ee27 7b04 	vmul.f64	d7, d7, d4
   17880:	ee35 7b47 	vsub.f64	d7, d5, d7
   17884:	ee36 7b47 	vsub.f64	d7, d6, d7
   17888:	f241 3348 	movw	r3, #4936	; 0x1348
   1788c:	443b      	add	r3, r7
   1788e:	ed83 7b00 	vstr	d7, [r3]
  t20_im = (t274.re * 0.5 + t274.im * 0.0) - (t275.re * 0.5 + t275.im * 0.0);
   17892:	f507 631b 	add.w	r3, r7, #2480	; 0x9b0
   17896:	ed93 7b00 	vldr	d7, [r3]
   1789a:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   1789e:	ee27 6b06 	vmul.f64	d6, d7, d6
   178a2:	f507 631b 	add.w	r3, r7, #2480	; 0x9b0
   178a6:	ed93 7b02 	vldr	d7, [r3, #8]
   178aa:	ed9f 5bc7 	vldr	d5, [pc, #796]	; 17bc8 <G_q+0xfad8>
   178ae:	ee27 7b05 	vmul.f64	d7, d7, d5
   178b2:	ee36 6b07 	vadd.f64	d6, d6, d7
   178b6:	f507 631c 	add.w	r3, r7, #2496	; 0x9c0
   178ba:	ed93 7b00 	vldr	d7, [r3]
   178be:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   178c2:	ee27 5b05 	vmul.f64	d5, d7, d5
   178c6:	f507 631c 	add.w	r3, r7, #2496	; 0x9c0
   178ca:	ed93 7b02 	vldr	d7, [r3, #8]
   178ce:	ed9f 4bbe 	vldr	d4, [pc, #760]	; 17bc8 <G_q+0xfad8>
   178d2:	ee27 7b04 	vmul.f64	d7, d7, d4
   178d6:	ee35 7b07 	vadd.f64	d7, d5, d7
   178da:	ee36 7b47 	vsub.f64	d7, d6, d7
   178de:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   178e2:	ed83 7b00 	vstr	d7, [r3]
  t16_re = (t16_re + t34_re) + 7.498798913309288E-33;
   178e6:	f241 3368 	movw	r3, #4968	; 0x1368
   178ea:	443b      	add	r3, r7
   178ec:	ed93 6b00 	vldr	d6, [r3]
   178f0:	f241 33b8 	movw	r3, #5048	; 0x13b8
   178f4:	443b      	add	r3, r7
   178f6:	ed93 7b00 	vldr	d7, [r3]
   178fa:	ee36 7b07 	vadd.f64	d7, d6, d7
   178fe:	ed9f 6bb4 	vldr	d6, [pc, #720]	; 17bd0 <G_q+0xfae0>
   17902:	ee37 7b06 	vadd.f64	d7, d7, d6
   17906:	f241 3368 	movw	r3, #4968	; 0x1368
   1790a:	443b      	add	r3, r7
   1790c:	ed83 7b00 	vstr	d7, [r3]
  t16_im += t34_im;
   17910:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   17914:	ed93 6b00 	vldr	d6, [r3]
   17918:	f241 33b0 	movw	r3, #5040	; 0x13b0
   1791c:	443b      	add	r3, r7
   1791e:	ed93 7b00 	vldr	d7, [r3]
   17922:	ee36 7b07 	vadd.f64	d7, d6, d7
   17926:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   1792a:	ed83 7b00 	vstr	d7, [r3]
  t12_re = (t278.re * 0.0 - t278.im * 3.061616997868383E-17) - (t279.re * 0.0 -
   1792e:	f507 735c 	add.w	r3, r7, #880	; 0x370
   17932:	ed93 7b00 	vldr	d7, [r3]
   17936:	ed9f 6ba4 	vldr	d6, [pc, #656]	; 17bc8 <G_q+0xfad8>
   1793a:	ee27 6b06 	vmul.f64	d6, d7, d6
   1793e:	f507 735c 	add.w	r3, r7, #880	; 0x370
   17942:	ed93 7b02 	vldr	d7, [r3, #8]
   17946:	ed9f 5ba4 	vldr	d5, [pc, #656]	; 17bd8 <G_q+0xfae8>
   1794a:	ee27 7b05 	vmul.f64	d7, d7, d5
   1794e:	ee36 6b47 	vsub.f64	d6, d6, d7
   17952:	4ba3      	ldr	r3, [pc, #652]	; (17be0 <G_q+0xfaf0>)
   17954:	f241 32d0 	movw	r2, #5072	; 0x13d0
   17958:	443a      	add	r2, r7
   1795a:	4413      	add	r3, r2
   1795c:	ed93 7b00 	vldr	d7, [r3]
   17960:	ed9f 5b99 	vldr	d5, [pc, #612]	; 17bc8 <G_q+0xfad8>
   17964:	ee27 5b05 	vmul.f64	d5, d7, d5
    t279.im * 3.061616997868383E-17);
   17968:	4b9d      	ldr	r3, [pc, #628]	; (17be0 <G_q+0xfaf0>)
   1796a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   1796e:	443a      	add	r2, r7
   17970:	4413      	add	r3, r2
   17972:	ed93 7b02 	vldr	d7, [r3, #8]
   17976:	ed9f 4b98 	vldr	d4, [pc, #608]	; 17bd8 <G_q+0xfae8>
   1797a:	ee27 7b04 	vmul.f64	d7, d7, d4
  t12_re = (t278.re * 0.0 - t278.im * 3.061616997868383E-17) - (t279.re * 0.0 -
   1797e:	ee35 7b47 	vsub.f64	d7, d5, d7
   17982:	ee36 7b47 	vsub.f64	d7, d6, d7
   17986:	f241 3388 	movw	r3, #5000	; 0x1388
   1798a:	443b      	add	r3, r7
   1798c:	ed83 7b00 	vstr	d7, [r3]
  t12_im = (t278.re * 3.061616997868383E-17 + t278.im * 0.0) - (t279.re *
   17990:	f507 735c 	add.w	r3, r7, #880	; 0x370
   17994:	ed93 7b00 	vldr	d7, [r3]
   17998:	ed9f 6b8f 	vldr	d6, [pc, #572]	; 17bd8 <G_q+0xfae8>
   1799c:	ee27 6b06 	vmul.f64	d6, d7, d6
   179a0:	f507 735c 	add.w	r3, r7, #880	; 0x370
   179a4:	ed93 7b02 	vldr	d7, [r3, #8]
   179a8:	ed9f 5b87 	vldr	d5, [pc, #540]	; 17bc8 <G_q+0xfad8>
   179ac:	ee27 7b05 	vmul.f64	d7, d7, d5
   179b0:	ee36 6b07 	vadd.f64	d6, d6, d7
   179b4:	4b8a      	ldr	r3, [pc, #552]	; (17be0 <G_q+0xfaf0>)
   179b6:	f241 32d0 	movw	r2, #5072	; 0x13d0
   179ba:	443a      	add	r2, r7
   179bc:	4413      	add	r3, r2
   179be:	ed93 7b00 	vldr	d7, [r3]
   179c2:	ed9f 5b85 	vldr	d5, [pc, #532]	; 17bd8 <G_q+0xfae8>
   179c6:	ee27 5b05 	vmul.f64	d5, d7, d5
    3.061616997868383E-17 + t279.im * 0.0);
   179ca:	4b85      	ldr	r3, [pc, #532]	; (17be0 <G_q+0xfaf0>)
   179cc:	f241 32d0 	movw	r2, #5072	; 0x13d0
   179d0:	443a      	add	r2, r7
   179d2:	4413      	add	r3, r2
   179d4:	ed93 7b02 	vldr	d7, [r3, #8]
   179d8:	ed9f 4b7b 	vldr	d4, [pc, #492]	; 17bc8 <G_q+0xfad8>
   179dc:	ee27 7b04 	vmul.f64	d7, d7, d4
   179e0:	ee35 7b07 	vadd.f64	d7, d5, d7
  t12_im = (t278.re * 3.061616997868383E-17 + t278.im * 0.0) - (t279.re *
   179e4:	ee36 7b47 	vsub.f64	d7, d6, d7
   179e8:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   179ec:	ed83 7b00 	vstr	d7, [r3]
  b_t10_re = (t3_im * t13_re - t23_re * t13_im) - (t20_re * t16_re - t20_im *
   179f0:	f241 3310 	movw	r3, #4880	; 0x1310
   179f4:	443b      	add	r3, r7
   179f6:	ed93 6b00 	vldr	d6, [r3]
   179fa:	f241 3378 	movw	r3, #4984	; 0x1378
   179fe:	443b      	add	r3, r7
   17a00:	ed93 7b00 	vldr	d7, [r3]
   17a04:	ee26 6b07 	vmul.f64	d6, d6, d7
   17a08:	f241 3330 	movw	r3, #4912	; 0x1330
   17a0c:	443b      	add	r3, r7
   17a0e:	ed93 5b00 	vldr	d5, [r3]
   17a12:	f241 3370 	movw	r3, #4976	; 0x1370
   17a16:	443b      	add	r3, r7
   17a18:	ed93 7b00 	vldr	d7, [r3]
   17a1c:	ee25 7b07 	vmul.f64	d7, d5, d7
   17a20:	ee36 6b47 	vsub.f64	d6, d6, d7
   17a24:	f241 3348 	movw	r3, #4936	; 0x1348
   17a28:	443b      	add	r3, r7
   17a2a:	ed93 5b00 	vldr	d5, [r3]
   17a2e:	f241 3368 	movw	r3, #4968	; 0x1368
   17a32:	443b      	add	r3, r7
   17a34:	ed93 7b00 	vldr	d7, [r3]
   17a38:	ee25 5b07 	vmul.f64	d5, d5, d7
   17a3c:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   17a40:	ed93 4b00 	vldr	d4, [r3]
   17a44:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   17a48:	ed93 7b00 	vldr	d7, [r3]
   17a4c:	ee24 7b07 	vmul.f64	d7, d4, d7
   17a50:	ee35 7b47 	vsub.f64	d7, d5, d7
   17a54:	ee36 7b47 	vsub.f64	d7, d6, d7
   17a58:	f241 3338 	movw	r3, #4920	; 0x1338
   17a5c:	443b      	add	r3, r7
   17a5e:	ed83 7b00 	vstr	d7, [r3]
    t16_im);
  t23_re = (t3_im * t13_im + t23_re * t13_re) - (t20_re * t16_im + t20_im *
   17a62:	f241 3310 	movw	r3, #4880	; 0x1310
   17a66:	443b      	add	r3, r7
   17a68:	ed93 6b00 	vldr	d6, [r3]
   17a6c:	f241 3370 	movw	r3, #4976	; 0x1370
   17a70:	443b      	add	r3, r7
   17a72:	ed93 7b00 	vldr	d7, [r3]
   17a76:	ee26 6b07 	vmul.f64	d6, d6, d7
   17a7a:	f241 3330 	movw	r3, #4912	; 0x1330
   17a7e:	443b      	add	r3, r7
   17a80:	ed93 5b00 	vldr	d5, [r3]
   17a84:	f241 3378 	movw	r3, #4984	; 0x1378
   17a88:	443b      	add	r3, r7
   17a8a:	ed93 7b00 	vldr	d7, [r3]
   17a8e:	ee25 7b07 	vmul.f64	d7, d5, d7
   17a92:	ee36 6b07 	vadd.f64	d6, d6, d7
   17a96:	f241 3348 	movw	r3, #4936	; 0x1348
   17a9a:	443b      	add	r3, r7
   17a9c:	ed93 5b00 	vldr	d5, [r3]
   17aa0:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   17aa4:	ed93 7b00 	vldr	d7, [r3]
   17aa8:	ee25 5b07 	vmul.f64	d5, d5, d7
   17aac:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   17ab0:	ed93 4b00 	vldr	d4, [r3]
   17ab4:	f241 3368 	movw	r3, #4968	; 0x1368
   17ab8:	443b      	add	r3, r7
   17aba:	ed93 7b00 	vldr	d7, [r3]
   17abe:	ee24 7b07 	vmul.f64	d7, d4, d7
   17ac2:	ee35 7b07 	vadd.f64	d7, d5, d7
   17ac6:	ee36 7b47 	vsub.f64	d7, d6, d7
   17aca:	f241 3330 	movw	r3, #4912	; 0x1330
   17ace:	443b      	add	r3, r7
   17ad0:	ed83 7b00 	vstr	d7, [r3]
    t16_re);
  if (t296.im == 0.0) {
   17ad4:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
   17ad8:	ed93 7b02 	vldr	d7, [r3, #8]
   17adc:	eeb5 7b40 	vcmp.f64	d7, #0.0
   17ae0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   17ae4:	d115      	bne.n	17b12 <G_q+0xfa22>
    t16_re = t296.re / 2.0;
   17ae6:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
   17aea:	ed93 6b00 	vldr	d6, [r3]
   17aee:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17af2:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17af6:	f241 3368 	movw	r3, #4968	; 0x1368
   17afa:	443b      	add	r3, r7
   17afc:	ed83 7b00 	vstr	d7, [r3]
    t16_im = 0.0;
   17b00:	f04f 0300 	mov.w	r3, #0
   17b04:	f04f 0400 	mov.w	r4, #0
   17b08:	f507 529b 	add.w	r2, r7, #4960	; 0x1360
   17b0c:	e9c2 3400 	strd	r3, r4, [r2]
   17b10:	e037      	b.n	17b82 <G_q+0xfa92>
  } else if (t296.re == 0.0) {
   17b12:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
   17b16:	ed93 7b00 	vldr	d7, [r3]
   17b1a:	eeb5 7b40 	vcmp.f64	d7, #0.0
   17b1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   17b22:	d115      	bne.n	17b50 <G_q+0xfa60>
    t16_re = 0.0;
   17b24:	f04f 0300 	mov.w	r3, #0
   17b28:	f04f 0400 	mov.w	r4, #0
   17b2c:	f241 3268 	movw	r2, #4968	; 0x1368
   17b30:	443a      	add	r2, r7
   17b32:	e9c2 3400 	strd	r3, r4, [r2]
    t16_im = t296.im / 2.0;
   17b36:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
   17b3a:	ed93 6b02 	vldr	d6, [r3, #8]
   17b3e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17b42:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17b46:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   17b4a:	ed83 7b00 	vstr	d7, [r3]
   17b4e:	e018      	b.n	17b82 <G_q+0xfa92>
  } else {
    t16_re = t296.re / 2.0;
   17b50:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
   17b54:	ed93 6b00 	vldr	d6, [r3]
   17b58:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17b5c:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17b60:	f241 3368 	movw	r3, #4968	; 0x1368
   17b64:	443b      	add	r3, r7
   17b66:	ed83 7b00 	vstr	d7, [r3]
    t16_im = t296.im / 2.0;
   17b6a:	f507 6323 	add.w	r3, r7, #2608	; 0xa30
   17b6e:	ed93 6b02 	vldr	d6, [r3, #8]
   17b72:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17b76:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17b7a:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   17b7e:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t297.im == 0.0) {
   17b82:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
   17b86:	ed93 7b02 	vldr	d7, [r3, #8]
   17b8a:	eeb5 7b40 	vcmp.f64	d7, #0.0
   17b8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   17b92:	d127      	bne.n	17be4 <G_q+0xfaf4>
    t34_re = t297.re / 2.0;
   17b94:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
   17b98:	ed93 6b00 	vldr	d6, [r3]
   17b9c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17ba0:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17ba4:	f241 33b8 	movw	r3, #5048	; 0x13b8
   17ba8:	443b      	add	r3, r7
   17baa:	ed83 7b00 	vstr	d7, [r3]
    t34_im = 0.0;
   17bae:	f04f 0300 	mov.w	r3, #0
   17bb2:	f04f 0400 	mov.w	r4, #0
   17bb6:	f241 32b0 	movw	r2, #5040	; 0x13b0
   17bba:	443a      	add	r2, r7
   17bbc:	e9c2 3400 	strd	r3, r4, [r2]
   17bc0:	e04a      	b.n	17c58 <G_q+0xfb68>
   17bc2:	bf00      	nop
   17bc4:	f3af 8000 	nop.w
	...
   17bd0:	858a5d48 	.word	0x858a5d48
   17bd4:	394377ce 	.word	0x394377ce
   17bd8:	33145c07 	.word	0x33145c07
   17bdc:	3c81a626 	.word	0x3c81a626
   17be0:	ffffefb0 	.word	0xffffefb0
  } else if (t297.re == 0.0) {
   17be4:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
   17be8:	ed93 7b00 	vldr	d7, [r3]
   17bec:	eeb5 7b40 	vcmp.f64	d7, #0.0
   17bf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   17bf4:	d116      	bne.n	17c24 <G_q+0xfb34>
    t34_re = 0.0;
   17bf6:	f04f 0300 	mov.w	r3, #0
   17bfa:	f04f 0400 	mov.w	r4, #0
   17bfe:	f241 32b8 	movw	r2, #5048	; 0x13b8
   17c02:	443a      	add	r2, r7
   17c04:	e9c2 3400 	strd	r3, r4, [r2]
    t34_im = t297.im / 2.0;
   17c08:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
   17c0c:	ed93 6b02 	vldr	d6, [r3, #8]
   17c10:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17c14:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17c18:	f241 33b0 	movw	r3, #5040	; 0x13b0
   17c1c:	443b      	add	r3, r7
   17c1e:	ed83 7b00 	vstr	d7, [r3]
   17c22:	e019      	b.n	17c58 <G_q+0xfb68>
  } else {
    t34_re = t297.re / 2.0;
   17c24:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
   17c28:	ed93 6b00 	vldr	d6, [r3]
   17c2c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17c30:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17c34:	f241 33b8 	movw	r3, #5048	; 0x13b8
   17c38:	443b      	add	r3, r7
   17c3a:	ed83 7b00 	vstr	d7, [r3]
    t34_im = t297.im / 2.0;
   17c3e:	f507 6324 	add.w	r3, r7, #2624	; 0xa40
   17c42:	ed93 6b02 	vldr	d6, [r3, #8]
   17c46:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17c4a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17c4e:	f241 33b0 	movw	r3, #5040	; 0x13b0
   17c52:	443b      	add	r3, r7
   17c54:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t298.im == 0.0) {
   17c58:	f241 2330 	movw	r3, #4656	; 0x1230
   17c5c:	443b      	add	r3, r7
   17c5e:	ed93 7b02 	vldr	d7, [r3, #8]
   17c62:	eeb5 7b40 	vcmp.f64	d7, #0.0
   17c66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   17c6a:	d116      	bne.n	17c9a <G_q+0xfbaa>
    t20_re = t298.re / 2.0;
   17c6c:	f241 2330 	movw	r3, #4656	; 0x1230
   17c70:	443b      	add	r3, r7
   17c72:	ed93 6b00 	vldr	d6, [r3]
   17c76:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17c7a:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17c7e:	f241 3348 	movw	r3, #4936	; 0x1348
   17c82:	443b      	add	r3, r7
   17c84:	ed83 7b00 	vstr	d7, [r3]
    t20_im = 0.0;
   17c88:	f04f 0300 	mov.w	r3, #0
   17c8c:	f04f 0400 	mov.w	r4, #0
   17c90:	f507 529a 	add.w	r2, r7, #4928	; 0x1340
   17c94:	e9c2 3400 	strd	r3, r4, [r2]
   17c98:	e03b      	b.n	17d12 <G_q+0xfc22>
  } else if (t298.re == 0.0) {
   17c9a:	f241 2330 	movw	r3, #4656	; 0x1230
   17c9e:	443b      	add	r3, r7
   17ca0:	ed93 7b00 	vldr	d7, [r3]
   17ca4:	eeb5 7b40 	vcmp.f64	d7, #0.0
   17ca8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   17cac:	d116      	bne.n	17cdc <G_q+0xfbec>
    t20_re = 0.0;
   17cae:	f04f 0300 	mov.w	r3, #0
   17cb2:	f04f 0400 	mov.w	r4, #0
   17cb6:	f241 3248 	movw	r2, #4936	; 0x1348
   17cba:	443a      	add	r2, r7
   17cbc:	e9c2 3400 	strd	r3, r4, [r2]
    t20_im = t298.im / 2.0;
   17cc0:	f241 2330 	movw	r3, #4656	; 0x1230
   17cc4:	443b      	add	r3, r7
   17cc6:	ed93 6b02 	vldr	d6, [r3, #8]
   17cca:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17cce:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17cd2:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   17cd6:	ed83 7b00 	vstr	d7, [r3]
   17cda:	e01a      	b.n	17d12 <G_q+0xfc22>
  } else {
    t20_re = t298.re / 2.0;
   17cdc:	f241 2330 	movw	r3, #4656	; 0x1230
   17ce0:	443b      	add	r3, r7
   17ce2:	ed93 6b00 	vldr	d6, [r3]
   17ce6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17cea:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17cee:	f241 3348 	movw	r3, #4936	; 0x1348
   17cf2:	443b      	add	r3, r7
   17cf4:	ed83 7b00 	vstr	d7, [r3]
    t20_im = t298.im / 2.0;
   17cf8:	f241 2330 	movw	r3, #4656	; 0x1230
   17cfc:	443b      	add	r3, r7
   17cfe:	ed93 6b02 	vldr	d6, [r3, #8]
   17d02:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17d06:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17d0a:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   17d0e:	ed83 7b00 	vstr	d7, [r3]
  }

  if (t299.im == 0.0) {
   17d12:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
   17d16:	ed93 7b02 	vldr	d7, [r3, #8]
   17d1a:	eeb5 7b40 	vcmp.f64	d7, #0.0
   17d1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   17d22:	d116      	bne.n	17d52 <G_q+0xfc62>
    t13_re = t299.re / 2.0;
   17d24:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
   17d28:	ed93 6b00 	vldr	d6, [r3]
   17d2c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17d30:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17d34:	f241 3378 	movw	r3, #4984	; 0x1378
   17d38:	443b      	add	r3, r7
   17d3a:	ed83 7b00 	vstr	d7, [r3]
    t13_im = 0.0;
   17d3e:	f04f 0300 	mov.w	r3, #0
   17d42:	f04f 0400 	mov.w	r4, #0
   17d46:	f241 3270 	movw	r2, #4976	; 0x1370
   17d4a:	443a      	add	r2, r7
   17d4c:	e9c2 3400 	strd	r3, r4, [r2]
   17d50:	e039      	b.n	17dc6 <G_q+0xfcd6>
  } else if (t299.re == 0.0) {
   17d52:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
   17d56:	ed93 7b00 	vldr	d7, [r3]
   17d5a:	eeb5 7b40 	vcmp.f64	d7, #0.0
   17d5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   17d62:	d116      	bne.n	17d92 <G_q+0xfca2>
    t13_re = 0.0;
   17d64:	f04f 0300 	mov.w	r3, #0
   17d68:	f04f 0400 	mov.w	r4, #0
   17d6c:	f241 3278 	movw	r2, #4984	; 0x1378
   17d70:	443a      	add	r2, r7
   17d72:	e9c2 3400 	strd	r3, r4, [r2]
    t13_im = t299.im / 2.0;
   17d76:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
   17d7a:	ed93 6b02 	vldr	d6, [r3, #8]
   17d7e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17d82:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17d86:	f241 3370 	movw	r3, #4976	; 0x1370
   17d8a:	443b      	add	r3, r7
   17d8c:	ed83 7b00 	vstr	d7, [r3]
   17d90:	e019      	b.n	17dc6 <G_q+0xfcd6>
  } else {
    t13_re = t299.re / 2.0;
   17d92:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
   17d96:	ed93 6b00 	vldr	d6, [r3]
   17d9a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17d9e:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17da2:	f241 3378 	movw	r3, #4984	; 0x1378
   17da6:	443b      	add	r3, r7
   17da8:	ed83 7b00 	vstr	d7, [r3]
    t13_im = t299.im / 2.0;
   17dac:	f507 5392 	add.w	r3, r7, #4672	; 0x1240
   17db0:	ed93 6b02 	vldr	d6, [r3, #8]
   17db4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
   17db8:	ee86 7b05 	vdiv.f64	d7, d6, d5
   17dbc:	f241 3370 	movw	r3, #4976	; 0x1370
   17dc0:	443b      	add	r3, r7
   17dc2:	ed83 7b00 	vstr	d7, [r3]
  }

  t16_re += t34_re;
   17dc6:	f241 3368 	movw	r3, #4968	; 0x1368
   17dca:	443b      	add	r3, r7
   17dcc:	ed93 6b00 	vldr	d6, [r3]
   17dd0:	f241 33b8 	movw	r3, #5048	; 0x13b8
   17dd4:	443b      	add	r3, r7
   17dd6:	ed93 7b00 	vldr	d7, [r3]
   17dda:	ee36 7b07 	vadd.f64	d7, d6, d7
   17dde:	f241 3368 	movw	r3, #4968	; 0x1368
   17de2:	443b      	add	r3, r7
   17de4:	ed83 7b00 	vstr	d7, [r3]
  t16_im += t34_im;
   17de8:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   17dec:	ed93 6b00 	vldr	d6, [r3]
   17df0:	f241 33b0 	movw	r3, #5040	; 0x13b0
   17df4:	443b      	add	r3, r7
   17df6:	ed93 7b00 	vldr	d7, [r3]
   17dfa:	ee36 7b07 	vadd.f64	d7, d6, d7
   17dfe:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   17e02:	ed83 7b00 	vstr	d7, [r3]
  t20_re = (t20_re + t13_re) + 7.498798913309288E-33;
   17e06:	f241 3348 	movw	r3, #4936	; 0x1348
   17e0a:	443b      	add	r3, r7
   17e0c:	ed93 6b00 	vldr	d6, [r3]
   17e10:	f241 3378 	movw	r3, #4984	; 0x1378
   17e14:	443b      	add	r3, r7
   17e16:	ed93 7b00 	vldr	d7, [r3]
   17e1a:	ee36 7b07 	vadd.f64	d7, d6, d7
   17e1e:	ed9f 6be6 	vldr	d6, [pc, #920]	; 181b8 <G_q+0x100c8>
   17e22:	ee37 7b06 	vadd.f64	d7, d7, d6
   17e26:	f241 3348 	movw	r3, #4936	; 0x1348
   17e2a:	443b      	add	r3, r7
   17e2c:	ed83 7b00 	vstr	d7, [r3]
  t20_im += t13_im;
   17e30:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   17e34:	ed93 6b00 	vldr	d6, [r3]
   17e38:	f241 3370 	movw	r3, #4976	; 0x1370
   17e3c:	443b      	add	r3, r7
   17e3e:	ed93 7b00 	vldr	d7, [r3]
   17e42:	ee36 7b07 	vadd.f64	d7, d6, d7
   17e46:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   17e4a:	ed83 7b00 	vstr	d7, [r3]
  t34_im = (t266.re * 0.0 - t266.im * 0.5) - (t267.re * 0.0 - t267.im * 0.5);
   17e4e:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
   17e52:	ed93 7b00 	vldr	d7, [r3]
   17e56:	ed9f 6bda 	vldr	d6, [pc, #872]	; 181c0 <G_q+0x100d0>
   17e5a:	ee27 6b06 	vmul.f64	d6, d7, d6
   17e5e:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
   17e62:	ed93 7b02 	vldr	d7, [r3, #8]
   17e66:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   17e6a:	ee27 7b05 	vmul.f64	d7, d7, d5
   17e6e:	ee36 6b47 	vsub.f64	d6, d6, d7
   17e72:	4bd9      	ldr	r3, [pc, #868]	; (181d8 <G_q+0x100e8>)
   17e74:	f241 32d0 	movw	r2, #5072	; 0x13d0
   17e78:	443a      	add	r2, r7
   17e7a:	4413      	add	r3, r2
   17e7c:	ed93 7b00 	vldr	d7, [r3]
   17e80:	ed9f 5bcf 	vldr	d5, [pc, #828]	; 181c0 <G_q+0x100d0>
   17e84:	ee27 5b05 	vmul.f64	d5, d7, d5
   17e88:	4bd3      	ldr	r3, [pc, #844]	; (181d8 <G_q+0x100e8>)
   17e8a:	f241 32d0 	movw	r2, #5072	; 0x13d0
   17e8e:	443a      	add	r2, r7
   17e90:	4413      	add	r3, r2
   17e92:	ed93 7b02 	vldr	d7, [r3, #8]
   17e96:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   17e9a:	ee27 7b04 	vmul.f64	d7, d7, d4
   17e9e:	ee35 7b47 	vsub.f64	d7, d5, d7
   17ea2:	ee36 7b47 	vsub.f64	d7, d6, d7
   17ea6:	f241 33b0 	movw	r3, #5040	; 0x13b0
   17eaa:	443b      	add	r3, r7
   17eac:	ed83 7b00 	vstr	d7, [r3]
  t13_re = (t266.re * 0.5 + t266.im * 0.0) - (t267.re * 0.5 + t267.im * 0.0);
   17eb0:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
   17eb4:	ed93 7b00 	vldr	d7, [r3]
   17eb8:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   17ebc:	ee27 6b06 	vmul.f64	d6, d7, d6
   17ec0:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
   17ec4:	ed93 7b02 	vldr	d7, [r3, #8]
   17ec8:	ed9f 5bbd 	vldr	d5, [pc, #756]	; 181c0 <G_q+0x100d0>
   17ecc:	ee27 7b05 	vmul.f64	d7, d7, d5
   17ed0:	ee36 6b07 	vadd.f64	d6, d6, d7
   17ed4:	4bc0      	ldr	r3, [pc, #768]	; (181d8 <G_q+0x100e8>)
   17ed6:	f241 32d0 	movw	r2, #5072	; 0x13d0
   17eda:	443a      	add	r2, r7
   17edc:	4413      	add	r3, r2
   17ede:	ed93 7b00 	vldr	d7, [r3]
   17ee2:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
   17ee6:	ee27 5b05 	vmul.f64	d5, d7, d5
   17eea:	4bbb      	ldr	r3, [pc, #748]	; (181d8 <G_q+0x100e8>)
   17eec:	f241 32d0 	movw	r2, #5072	; 0x13d0
   17ef0:	443a      	add	r2, r7
   17ef2:	4413      	add	r3, r2
   17ef4:	ed93 7b02 	vldr	d7, [r3, #8]
   17ef8:	ed9f 4bb1 	vldr	d4, [pc, #708]	; 181c0 <G_q+0x100d0>
   17efc:	ee27 7b04 	vmul.f64	d7, d7, d4
   17f00:	ee35 7b07 	vadd.f64	d7, d5, d7
   17f04:	ee36 7b47 	vsub.f64	d7, d6, d7
   17f08:	f241 3378 	movw	r3, #4984	; 0x1378
   17f0c:	443b      	add	r3, r7
   17f0e:	ed83 7b00 	vstr	d7, [r3]
  t13_im = (((((t268.re * 3.749399456654644E-33 + t269.re *
   17f12:	f241 1350 	movw	r3, #4432	; 0x1150
   17f16:	443b      	add	r3, r7
   17f18:	ed93 7b00 	vldr	d7, [r3]
   17f1c:	ed9f 6baa 	vldr	d6, [pc, #680]	; 181c8 <G_q+0x100d8>
   17f20:	ee27 6b06 	vmul.f64	d6, d7, d6
   17f24:	f507 538b 	add.w	r3, r7, #4448	; 0x1160
   17f28:	ed93 7b00 	vldr	d7, [r3]
   17f2c:	ed9f 5ba6 	vldr	d5, [pc, #664]	; 181c8 <G_q+0x100d8>
   17f30:	ee27 7b05 	vmul.f64	d7, d7, d5
   17f34:	ee36 6b07 	vadd.f64	d6, d6, d7
                3.749399456654644E-33) - (t72_re * t74_im - t74_re * t55_re)) +
   17f38:	f507 5296 	add.w	r2, r7, #4800	; 0x12c0
   17f3c:	f241 23b0 	movw	r3, #4784	; 0x12b0
   17f40:	443b      	add	r3, r7
   17f42:	ed92 5b00 	vldr	d5, [r2]
   17f46:	ed93 7b00 	vldr	d7, [r3]
   17f4a:	ee25 5b07 	vmul.f64	d5, d5, d7
   17f4e:	f241 23b8 	movw	r3, #4792	; 0x12b8
   17f52:	443b      	add	r3, r7
   17f54:	ed93 4b00 	vldr	d4, [r3]
   17f58:	f507 5397 	add.w	r3, r7, #4832	; 0x12e0
   17f5c:	ed93 7b00 	vldr	d7, [r3]
   17f60:	ee24 7b07 	vmul.f64	d7, d4, d7
   17f64:	ee35 7b47 	vsub.f64	d7, d5, d7
   17f68:	ee36 6b47 	vsub.f64	d6, d6, d7
              (t58_im * t76_re - t60_re * t85_im)) + (t12_re * b_t10_re - t12_im
   17f6c:	f507 5295 	add.w	r2, r7, #4768	; 0x12a0
   17f70:	f241 23a8 	movw	r3, #4776	; 0x12a8
   17f74:	443b      	add	r3, r7
   17f76:	ed92 5b00 	vldr	d5, [r2]
   17f7a:	ed93 7b00 	vldr	d7, [r3]
   17f7e:	ee25 5b07 	vmul.f64	d5, d5, d7
   17f82:	f241 2350 	movw	r3, #4688	; 0x1250
   17f86:	443b      	add	r3, r7
   17f88:	ed93 4b00 	vldr	d4, [r3]
   17f8c:	f241 3318 	movw	r3, #4888	; 0x1318
   17f90:	443b      	add	r3, r7
   17f92:	ed93 7b00 	vldr	d7, [r3]
   17f96:	ee24 7b07 	vmul.f64	d7, d4, d7
   17f9a:	ee35 7b47 	vsub.f64	d7, d5, d7
                3.749399456654644E-33) - (t72_re * t74_im - t74_re * t55_re)) +
   17f9e:	ee36 6b07 	vadd.f64	d6, d6, d7
              (t58_im * t76_re - t60_re * t85_im)) + (t12_re * b_t10_re - t12_im
   17fa2:	f241 3388 	movw	r3, #5000	; 0x1388
   17fa6:	443b      	add	r3, r7
   17fa8:	ed93 5b00 	vldr	d5, [r3]
   17fac:	f241 3338 	movw	r3, #4920	; 0x1338
   17fb0:	443b      	add	r3, r7
   17fb2:	ed93 7b00 	vldr	d7, [r3]
   17fb6:	ee25 5b07 	vmul.f64	d5, d5, d7
              * t23_re)) - (t16_re * t20_re - t16_im * t20_im)) -
   17fba:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   17fbe:	ed93 4b00 	vldr	d4, [r3]
   17fc2:	f241 3330 	movw	r3, #4912	; 0x1330
   17fc6:	443b      	add	r3, r7
   17fc8:	ed93 7b00 	vldr	d7, [r3]
   17fcc:	ee24 7b07 	vmul.f64	d7, d4, d7
              (t58_im * t76_re - t60_re * t85_im)) + (t12_re * b_t10_re - t12_im
   17fd0:	ee35 7b47 	vsub.f64	d7, d5, d7
   17fd4:	ee36 6b07 	vadd.f64	d6, d6, d7
              * t23_re)) - (t16_re * t20_re - t16_im * t20_im)) -
   17fd8:	f241 3368 	movw	r3, #4968	; 0x1368
   17fdc:	443b      	add	r3, r7
   17fde:	ed93 5b00 	vldr	d5, [r3]
   17fe2:	f241 3348 	movw	r3, #4936	; 0x1348
   17fe6:	443b      	add	r3, r7
   17fe8:	ed93 7b00 	vldr	d7, [r3]
   17fec:	ee25 5b07 	vmul.f64	d5, d5, d7
   17ff0:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   17ff4:	ed93 4b00 	vldr	d4, [r3]
   17ff8:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   17ffc:	ed93 7b00 	vldr	d7, [r3]
   18000:	ee24 7b07 	vmul.f64	d7, d4, d7
   18004:	ee35 7b47 	vsub.f64	d7, d5, d7
   18008:	ee36 7b47 	vsub.f64	d7, d6, d7
  t13_im = (((((t268.re * 3.749399456654644E-33 + t269.re *
   1800c:	ed9f 6b6e 	vldr	d6, [pc, #440]	; 181c8 <G_q+0x100d8>
   18010:	ee37 7b46 	vsub.f64	d7, d7, d6
   18014:	f241 3370 	movw	r3, #4976	; 0x1370
   18018:	443b      	add	r3, r7
   1801a:	ed83 7b00 	vstr	d7, [r3]
    3.749399456654644E-33;
  t34_re = ((((t268.im * 3.749399456654644E-33 + t269.im * 3.749399456654644E-33)
   1801e:	f241 1350 	movw	r3, #4432	; 0x1150
   18022:	443b      	add	r3, r7
   18024:	ed93 7b02 	vldr	d7, [r3, #8]
   18028:	ed9f 6b67 	vldr	d6, [pc, #412]	; 181c8 <G_q+0x100d8>
   1802c:	ee27 6b06 	vmul.f64	d6, d7, d6
   18030:	f507 538b 	add.w	r3, r7, #4448	; 0x1160
   18034:	ed93 7b02 	vldr	d7, [r3, #8]
   18038:	ed9f 5b63 	vldr	d5, [pc, #396]	; 181c8 <G_q+0x100d8>
   1803c:	ee27 7b05 	vmul.f64	d7, d7, d5
   18040:	ee36 6b07 	vadd.f64	d6, d6, d7
              - (t72_re * t55_re + t74_re * t74_im)) + (t58_im * t85_im + t60_re
   18044:	f507 5396 	add.w	r3, r7, #4800	; 0x12c0
   18048:	ed93 5b00 	vldr	d5, [r3]
   1804c:	f507 5397 	add.w	r3, r7, #4832	; 0x12e0
   18050:	ed93 7b00 	vldr	d7, [r3]
   18054:	ee25 5b07 	vmul.f64	d5, d5, d7
   18058:	f241 22b8 	movw	r2, #4792	; 0x12b8
   1805c:	443a      	add	r2, r7
   1805e:	f241 23b0 	movw	r3, #4784	; 0x12b0
   18062:	443b      	add	r3, r7
   18064:	ed92 4b00 	vldr	d4, [r2]
   18068:	ed93 7b00 	vldr	d7, [r3]
   1806c:	ee24 7b07 	vmul.f64	d7, d4, d7
   18070:	ee35 7b07 	vadd.f64	d7, d5, d7
   18074:	ee36 6b47 	vsub.f64	d6, d6, d7
   18078:	f507 5395 	add.w	r3, r7, #4768	; 0x12a0
   1807c:	ed93 5b00 	vldr	d5, [r3]
   18080:	f241 3318 	movw	r3, #4888	; 0x1318
   18084:	443b      	add	r3, r7
   18086:	ed93 7b00 	vldr	d7, [r3]
   1808a:	ee25 5b07 	vmul.f64	d5, d5, d7
              * t76_re)) + (t12_re * t23_re + t12_im * b_t10_re)) - (t16_re *
   1808e:	f241 2250 	movw	r2, #4688	; 0x1250
   18092:	443a      	add	r2, r7
   18094:	f241 23a8 	movw	r3, #4776	; 0x12a8
   18098:	443b      	add	r3, r7
   1809a:	ed92 4b00 	vldr	d4, [r2]
   1809e:	ed93 7b00 	vldr	d7, [r3]
   180a2:	ee24 7b07 	vmul.f64	d7, d4, d7
              - (t72_re * t55_re + t74_re * t74_im)) + (t58_im * t85_im + t60_re
   180a6:	ee35 7b07 	vadd.f64	d7, d5, d7
   180aa:	ee36 6b07 	vadd.f64	d6, d6, d7
              * t76_re)) + (t12_re * t23_re + t12_im * b_t10_re)) - (t16_re *
   180ae:	f241 3388 	movw	r3, #5000	; 0x1388
   180b2:	443b      	add	r3, r7
   180b4:	ed93 5b00 	vldr	d5, [r3]
   180b8:	f241 3330 	movw	r3, #4912	; 0x1330
   180bc:	443b      	add	r3, r7
   180be:	ed93 7b00 	vldr	d7, [r3]
   180c2:	ee25 5b07 	vmul.f64	d5, d5, d7
   180c6:	f507 539c 	add.w	r3, r7, #4992	; 0x1380
   180ca:	ed93 4b00 	vldr	d4, [r3]
   180ce:	f241 3338 	movw	r3, #4920	; 0x1338
   180d2:	443b      	add	r3, r7
   180d4:	ed93 7b00 	vldr	d7, [r3]
   180d8:	ee24 7b07 	vmul.f64	d7, d4, d7
   180dc:	ee35 7b07 	vadd.f64	d7, d5, d7
   180e0:	ee36 6b07 	vadd.f64	d6, d6, d7
   180e4:	f241 3368 	movw	r3, #4968	; 0x1368
   180e8:	443b      	add	r3, r7
   180ea:	ed93 5b00 	vldr	d5, [r3]
   180ee:	f507 539a 	add.w	r3, r7, #4928	; 0x1340
   180f2:	ed93 7b00 	vldr	d7, [r3]
   180f6:	ee25 5b07 	vmul.f64	d5, d5, d7
    t20_im + t16_im * t20_re);
   180fa:	f507 539b 	add.w	r3, r7, #4960	; 0x1360
   180fe:	ed93 4b00 	vldr	d4, [r3]
   18102:	f241 3348 	movw	r3, #4936	; 0x1348
   18106:	443b      	add	r3, r7
   18108:	ed93 7b00 	vldr	d7, [r3]
   1810c:	ee24 7b07 	vmul.f64	d7, d4, d7
   18110:	ee35 7b07 	vadd.f64	d7, d5, d7
  t34_re = ((((t268.im * 3.749399456654644E-33 + t269.im * 3.749399456654644E-33)
   18114:	ee36 7b47 	vsub.f64	d7, d6, d7
   18118:	f241 33b8 	movw	r3, #5048	; 0x13b8
   1811c:	443b      	add	r3, r7
   1811e:	ed83 7b00 	vstr	d7, [r3]
  b_G_q[4].re = -g * ((t70_im * t55_im - t43_im * t70_re) * 0.0215 + (t34_im *
   18122:	4b2e      	ldr	r3, [pc, #184]	; (181dc <G_q+0x100ec>)
   18124:	f241 32d0 	movw	r2, #5072	; 0x13d0
   18128:	443a      	add	r2, r7
   1812a:	4413      	add	r3, r2
   1812c:	ed93 7b00 	vldr	d7, [r3]
   18130:	eeb1 6b47 	vneg.f64	d6, d7
   18134:	f241 23c8 	movw	r3, #4808	; 0x12c8
   18138:	443b      	add	r3, r7
   1813a:	ed93 5b00 	vldr	d5, [r3]
   1813e:	f241 23d8 	movw	r3, #4824	; 0x12d8
   18142:	443b      	add	r3, r7
   18144:	ed93 7b00 	vldr	d7, [r3]
   18148:	ee25 5b07 	vmul.f64	d5, d5, d7
   1814c:	f241 23d0 	movw	r3, #4816	; 0x12d0
   18150:	443b      	add	r3, r7
   18152:	f241 22f8 	movw	r2, #4856	; 0x12f8
   18156:	443a      	add	r2, r7
   18158:	ed92 4b00 	vldr	d4, [r2]
   1815c:	ed93 7b00 	vldr	d7, [r3]
   18160:	ee24 7b07 	vmul.f64	d7, d4, d7
   18164:	ee35 7b47 	vsub.f64	d7, d5, d7
   18168:	ed9f 5b19 	vldr	d5, [pc, #100]	; 181d0 <G_q+0x100e0>
   1816c:	ee27 5b05 	vmul.f64	d5, d7, d5
   18170:	f241 33b0 	movw	r3, #5040	; 0x13b0
   18174:	443b      	add	r3, r7
   18176:	ed93 4b00 	vldr	d4, [r3]
   1817a:	f241 3370 	movw	r3, #4976	; 0x1370
   1817e:	443b      	add	r3, r7
   18180:	ed93 7b00 	vldr	d7, [r3]
   18184:	ee24 4b07 	vmul.f64	d4, d4, d7
    t13_im - t13_re * t34_re) * 0.0215);
   18188:	f241 3378 	movw	r3, #4984	; 0x1378
   1818c:	443b      	add	r3, r7
   1818e:	ed93 3b00 	vldr	d3, [r3]
   18192:	f241 33b8 	movw	r3, #5048	; 0x13b8
   18196:	443b      	add	r3, r7
   18198:	ed93 7b00 	vldr	d7, [r3]
   1819c:	ee23 7b07 	vmul.f64	d7, d3, d7
   181a0:	ee34 7b47 	vsub.f64	d7, d4, d7
   181a4:	ed9f 4b0a 	vldr	d4, [pc, #40]	; 181d0 <G_q+0x100e0>
   181a8:	ee27 7b04 	vmul.f64	d7, d7, d4
  b_G_q[4].re = -g * ((t70_im * t55_im - t43_im * t70_re) * 0.0215 + (t34_im *
   181ac:	ee35 7b07 	vadd.f64	d7, d5, d7
   181b0:	e016      	b.n	181e0 <G_q+0x100f0>
   181b2:	bf00      	nop
   181b4:	f3af 8000 	nop.w
   181b8:	858a5d48 	.word	0x858a5d48
   181bc:	394377ce 	.word	0x394377ce
	...
   181c8:	858a5d48 	.word	0x858a5d48
   181cc:	393377ce 	.word	0x393377ce
   181d0:	9374bc6a 	.word	0x9374bc6a
   181d4:	3f960418 	.word	0x3f960418
   181d8:	ffffed30 	.word	0xffffed30
   181dc:	ffffec58 	.word	0xffffec58
   181e0:	4b41      	ldr	r3, [pc, #260]	; (182e8 <G_q+0x101f8>)
   181e2:	f241 32d0 	movw	r2, #5072	; 0x13d0
   181e6:	443a      	add	r2, r7
   181e8:	4413      	add	r3, r2
   181ea:	681b      	ldr	r3, [r3, #0]
   181ec:	3340      	adds	r3, #64	; 0x40
   181ee:	ee26 7b07 	vmul.f64	d7, d6, d7
   181f2:	ed83 7b00 	vstr	d7, [r3]
  b_G_q[4].im = -g * ((t70_im * t70_re + t43_im * t55_im) * 0.0215 + (t34_im *
   181f6:	4b3d      	ldr	r3, [pc, #244]	; (182ec <G_q+0x101fc>)
   181f8:	f241 32d0 	movw	r2, #5072	; 0x13d0
   181fc:	443a      	add	r2, r7
   181fe:	4413      	add	r3, r2
   18200:	ed93 7b00 	vldr	d7, [r3]
   18204:	eeb1 6b47 	vneg.f64	d6, d7
   18208:	f241 22c8 	movw	r2, #4808	; 0x12c8
   1820c:	443a      	add	r2, r7
   1820e:	f241 23d0 	movw	r3, #4816	; 0x12d0
   18212:	443b      	add	r3, r7
   18214:	ed92 5b00 	vldr	d5, [r2]
   18218:	ed93 7b00 	vldr	d7, [r3]
   1821c:	ee25 5b07 	vmul.f64	d5, d5, d7
   18220:	f241 23f8 	movw	r3, #4856	; 0x12f8
   18224:	443b      	add	r3, r7
   18226:	ed93 4b00 	vldr	d4, [r3]
   1822a:	f241 23d8 	movw	r3, #4824	; 0x12d8
   1822e:	443b      	add	r3, r7
   18230:	ed93 7b00 	vldr	d7, [r3]
   18234:	ee24 7b07 	vmul.f64	d7, d4, d7
   18238:	ee35 7b07 	vadd.f64	d7, d5, d7
   1823c:	ed9f 5b28 	vldr	d5, [pc, #160]	; 182e0 <G_q+0x101f0>
   18240:	ee27 5b05 	vmul.f64	d5, d7, d5
   18244:	f241 33b0 	movw	r3, #5040	; 0x13b0
   18248:	443b      	add	r3, r7
   1824a:	ed93 4b00 	vldr	d4, [r3]
   1824e:	f241 33b8 	movw	r3, #5048	; 0x13b8
   18252:	443b      	add	r3, r7
   18254:	ed93 7b00 	vldr	d7, [r3]
   18258:	ee24 4b07 	vmul.f64	d4, d4, d7
    t34_re + t13_re * t13_im) * 0.0215);
   1825c:	f241 3378 	movw	r3, #4984	; 0x1378
   18260:	443b      	add	r3, r7
   18262:	ed93 3b00 	vldr	d3, [r3]
   18266:	f241 3370 	movw	r3, #4976	; 0x1370
   1826a:	443b      	add	r3, r7
   1826c:	ed93 7b00 	vldr	d7, [r3]
   18270:	ee23 7b07 	vmul.f64	d7, d3, d7
   18274:	ee34 7b07 	vadd.f64	d7, d4, d7
   18278:	ed9f 4b19 	vldr	d4, [pc, #100]	; 182e0 <G_q+0x101f0>
   1827c:	ee27 7b04 	vmul.f64	d7, d7, d4
  b_G_q[4].im = -g * ((t70_im * t70_re + t43_im * t55_im) * 0.0215 + (t34_im *
   18280:	ee35 7b07 	vadd.f64	d7, d5, d7
   18284:	4b18      	ldr	r3, [pc, #96]	; (182e8 <G_q+0x101f8>)
   18286:	f241 32d0 	movw	r2, #5072	; 0x13d0
   1828a:	443a      	add	r2, r7
   1828c:	4413      	add	r3, r2
   1828e:	681b      	ldr	r3, [r3, #0]
   18290:	3340      	adds	r3, #64	; 0x40
   18292:	ee26 7b07 	vmul.f64	d7, d6, d7
   18296:	ed83 7b02 	vstr	d7, [r3, #8]
  b_G_q[5].re = 0.0;
   1829a:	4b13      	ldr	r3, [pc, #76]	; (182e8 <G_q+0x101f8>)
   1829c:	f241 32d0 	movw	r2, #5072	; 0x13d0
   182a0:	443a      	add	r2, r7
   182a2:	4413      	add	r3, r2
   182a4:	681b      	ldr	r3, [r3, #0]
   182a6:	f103 0250 	add.w	r2, r3, #80	; 0x50
   182aa:	f04f 0300 	mov.w	r3, #0
   182ae:	f04f 0400 	mov.w	r4, #0
   182b2:	e9c2 3400 	strd	r3, r4, [r2]
  b_G_q[5].im = 0.0;
   182b6:	4b0c      	ldr	r3, [pc, #48]	; (182e8 <G_q+0x101f8>)
   182b8:	f241 32d0 	movw	r2, #5072	; 0x13d0
   182bc:	443a      	add	r2, r7
   182be:	4413      	add	r3, r2
   182c0:	681b      	ldr	r3, [r3, #0]
   182c2:	f103 0250 	add.w	r2, r3, #80	; 0x50
   182c6:	f04f 0300 	mov.w	r3, #0
   182ca:	f04f 0400 	mov.w	r4, #0
   182ce:	e9c2 3402 	strd	r3, r4, [r2, #8]
}
   182d2:	bf00      	nop
   182d4:	f507 579e 	add.w	r7, r7, #5056	; 0x13c0
   182d8:	3714      	adds	r7, #20
   182da:	46bd      	mov	sp, r7
   182dc:	bd90      	pop	{r4, r7, pc}
   182de:	bf00      	nop
   182e0:	9374bc6a 	.word	0x9374bc6a
   182e4:	3f960418 	.word	0x3f960418
   182e8:	ffffec34 	.word	0xffffec34
   182ec:	ffffec58 	.word	0xffffec58

000182f0 <G_q_initialize>:
/*
 * Arguments    : void
 * Return Type  : void
 */
void G_q_initialize(void)
{
   182f0:	b580      	push	{r7, lr}
   182f2:	af00      	add	r7, sp, #0
  rt_InitInfAndNaN();
   182f4:	f001 fb12 	bl	1991c <rt_InitInfAndNaN>
  isInitialized_G_q = true;
   182f8:	4b02      	ldr	r3, [pc, #8]	; (18304 <G_q_initialize+0x14>)
   182fa:	2201      	movs	r2, #1
   182fc:	701a      	strb	r2, [r3, #0]
}
   182fe:	bf00      	nop
   18300:	bd80      	pop	{r7, pc}
   18302:	bf00      	nop
   18304:	0003435c 	.word	0x0003435c

00018308 <G_q_terminate>:
/*
 * Arguments    : void
 * Return Type  : void
 */
void G_q_terminate(void)
{
   18308:	b480      	push	{r7}
   1830a:	af00      	add	r7, sp, #0
  /* (no terminate code required) */
  isInitialized_G_q = false;
   1830c:	4b03      	ldr	r3, [pc, #12]	; (1831c <G_q_terminate+0x14>)
   1830e:	2200      	movs	r2, #0
   18310:	701a      	strb	r2, [r3, #0]
}
   18312:	bf00      	nop
   18314:	46bd      	mov	sp, r7
   18316:	f85d 7b04 	ldr.w	r7, [sp], #4
   1831a:	4770      	bx	lr
   1831c:	0003435c 	.word	0x0003435c

00018320 <b_exp>:
/*
 * Arguments    : creal_T *x
 * Return Type  : void
 */
void b_exp(creal_T *x)
{
   18320:	b590      	push	{r4, r7, lr}
   18322:	b087      	sub	sp, #28
   18324:	af00      	add	r7, sp, #0
   18326:	6078      	str	r0, [r7, #4]
  double r;
  double d;
  if (x->im == 0.0) {
   18328:	687b      	ldr	r3, [r7, #4]
   1832a:	ed93 7b02 	vldr	d7, [r3, #8]
   1832e:	eeb5 7b40 	vcmp.f64	d7, #0.0
   18332:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   18336:	d113      	bne.n	18360 <b_exp+0x40>
    x->re = exp(x->re);
   18338:	687b      	ldr	r3, [r7, #4]
   1833a:	ed93 7b00 	vldr	d7, [r3]
   1833e:	eeb0 0b47 	vmov.f64	d0, d7
   18342:	f00a fc59 	bl	22bf8 <exp>
   18346:	eeb0 7b40 	vmov.f64	d7, d0
   1834a:	687b      	ldr	r3, [r7, #4]
   1834c:	ed83 7b00 	vstr	d7, [r3]
    x->im = 0.0;
   18350:	687a      	ldr	r2, [r7, #4]
   18352:	f04f 0300 	mov.w	r3, #0
   18356:	f04f 0400 	mov.w	r4, #0
   1835a:	e9c2 3402 	strd	r3, r4, [r2, #8]
    r = exp(x->re / 2.0);
    d = x->im;
    x->re = r * (r * cos(x->im));
    x->im = r * (r * sin(d));
  }
}
   1835e:	e061      	b.n	18424 <b_exp+0x104>
  } else if (rtIsInf(x->im) && rtIsInf(x->re) && (x->re < 0.0)) {
   18360:	687b      	ldr	r3, [r7, #4]
   18362:	ed93 7b02 	vldr	d7, [r3, #8]
   18366:	eeb0 0b47 	vmov.f64	d0, d7
   1836a:	f001 fb11 	bl	19990 <rtIsInf>
   1836e:	4603      	mov	r3, r0
   18370:	2b00      	cmp	r3, #0
   18372:	d020      	beq.n	183b6 <b_exp+0x96>
   18374:	687b      	ldr	r3, [r7, #4]
   18376:	ed93 7b00 	vldr	d7, [r3]
   1837a:	eeb0 0b47 	vmov.f64	d0, d7
   1837e:	f001 fb07 	bl	19990 <rtIsInf>
   18382:	4603      	mov	r3, r0
   18384:	2b00      	cmp	r3, #0
   18386:	d016      	beq.n	183b6 <b_exp+0x96>
   18388:	687b      	ldr	r3, [r7, #4]
   1838a:	ed93 7b00 	vldr	d7, [r3]
   1838e:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
   18392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   18396:	d50e      	bpl.n	183b6 <b_exp+0x96>
    x->re = 0.0;
   18398:	687a      	ldr	r2, [r7, #4]
   1839a:	f04f 0300 	mov.w	r3, #0
   1839e:	f04f 0400 	mov.w	r4, #0
   183a2:	e9c2 3400 	strd	r3, r4, [r2]
    x->im = 0.0;
   183a6:	687a      	ldr	r2, [r7, #4]
   183a8:	f04f 0300 	mov.w	r3, #0
   183ac:	f04f 0400 	mov.w	r4, #0
   183b0:	e9c2 3402 	strd	r3, r4, [r2, #8]
}
   183b4:	e036      	b.n	18424 <b_exp+0x104>
    r = exp(x->re / 2.0);
   183b6:	687b      	ldr	r3, [r7, #4]
   183b8:	ed93 7b00 	vldr	d7, [r3]
   183bc:	eeb0 6b00 	vmov.f64	d6, #0	; 0x40000000  2.0
   183c0:	ee87 5b06 	vdiv.f64	d5, d7, d6
   183c4:	eeb0 0b45 	vmov.f64	d0, d5
   183c8:	f00a fc16 	bl	22bf8 <exp>
   183cc:	ed87 0b04 	vstr	d0, [r7, #16]
    d = x->im;
   183d0:	687b      	ldr	r3, [r7, #4]
   183d2:	e9d3 3402 	ldrd	r3, r4, [r3, #8]
   183d6:	e9c7 3402 	strd	r3, r4, [r7, #8]
    x->re = r * (r * cos(x->im));
   183da:	687b      	ldr	r3, [r7, #4]
   183dc:	ed93 7b02 	vldr	d7, [r3, #8]
   183e0:	eeb0 0b47 	vmov.f64	d0, d7
   183e4:	f00a fb90 	bl	22b08 <cos>
   183e8:	eeb0 6b40 	vmov.f64	d6, d0
   183ec:	ed97 7b04 	vldr	d7, [r7, #16]
   183f0:	ee26 6b07 	vmul.f64	d6, d6, d7
   183f4:	ed97 7b04 	vldr	d7, [r7, #16]
   183f8:	ee26 7b07 	vmul.f64	d7, d6, d7
   183fc:	687b      	ldr	r3, [r7, #4]
   183fe:	ed83 7b00 	vstr	d7, [r3]
    x->im = r * (r * sin(d));
   18402:	ed97 0b02 	vldr	d0, [r7, #8]
   18406:	f00a fbbb 	bl	22b80 <sin>
   1840a:	eeb0 6b40 	vmov.f64	d6, d0
   1840e:	ed97 7b04 	vldr	d7, [r7, #16]
   18412:	ee26 6b07 	vmul.f64	d6, d6, d7
   18416:	ed97 7b04 	vldr	d7, [r7, #16]
   1841a:	ee26 7b07 	vmul.f64	d7, d6, d7
   1841e:	687b      	ldr	r3, [r7, #4]
   18420:	ed83 7b02 	vstr	d7, [r3, #8]
}
   18424:	bf00      	nop
   18426:	371c      	adds	r7, #28
   18428:	46bd      	mov	sp, r7
   1842a:	bd90      	pop	{r4, r7, pc}

0001842c <set_up_encoder_pins>:
	default:
		break;
	}
}

void set_up_encoder_pins(void){
   1842c:	b480      	push	{r7}
   1842e:	af00      	add	r7, sp, #0
	//pins: 0,1,2,3,4,7 - PA0(PC10)y, PA1(PD5)y, PB2(PC7)y, PE3(PE4)y, PD4(PD3)y, PD7(PE2)y
	// HAL_GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
	encoders[0].port = GPIOA; encoders[0].pin_num = GPIO_PIN_0;
   18430:	4b28      	ldr	r3, [pc, #160]	; (184d4 <set_up_encoder_pins+0xa8>)
   18432:	4a29      	ldr	r2, [pc, #164]	; (184d8 <set_up_encoder_pins+0xac>)
   18434:	601a      	str	r2, [r3, #0]
   18436:	4b27      	ldr	r3, [pc, #156]	; (184d4 <set_up_encoder_pins+0xa8>)
   18438:	2201      	movs	r2, #1
   1843a:	809a      	strh	r2, [r3, #4]
	encoders[1].port = GPIOC; encoders[1].pin_num = GPIO_PIN_10;
   1843c:	4b25      	ldr	r3, [pc, #148]	; (184d4 <set_up_encoder_pins+0xa8>)
   1843e:	4a27      	ldr	r2, [pc, #156]	; (184dc <set_up_encoder_pins+0xb0>)
   18440:	609a      	str	r2, [r3, #8]
   18442:	4b24      	ldr	r3, [pc, #144]	; (184d4 <set_up_encoder_pins+0xa8>)
   18444:	f44f 6280 	mov.w	r2, #1024	; 0x400
   18448:	819a      	strh	r2, [r3, #12]
	encoders[2].port = GPIOA; encoders[2].pin_num = GPIO_PIN_1;
   1844a:	4b22      	ldr	r3, [pc, #136]	; (184d4 <set_up_encoder_pins+0xa8>)
   1844c:	4a22      	ldr	r2, [pc, #136]	; (184d8 <set_up_encoder_pins+0xac>)
   1844e:	611a      	str	r2, [r3, #16]
   18450:	4b20      	ldr	r3, [pc, #128]	; (184d4 <set_up_encoder_pins+0xa8>)
   18452:	2202      	movs	r2, #2
   18454:	829a      	strh	r2, [r3, #20]
	encoders[3].port = GPIOD; encoders[3].pin_num = GPIO_PIN_5;
   18456:	4b1f      	ldr	r3, [pc, #124]	; (184d4 <set_up_encoder_pins+0xa8>)
   18458:	4a21      	ldr	r2, [pc, #132]	; (184e0 <set_up_encoder_pins+0xb4>)
   1845a:	619a      	str	r2, [r3, #24]
   1845c:	4b1d      	ldr	r3, [pc, #116]	; (184d4 <set_up_encoder_pins+0xa8>)
   1845e:	2220      	movs	r2, #32
   18460:	839a      	strh	r2, [r3, #28]
	encoders[4].port = GPIOB; encoders[4].pin_num = GPIO_PIN_2;
   18462:	4b1c      	ldr	r3, [pc, #112]	; (184d4 <set_up_encoder_pins+0xa8>)
   18464:	4a1f      	ldr	r2, [pc, #124]	; (184e4 <set_up_encoder_pins+0xb8>)
   18466:	621a      	str	r2, [r3, #32]
   18468:	4b1a      	ldr	r3, [pc, #104]	; (184d4 <set_up_encoder_pins+0xa8>)
   1846a:	2204      	movs	r2, #4
   1846c:	849a      	strh	r2, [r3, #36]	; 0x24
	encoders[5].port = GPIOC; encoders[5].pin_num = GPIO_PIN_7;
   1846e:	4b19      	ldr	r3, [pc, #100]	; (184d4 <set_up_encoder_pins+0xa8>)
   18470:	4a1a      	ldr	r2, [pc, #104]	; (184dc <set_up_encoder_pins+0xb0>)
   18472:	629a      	str	r2, [r3, #40]	; 0x28
   18474:	4b17      	ldr	r3, [pc, #92]	; (184d4 <set_up_encoder_pins+0xa8>)
   18476:	2280      	movs	r2, #128	; 0x80
   18478:	859a      	strh	r2, [r3, #44]	; 0x2c
	encoders[6].port = GPIOE; encoders[6].pin_num = GPIO_PIN_3;
   1847a:	4b16      	ldr	r3, [pc, #88]	; (184d4 <set_up_encoder_pins+0xa8>)
   1847c:	4a1a      	ldr	r2, [pc, #104]	; (184e8 <set_up_encoder_pins+0xbc>)
   1847e:	631a      	str	r2, [r3, #48]	; 0x30
   18480:	4b14      	ldr	r3, [pc, #80]	; (184d4 <set_up_encoder_pins+0xa8>)
   18482:	2208      	movs	r2, #8
   18484:	869a      	strh	r2, [r3, #52]	; 0x34
	encoders[7].port = GPIOE; encoders[7].pin_num = GPIO_PIN_4;
   18486:	4b13      	ldr	r3, [pc, #76]	; (184d4 <set_up_encoder_pins+0xa8>)
   18488:	4a17      	ldr	r2, [pc, #92]	; (184e8 <set_up_encoder_pins+0xbc>)
   1848a:	639a      	str	r2, [r3, #56]	; 0x38
   1848c:	4b11      	ldr	r3, [pc, #68]	; (184d4 <set_up_encoder_pins+0xa8>)
   1848e:	2210      	movs	r2, #16
   18490:	879a      	strh	r2, [r3, #60]	; 0x3c
	encoders[8].port = GPIOD; encoders[8].pin_num = GPIO_PIN_4;
   18492:	4b10      	ldr	r3, [pc, #64]	; (184d4 <set_up_encoder_pins+0xa8>)
   18494:	4a12      	ldr	r2, [pc, #72]	; (184e0 <set_up_encoder_pins+0xb4>)
   18496:	641a      	str	r2, [r3, #64]	; 0x40
   18498:	4b0e      	ldr	r3, [pc, #56]	; (184d4 <set_up_encoder_pins+0xa8>)
   1849a:	2210      	movs	r2, #16
   1849c:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
	encoders[9].port = GPIOD; encoders[9].pin_num = GPIO_PIN_3;
   184a0:	4b0c      	ldr	r3, [pc, #48]	; (184d4 <set_up_encoder_pins+0xa8>)
   184a2:	4a0f      	ldr	r2, [pc, #60]	; (184e0 <set_up_encoder_pins+0xb4>)
   184a4:	649a      	str	r2, [r3, #72]	; 0x48
   184a6:	4b0b      	ldr	r3, [pc, #44]	; (184d4 <set_up_encoder_pins+0xa8>)
   184a8:	2208      	movs	r2, #8
   184aa:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
	encoders[10].port = GPIOD; encoders[10].pin_num = GPIO_PIN_7;
   184ae:	4b09      	ldr	r3, [pc, #36]	; (184d4 <set_up_encoder_pins+0xa8>)
   184b0:	4a0b      	ldr	r2, [pc, #44]	; (184e0 <set_up_encoder_pins+0xb4>)
   184b2:	651a      	str	r2, [r3, #80]	; 0x50
   184b4:	4b07      	ldr	r3, [pc, #28]	; (184d4 <set_up_encoder_pins+0xa8>)
   184b6:	2280      	movs	r2, #128	; 0x80
   184b8:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
    encoders[11].port = GPIOE; encoders[11].pin_num = GPIO_PIN_2;
   184bc:	4b05      	ldr	r3, [pc, #20]	; (184d4 <set_up_encoder_pins+0xa8>)
   184be:	4a0a      	ldr	r2, [pc, #40]	; (184e8 <set_up_encoder_pins+0xbc>)
   184c0:	659a      	str	r2, [r3, #88]	; 0x58
   184c2:	4b04      	ldr	r3, [pc, #16]	; (184d4 <set_up_encoder_pins+0xa8>)
   184c4:	2204      	movs	r2, #4
   184c6:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
}
   184ca:	bf00      	nop
   184cc:	46bd      	mov	sp, r7
   184ce:	f85d 7b04 	ldr.w	r7, [sp], #4
   184d2:	4770      	bx	lr
   184d4:	0003453c 	.word	0x0003453c
   184d8:	58020000 	.word	0x58020000
   184dc:	58020800 	.word	0x58020800
   184e0:	58020c00 	.word	0x58020c00
   184e4:	58020400 	.word	0x58020400
   184e8:	58021000 	.word	0x58021000

000184ec <set_up_driver_pins>:
void set_up_driver_pins(void){
   184ec:	b480      	push	{r7}
   184ee:	af00      	add	r7, sp, #0
	//PE0, PF11, PG8, PG5, PF15, PD10, PG4, PE10, PE12, PD11, PD12, PD13
	Driver_P[0].port = GPIOE; Driver_P[0].pin_num = GPIO_PIN_0;
   184f0:	4b2a      	ldr	r3, [pc, #168]	; (1859c <set_up_driver_pins+0xb0>)
   184f2:	4a2b      	ldr	r2, [pc, #172]	; (185a0 <set_up_driver_pins+0xb4>)
   184f4:	601a      	str	r2, [r3, #0]
   184f6:	4b29      	ldr	r3, [pc, #164]	; (1859c <set_up_driver_pins+0xb0>)
   184f8:	2201      	movs	r2, #1
   184fa:	809a      	strh	r2, [r3, #4]
	Driver_N[0].port = GPIOF; Driver_N[0].pin_num = GPIO_PIN_11;
   184fc:	4b29      	ldr	r3, [pc, #164]	; (185a4 <set_up_driver_pins+0xb8>)
   184fe:	4a2a      	ldr	r2, [pc, #168]	; (185a8 <set_up_driver_pins+0xbc>)
   18500:	601a      	str	r2, [r3, #0]
   18502:	4b28      	ldr	r3, [pc, #160]	; (185a4 <set_up_driver_pins+0xb8>)
   18504:	f44f 6200 	mov.w	r2, #2048	; 0x800
   18508:	809a      	strh	r2, [r3, #4]
	Driver_P[1].port = GPIOG; Driver_P[1].pin_num = GPIO_PIN_8;
   1850a:	4b24      	ldr	r3, [pc, #144]	; (1859c <set_up_driver_pins+0xb0>)
   1850c:	4a27      	ldr	r2, [pc, #156]	; (185ac <set_up_driver_pins+0xc0>)
   1850e:	609a      	str	r2, [r3, #8]
   18510:	4b22      	ldr	r3, [pc, #136]	; (1859c <set_up_driver_pins+0xb0>)
   18512:	f44f 7280 	mov.w	r2, #256	; 0x100
   18516:	819a      	strh	r2, [r3, #12]
	Driver_N[1].port = GPIOG; Driver_N[1].pin_num = GPIO_PIN_5;
   18518:	4b22      	ldr	r3, [pc, #136]	; (185a4 <set_up_driver_pins+0xb8>)
   1851a:	4a24      	ldr	r2, [pc, #144]	; (185ac <set_up_driver_pins+0xc0>)
   1851c:	609a      	str	r2, [r3, #8]
   1851e:	4b21      	ldr	r3, [pc, #132]	; (185a4 <set_up_driver_pins+0xb8>)
   18520:	2220      	movs	r2, #32
   18522:	819a      	strh	r2, [r3, #12]
	Driver_P[2].port = GPIOF; Driver_P[2].pin_num = GPIO_PIN_15;
   18524:	4b1d      	ldr	r3, [pc, #116]	; (1859c <set_up_driver_pins+0xb0>)
   18526:	4a20      	ldr	r2, [pc, #128]	; (185a8 <set_up_driver_pins+0xbc>)
   18528:	611a      	str	r2, [r3, #16]
   1852a:	4b1c      	ldr	r3, [pc, #112]	; (1859c <set_up_driver_pins+0xb0>)
   1852c:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   18530:	829a      	strh	r2, [r3, #20]
	Driver_N[2].port = GPIOD; Driver_N[3].pin_num = GPIO_PIN_10;
   18532:	4b1c      	ldr	r3, [pc, #112]	; (185a4 <set_up_driver_pins+0xb8>)
   18534:	4a1e      	ldr	r2, [pc, #120]	; (185b0 <set_up_driver_pins+0xc4>)
   18536:	611a      	str	r2, [r3, #16]
   18538:	4b1a      	ldr	r3, [pc, #104]	; (185a4 <set_up_driver_pins+0xb8>)
   1853a:	f44f 6280 	mov.w	r2, #1024	; 0x400
   1853e:	839a      	strh	r2, [r3, #28]
	Driver_P[3].port = GPIOG; Driver_P[3].pin_num = GPIO_PIN_4;
   18540:	4b16      	ldr	r3, [pc, #88]	; (1859c <set_up_driver_pins+0xb0>)
   18542:	4a1a      	ldr	r2, [pc, #104]	; (185ac <set_up_driver_pins+0xc0>)
   18544:	619a      	str	r2, [r3, #24]
   18546:	4b15      	ldr	r3, [pc, #84]	; (1859c <set_up_driver_pins+0xb0>)
   18548:	2210      	movs	r2, #16
   1854a:	839a      	strh	r2, [r3, #28]
	Driver_N[3].port = GPIOE; Driver_N[3].pin_num = GPIO_PIN_10;
   1854c:	4b15      	ldr	r3, [pc, #84]	; (185a4 <set_up_driver_pins+0xb8>)
   1854e:	4a14      	ldr	r2, [pc, #80]	; (185a0 <set_up_driver_pins+0xb4>)
   18550:	619a      	str	r2, [r3, #24]
   18552:	4b14      	ldr	r3, [pc, #80]	; (185a4 <set_up_driver_pins+0xb8>)
   18554:	f44f 6280 	mov.w	r2, #1024	; 0x400
   18558:	839a      	strh	r2, [r3, #28]
	Driver_P[4].port = GPIOE; Driver_P[4].pin_num = GPIO_PIN_12;
   1855a:	4b10      	ldr	r3, [pc, #64]	; (1859c <set_up_driver_pins+0xb0>)
   1855c:	4a10      	ldr	r2, [pc, #64]	; (185a0 <set_up_driver_pins+0xb4>)
   1855e:	621a      	str	r2, [r3, #32]
   18560:	4b0e      	ldr	r3, [pc, #56]	; (1859c <set_up_driver_pins+0xb0>)
   18562:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   18566:	849a      	strh	r2, [r3, #36]	; 0x24
	Driver_N[4].port = GPIOD; Driver_N[4].pin_num = GPIO_PIN_11;
   18568:	4b0e      	ldr	r3, [pc, #56]	; (185a4 <set_up_driver_pins+0xb8>)
   1856a:	4a11      	ldr	r2, [pc, #68]	; (185b0 <set_up_driver_pins+0xc4>)
   1856c:	621a      	str	r2, [r3, #32]
   1856e:	4b0d      	ldr	r3, [pc, #52]	; (185a4 <set_up_driver_pins+0xb8>)
   18570:	f44f 6200 	mov.w	r2, #2048	; 0x800
   18574:	849a      	strh	r2, [r3, #36]	; 0x24
	Driver_P[5].port = GPIOD; Driver_P[5].pin_num = GPIO_PIN_12;
   18576:	4b09      	ldr	r3, [pc, #36]	; (1859c <set_up_driver_pins+0xb0>)
   18578:	4a0d      	ldr	r2, [pc, #52]	; (185b0 <set_up_driver_pins+0xc4>)
   1857a:	629a      	str	r2, [r3, #40]	; 0x28
   1857c:	4b07      	ldr	r3, [pc, #28]	; (1859c <set_up_driver_pins+0xb0>)
   1857e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   18582:	859a      	strh	r2, [r3, #44]	; 0x2c
	Driver_N[5].port = GPIOD; Driver_N[5].pin_num = GPIO_PIN_13;
   18584:	4b07      	ldr	r3, [pc, #28]	; (185a4 <set_up_driver_pins+0xb8>)
   18586:	4a0a      	ldr	r2, [pc, #40]	; (185b0 <set_up_driver_pins+0xc4>)
   18588:	629a      	str	r2, [r3, #40]	; 0x28
   1858a:	4b06      	ldr	r3, [pc, #24]	; (185a4 <set_up_driver_pins+0xb8>)
   1858c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   18590:	859a      	strh	r2, [r3, #44]	; 0x2c
}
   18592:	bf00      	nop
   18594:	46bd      	mov	sp, r7
   18596:	f85d 7b04 	ldr.w	r7, [sp], #4
   1859a:	4770      	bx	lr
   1859c:	00034450 	.word	0x00034450
   185a0:	58021000 	.word	0x58021000
   185a4:	000345dc 	.word	0x000345dc
   185a8:	58021400 	.word	0x58021400
   185ac:	58021800 	.word	0x58021800
   185b0:	58020c00 	.word	0x58020c00

000185b4 <PWM3_change_duty_cycle>:

void PWM3_change_duty_cycle (int valuePA6, int valuePB1, int valuePA7){
   185b4:	b580      	push	{r7, lr}
   185b6:	b08c      	sub	sp, #48	; 0x30
   185b8:	af00      	add	r7, sp, #0
   185ba:	60f8      	str	r0, [r7, #12]
   185bc:	60b9      	str	r1, [r7, #8]
   185be:	607a      	str	r2, [r7, #4]
	TIM_OC_InitTypeDef sConfigOC = {0};
   185c0:	f107 0314 	add.w	r3, r7, #20
   185c4:	2200      	movs	r2, #0
   185c6:	601a      	str	r2, [r3, #0]
   185c8:	605a      	str	r2, [r3, #4]
   185ca:	609a      	str	r2, [r3, #8]
   185cc:	60da      	str	r2, [r3, #12]
   185ce:	611a      	str	r2, [r3, #16]
   185d0:	615a      	str	r2, [r3, #20]
   185d2:	619a      	str	r2, [r3, #24]
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
   185d4:	2360      	movs	r3, #96	; 0x60
   185d6:	617b      	str	r3, [r7, #20]
	  sConfigOC.Pulse = valuePA6;
   185d8:	68fb      	ldr	r3, [r7, #12]
   185da:	61bb      	str	r3, [r7, #24]
	  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
   185dc:	2300      	movs	r3, #0
   185de:	61fb      	str	r3, [r7, #28]
	  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
   185e0:	2300      	movs	r3, #0
   185e2:	627b      	str	r3, [r7, #36]	; 0x24
	  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
   185e4:	f107 0314 	add.w	r3, r7, #20
   185e8:	2200      	movs	r2, #0
   185ea:	4619      	mov	r1, r3
   185ec:	4819      	ldr	r0, [pc, #100]	; (18654 <PWM3_change_duty_cycle+0xa0>)
   185ee:	f004 fef3 	bl	1d3d8 <HAL_TIM_PWM_ConfigChannel>
   185f2:	4603      	mov	r3, r0
   185f4:	2b00      	cmp	r3, #0
   185f6:	d001      	beq.n	185fc <PWM3_change_duty_cycle+0x48>
	  {
	    Error_Handler();
   185f8:	f001 f988 	bl	1990c <Error_Handler>
	  /*sConfigOC.Pulse = valuePB0;
	  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
	  {
	    Error_Handler();
	  }*/
	  sConfigOC.Pulse = valuePB1;
   185fc:	68bb      	ldr	r3, [r7, #8]
   185fe:	61bb      	str	r3, [r7, #24]
	  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
   18600:	f107 0314 	add.w	r3, r7, #20
   18604:	220c      	movs	r2, #12
   18606:	4619      	mov	r1, r3
   18608:	4812      	ldr	r0, [pc, #72]	; (18654 <PWM3_change_duty_cycle+0xa0>)
   1860a:	f004 fee5 	bl	1d3d8 <HAL_TIM_PWM_ConfigChannel>
   1860e:	4603      	mov	r3, r0
   18610:	2b00      	cmp	r3, #0
   18612:	d001      	beq.n	18618 <PWM3_change_duty_cycle+0x64>
	  {
	    Error_Handler();
   18614:	f001 f97a 	bl	1990c <Error_Handler>
	  }
	  sConfigOC.Pulse = valuePA7;
   18618:	687b      	ldr	r3, [r7, #4]
   1861a:	61bb      	str	r3, [r7, #24]
	  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
   1861c:	f107 0314 	add.w	r3, r7, #20
   18620:	2204      	movs	r2, #4
   18622:	4619      	mov	r1, r3
   18624:	480b      	ldr	r0, [pc, #44]	; (18654 <PWM3_change_duty_cycle+0xa0>)
   18626:	f004 fed7 	bl	1d3d8 <HAL_TIM_PWM_ConfigChannel>
   1862a:	4603      	mov	r3, r0
   1862c:	2b00      	cmp	r3, #0
   1862e:	d001      	beq.n	18634 <PWM3_change_duty_cycle+0x80>
	  	  {
	  	    Error_Handler();
   18630:	f001 f96c 	bl	1990c <Error_Handler>
	  	  }
	  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
   18634:	2100      	movs	r1, #0
   18636:	4807      	ldr	r0, [pc, #28]	; (18654 <PWM3_change_duty_cycle+0xa0>)
   18638:	f004 fe76 	bl	1d328 <HAL_TIM_PWM_Start>
	  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
   1863c:	2104      	movs	r1, #4
   1863e:	4805      	ldr	r0, [pc, #20]	; (18654 <PWM3_change_duty_cycle+0xa0>)
   18640:	f004 fe72 	bl	1d328 <HAL_TIM_PWM_Start>
	  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
   18644:	210c      	movs	r1, #12
   18646:	4803      	ldr	r0, [pc, #12]	; (18654 <PWM3_change_duty_cycle+0xa0>)
   18648:	f004 fe6e 	bl	1d328 <HAL_TIM_PWM_Start>
}
   1864c:	bf00      	nop
   1864e:	3730      	adds	r7, #48	; 0x30
   18650:	46bd      	mov	sp, r7
   18652:	bd80      	pop	{r7, pc}
   18654:	0003460c 	.word	0x0003460c

00018658 <PWM1_change_duty_cycle>:
void PWM1_change_duty_cycle (int valuePE11, int valuePE13){
   18658:	b580      	push	{r7, lr}
   1865a:	b08a      	sub	sp, #40	; 0x28
   1865c:	af00      	add	r7, sp, #0
   1865e:	6078      	str	r0, [r7, #4]
   18660:	6039      	str	r1, [r7, #0]
	TIM_OC_InitTypeDef sConfigOC = {0};
   18662:	f107 030c 	add.w	r3, r7, #12
   18666:	2200      	movs	r2, #0
   18668:	601a      	str	r2, [r3, #0]
   1866a:	605a      	str	r2, [r3, #4]
   1866c:	609a      	str	r2, [r3, #8]
   1866e:	60da      	str	r2, [r3, #12]
   18670:	611a      	str	r2, [r3, #16]
   18672:	615a      	str	r2, [r3, #20]
   18674:	619a      	str	r2, [r3, #24]
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
   18676:	2360      	movs	r3, #96	; 0x60
   18678:	60fb      	str	r3, [r7, #12]
	  sConfigOC.Pulse = valuePE11;
   1867a:	687b      	ldr	r3, [r7, #4]
   1867c:	613b      	str	r3, [r7, #16]
	  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
   1867e:	2300      	movs	r3, #0
   18680:	617b      	str	r3, [r7, #20]
	  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
   18682:	2300      	movs	r3, #0
   18684:	61bb      	str	r3, [r7, #24]
	  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
   18686:	2300      	movs	r3, #0
   18688:	61fb      	str	r3, [r7, #28]
	  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
   1868a:	2300      	movs	r3, #0
   1868c:	623b      	str	r3, [r7, #32]
	  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
   1868e:	2300      	movs	r3, #0
   18690:	627b      	str	r3, [r7, #36]	; 0x24
	  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
   18692:	f107 030c 	add.w	r3, r7, #12
   18696:	2204      	movs	r2, #4
   18698:	4619      	mov	r1, r3
   1869a:	4811      	ldr	r0, [pc, #68]	; (186e0 <PWM1_change_duty_cycle+0x88>)
   1869c:	f004 fe9c 	bl	1d3d8 <HAL_TIM_PWM_ConfigChannel>
   186a0:	4603      	mov	r3, r0
   186a2:	2b00      	cmp	r3, #0
   186a4:	d001      	beq.n	186aa <PWM1_change_duty_cycle+0x52>
	  {
	    Error_Handler();
   186a6:	f001 f931 	bl	1990c <Error_Handler>
	  }
	  sConfigOC.Pulse = valuePE13;
   186aa:	683b      	ldr	r3, [r7, #0]
   186ac:	613b      	str	r3, [r7, #16]
	  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
   186ae:	f107 030c 	add.w	r3, r7, #12
   186b2:	2208      	movs	r2, #8
   186b4:	4619      	mov	r1, r3
   186b6:	480a      	ldr	r0, [pc, #40]	; (186e0 <PWM1_change_duty_cycle+0x88>)
   186b8:	f004 fe8e 	bl	1d3d8 <HAL_TIM_PWM_ConfigChannel>
   186bc:	4603      	mov	r3, r0
   186be:	2b00      	cmp	r3, #0
   186c0:	d001      	beq.n	186c6 <PWM1_change_duty_cycle+0x6e>
	  {
	    Error_Handler();
   186c2:	f001 f923 	bl	1990c <Error_Handler>
	  }
	  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
   186c6:	2104      	movs	r1, #4
   186c8:	4805      	ldr	r0, [pc, #20]	; (186e0 <PWM1_change_duty_cycle+0x88>)
   186ca:	f004 fe2d 	bl	1d328 <HAL_TIM_PWM_Start>
	  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
   186ce:	2108      	movs	r1, #8
   186d0:	4803      	ldr	r0, [pc, #12]	; (186e0 <PWM1_change_duty_cycle+0x88>)
   186d2:	f004 fe29 	bl	1d328 <HAL_TIM_PWM_Start>
}
   186d6:	bf00      	nop
   186d8:	3728      	adds	r7, #40	; 0x28
   186da:	46bd      	mov	sp, r7
   186dc:	bd80      	pop	{r7, pc}
   186de:	bf00      	nop
   186e0:	000346f0 	.word	0x000346f0

000186e4 <PWM2_change_duty_cycle>:

//pin PA5
void PWM2_change_duty_cycle (int valuePA5){
   186e4:	b580      	push	{r7, lr}
   186e6:	b08a      	sub	sp, #40	; 0x28
   186e8:	af00      	add	r7, sp, #0
   186ea:	6078      	str	r0, [r7, #4]
	TIM_OC_InitTypeDef sConfigOC = {0};
   186ec:	f107 030c 	add.w	r3, r7, #12
   186f0:	2200      	movs	r2, #0
   186f2:	601a      	str	r2, [r3, #0]
   186f4:	605a      	str	r2, [r3, #4]
   186f6:	609a      	str	r2, [r3, #8]
   186f8:	60da      	str	r2, [r3, #12]
   186fa:	611a      	str	r2, [r3, #16]
   186fc:	615a      	str	r2, [r3, #20]
   186fe:	619a      	str	r2, [r3, #24]
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
   18700:	2360      	movs	r3, #96	; 0x60
   18702:	60fb      	str	r3, [r7, #12]
    sConfigOC.Pulse = valuePA5;
   18704:	687b      	ldr	r3, [r7, #4]
   18706:	613b      	str	r3, [r7, #16]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
   18708:	2300      	movs	r3, #0
   1870a:	617b      	str	r3, [r7, #20]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
   1870c:	2300      	movs	r3, #0
   1870e:	61fb      	str	r3, [r7, #28]
	if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
   18710:	f107 030c 	add.w	r3, r7, #12
   18714:	2200      	movs	r2, #0
   18716:	4619      	mov	r1, r3
   18718:	4807      	ldr	r0, [pc, #28]	; (18738 <PWM2_change_duty_cycle+0x54>)
   1871a:	f004 fe5d 	bl	1d3d8 <HAL_TIM_PWM_ConfigChannel>
   1871e:	4603      	mov	r3, r0
   18720:	2b00      	cmp	r3, #0
   18722:	d001      	beq.n	18728 <PWM2_change_duty_cycle+0x44>
	{
	  Error_Handler();
   18724:	f001 f8f2 	bl	1990c <Error_Handler>
    }
	HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
   18728:	2100      	movs	r1, #0
   1872a:	4803      	ldr	r0, [pc, #12]	; (18738 <PWM2_change_duty_cycle+0x54>)
   1872c:	f004 fdfc 	bl	1d328 <HAL_TIM_PWM_Start>
}
   18730:	bf00      	nop
   18732:	3728      	adds	r7, #40	; 0x28
   18734:	46bd      	mov	sp, r7
   18736:	bd80      	pop	{r7, pc}
   18738:	00034768 	.word	0x00034768
   1873c:	00000000 	.word	0x00000000

00018740 <Joint_controller>:
		need_control = true;
	}
}


void Joint_controller(bool homing, creal_T* G_q_vector){
   18740:	b590      	push	{r4, r7, lr}
   18742:	b097      	sub	sp, #92	; 0x5c
   18744:	af00      	add	r7, sp, #0
   18746:	4603      	mov	r3, r0
   18748:	6039      	str	r1, [r7, #0]
   1874a:	71fb      	strb	r3, [r7, #7]
	int k;
	int PWM_val [6] = {0};
   1874c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
   18750:	2200      	movs	r2, #0
   18752:	601a      	str	r2, [r3, #0]
   18754:	605a      	str	r2, [r3, #4]
   18756:	609a      	str	r2, [r3, #8]
   18758:	60da      	str	r2, [r3, #12]
   1875a:	611a      	str	r2, [r3, #16]
   1875c:	615a      	str	r2, [r3, #20]
	double G_q_r [6] = {0};
   1875e:	f107 0308 	add.w	r3, r7, #8
   18762:	2230      	movs	r2, #48	; 0x30
   18764:	2100      	movs	r1, #0
   18766:	4618      	mov	r0, r3
   18768:	f00a f8ae 	bl	228c8 <memset>
	G_q(G_CONSTANT, current_angle[2], current_angle[3], current_angle[4], current_angle[5], G_q_vector);
   1876c:	4bba      	ldr	r3, [pc, #744]	; (18a58 <Joint_controller+0x318>)
   1876e:	ed93 7b04 	vldr	d7, [r3, #16]
   18772:	4bb9      	ldr	r3, [pc, #740]	; (18a58 <Joint_controller+0x318>)
   18774:	ed93 6b06 	vldr	d6, [r3, #24]
   18778:	4bb7      	ldr	r3, [pc, #732]	; (18a58 <Joint_controller+0x318>)
   1877a:	ed93 5b08 	vldr	d5, [r3, #32]
   1877e:	4bb6      	ldr	r3, [pc, #728]	; (18a58 <Joint_controller+0x318>)
   18780:	ed93 4b0a 	vldr	d4, [r3, #40]	; 0x28
   18784:	6838      	ldr	r0, [r7, #0]
   18786:	eeb0 3b45 	vmov.f64	d3, d5
   1878a:	eeb0 2b46 	vmov.f64	d2, d6
   1878e:	eeb0 1b47 	vmov.f64	d1, d7
   18792:	ed9f 0bad 	vldr	d0, [pc, #692]	; 18a48 <Joint_controller+0x308>
   18796:	f7ef fcab 	bl	80f0 <G_q>
	for (k = 0; k < NUM_JOINTS; k++){
   1879a:	2300      	movs	r3, #0
   1879c:	657b      	str	r3, [r7, #84]	; 0x54
   1879e:	e13a      	b.n	18a16 <Joint_controller+0x2d6>
		//set duty cycle with PD+Gravity control
		G_q_r[k] = (double)G_q_vector[k].re;
   187a0:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   187a2:	011b      	lsls	r3, r3, #4
   187a4:	683a      	ldr	r2, [r7, #0]
   187a6:	4413      	add	r3, r2
   187a8:	e9d3 3400 	ldrd	r3, r4, [r3]
   187ac:	6d7a      	ldr	r2, [r7, #84]	; 0x54
   187ae:	00d2      	lsls	r2, r2, #3
   187b0:	f107 0158 	add.w	r1, r7, #88	; 0x58
   187b4:	440a      	add	r2, r1
   187b6:	3a50      	subs	r2, #80	; 0x50
   187b8:	e9c2 3400 	strd	r3, r4, [r2]
		backemf[k] = joint_speed[k] * V_CONSTANT[k];
   187bc:	4aa7      	ldr	r2, [pc, #668]	; (18a5c <Joint_controller+0x31c>)
   187be:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   187c0:	00db      	lsls	r3, r3, #3
   187c2:	4413      	add	r3, r2
   187c4:	ed93 6b00 	vldr	d6, [r3]
   187c8:	4aa5      	ldr	r2, [pc, #660]	; (18a60 <Joint_controller+0x320>)
   187ca:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   187cc:	00db      	lsls	r3, r3, #3
   187ce:	4413      	add	r3, r2
   187d0:	ed93 7b00 	vldr	d7, [r3]
   187d4:	ee26 7b07 	vmul.f64	d7, d6, d7
   187d8:	4aa2      	ldr	r2, [pc, #648]	; (18a64 <Joint_controller+0x324>)
   187da:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   187dc:	00db      	lsls	r3, r3, #3
   187de:	4413      	add	r3, r2
   187e0:	ed83 7b00 	vstr	d7, [r3]
		G_q_r[k] *= 1024;
   187e4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   187e6:	00db      	lsls	r3, r3, #3
   187e8:	f107 0258 	add.w	r2, r7, #88	; 0x58
   187ec:	4413      	add	r3, r2
   187ee:	3b50      	subs	r3, #80	; 0x50
   187f0:	ed93 7b00 	vldr	d7, [r3]
   187f4:	ed9f 6b96 	vldr	d6, [pc, #600]	; 18a50 <Joint_controller+0x310>
   187f8:	ee27 7b06 	vmul.f64	d7, d7, d6
   187fc:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   187fe:	00db      	lsls	r3, r3, #3
   18800:	f107 0258 	add.w	r2, r7, #88	; 0x58
   18804:	4413      	add	r3, r2
   18806:	3b50      	subs	r3, #80	; 0x50
   18808:	ed83 7b00 	vstr	d7, [r3]
		G_q_r[k] /= (12.0 - backemf[k])/RESISTANCE[k]*T_CONSTANT[k];
   1880c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   1880e:	00db      	lsls	r3, r3, #3
   18810:	f107 0258 	add.w	r2, r7, #88	; 0x58
   18814:	4413      	add	r3, r2
   18816:	3b50      	subs	r3, #80	; 0x50
   18818:	ed93 5b00 	vldr	d5, [r3]
   1881c:	4a91      	ldr	r2, [pc, #580]	; (18a64 <Joint_controller+0x324>)
   1881e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18820:	00db      	lsls	r3, r3, #3
   18822:	4413      	add	r3, r2
   18824:	ed93 7b00 	vldr	d7, [r3]
   18828:	eeb2 6b08 	vmov.f64	d6, #40	; 0x41400000  12.0
   1882c:	ee36 4b47 	vsub.f64	d4, d6, d7
   18830:	4a8d      	ldr	r2, [pc, #564]	; (18a68 <Joint_controller+0x328>)
   18832:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18834:	00db      	lsls	r3, r3, #3
   18836:	4413      	add	r3, r2
   18838:	ed93 7b00 	vldr	d7, [r3]
   1883c:	ee84 6b07 	vdiv.f64	d6, d4, d7
   18840:	4a8a      	ldr	r2, [pc, #552]	; (18a6c <Joint_controller+0x32c>)
   18842:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18844:	00db      	lsls	r3, r3, #3
   18846:	4413      	add	r3, r2
   18848:	ed93 7b00 	vldr	d7, [r3]
   1884c:	ee26 6b07 	vmul.f64	d6, d6, d7
   18850:	ee85 7b06 	vdiv.f64	d7, d5, d6
   18854:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18856:	00db      	lsls	r3, r3, #3
   18858:	f107 0258 	add.w	r2, r7, #88	; 0x58
   1885c:	4413      	add	r3, r2
   1885e:	3b50      	subs	r3, #80	; 0x50
   18860:	ed83 7b00 	vstr	d7, [r3]
		PWM_val[k] = G_q_r[k] + K_P[k] * (desired_pos[k] - current_angle[k]) - K_V[k] * joint_speed[k];
   18864:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18866:	00db      	lsls	r3, r3, #3
   18868:	f107 0258 	add.w	r2, r7, #88	; 0x58
   1886c:	4413      	add	r3, r2
   1886e:	3b50      	subs	r3, #80	; 0x50
   18870:	ed93 6b00 	vldr	d6, [r3]
   18874:	4a7e      	ldr	r2, [pc, #504]	; (18a70 <Joint_controller+0x330>)
   18876:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18878:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   1887c:	ee07 3a90 	vmov	s15, r3
   18880:	eeb8 5be7 	vcvt.f64.s32	d5, s15
   18884:	4a7b      	ldr	r2, [pc, #492]	; (18a74 <Joint_controller+0x334>)
   18886:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18888:	00db      	lsls	r3, r3, #3
   1888a:	4413      	add	r3, r2
   1888c:	ed93 4b00 	vldr	d4, [r3]
   18890:	4a71      	ldr	r2, [pc, #452]	; (18a58 <Joint_controller+0x318>)
   18892:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18894:	00db      	lsls	r3, r3, #3
   18896:	4413      	add	r3, r2
   18898:	ed93 7b00 	vldr	d7, [r3]
   1889c:	ee34 7b47 	vsub.f64	d7, d4, d7
   188a0:	ee25 7b07 	vmul.f64	d7, d5, d7
   188a4:	ee36 6b07 	vadd.f64	d6, d6, d7
   188a8:	4a73      	ldr	r2, [pc, #460]	; (18a78 <Joint_controller+0x338>)
   188aa:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   188ac:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   188b0:	ee07 3a90 	vmov	s15, r3
   188b4:	eeb8 5be7 	vcvt.f64.s32	d5, s15
   188b8:	4a68      	ldr	r2, [pc, #416]	; (18a5c <Joint_controller+0x31c>)
   188ba:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   188bc:	00db      	lsls	r3, r3, #3
   188be:	4413      	add	r3, r2
   188c0:	ed93 7b00 	vldr	d7, [r3]
   188c4:	ee25 7b07 	vmul.f64	d7, d5, d7
   188c8:	ee36 7b47 	vsub.f64	d7, d6, d7
   188cc:	eefd 7bc7 	vcvt.s32.f64	s15, d7
   188d0:	ee17 2a90 	vmov	r2, s15
   188d4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   188d6:	009b      	lsls	r3, r3, #2
   188d8:	f107 0158 	add.w	r1, r7, #88	; 0x58
   188dc:	440b      	add	r3, r1
   188de:	f843 2c1c 	str.w	r2, [r3, #-28]
		if (PWM_val[k] > 1024){
   188e2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   188e4:	009b      	lsls	r3, r3, #2
   188e6:	f107 0258 	add.w	r2, r7, #88	; 0x58
   188ea:	4413      	add	r3, r2
   188ec:	f853 3c1c 	ldr.w	r3, [r3, #-28]
   188f0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   188f4:	dd09      	ble.n	1890a <Joint_controller+0x1ca>
			PWM_val[k] = 1024;
   188f6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   188f8:	009b      	lsls	r3, r3, #2
   188fa:	f107 0258 	add.w	r2, r7, #88	; 0x58
   188fe:	4413      	add	r3, r2
   18900:	f44f 6280 	mov.w	r2, #1024	; 0x400
   18904:	f843 2c1c 	str.w	r2, [r3, #-28]
   18908:	e011      	b.n	1892e <Joint_controller+0x1ee>
		}
		else if (PWM_val[k] < -1024){
   1890a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   1890c:	009b      	lsls	r3, r3, #2
   1890e:	f107 0258 	add.w	r2, r7, #88	; 0x58
   18912:	4413      	add	r3, r2
   18914:	f853 3c1c 	ldr.w	r3, [r3, #-28]
   18918:	f513 6f80 	cmn.w	r3, #1024	; 0x400
   1891c:	da07      	bge.n	1892e <Joint_controller+0x1ee>
			PWM_val[k] = -1024;
   1891e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18920:	009b      	lsls	r3, r3, #2
   18922:	f107 0258 	add.w	r2, r7, #88	; 0x58
   18926:	4413      	add	r3, r2
   18928:	4a54      	ldr	r2, [pc, #336]	; (18a7c <Joint_controller+0x33c>)
   1892a:	f843 2c1c 	str.w	r2, [r3, #-28]
		}

		//set directions
		if (PWM_val[k] < 0){
   1892e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18930:	009b      	lsls	r3, r3, #2
   18932:	f107 0258 	add.w	r2, r7, #88	; 0x58
   18936:	4413      	add	r3, r2
   18938:	f853 3c1c 	ldr.w	r3, [r3, #-28]
   1893c:	2b00      	cmp	r3, #0
   1893e:	da29      	bge.n	18994 <Joint_controller+0x254>
			HAL_GPIO_WritePin(Driver_P[k].port, Driver_P[k].pin_num, 0);
   18940:	4a4f      	ldr	r2, [pc, #316]	; (18a80 <Joint_controller+0x340>)
   18942:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18944:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
   18948:	4a4d      	ldr	r2, [pc, #308]	; (18a80 <Joint_controller+0x340>)
   1894a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   1894c:	00db      	lsls	r3, r3, #3
   1894e:	4413      	add	r3, r2
   18950:	889b      	ldrh	r3, [r3, #4]
   18952:	2200      	movs	r2, #0
   18954:	4619      	mov	r1, r3
   18956:	f001 fe1f 	bl	1a598 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Driver_N[k].port, Driver_N[k].pin_num, 1);
   1895a:	4a4a      	ldr	r2, [pc, #296]	; (18a84 <Joint_controller+0x344>)
   1895c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   1895e:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
   18962:	4a48      	ldr	r2, [pc, #288]	; (18a84 <Joint_controller+0x344>)
   18964:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18966:	00db      	lsls	r3, r3, #3
   18968:	4413      	add	r3, r2
   1896a:	889b      	ldrh	r3, [r3, #4]
   1896c:	2201      	movs	r2, #1
   1896e:	4619      	mov	r1, r3
   18970:	f001 fe12 	bl	1a598 <HAL_GPIO_WritePin>
			PWM_val[k] = 0-PWM_val[k];
   18974:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18976:	009b      	lsls	r3, r3, #2
   18978:	f107 0258 	add.w	r2, r7, #88	; 0x58
   1897c:	4413      	add	r3, r2
   1897e:	f853 3c1c 	ldr.w	r3, [r3, #-28]
   18982:	425a      	negs	r2, r3
   18984:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18986:	009b      	lsls	r3, r3, #2
   18988:	f107 0158 	add.w	r1, r7, #88	; 0x58
   1898c:	440b      	add	r3, r1
   1898e:	f843 2c1c 	str.w	r2, [r3, #-28]
   18992:	e03d      	b.n	18a10 <Joint_controller+0x2d0>
		}
		else if (PWM_val[k] > 0){
   18994:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18996:	009b      	lsls	r3, r3, #2
   18998:	f107 0258 	add.w	r2, r7, #88	; 0x58
   1899c:	4413      	add	r3, r2
   1899e:	f853 3c1c 	ldr.w	r3, [r3, #-28]
   189a2:	2b00      	cmp	r3, #0
   189a4:	dd1a      	ble.n	189dc <Joint_controller+0x29c>
			HAL_GPIO_WritePin(Driver_P[k].port, Driver_P[k].pin_num, 1);
   189a6:	4a36      	ldr	r2, [pc, #216]	; (18a80 <Joint_controller+0x340>)
   189a8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   189aa:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
   189ae:	4a34      	ldr	r2, [pc, #208]	; (18a80 <Joint_controller+0x340>)
   189b0:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   189b2:	00db      	lsls	r3, r3, #3
   189b4:	4413      	add	r3, r2
   189b6:	889b      	ldrh	r3, [r3, #4]
   189b8:	2201      	movs	r2, #1
   189ba:	4619      	mov	r1, r3
   189bc:	f001 fdec 	bl	1a598 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Driver_N[k].port, Driver_N[k].pin_num, 0);
   189c0:	4a30      	ldr	r2, [pc, #192]	; (18a84 <Joint_controller+0x344>)
   189c2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   189c4:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
   189c8:	4a2e      	ldr	r2, [pc, #184]	; (18a84 <Joint_controller+0x344>)
   189ca:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   189cc:	00db      	lsls	r3, r3, #3
   189ce:	4413      	add	r3, r2
   189d0:	889b      	ldrh	r3, [r3, #4]
   189d2:	2200      	movs	r2, #0
   189d4:	4619      	mov	r1, r3
   189d6:	f001 fddf 	bl	1a598 <HAL_GPIO_WritePin>
   189da:	e019      	b.n	18a10 <Joint_controller+0x2d0>
		}
		else{
			HAL_GPIO_WritePin(Driver_P[k].port, Driver_P[k].pin_num, 0);
   189dc:	4a28      	ldr	r2, [pc, #160]	; (18a80 <Joint_controller+0x340>)
   189de:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   189e0:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
   189e4:	4a26      	ldr	r2, [pc, #152]	; (18a80 <Joint_controller+0x340>)
   189e6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   189e8:	00db      	lsls	r3, r3, #3
   189ea:	4413      	add	r3, r2
   189ec:	889b      	ldrh	r3, [r3, #4]
   189ee:	2200      	movs	r2, #0
   189f0:	4619      	mov	r1, r3
   189f2:	f001 fdd1 	bl	1a598 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Driver_N[k].port, Driver_N[k].pin_num, 0);
   189f6:	4a23      	ldr	r2, [pc, #140]	; (18a84 <Joint_controller+0x344>)
   189f8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   189fa:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
   189fe:	4a21      	ldr	r2, [pc, #132]	; (18a84 <Joint_controller+0x344>)
   18a00:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18a02:	00db      	lsls	r3, r3, #3
   18a04:	4413      	add	r3, r2
   18a06:	889b      	ldrh	r3, [r3, #4]
   18a08:	2200      	movs	r2, #0
   18a0a:	4619      	mov	r1, r3
   18a0c:	f001 fdc4 	bl	1a598 <HAL_GPIO_WritePin>
	for (k = 0; k < NUM_JOINTS; k++){
   18a10:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18a12:	3301      	adds	r3, #1
   18a14:	657b      	str	r3, [r7, #84]	; 0x54
   18a16:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   18a18:	2b05      	cmp	r3, #5
   18a1a:	f77f aec1 	ble.w	187a0 <Joint_controller+0x60>
		}

	}
	PWM1_change_duty_cycle(PWM_val[0], PWM_val[1]);
   18a1e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   18a20:	6c3a      	ldr	r2, [r7, #64]	; 0x40
   18a22:	4611      	mov	r1, r2
   18a24:	4618      	mov	r0, r3
   18a26:	f7ff fe17 	bl	18658 <PWM1_change_duty_cycle>
	PWM2_change_duty_cycle(PWM_val[2]);
   18a2a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   18a2c:	4618      	mov	r0, r3
   18a2e:	f7ff fe59 	bl	186e4 <PWM2_change_duty_cycle>
	PWM3_change_duty_cycle(PWM_val[3], PWM_val[4], PWM_val[5]);
   18a32:	6cbb      	ldr	r3, [r7, #72]	; 0x48
   18a34:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
   18a36:	6d3a      	ldr	r2, [r7, #80]	; 0x50
   18a38:	4618      	mov	r0, r3
   18a3a:	f7ff fdbb 	bl	185b4 <PWM3_change_duty_cycle>
}
   18a3e:	bf00      	nop
   18a40:	375c      	adds	r7, #92	; 0x5c
   18a42:	46bd      	mov	sp, r7
   18a44:	bd90      	pop	{r4, r7, pc}
   18a46:	bf00      	nop
   18a48:	51eb851f 	.word	0x51eb851f
   18a4c:	c0239eb8 	.word	0xc0239eb8
   18a50:	00000000 	.word	0x00000000
   18a54:	40900000 	.word	0x40900000
   18a58:	000343a8 	.word	0x000343a8
   18a5c:	00034378 	.word	0x00034378
   18a60:	00023da0 	.word	0x00023da0
   18a64:	000343d8 	.word	0x000343d8
   18a68:	00023e00 	.word	0x00023e00
   18a6c:	00023dd0 	.word	0x00023dd0
   18a70:	00023d70 	.word	0x00023d70
   18a74:	00034408 	.word	0x00034408
   18a78:	00023d88 	.word	0x00023d88
   18a7c:	fffffc00 	.word	0xfffffc00
   18a80:	00034450 	.word	0x00034450
   18a84:	000345dc 	.word	0x000345dc

00018a88 <homing>:

void homing (void){
   18a88:	b480      	push	{r7}
   18a8a:	af00      	add	r7, sp, #0
		current_angle[g] = 0;
		motor_steps[g] = 0;
	}*/
	//after everything is finished for homing it will set all coords to 0

	start_state = false;
   18a8c:	4b03      	ldr	r3, [pc, #12]	; (18a9c <homing+0x14>)
   18a8e:	2200      	movs	r2, #0
   18a90:	701a      	strb	r2, [r3, #0]

}
   18a92:	bf00      	nop
   18a94:	46bd      	mov	sp, r7
   18a96:	f85d 7b04 	ldr.w	r7, [sp], #4
   18a9a:	4770      	bx	lr
   18a9c:	00034154 	.word	0x00034154

00018aa0 <StartUp>:
void StartUp(void){
   18aa0:	b580      	push	{r7, lr}
   18aa2:	af00      	add	r7, sp, #0

	//spin motors
	PWM1_change_duty_cycle(500, 500);
   18aa4:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
   18aa8:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   18aac:	f7ff fdd4 	bl	18658 <PWM1_change_duty_cycle>
	PWM2_change_duty_cycle(500);
   18ab0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   18ab4:	f7ff fe16 	bl	186e4 <PWM2_change_duty_cycle>
	PWM3_change_duty_cycle(500, 500, 0);
   18ab8:	2200      	movs	r2, #0
   18aba:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
   18abe:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   18ac2:	f7ff fd77 	bl	185b4 <PWM3_change_duty_cycle>
}
   18ac6:	bf00      	nop
   18ac8:	bd80      	pop	{r7, pc}
	...

00018acc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
   18acc:	b590      	push	{r4, r7, lr}
   18ace:	b0b3      	sub	sp, #204	; 0xcc
   18ad0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */
	char* msg = "Hello Nucleo Fun!\n\r";
   18ad2:	4ba8      	ldr	r3, [pc, #672]	; (18d74 <main+0x2a8>)
   18ad4:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
	char* EOL = "]\n\r";
   18ad8:	4ba7      	ldr	r3, [pc, #668]	; (18d78 <main+0x2ac>)
   18ada:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
	char* EOJ = ", ";
   18ade:	4ba7      	ldr	r3, [pc, #668]	; (18d7c <main+0x2b0>)
   18ae0:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
	char* timer_tester = "timed\n\r";
   18ae4:	4ba6      	ldr	r3, [pc, #664]	; (18d80 <main+0x2b4>)
   18ae6:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
	uint32_t  stop;
	uint32_t  delta;
	creal_T G_q_vector[6];

	//setting up pins
	set_up_encoder_pins();
   18aea:	f7ff fc9f 	bl	1842c <set_up_encoder_pins>
	set_up_driver_pins();
   18aee:	f7ff fcfd 	bl	184ec <set_up_driver_pins>

    for(i = 0; i < NUM_JOINTS; i++){
   18af2:	2300      	movs	r3, #0
   18af4:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
   18af8:	e024      	b.n	18b44 <main+0x78>
    	val_encoderA [i] = HIGH;
   18afa:	4aa2      	ldr	r2, [pc, #648]	; (18d84 <main+0x2b8>)
   18afc:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
   18b00:	2101      	movs	r1, #1
   18b02:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    	val_encoderB [i] = HIGH;
   18b06:	4aa0      	ldr	r2, [pc, #640]	; (18d88 <main+0x2bc>)
   18b08:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
   18b0c:	2101      	movs	r1, #1
   18b0e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    	direction [i] = true;
   18b12:	4a9e      	ldr	r2, [pc, #632]	; (18d8c <main+0x2c0>)
   18b14:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
   18b18:	4413      	add	r3, r2
   18b1a:	2201      	movs	r2, #1
   18b1c:	701a      	strb	r2, [r3, #0]
    	desired_pos[i] = test_pos[i];
   18b1e:	4a9c      	ldr	r2, [pc, #624]	; (18d90 <main+0x2c4>)
   18b20:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
   18b24:	00db      	lsls	r3, r3, #3
   18b26:	4413      	add	r3, r2
   18b28:	e9d3 3400 	ldrd	r3, r4, [r3]
   18b2c:	4999      	ldr	r1, [pc, #612]	; (18d94 <main+0x2c8>)
   18b2e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
   18b32:	00d2      	lsls	r2, r2, #3
   18b34:	440a      	add	r2, r1
   18b36:	e9c2 3400 	strd	r3, r4, [r2]
    for(i = 0; i < NUM_JOINTS; i++){
   18b3a:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
   18b3e:	3301      	adds	r3, #1
   18b40:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
   18b44:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
   18b48:	2b05      	cmp	r3, #5
   18b4a:	ddd6      	ble.n	18afa <main+0x2e>
    }
    Homing.home_set = false;
   18b4c:	4b92      	ldr	r3, [pc, #584]	; (18d98 <main+0x2cc>)
   18b4e:	2200      	movs	r2, #0
   18b50:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
    //for CPU cycle counts
    if (ARM_CM_DWT_CTRL != 0) {        // See if DWT is available
   18b54:	4b91      	ldr	r3, [pc, #580]	; (18d9c <main+0x2d0>)
   18b56:	681b      	ldr	r3, [r3, #0]
   18b58:	2b00      	cmp	r3, #0
   18b5a:	d00e      	beq.n	18b7a <main+0xae>

        ARM_CM_DEMCR      |= 1 << 24;  // Set bit 24
   18b5c:	4b90      	ldr	r3, [pc, #576]	; (18da0 <main+0x2d4>)
   18b5e:	681b      	ldr	r3, [r3, #0]
   18b60:	4a8f      	ldr	r2, [pc, #572]	; (18da0 <main+0x2d4>)
   18b62:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
   18b66:	6013      	str	r3, [r2, #0]

        ARM_CM_DWT_CYCCNT  = 0;
   18b68:	4b8e      	ldr	r3, [pc, #568]	; (18da4 <main+0x2d8>)
   18b6a:	2200      	movs	r2, #0
   18b6c:	601a      	str	r2, [r3, #0]

        ARM_CM_DWT_CTRL   |= 1 << 0;   // Set bit 0
   18b6e:	4b8b      	ldr	r3, [pc, #556]	; (18d9c <main+0x2d0>)
   18b70:	681b      	ldr	r3, [r3, #0]
   18b72:	4a8a      	ldr	r2, [pc, #552]	; (18d9c <main+0x2d0>)
   18b74:	f043 0301 	orr.w	r3, r3, #1
   18b78:	6013      	str	r3, [r2, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
   18b7a:	f001 f989 	bl	19e90 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
   18b7e:	f000 f921 	bl	18dc4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
   18b82:	f000 fc79 	bl	19478 <MX_GPIO_Init>
  MX_USART3_UART_Init();
   18b86:	f000 fc2b 	bl	193e0 <MX_USART3_UART_Init>
  MX_TIM1_Init();
   18b8a:	f000 f9d9 	bl	18f40 <MX_TIM1_Init>
  MX_TIM2_Init();
   18b8e:	f000 fa73 	bl	19078 <MX_TIM2_Init>
  MX_TIM3_Init();
   18b92:	f000 facb 	bl	1912c <MX_TIM3_Init>
  MX_TIM5_Init();
   18b96:	f000 fb3b 	bl	19210 <MX_TIM5_Init>
  MX_USART1_UART_Init();
   18b9a:	f000 fbd5 	bl	19348 <MX_USART1_UART_Init>
  MX_USB_DEVICE_Init();
   18b9e:	f009 fa6d 	bl	2207c <MX_USB_DEVICE_Init>
  MX_TIM7_Init();
   18ba2:	f000 fb91 	bl	192c8 <MX_TIM7_Init>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  start_up = !(homing_state[0] && homing_state[1] && homing_state[2] && homing_state[3] && homing_state[4]) && start_state;
   18ba6:	4b80      	ldr	r3, [pc, #512]	; (18da8 <main+0x2dc>)
   18ba8:	781b      	ldrb	r3, [r3, #0]
   18baa:	f083 0301 	eor.w	r3, r3, #1
   18bae:	b2db      	uxtb	r3, r3
   18bb0:	2b00      	cmp	r3, #0
   18bb2:	d11b      	bne.n	18bec <main+0x120>
   18bb4:	4b7c      	ldr	r3, [pc, #496]	; (18da8 <main+0x2dc>)
   18bb6:	785b      	ldrb	r3, [r3, #1]
   18bb8:	f083 0301 	eor.w	r3, r3, #1
   18bbc:	b2db      	uxtb	r3, r3
   18bbe:	2b00      	cmp	r3, #0
   18bc0:	d114      	bne.n	18bec <main+0x120>
   18bc2:	4b79      	ldr	r3, [pc, #484]	; (18da8 <main+0x2dc>)
   18bc4:	789b      	ldrb	r3, [r3, #2]
   18bc6:	f083 0301 	eor.w	r3, r3, #1
   18bca:	b2db      	uxtb	r3, r3
   18bcc:	2b00      	cmp	r3, #0
   18bce:	d10d      	bne.n	18bec <main+0x120>
   18bd0:	4b75      	ldr	r3, [pc, #468]	; (18da8 <main+0x2dc>)
   18bd2:	78db      	ldrb	r3, [r3, #3]
   18bd4:	f083 0301 	eor.w	r3, r3, #1
   18bd8:	b2db      	uxtb	r3, r3
   18bda:	2b00      	cmp	r3, #0
   18bdc:	d106      	bne.n	18bec <main+0x120>
   18bde:	4b72      	ldr	r3, [pc, #456]	; (18da8 <main+0x2dc>)
   18be0:	791b      	ldrb	r3, [r3, #4]
   18be2:	f083 0301 	eor.w	r3, r3, #1
   18be6:	b2db      	uxtb	r3, r3
   18be8:	2b00      	cmp	r3, #0
   18bea:	d005      	beq.n	18bf8 <main+0x12c>
   18bec:	4b6f      	ldr	r3, [pc, #444]	; (18dac <main+0x2e0>)
   18bee:	781b      	ldrb	r3, [r3, #0]
   18bf0:	2b00      	cmp	r3, #0
   18bf2:	d001      	beq.n	18bf8 <main+0x12c>
   18bf4:	2301      	movs	r3, #1
   18bf6:	e000      	b.n	18bfa <main+0x12e>
   18bf8:	2300      	movs	r3, #0
   18bfa:	f003 0301 	and.w	r3, r3, #1
   18bfe:	b2da      	uxtb	r2, r3
   18c00:	4b6b      	ldr	r3, [pc, #428]	; (18db0 <main+0x2e4>)
   18c02:	701a      	strb	r2, [r3, #0]
	  Homing.home_set = (homing_state[0] && homing_state[1] && homing_state[2] && homing_state[3] && homing_state[4]) && start_state;
   18c04:	4b68      	ldr	r3, [pc, #416]	; (18da8 <main+0x2dc>)
   18c06:	781b      	ldrb	r3, [r3, #0]
   18c08:	2b00      	cmp	r3, #0
   18c0a:	d015      	beq.n	18c38 <main+0x16c>
   18c0c:	4b66      	ldr	r3, [pc, #408]	; (18da8 <main+0x2dc>)
   18c0e:	785b      	ldrb	r3, [r3, #1]
   18c10:	2b00      	cmp	r3, #0
   18c12:	d011      	beq.n	18c38 <main+0x16c>
   18c14:	4b64      	ldr	r3, [pc, #400]	; (18da8 <main+0x2dc>)
   18c16:	789b      	ldrb	r3, [r3, #2]
   18c18:	2b00      	cmp	r3, #0
   18c1a:	d00d      	beq.n	18c38 <main+0x16c>
   18c1c:	4b62      	ldr	r3, [pc, #392]	; (18da8 <main+0x2dc>)
   18c1e:	78db      	ldrb	r3, [r3, #3]
   18c20:	2b00      	cmp	r3, #0
   18c22:	d009      	beq.n	18c38 <main+0x16c>
   18c24:	4b60      	ldr	r3, [pc, #384]	; (18da8 <main+0x2dc>)
   18c26:	791b      	ldrb	r3, [r3, #4]
   18c28:	2b00      	cmp	r3, #0
   18c2a:	d005      	beq.n	18c38 <main+0x16c>
   18c2c:	4b5f      	ldr	r3, [pc, #380]	; (18dac <main+0x2e0>)
   18c2e:	781b      	ldrb	r3, [r3, #0]
   18c30:	2b00      	cmp	r3, #0
   18c32:	d001      	beq.n	18c38 <main+0x16c>
   18c34:	2301      	movs	r3, #1
   18c36:	e000      	b.n	18c3a <main+0x16e>
   18c38:	2300      	movs	r3, #0
   18c3a:	f003 0301 	and.w	r3, r3, #1
   18c3e:	b2da      	uxtb	r2, r3
   18c40:	4b55      	ldr	r3, [pc, #340]	; (18d98 <main+0x2cc>)
   18c42:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
	  if (Homing.home_set){
   18c46:	4b54      	ldr	r3, [pc, #336]	; (18d98 <main+0x2cc>)
   18c48:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
   18c4c:	2b00      	cmp	r3, #0
   18c4e:	d002      	beq.n	18c56 <main+0x18a>
		  homing();
   18c50:	f7ff ff1a 	bl	18a88 <homing>
		  break;
   18c54:	e087      	b.n	18d66 <main+0x29a>
	  }
	  else if (start_up){
   18c56:	4b56      	ldr	r3, [pc, #344]	; (18db0 <main+0x2e4>)
   18c58:	781b      	ldrb	r3, [r3, #0]
   18c5a:	2b00      	cmp	r3, #0
   18c5c:	d002      	beq.n	18c64 <main+0x198>
		  StartUp();
   18c5e:	f7ff ff1f 	bl	18aa0 <StartUp>
		  break;
   18c62:	e080      	b.n	18d66 <main+0x29a>
	  }
	  //printf(msg);
	  if (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13)){
   18c64:	f44f 5100 	mov.w	r1, #8192	; 0x2000
   18c68:	4852      	ldr	r0, [pc, #328]	; (18db4 <main+0x2e8>)
   18c6a:	f001 fc7d 	bl	1a568 <HAL_GPIO_ReadPin>
   18c6e:	4603      	mov	r3, r0
   18c70:	2b00      	cmp	r3, #0
   18c72:	d05a      	beq.n	18d2a <main+0x25e>
		  itoa(motor_steps[0], one_motor, 10);
   18c74:	4b50      	ldr	r3, [pc, #320]	; (18db8 <main+0x2ec>)
   18c76:	681b      	ldr	r3, [r3, #0]
   18c78:	f107 019c 	add.w	r1, r7, #156	; 0x9c
   18c7c:	220a      	movs	r2, #10
   18c7e:	4618      	mov	r0, r3
   18c80:	f009 fe10 	bl	228a4 <itoa>
		  strcpy(print_string, one_motor);
   18c84:	f107 029c 	add.w	r2, r7, #156	; 0x9c
   18c88:	f107 0360 	add.w	r3, r7, #96	; 0x60
   18c8c:	4611      	mov	r1, r2
   18c8e:	4618      	mov	r0, r3
   18c90:	f009 fee9 	bl	22a66 <strcpy>
		  for (i = 1; i < NUM_JOINTS; i++){
   18c94:	2301      	movs	r3, #1
   18c96:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
   18c9a:	e01e      	b.n	18cda <main+0x20e>
			  itoa(motor_steps[i], one_motor, 10);
   18c9c:	4a46      	ldr	r2, [pc, #280]	; (18db8 <main+0x2ec>)
   18c9e:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
   18ca2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   18ca6:	f107 019c 	add.w	r1, r7, #156	; 0x9c
   18caa:	220a      	movs	r2, #10
   18cac:	4618      	mov	r0, r3
   18cae:	f009 fdf9 	bl	228a4 <itoa>
			  strcat(print_string, EOJ);
   18cb2:	f107 0360 	add.w	r3, r7, #96	; 0x60
   18cb6:	f8d7 10b8 	ldr.w	r1, [r7, #184]	; 0xb8
   18cba:	4618      	mov	r0, r3
   18cbc:	f009 fec4 	bl	22a48 <strcat>
			  strcat(print_string, one_motor);
   18cc0:	f107 029c 	add.w	r2, r7, #156	; 0x9c
   18cc4:	f107 0360 	add.w	r3, r7, #96	; 0x60
   18cc8:	4611      	mov	r1, r2
   18cca:	4618      	mov	r0, r3
   18ccc:	f009 febc 	bl	22a48 <strcat>
		  for (i = 1; i < NUM_JOINTS; i++){
   18cd0:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
   18cd4:	3301      	adds	r3, #1
   18cd6:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
   18cda:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
   18cde:	2b05      	cmp	r3, #5
   18ce0:	dddc      	ble.n	18c9c <main+0x1d0>
		  }
		  strcat(print_string, EOL);
   18ce2:	f107 0360 	add.w	r3, r7, #96	; 0x60
   18ce6:	f8d7 10bc 	ldr.w	r1, [r7, #188]	; 0xbc
   18cea:	4618      	mov	r0, r3
   18cec:	f009 feac 	bl	22a48 <strcat>
		  CDC_Transmit_FS((uint8_t*)"motor is at [", strlen(msg));
   18cf0:	f8d7 00c0 	ldr.w	r0, [r7, #192]	; 0xc0
   18cf4:	f009 febf 	bl	22a76 <strlen>
   18cf8:	4603      	mov	r3, r0
   18cfa:	b29b      	uxth	r3, r3
   18cfc:	4619      	mov	r1, r3
   18cfe:	482f      	ldr	r0, [pc, #188]	; (18dbc <main+0x2f0>)
   18d00:	f009 fab4 	bl	2226c <CDC_Transmit_FS>
		  HAL_Delay(2);
   18d04:	2002      	movs	r0, #2
   18d06:	f001 f941 	bl	19f8c <HAL_Delay>
		  CDC_Transmit_FS((uint8_t*)print_string, strlen(print_string));
   18d0a:	f107 0360 	add.w	r3, r7, #96	; 0x60
   18d0e:	4618      	mov	r0, r3
   18d10:	f009 feb1 	bl	22a76 <strlen>
   18d14:	4603      	mov	r3, r0
   18d16:	b29a      	uxth	r2, r3
   18d18:	f107 0360 	add.w	r3, r7, #96	; 0x60
   18d1c:	4611      	mov	r1, r2
   18d1e:	4618      	mov	r0, r3
   18d20:	f009 faa4 	bl	2226c <CDC_Transmit_FS>
		  HAL_Delay(2);
   18d24:	2002      	movs	r0, #2
   18d26:	f001 f931 	bl	19f8c <HAL_Delay>
	  }
	  if (need_control){
   18d2a:	4b25      	ldr	r3, [pc, #148]	; (18dc0 <main+0x2f4>)
   18d2c:	781b      	ldrb	r3, [r3, #0]
   18d2e:	b2db      	uxtb	r3, r3
   18d30:	2b00      	cmp	r3, #0
   18d32:	f43f af38 	beq.w	18ba6 <main+0xda>
		  start = ARM_CM_DWT_CYCCNT;
   18d36:	4b1b      	ldr	r3, [pc, #108]	; (18da4 <main+0x2d8>)
   18d38:	681b      	ldr	r3, [r3, #0]
   18d3a:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
		  Joint_controller(false, G_q_vector);
   18d3e:	463b      	mov	r3, r7
   18d40:	4619      	mov	r1, r3
   18d42:	2000      	movs	r0, #0
   18d44:	f7ff fcfc 	bl	18740 <Joint_controller>
		  stop  = ARM_CM_DWT_CYCCNT;
   18d48:	4b16      	ldr	r3, [pc, #88]	; (18da4 <main+0x2d8>)
   18d4a:	681b      	ldr	r3, [r3, #0]
   18d4c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
		  delta = stop - start;
   18d50:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
   18d54:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
   18d58:	1ad3      	subs	r3, r2, r3
   18d5a:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
		  need_control = false;
   18d5e:	4b18      	ldr	r3, [pc, #96]	; (18dc0 <main+0x2f4>)
   18d60:	2200      	movs	r2, #0
   18d62:	701a      	strb	r2, [r3, #0]
	  start_up = !(homing_state[0] && homing_state[1] && homing_state[2] && homing_state[3] && homing_state[4]) && start_state;
   18d64:	e71f      	b.n	18ba6 <main+0xda>
	  }

	  //HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), 100);
	  //CDC_Transmit_FS(msg, sizeof(msg));
  }
  G_q_terminate();
   18d66:	f7ff facf 	bl	18308 <G_q_terminate>
   18d6a:	2300      	movs	r3, #0
  /* USER CODE END 3 */
}
   18d6c:	4618      	mov	r0, r3
   18d6e:	37cc      	adds	r7, #204	; 0xcc
   18d70:	46bd      	mov	sp, r7
   18d72:	bd90      	pop	{r4, r7, pc}
   18d74:	00023e60 	.word	0x00023e60
   18d78:	00023e74 	.word	0x00023e74
   18d7c:	00023e78 	.word	0x00023e78
   18d80:	00023e7c 	.word	0x00023e7c
   18d84:	0003450c 	.word	0x0003450c
   18d88:	0003464c 	.word	0x0003464c
   18d8c:	0003414c 	.word	0x0003414c
   18d90:	00023e30 	.word	0x00023e30
   18d94:	00034408 	.word	0x00034408
   18d98:	00034730 	.word	0x00034730
   18d9c:	e0001000 	.word	0xe0001000
   18da0:	e000edfc 	.word	0xe000edfc
   18da4:	e0001004 	.word	0xe0001004
   18da8:	00034438 	.word	0x00034438
   18dac:	00034154 	.word	0x00034154
   18db0:	00034153 	.word	0x00034153
   18db4:	58020800 	.word	0x58020800
   18db8:	00034360 	.word	0x00034360
   18dbc:	00023e84 	.word	0x00023e84
   18dc0:	00034152 	.word	0x00034152

00018dc4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
   18dc4:	b580      	push	{r7, lr}
   18dc6:	b0cc      	sub	sp, #304	; 0x130
   18dc8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
   18dca:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
   18dce:	224c      	movs	r2, #76	; 0x4c
   18dd0:	2100      	movs	r1, #0
   18dd2:	4618      	mov	r0, r3
   18dd4:	f009 fd78 	bl	228c8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
   18dd8:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
   18ddc:	2220      	movs	r2, #32
   18dde:	2100      	movs	r1, #0
   18de0:	4618      	mov	r0, r3
   18de2:	f009 fd71 	bl	228c8 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
   18de6:	f107 0308 	add.w	r3, r7, #8
   18dea:	4618      	mov	r0, r3
   18dec:	23bc      	movs	r3, #188	; 0xbc
   18dee:	461a      	mov	r2, r3
   18df0:	2100      	movs	r1, #0
   18df2:	f009 fd69 	bl	228c8 <memset>

  /** Supply configuration update enable 
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
   18df6:	2002      	movs	r0, #2
   18df8:	f001 ff7e 	bl	1acf8 <HAL_PWREx_ConfigSupply>
  /** Configure the main internal regulator output voltage 
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
   18dfc:	1d3b      	adds	r3, r7, #4
   18dfe:	2200      	movs	r2, #0
   18e00:	601a      	str	r2, [r3, #0]
   18e02:	4b4c      	ldr	r3, [pc, #304]	; (18f34 <SystemClock_Config+0x170>)
   18e04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   18e06:	4a4b      	ldr	r2, [pc, #300]	; (18f34 <SystemClock_Config+0x170>)
   18e08:	f023 0301 	bic.w	r3, r3, #1
   18e0c:	62d3      	str	r3, [r2, #44]	; 0x2c
   18e0e:	4b49      	ldr	r3, [pc, #292]	; (18f34 <SystemClock_Config+0x170>)
   18e10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   18e12:	f003 0201 	and.w	r2, r3, #1
   18e16:	1d3b      	adds	r3, r7, #4
   18e18:	601a      	str	r2, [r3, #0]
   18e1a:	4b47      	ldr	r3, [pc, #284]	; (18f38 <SystemClock_Config+0x174>)
   18e1c:	699b      	ldr	r3, [r3, #24]
   18e1e:	4a46      	ldr	r2, [pc, #280]	; (18f38 <SystemClock_Config+0x174>)
   18e20:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
   18e24:	6193      	str	r3, [r2, #24]
   18e26:	4b44      	ldr	r3, [pc, #272]	; (18f38 <SystemClock_Config+0x174>)
   18e28:	699b      	ldr	r3, [r3, #24]
   18e2a:	f403 4240 	and.w	r2, r3, #49152	; 0xc000
   18e2e:	1d3b      	adds	r3, r7, #4
   18e30:	601a      	str	r2, [r3, #0]
   18e32:	1d3b      	adds	r3, r7, #4
   18e34:	681b      	ldr	r3, [r3, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
   18e36:	bf00      	nop
   18e38:	4b3f      	ldr	r3, [pc, #252]	; (18f38 <SystemClock_Config+0x174>)
   18e3a:	699b      	ldr	r3, [r3, #24]
   18e3c:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
   18e40:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
   18e44:	d1f8      	bne.n	18e38 <SystemClock_Config+0x74>
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
   18e46:	2301      	movs	r3, #1
   18e48:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
  RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
   18e4c:	f44f 23a0 	mov.w	r3, #327680	; 0x50000
   18e50:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
   18e54:	2302      	movs	r3, #2
   18e56:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
   18e5a:	2302      	movs	r3, #2
   18e5c:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
  RCC_OscInitStruct.PLL.PLLM = 1;
   18e60:	2301      	movs	r3, #1
   18e62:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
  RCC_OscInitStruct.PLL.PLLN = 54;
   18e66:	2336      	movs	r3, #54	; 0x36
   18e68:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
  RCC_OscInitStruct.PLL.PLLP = 2;
   18e6c:	2302      	movs	r3, #2
   18e6e:	f8c7 3118 	str.w	r3, [r7, #280]	; 0x118
  RCC_OscInitStruct.PLL.PLLQ = 9;
   18e72:	2309      	movs	r3, #9
   18e74:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
  RCC_OscInitStruct.PLL.PLLR = 2;
   18e78:	2302      	movs	r3, #2
   18e7a:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
   18e7e:	230c      	movs	r3, #12
   18e80:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
   18e84:	2300      	movs	r3, #0
   18e86:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
   18e8a:	2300      	movs	r3, #0
   18e8c:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
   18e90:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
   18e94:	4618      	mov	r0, r3
   18e96:	f001 ff79 	bl	1ad8c <HAL_RCC_OscConfig>
   18e9a:	4603      	mov	r3, r0
   18e9c:	2b00      	cmp	r3, #0
   18e9e:	d001      	beq.n	18ea4 <SystemClock_Config+0xe0>
  {
    Error_Handler();
   18ea0:	f000 fd34 	bl	1990c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
   18ea4:	233f      	movs	r3, #63	; 0x3f
   18ea6:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
   18eaa:	2303      	movs	r3, #3
   18eac:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
   18eb0:	2300      	movs	r3, #0
   18eb2:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
   18eb6:	2300      	movs	r3, #0
   18eb8:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
   18ebc:	2340      	movs	r3, #64	; 0x40
   18ebe:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
   18ec2:	2340      	movs	r3, #64	; 0x40
   18ec4:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
   18ec8:	f44f 6380 	mov.w	r3, #1024	; 0x400
   18ecc:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
   18ed0:	2340      	movs	r3, #64	; 0x40
   18ed2:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
   18ed6:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
   18eda:	2103      	movs	r1, #3
   18edc:	4618      	mov	r0, r3
   18ede:	f002 fb2d 	bl	1b53c <HAL_RCC_ClockConfig>
   18ee2:	4603      	mov	r3, r0
   18ee4:	2b00      	cmp	r3, #0
   18ee6:	d001      	beq.n	18eec <SystemClock_Config+0x128>
  {
    Error_Handler();
   18ee8:	f000 fd10 	bl	1990c <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3|RCC_PERIPHCLK_USART1
   18eec:	f107 0308 	add.w	r3, r7, #8
   18ef0:	4a12      	ldr	r2, [pc, #72]	; (18f3c <SystemClock_Config+0x178>)
   18ef2:	601a      	str	r2, [r3, #0]
                              |RCC_PERIPHCLK_USB;
  PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
   18ef4:	f107 0308 	add.w	r3, r7, #8
   18ef8:	2200      	movs	r2, #0
   18efa:	675a      	str	r2, [r3, #116]	; 0x74
  PeriphClkInitStruct.Usart16ClockSelection = RCC_USART16CLKSOURCE_D2PCLK2;
   18efc:	f107 0308 	add.w	r3, r7, #8
   18f00:	2200      	movs	r2, #0
   18f02:	679a      	str	r2, [r3, #120]	; 0x78
  PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
   18f04:	f107 0308 	add.w	r3, r7, #8
   18f08:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
   18f0c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
   18f10:	f107 0308 	add.w	r3, r7, #8
   18f14:	4618      	mov	r0, r3
   18f16:	f002 fe95 	bl	1bc44 <HAL_RCCEx_PeriphCLKConfig>
   18f1a:	4603      	mov	r3, r0
   18f1c:	2b00      	cmp	r3, #0
   18f1e:	d001      	beq.n	18f24 <SystemClock_Config+0x160>
  {
    Error_Handler();
   18f20:	f000 fcf4 	bl	1990c <Error_Handler>
  }
  /** Enable USB Voltage detector 
  */
  HAL_PWREx_EnableUSBVoltageDetector();
   18f24:	f001 ff22 	bl	1ad6c <HAL_PWREx_EnableUSBVoltageDetector>
}
   18f28:	bf00      	nop
   18f2a:	f507 7798 	add.w	r7, r7, #304	; 0x130
   18f2e:	46bd      	mov	sp, r7
   18f30:	bd80      	pop	{r7, pc}
   18f32:	bf00      	nop
   18f34:	58000400 	.word	0x58000400
   18f38:	58024800 	.word	0x58024800
   18f3c:	00040003 	.word	0x00040003

00018f40 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
   18f40:	b580      	push	{r7, lr}
   18f42:	b096      	sub	sp, #88	; 0x58
   18f44:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
   18f46:	f107 034c 	add.w	r3, r7, #76	; 0x4c
   18f4a:	2200      	movs	r2, #0
   18f4c:	601a      	str	r2, [r3, #0]
   18f4e:	605a      	str	r2, [r3, #4]
   18f50:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
   18f52:	f107 0330 	add.w	r3, r7, #48	; 0x30
   18f56:	2200      	movs	r2, #0
   18f58:	601a      	str	r2, [r3, #0]
   18f5a:	605a      	str	r2, [r3, #4]
   18f5c:	609a      	str	r2, [r3, #8]
   18f5e:	60da      	str	r2, [r3, #12]
   18f60:	611a      	str	r2, [r3, #16]
   18f62:	615a      	str	r2, [r3, #20]
   18f64:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
   18f66:	1d3b      	adds	r3, r7, #4
   18f68:	222c      	movs	r2, #44	; 0x2c
   18f6a:	2100      	movs	r1, #0
   18f6c:	4618      	mov	r0, r3
   18f6e:	f009 fcab 	bl	228c8 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
   18f72:	4b3f      	ldr	r3, [pc, #252]	; (19070 <MX_TIM1_Init+0x130>)
   18f74:	4a3f      	ldr	r2, [pc, #252]	; (19074 <MX_TIM1_Init+0x134>)
   18f76:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 1080-1;
   18f78:	4b3d      	ldr	r3, [pc, #244]	; (19070 <MX_TIM1_Init+0x130>)
   18f7a:	f240 4237 	movw	r2, #1079	; 0x437
   18f7e:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
   18f80:	4b3b      	ldr	r3, [pc, #236]	; (19070 <MX_TIM1_Init+0x130>)
   18f82:	2200      	movs	r2, #0
   18f84:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 1024-1;
   18f86:	4b3a      	ldr	r3, [pc, #232]	; (19070 <MX_TIM1_Init+0x130>)
   18f88:	f240 32ff 	movw	r2, #1023	; 0x3ff
   18f8c:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
   18f8e:	4b38      	ldr	r3, [pc, #224]	; (19070 <MX_TIM1_Init+0x130>)
   18f90:	2200      	movs	r2, #0
   18f92:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
   18f94:	4b36      	ldr	r3, [pc, #216]	; (19070 <MX_TIM1_Init+0x130>)
   18f96:	2200      	movs	r2, #0
   18f98:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
   18f9a:	4b35      	ldr	r3, [pc, #212]	; (19070 <MX_TIM1_Init+0x130>)
   18f9c:	2200      	movs	r2, #0
   18f9e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
   18fa0:	4833      	ldr	r0, [pc, #204]	; (19070 <MX_TIM1_Init+0x130>)
   18fa2:	f004 f995 	bl	1d2d0 <HAL_TIM_PWM_Init>
   18fa6:	4603      	mov	r3, r0
   18fa8:	2b00      	cmp	r3, #0
   18faa:	d001      	beq.n	18fb0 <MX_TIM1_Init+0x70>
  {
    Error_Handler();
   18fac:	f000 fcae 	bl	1990c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
   18fb0:	2300      	movs	r3, #0
   18fb2:	64fb      	str	r3, [r7, #76]	; 0x4c
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
   18fb4:	2300      	movs	r3, #0
   18fb6:	653b      	str	r3, [r7, #80]	; 0x50
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
   18fb8:	2300      	movs	r3, #0
   18fba:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
   18fbc:	f107 034c 	add.w	r3, r7, #76	; 0x4c
   18fc0:	4619      	mov	r1, r3
   18fc2:	482b      	ldr	r0, [pc, #172]	; (19070 <MX_TIM1_Init+0x130>)
   18fc4:	f004 feae 	bl	1dd24 <HAL_TIMEx_MasterConfigSynchronization>
   18fc8:	4603      	mov	r3, r0
   18fca:	2b00      	cmp	r3, #0
   18fcc:	d001      	beq.n	18fd2 <MX_TIM1_Init+0x92>
  {
    Error_Handler();
   18fce:	f000 fc9d 	bl	1990c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
   18fd2:	2360      	movs	r3, #96	; 0x60
   18fd4:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.Pulse = 0;
   18fd6:	2300      	movs	r3, #0
   18fd8:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
   18fda:	2300      	movs	r3, #0
   18fdc:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
   18fde:	2300      	movs	r3, #0
   18fe0:	63fb      	str	r3, [r7, #60]	; 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
   18fe2:	2300      	movs	r3, #0
   18fe4:	643b      	str	r3, [r7, #64]	; 0x40
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
   18fe6:	2300      	movs	r3, #0
   18fe8:	647b      	str	r3, [r7, #68]	; 0x44
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
   18fea:	2300      	movs	r3, #0
   18fec:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
   18fee:	f107 0330 	add.w	r3, r7, #48	; 0x30
   18ff2:	2204      	movs	r2, #4
   18ff4:	4619      	mov	r1, r3
   18ff6:	481e      	ldr	r0, [pc, #120]	; (19070 <MX_TIM1_Init+0x130>)
   18ff8:	f004 f9ee 	bl	1d3d8 <HAL_TIM_PWM_ConfigChannel>
   18ffc:	4603      	mov	r3, r0
   18ffe:	2b00      	cmp	r3, #0
   19000:	d001      	beq.n	19006 <MX_TIM1_Init+0xc6>
  {
    Error_Handler();
   19002:	f000 fc83 	bl	1990c <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
   19006:	f107 0330 	add.w	r3, r7, #48	; 0x30
   1900a:	2208      	movs	r2, #8
   1900c:	4619      	mov	r1, r3
   1900e:	4818      	ldr	r0, [pc, #96]	; (19070 <MX_TIM1_Init+0x130>)
   19010:	f004 f9e2 	bl	1d3d8 <HAL_TIM_PWM_ConfigChannel>
   19014:	4603      	mov	r3, r0
   19016:	2b00      	cmp	r3, #0
   19018:	d001      	beq.n	1901e <MX_TIM1_Init+0xde>
  {
    Error_Handler();
   1901a:	f000 fc77 	bl	1990c <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
   1901e:	2300      	movs	r3, #0
   19020:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
   19022:	2300      	movs	r3, #0
   19024:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
   19026:	2300      	movs	r3, #0
   19028:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
   1902a:	2300      	movs	r3, #0
   1902c:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
   1902e:	2300      	movs	r3, #0
   19030:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
   19032:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   19036:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
   19038:	2300      	movs	r3, #0
   1903a:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
   1903c:	2300      	movs	r3, #0
   1903e:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
   19040:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   19044:	627b      	str	r3, [r7, #36]	; 0x24
  sBreakDeadTimeConfig.Break2Filter = 0;
   19046:	2300      	movs	r3, #0
   19048:	62bb      	str	r3, [r7, #40]	; 0x28
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
   1904a:	2300      	movs	r3, #0
   1904c:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
   1904e:	1d3b      	adds	r3, r7, #4
   19050:	4619      	mov	r1, r3
   19052:	4807      	ldr	r0, [pc, #28]	; (19070 <MX_TIM1_Init+0x130>)
   19054:	f004 feee 	bl	1de34 <HAL_TIMEx_ConfigBreakDeadTime>
   19058:	4603      	mov	r3, r0
   1905a:	2b00      	cmp	r3, #0
   1905c:	d001      	beq.n	19062 <MX_TIM1_Init+0x122>
  {
    Error_Handler();
   1905e:	f000 fc55 	bl	1990c <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
   19062:	4803      	ldr	r0, [pc, #12]	; (19070 <MX_TIM1_Init+0x130>)
   19064:	f000 fd60 	bl	19b28 <HAL_TIM_MspPostInit>

}
   19068:	bf00      	nop
   1906a:	3758      	adds	r7, #88	; 0x58
   1906c:	46bd      	mov	sp, r7
   1906e:	bd80      	pop	{r7, pc}
   19070:	000346f0 	.word	0x000346f0
   19074:	40010000 	.word	0x40010000

00019078 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
   19078:	b580      	push	{r7, lr}
   1907a:	b08a      	sub	sp, #40	; 0x28
   1907c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
   1907e:	f107 031c 	add.w	r3, r7, #28
   19082:	2200      	movs	r2, #0
   19084:	601a      	str	r2, [r3, #0]
   19086:	605a      	str	r2, [r3, #4]
   19088:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
   1908a:	463b      	mov	r3, r7
   1908c:	2200      	movs	r2, #0
   1908e:	601a      	str	r2, [r3, #0]
   19090:	605a      	str	r2, [r3, #4]
   19092:	609a      	str	r2, [r3, #8]
   19094:	60da      	str	r2, [r3, #12]
   19096:	611a      	str	r2, [r3, #16]
   19098:	615a      	str	r2, [r3, #20]
   1909a:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
   1909c:	4b22      	ldr	r3, [pc, #136]	; (19128 <MX_TIM2_Init+0xb0>)
   1909e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
   190a2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 1080-1;
   190a4:	4b20      	ldr	r3, [pc, #128]	; (19128 <MX_TIM2_Init+0xb0>)
   190a6:	f240 4237 	movw	r2, #1079	; 0x437
   190aa:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
   190ac:	4b1e      	ldr	r3, [pc, #120]	; (19128 <MX_TIM2_Init+0xb0>)
   190ae:	2200      	movs	r2, #0
   190b0:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 1024-1;
   190b2:	4b1d      	ldr	r3, [pc, #116]	; (19128 <MX_TIM2_Init+0xb0>)
   190b4:	f240 32ff 	movw	r2, #1023	; 0x3ff
   190b8:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
   190ba:	4b1b      	ldr	r3, [pc, #108]	; (19128 <MX_TIM2_Init+0xb0>)
   190bc:	2200      	movs	r2, #0
   190be:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
   190c0:	4b19      	ldr	r3, [pc, #100]	; (19128 <MX_TIM2_Init+0xb0>)
   190c2:	2200      	movs	r2, #0
   190c4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
   190c6:	4818      	ldr	r0, [pc, #96]	; (19128 <MX_TIM2_Init+0xb0>)
   190c8:	f004 f902 	bl	1d2d0 <HAL_TIM_PWM_Init>
   190cc:	4603      	mov	r3, r0
   190ce:	2b00      	cmp	r3, #0
   190d0:	d001      	beq.n	190d6 <MX_TIM2_Init+0x5e>
  {
    Error_Handler();
   190d2:	f000 fc1b 	bl	1990c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
   190d6:	2300      	movs	r3, #0
   190d8:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
   190da:	2300      	movs	r3, #0
   190dc:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
   190de:	f107 031c 	add.w	r3, r7, #28
   190e2:	4619      	mov	r1, r3
   190e4:	4810      	ldr	r0, [pc, #64]	; (19128 <MX_TIM2_Init+0xb0>)
   190e6:	f004 fe1d 	bl	1dd24 <HAL_TIMEx_MasterConfigSynchronization>
   190ea:	4603      	mov	r3, r0
   190ec:	2b00      	cmp	r3, #0
   190ee:	d001      	beq.n	190f4 <MX_TIM2_Init+0x7c>
  {
    Error_Handler();
   190f0:	f000 fc0c 	bl	1990c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
   190f4:	2360      	movs	r3, #96	; 0x60
   190f6:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
   190f8:	2300      	movs	r3, #0
   190fa:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
   190fc:	2300      	movs	r3, #0
   190fe:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
   19100:	2300      	movs	r3, #0
   19102:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
   19104:	463b      	mov	r3, r7
   19106:	2200      	movs	r2, #0
   19108:	4619      	mov	r1, r3
   1910a:	4807      	ldr	r0, [pc, #28]	; (19128 <MX_TIM2_Init+0xb0>)
   1910c:	f004 f964 	bl	1d3d8 <HAL_TIM_PWM_ConfigChannel>
   19110:	4603      	mov	r3, r0
   19112:	2b00      	cmp	r3, #0
   19114:	d001      	beq.n	1911a <MX_TIM2_Init+0xa2>
  {
    Error_Handler();
   19116:	f000 fbf9 	bl	1990c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
   1911a:	4803      	ldr	r0, [pc, #12]	; (19128 <MX_TIM2_Init+0xb0>)
   1911c:	f000 fd04 	bl	19b28 <HAL_TIM_MspPostInit>

}
   19120:	bf00      	nop
   19122:	3728      	adds	r7, #40	; 0x28
   19124:	46bd      	mov	sp, r7
   19126:	bd80      	pop	{r7, pc}
   19128:	00034768 	.word	0x00034768

0001912c <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
   1912c:	b580      	push	{r7, lr}
   1912e:	b08a      	sub	sp, #40	; 0x28
   19130:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
   19132:	f107 031c 	add.w	r3, r7, #28
   19136:	2200      	movs	r2, #0
   19138:	601a      	str	r2, [r3, #0]
   1913a:	605a      	str	r2, [r3, #4]
   1913c:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
   1913e:	463b      	mov	r3, r7
   19140:	2200      	movs	r2, #0
   19142:	601a      	str	r2, [r3, #0]
   19144:	605a      	str	r2, [r3, #4]
   19146:	609a      	str	r2, [r3, #8]
   19148:	60da      	str	r2, [r3, #12]
   1914a:	611a      	str	r2, [r3, #16]
   1914c:	615a      	str	r2, [r3, #20]
   1914e:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
   19150:	4b2d      	ldr	r3, [pc, #180]	; (19208 <MX_TIM3_Init+0xdc>)
   19152:	4a2e      	ldr	r2, [pc, #184]	; (1920c <MX_TIM3_Init+0xe0>)
   19154:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 1080-1;
   19156:	4b2c      	ldr	r3, [pc, #176]	; (19208 <MX_TIM3_Init+0xdc>)
   19158:	f240 4237 	movw	r2, #1079	; 0x437
   1915c:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
   1915e:	4b2a      	ldr	r3, [pc, #168]	; (19208 <MX_TIM3_Init+0xdc>)
   19160:	2200      	movs	r2, #0
   19162:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 1024-1;
   19164:	4b28      	ldr	r3, [pc, #160]	; (19208 <MX_TIM3_Init+0xdc>)
   19166:	f240 32ff 	movw	r2, #1023	; 0x3ff
   1916a:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
   1916c:	4b26      	ldr	r3, [pc, #152]	; (19208 <MX_TIM3_Init+0xdc>)
   1916e:	2200      	movs	r2, #0
   19170:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
   19172:	4b25      	ldr	r3, [pc, #148]	; (19208 <MX_TIM3_Init+0xdc>)
   19174:	2200      	movs	r2, #0
   19176:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
   19178:	4823      	ldr	r0, [pc, #140]	; (19208 <MX_TIM3_Init+0xdc>)
   1917a:	f004 f8a9 	bl	1d2d0 <HAL_TIM_PWM_Init>
   1917e:	4603      	mov	r3, r0
   19180:	2b00      	cmp	r3, #0
   19182:	d001      	beq.n	19188 <MX_TIM3_Init+0x5c>
  {
    Error_Handler();
   19184:	f000 fbc2 	bl	1990c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
   19188:	2300      	movs	r3, #0
   1918a:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
   1918c:	2300      	movs	r3, #0
   1918e:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
   19190:	f107 031c 	add.w	r3, r7, #28
   19194:	4619      	mov	r1, r3
   19196:	481c      	ldr	r0, [pc, #112]	; (19208 <MX_TIM3_Init+0xdc>)
   19198:	f004 fdc4 	bl	1dd24 <HAL_TIMEx_MasterConfigSynchronization>
   1919c:	4603      	mov	r3, r0
   1919e:	2b00      	cmp	r3, #0
   191a0:	d001      	beq.n	191a6 <MX_TIM3_Init+0x7a>
  {
    Error_Handler();
   191a2:	f000 fbb3 	bl	1990c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
   191a6:	2360      	movs	r3, #96	; 0x60
   191a8:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
   191aa:	2300      	movs	r3, #0
   191ac:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
   191ae:	2300      	movs	r3, #0
   191b0:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
   191b2:	2300      	movs	r3, #0
   191b4:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
   191b6:	463b      	mov	r3, r7
   191b8:	2200      	movs	r2, #0
   191ba:	4619      	mov	r1, r3
   191bc:	4812      	ldr	r0, [pc, #72]	; (19208 <MX_TIM3_Init+0xdc>)
   191be:	f004 f90b 	bl	1d3d8 <HAL_TIM_PWM_ConfigChannel>
   191c2:	4603      	mov	r3, r0
   191c4:	2b00      	cmp	r3, #0
   191c6:	d001      	beq.n	191cc <MX_TIM3_Init+0xa0>
  {
    Error_Handler();
   191c8:	f000 fba0 	bl	1990c <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
   191cc:	463b      	mov	r3, r7
   191ce:	2204      	movs	r2, #4
   191d0:	4619      	mov	r1, r3
   191d2:	480d      	ldr	r0, [pc, #52]	; (19208 <MX_TIM3_Init+0xdc>)
   191d4:	f004 f900 	bl	1d3d8 <HAL_TIM_PWM_ConfigChannel>
   191d8:	4603      	mov	r3, r0
   191da:	2b00      	cmp	r3, #0
   191dc:	d001      	beq.n	191e2 <MX_TIM3_Init+0xb6>
  {
    Error_Handler();
   191de:	f000 fb95 	bl	1990c <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
   191e2:	463b      	mov	r3, r7
   191e4:	220c      	movs	r2, #12
   191e6:	4619      	mov	r1, r3
   191e8:	4807      	ldr	r0, [pc, #28]	; (19208 <MX_TIM3_Init+0xdc>)
   191ea:	f004 f8f5 	bl	1d3d8 <HAL_TIM_PWM_ConfigChannel>
   191ee:	4603      	mov	r3, r0
   191f0:	2b00      	cmp	r3, #0
   191f2:	d001      	beq.n	191f8 <MX_TIM3_Init+0xcc>
  {
    Error_Handler();
   191f4:	f000 fb8a 	bl	1990c <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
   191f8:	4803      	ldr	r0, [pc, #12]	; (19208 <MX_TIM3_Init+0xdc>)
   191fa:	f000 fc95 	bl	19b28 <HAL_TIM_MspPostInit>

}
   191fe:	bf00      	nop
   19200:	3728      	adds	r7, #40	; 0x28
   19202:	46bd      	mov	sp, r7
   19204:	bd80      	pop	{r7, pc}
   19206:	bf00      	nop
   19208:	0003460c 	.word	0x0003460c
   1920c:	40000400 	.word	0x40000400

00019210 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
   19210:	b580      	push	{r7, lr}
   19212:	b08a      	sub	sp, #40	; 0x28
   19214:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
   19216:	f107 031c 	add.w	r3, r7, #28
   1921a:	2200      	movs	r2, #0
   1921c:	601a      	str	r2, [r3, #0]
   1921e:	605a      	str	r2, [r3, #4]
   19220:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
   19222:	463b      	mov	r3, r7
   19224:	2200      	movs	r2, #0
   19226:	601a      	str	r2, [r3, #0]
   19228:	605a      	str	r2, [r3, #4]
   1922a:	609a      	str	r2, [r3, #8]
   1922c:	60da      	str	r2, [r3, #12]
   1922e:	611a      	str	r2, [r3, #16]
   19230:	615a      	str	r2, [r3, #20]
   19232:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
   19234:	4b22      	ldr	r3, [pc, #136]	; (192c0 <MX_TIM5_Init+0xb0>)
   19236:	4a23      	ldr	r2, [pc, #140]	; (192c4 <MX_TIM5_Init+0xb4>)
   19238:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 1080-1;
   1923a:	4b21      	ldr	r3, [pc, #132]	; (192c0 <MX_TIM5_Init+0xb0>)
   1923c:	f240 4237 	movw	r2, #1079	; 0x437
   19240:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
   19242:	4b1f      	ldr	r3, [pc, #124]	; (192c0 <MX_TIM5_Init+0xb0>)
   19244:	2200      	movs	r2, #0
   19246:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 1024-1;
   19248:	4b1d      	ldr	r3, [pc, #116]	; (192c0 <MX_TIM5_Init+0xb0>)
   1924a:	f240 32ff 	movw	r2, #1023	; 0x3ff
   1924e:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
   19250:	4b1b      	ldr	r3, [pc, #108]	; (192c0 <MX_TIM5_Init+0xb0>)
   19252:	2200      	movs	r2, #0
   19254:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
   19256:	4b1a      	ldr	r3, [pc, #104]	; (192c0 <MX_TIM5_Init+0xb0>)
   19258:	2200      	movs	r2, #0
   1925a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
   1925c:	4818      	ldr	r0, [pc, #96]	; (192c0 <MX_TIM5_Init+0xb0>)
   1925e:	f004 f837 	bl	1d2d0 <HAL_TIM_PWM_Init>
   19262:	4603      	mov	r3, r0
   19264:	2b00      	cmp	r3, #0
   19266:	d001      	beq.n	1926c <MX_TIM5_Init+0x5c>
  {
    Error_Handler();
   19268:	f000 fb50 	bl	1990c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
   1926c:	2300      	movs	r3, #0
   1926e:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
   19270:	2300      	movs	r3, #0
   19272:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
   19274:	f107 031c 	add.w	r3, r7, #28
   19278:	4619      	mov	r1, r3
   1927a:	4811      	ldr	r0, [pc, #68]	; (192c0 <MX_TIM5_Init+0xb0>)
   1927c:	f004 fd52 	bl	1dd24 <HAL_TIMEx_MasterConfigSynchronization>
   19280:	4603      	mov	r3, r0
   19282:	2b00      	cmp	r3, #0
   19284:	d001      	beq.n	1928a <MX_TIM5_Init+0x7a>
  {
    Error_Handler();
   19286:	f000 fb41 	bl	1990c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
   1928a:	2360      	movs	r3, #96	; 0x60
   1928c:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
   1928e:	2300      	movs	r3, #0
   19290:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
   19292:	2300      	movs	r3, #0
   19294:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
   19296:	2300      	movs	r3, #0
   19298:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
   1929a:	463b      	mov	r3, r7
   1929c:	220c      	movs	r2, #12
   1929e:	4619      	mov	r1, r3
   192a0:	4807      	ldr	r0, [pc, #28]	; (192c0 <MX_TIM5_Init+0xb0>)
   192a2:	f004 f899 	bl	1d3d8 <HAL_TIM_PWM_ConfigChannel>
   192a6:	4603      	mov	r3, r0
   192a8:	2b00      	cmp	r3, #0
   192aa:	d001      	beq.n	192b0 <MX_TIM5_Init+0xa0>
  {
    Error_Handler();
   192ac:	f000 fb2e 	bl	1990c <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */
  HAL_TIM_MspPostInit(&htim5);
   192b0:	4803      	ldr	r0, [pc, #12]	; (192c0 <MX_TIM5_Init+0xb0>)
   192b2:	f000 fc39 	bl	19b28 <HAL_TIM_MspPostInit>

}
   192b6:	bf00      	nop
   192b8:	3728      	adds	r7, #40	; 0x28
   192ba:	46bd      	mov	sp, r7
   192bc:	bd80      	pop	{r7, pc}
   192be:	bf00      	nop
   192c0:	0003459c 	.word	0x0003459c
   192c4:	40000c00 	.word	0x40000c00

000192c8 <MX_TIM7_Init>:
  * @brief TIM7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM7_Init(void)
{
   192c8:	b580      	push	{r7, lr}
   192ca:	b084      	sub	sp, #16
   192cc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
   192ce:	1d3b      	adds	r3, r7, #4
   192d0:	2200      	movs	r2, #0
   192d2:	601a      	str	r2, [r3, #0]
   192d4:	605a      	str	r2, [r3, #4]
   192d6:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
   192d8:	4b19      	ldr	r3, [pc, #100]	; (19340 <MX_TIM7_Init+0x78>)
   192da:	4a1a      	ldr	r2, [pc, #104]	; (19344 <MX_TIM7_Init+0x7c>)
   192dc:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 1080-1;
   192de:	4b18      	ldr	r3, [pc, #96]	; (19340 <MX_TIM7_Init+0x78>)
   192e0:	f240 4237 	movw	r2, #1079	; 0x437
   192e4:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
   192e6:	4b16      	ldr	r3, [pc, #88]	; (19340 <MX_TIM7_Init+0x78>)
   192e8:	2200      	movs	r2, #0
   192ea:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 1000-1;
   192ec:	4b14      	ldr	r3, [pc, #80]	; (19340 <MX_TIM7_Init+0x78>)
   192ee:	f240 32e7 	movw	r2, #999	; 0x3e7
   192f2:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
   192f4:	4b12      	ldr	r3, [pc, #72]	; (19340 <MX_TIM7_Init+0x78>)
   192f6:	2280      	movs	r2, #128	; 0x80
   192f8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
   192fa:	4811      	ldr	r0, [pc, #68]	; (19340 <MX_TIM7_Init+0x78>)
   192fc:	f003 ff92 	bl	1d224 <HAL_TIM_Base_Init>
   19300:	4603      	mov	r3, r0
   19302:	2b00      	cmp	r3, #0
   19304:	d001      	beq.n	1930a <MX_TIM7_Init+0x42>
  {
    Error_Handler();
   19306:	f000 fb01 	bl	1990c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
   1930a:	2300      	movs	r3, #0
   1930c:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
   1930e:	2300      	movs	r3, #0
   19310:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
   19312:	1d3b      	adds	r3, r7, #4
   19314:	4619      	mov	r1, r3
   19316:	480a      	ldr	r0, [pc, #40]	; (19340 <MX_TIM7_Init+0x78>)
   19318:	f004 fd04 	bl	1dd24 <HAL_TIMEx_MasterConfigSynchronization>
   1931c:	4603      	mov	r3, r0
   1931e:	2b00      	cmp	r3, #0
   19320:	d001      	beq.n	19326 <MX_TIM7_Init+0x5e>
  {
    Error_Handler();
   19322:	f000 faf3 	bl	1990c <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */
  /*##-2- Start the TIM Base generation in interrupt mode ####################*/
  if (HAL_TIM_Base_Start_IT(&htim7) != HAL_OK)
   19326:	4806      	ldr	r0, [pc, #24]	; (19340 <MX_TIM7_Init+0x78>)
   19328:	f003 ffa8 	bl	1d27c <HAL_TIM_Base_Start_IT>
   1932c:	4603      	mov	r3, r0
   1932e:	2b00      	cmp	r3, #0
   19330:	d001      	beq.n	19336 <MX_TIM7_Init+0x6e>
  {
    /* Starting Error */
    Error_Handler();
   19332:	f000 faeb 	bl	1990c <Error_Handler>
  }
  /* USER CODE END TIM7_Init 2 */

}
   19336:	bf00      	nop
   19338:	3710      	adds	r7, #16
   1933a:	46bd      	mov	sp, r7
   1933c:	bd80      	pop	{r7, pc}
   1933e:	bf00      	nop
   19340:	000347a8 	.word	0x000347a8
   19344:	40001400 	.word	0x40001400

00019348 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
   19348:	b580      	push	{r7, lr}
   1934a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
   1934c:	4b22      	ldr	r3, [pc, #136]	; (193d8 <MX_USART1_UART_Init+0x90>)
   1934e:	4a23      	ldr	r2, [pc, #140]	; (193dc <MX_USART1_UART_Init+0x94>)
   19350:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
   19352:	4b21      	ldr	r3, [pc, #132]	; (193d8 <MX_USART1_UART_Init+0x90>)
   19354:	f44f 5216 	mov.w	r2, #9600	; 0x2580
   19358:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
   1935a:	4b1f      	ldr	r3, [pc, #124]	; (193d8 <MX_USART1_UART_Init+0x90>)
   1935c:	2200      	movs	r2, #0
   1935e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
   19360:	4b1d      	ldr	r3, [pc, #116]	; (193d8 <MX_USART1_UART_Init+0x90>)
   19362:	2200      	movs	r2, #0
   19364:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
   19366:	4b1c      	ldr	r3, [pc, #112]	; (193d8 <MX_USART1_UART_Init+0x90>)
   19368:	2200      	movs	r2, #0
   1936a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
   1936c:	4b1a      	ldr	r3, [pc, #104]	; (193d8 <MX_USART1_UART_Init+0x90>)
   1936e:	220c      	movs	r2, #12
   19370:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
   19372:	4b19      	ldr	r3, [pc, #100]	; (193d8 <MX_USART1_UART_Init+0x90>)
   19374:	2200      	movs	r2, #0
   19376:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
   19378:	4b17      	ldr	r3, [pc, #92]	; (193d8 <MX_USART1_UART_Init+0x90>)
   1937a:	2200      	movs	r2, #0
   1937c:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
   1937e:	4b16      	ldr	r3, [pc, #88]	; (193d8 <MX_USART1_UART_Init+0x90>)
   19380:	2200      	movs	r2, #0
   19382:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
   19384:	4b14      	ldr	r3, [pc, #80]	; (193d8 <MX_USART1_UART_Init+0x90>)
   19386:	2200      	movs	r2, #0
   19388:	625a      	str	r2, [r3, #36]	; 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
   1938a:	4b13      	ldr	r3, [pc, #76]	; (193d8 <MX_USART1_UART_Init+0x90>)
   1938c:	2200      	movs	r2, #0
   1938e:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
   19390:	4811      	ldr	r0, [pc, #68]	; (193d8 <MX_USART1_UART_Init+0x90>)
   19392:	f004 fdcd 	bl	1df30 <HAL_UART_Init>
   19396:	4603      	mov	r3, r0
   19398:	2b00      	cmp	r3, #0
   1939a:	d001      	beq.n	193a0 <MX_USART1_UART_Init+0x58>
  {
    Error_Handler();
   1939c:	f000 fab6 	bl	1990c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
   193a0:	2100      	movs	r1, #0
   193a2:	480d      	ldr	r0, [pc, #52]	; (193d8 <MX_USART1_UART_Init+0x90>)
   193a4:	f007 f935 	bl	20612 <HAL_UARTEx_SetTxFifoThreshold>
   193a8:	4603      	mov	r3, r0
   193aa:	2b00      	cmp	r3, #0
   193ac:	d001      	beq.n	193b2 <MX_USART1_UART_Init+0x6a>
  {
    Error_Handler();
   193ae:	f000 faad 	bl	1990c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
   193b2:	2100      	movs	r1, #0
   193b4:	4808      	ldr	r0, [pc, #32]	; (193d8 <MX_USART1_UART_Init+0x90>)
   193b6:	f007 f96a 	bl	2068e <HAL_UARTEx_SetRxFifoThreshold>
   193ba:	4603      	mov	r3, r0
   193bc:	2b00      	cmp	r3, #0
   193be:	d001      	beq.n	193c4 <MX_USART1_UART_Init+0x7c>
  {
    Error_Handler();
   193c0:	f000 faa4 	bl	1990c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
   193c4:	4804      	ldr	r0, [pc, #16]	; (193d8 <MX_USART1_UART_Init+0x90>)
   193c6:	f007 f8eb 	bl	205a0 <HAL_UARTEx_DisableFifoMode>
   193ca:	4603      	mov	r3, r0
   193cc:	2b00      	cmp	r3, #0
   193ce:	d001      	beq.n	193d4 <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
   193d0:	f000 fa9c 	bl	1990c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
   193d4:	bf00      	nop
   193d6:	bd80      	pop	{r7, pc}
   193d8:	00034664 	.word	0x00034664
   193dc:	40011000 	.word	0x40011000

000193e0 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
   193e0:	b580      	push	{r7, lr}
   193e2:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
   193e4:	4b22      	ldr	r3, [pc, #136]	; (19470 <MX_USART3_UART_Init+0x90>)
   193e6:	4a23      	ldr	r2, [pc, #140]	; (19474 <MX_USART3_UART_Init+0x94>)
   193e8:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 9600;
   193ea:	4b21      	ldr	r3, [pc, #132]	; (19470 <MX_USART3_UART_Init+0x90>)
   193ec:	f44f 5216 	mov.w	r2, #9600	; 0x2580
   193f0:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
   193f2:	4b1f      	ldr	r3, [pc, #124]	; (19470 <MX_USART3_UART_Init+0x90>)
   193f4:	2200      	movs	r2, #0
   193f6:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
   193f8:	4b1d      	ldr	r3, [pc, #116]	; (19470 <MX_USART3_UART_Init+0x90>)
   193fa:	2200      	movs	r2, #0
   193fc:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
   193fe:	4b1c      	ldr	r3, [pc, #112]	; (19470 <MX_USART3_UART_Init+0x90>)
   19400:	2200      	movs	r2, #0
   19402:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
   19404:	4b1a      	ldr	r3, [pc, #104]	; (19470 <MX_USART3_UART_Init+0x90>)
   19406:	220c      	movs	r2, #12
   19408:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
   1940a:	4b19      	ldr	r3, [pc, #100]	; (19470 <MX_USART3_UART_Init+0x90>)
   1940c:	2200      	movs	r2, #0
   1940e:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
   19410:	4b17      	ldr	r3, [pc, #92]	; (19470 <MX_USART3_UART_Init+0x90>)
   19412:	2200      	movs	r2, #0
   19414:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
   19416:	4b16      	ldr	r3, [pc, #88]	; (19470 <MX_USART3_UART_Init+0x90>)
   19418:	2200      	movs	r2, #0
   1941a:	621a      	str	r2, [r3, #32]
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
   1941c:	4b14      	ldr	r3, [pc, #80]	; (19470 <MX_USART3_UART_Init+0x90>)
   1941e:	2200      	movs	r2, #0
   19420:	625a      	str	r2, [r3, #36]	; 0x24
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
   19422:	4b13      	ldr	r3, [pc, #76]	; (19470 <MX_USART3_UART_Init+0x90>)
   19424:	2200      	movs	r2, #0
   19426:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart3) != HAL_OK)
   19428:	4811      	ldr	r0, [pc, #68]	; (19470 <MX_USART3_UART_Init+0x90>)
   1942a:	f004 fd81 	bl	1df30 <HAL_UART_Init>
   1942e:	4603      	mov	r3, r0
   19430:	2b00      	cmp	r3, #0
   19432:	d001      	beq.n	19438 <MX_USART3_UART_Init+0x58>
  {
    Error_Handler();
   19434:	f000 fa6a 	bl	1990c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
   19438:	2100      	movs	r1, #0
   1943a:	480d      	ldr	r0, [pc, #52]	; (19470 <MX_USART3_UART_Init+0x90>)
   1943c:	f007 f8e9 	bl	20612 <HAL_UARTEx_SetTxFifoThreshold>
   19440:	4603      	mov	r3, r0
   19442:	2b00      	cmp	r3, #0
   19444:	d001      	beq.n	1944a <MX_USART3_UART_Init+0x6a>
  {
    Error_Handler();
   19446:	f000 fa61 	bl	1990c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
   1944a:	2100      	movs	r1, #0
   1944c:	4808      	ldr	r0, [pc, #32]	; (19470 <MX_USART3_UART_Init+0x90>)
   1944e:	f007 f91e 	bl	2068e <HAL_UARTEx_SetRxFifoThreshold>
   19452:	4603      	mov	r3, r0
   19454:	2b00      	cmp	r3, #0
   19456:	d001      	beq.n	1945c <MX_USART3_UART_Init+0x7c>
  {
    Error_Handler();
   19458:	f000 fa58 	bl	1990c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
   1945c:	4804      	ldr	r0, [pc, #16]	; (19470 <MX_USART3_UART_Init+0x90>)
   1945e:	f007 f89f 	bl	205a0 <HAL_UARTEx_DisableFifoMode>
   19462:	4603      	mov	r3, r0
   19464:	2b00      	cmp	r3, #0
   19466:	d001      	beq.n	1946c <MX_USART3_UART_Init+0x8c>
  {
    Error_Handler();
   19468:	f000 fa50 	bl	1990c <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
   1946c:	bf00      	nop
   1946e:	bd80      	pop	{r7, pc}
   19470:	00034480 	.word	0x00034480
   19474:	40004800 	.word	0x40004800

00019478 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
   19478:	b580      	push	{r7, lr}
   1947a:	b08e      	sub	sp, #56	; 0x38
   1947c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
   1947e:	f107 0324 	add.w	r3, r7, #36	; 0x24
   19482:	2200      	movs	r2, #0
   19484:	601a      	str	r2, [r3, #0]
   19486:	605a      	str	r2, [r3, #4]
   19488:	609a      	str	r2, [r3, #8]
   1948a:	60da      	str	r2, [r3, #12]
   1948c:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
   1948e:	4bbe      	ldr	r3, [pc, #760]	; (19788 <MX_GPIO_Init+0x310>)
   19490:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19494:	4abc      	ldr	r2, [pc, #752]	; (19788 <MX_GPIO_Init+0x310>)
   19496:	f043 0310 	orr.w	r3, r3, #16
   1949a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   1949e:	4bba      	ldr	r3, [pc, #744]	; (19788 <MX_GPIO_Init+0x310>)
   194a0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   194a4:	f003 0310 	and.w	r3, r3, #16
   194a8:	623b      	str	r3, [r7, #32]
   194aa:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
   194ac:	4bb6      	ldr	r3, [pc, #728]	; (19788 <MX_GPIO_Init+0x310>)
   194ae:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   194b2:	4ab5      	ldr	r2, [pc, #724]	; (19788 <MX_GPIO_Init+0x310>)
   194b4:	f043 0304 	orr.w	r3, r3, #4
   194b8:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   194bc:	4bb2      	ldr	r3, [pc, #712]	; (19788 <MX_GPIO_Init+0x310>)
   194be:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   194c2:	f003 0304 	and.w	r3, r3, #4
   194c6:	61fb      	str	r3, [r7, #28]
   194c8:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
   194ca:	4baf      	ldr	r3, [pc, #700]	; (19788 <MX_GPIO_Init+0x310>)
   194cc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   194d0:	4aad      	ldr	r2, [pc, #692]	; (19788 <MX_GPIO_Init+0x310>)
   194d2:	f043 0320 	orr.w	r3, r3, #32
   194d6:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   194da:	4bab      	ldr	r3, [pc, #684]	; (19788 <MX_GPIO_Init+0x310>)
   194dc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   194e0:	f003 0320 	and.w	r3, r3, #32
   194e4:	61bb      	str	r3, [r7, #24]
   194e6:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
   194e8:	4ba7      	ldr	r3, [pc, #668]	; (19788 <MX_GPIO_Init+0x310>)
   194ea:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   194ee:	4aa6      	ldr	r2, [pc, #664]	; (19788 <MX_GPIO_Init+0x310>)
   194f0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   194f4:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   194f8:	4ba3      	ldr	r3, [pc, #652]	; (19788 <MX_GPIO_Init+0x310>)
   194fa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   194fe:	f003 0380 	and.w	r3, r3, #128	; 0x80
   19502:	617b      	str	r3, [r7, #20]
   19504:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
   19506:	4ba0      	ldr	r3, [pc, #640]	; (19788 <MX_GPIO_Init+0x310>)
   19508:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   1950c:	4a9e      	ldr	r2, [pc, #632]	; (19788 <MX_GPIO_Init+0x310>)
   1950e:	f043 0301 	orr.w	r3, r3, #1
   19512:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   19516:	4b9c      	ldr	r3, [pc, #624]	; (19788 <MX_GPIO_Init+0x310>)
   19518:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   1951c:	f003 0301 	and.w	r3, r3, #1
   19520:	613b      	str	r3, [r7, #16]
   19522:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
   19524:	4b98      	ldr	r3, [pc, #608]	; (19788 <MX_GPIO_Init+0x310>)
   19526:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   1952a:	4a97      	ldr	r2, [pc, #604]	; (19788 <MX_GPIO_Init+0x310>)
   1952c:	f043 0302 	orr.w	r3, r3, #2
   19530:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   19534:	4b94      	ldr	r3, [pc, #592]	; (19788 <MX_GPIO_Init+0x310>)
   19536:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   1953a:	f003 0302 	and.w	r3, r3, #2
   1953e:	60fb      	str	r3, [r7, #12]
   19540:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
   19542:	4b91      	ldr	r3, [pc, #580]	; (19788 <MX_GPIO_Init+0x310>)
   19544:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19548:	4a8f      	ldr	r2, [pc, #572]	; (19788 <MX_GPIO_Init+0x310>)
   1954a:	f043 0308 	orr.w	r3, r3, #8
   1954e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   19552:	4b8d      	ldr	r3, [pc, #564]	; (19788 <MX_GPIO_Init+0x310>)
   19554:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19558:	f003 0308 	and.w	r3, r3, #8
   1955c:	60bb      	str	r3, [r7, #8]
   1955e:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
   19560:	4b89      	ldr	r3, [pc, #548]	; (19788 <MX_GPIO_Init+0x310>)
   19562:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19566:	4a88      	ldr	r2, [pc, #544]	; (19788 <MX_GPIO_Init+0x310>)
   19568:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1956c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   19570:	4b85      	ldr	r3, [pc, #532]	; (19788 <MX_GPIO_Init+0x310>)
   19572:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19576:	f003 0340 	and.w	r3, r3, #64	; 0x40
   1957a:	607b      	str	r3, [r7, #4]
   1957c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_11|GPIO_PIN_15, GPIO_PIN_RESET);
   1957e:	2200      	movs	r2, #0
   19580:	f44f 4108 	mov.w	r1, #34816	; 0x8800
   19584:	4881      	ldr	r0, [pc, #516]	; (1978c <MX_GPIO_Init+0x314>)
   19586:	f001 f807 	bl	1a598 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10|GPIO_PIN_12|GPIO_PIN_0, GPIO_PIN_RESET);
   1958a:	2200      	movs	r2, #0
   1958c:	f241 4101 	movw	r1, #5121	; 0x1401
   19590:	487f      	ldr	r0, [pc, #508]	; (19790 <MX_GPIO_Init+0x318>)
   19592:	f001 f801 	bl	1a598 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
   19596:	2200      	movs	r2, #0
   19598:	f44f 4181 	mov.w	r1, #16512	; 0x4080
   1959c:	487d      	ldr	r0, [pc, #500]	; (19794 <MX_GPIO_Init+0x31c>)
   1959e:	f000 fffb 	bl	1a598 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
   195a2:	2200      	movs	r2, #0
   195a4:	f44f 5170 	mov.w	r1, #15360	; 0x3c00
   195a8:	487b      	ldr	r0, [pc, #492]	; (19798 <MX_GPIO_Init+0x320>)
   195aa:	f000 fff5 	bl	1a598 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_4|GPIO_PIN_5|USB_PowerSwitchOn_Pin|GPIO_PIN_8, GPIO_PIN_RESET);
   195ae:	2200      	movs	r2, #0
   195b0:	f44f 71b8 	mov.w	r1, #368	; 0x170
   195b4:	4879      	ldr	r0, [pc, #484]	; (1979c <MX_GPIO_Init+0x324>)
   195b6:	f000 ffef 	bl	1a598 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PE2 PE4 */
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_4;
   195ba:	2314      	movs	r3, #20
   195bc:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   195be:	2300      	movs	r3, #0
   195c0:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
   195c2:	2300      	movs	r3, #0
   195c4:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
   195c6:	f107 0324 	add.w	r3, r7, #36	; 0x24
   195ca:	4619      	mov	r1, r3
   195cc:	4870      	ldr	r0, [pc, #448]	; (19790 <MX_GPIO_Init+0x318>)
   195ce:	f000 fe1b 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pin : PE3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
   195d2:	2308      	movs	r3, #8
   195d4:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
   195d6:	4b72      	ldr	r3, [pc, #456]	; (197a0 <MX_GPIO_Init+0x328>)
   195d8:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
   195da:	2301      	movs	r3, #1
   195dc:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
   195de:	f107 0324 	add.w	r3, r7, #36	; 0x24
   195e2:	4619      	mov	r1, r3
   195e4:	486a      	ldr	r0, [pc, #424]	; (19790 <MX_GPIO_Init+0x318>)
   195e6:	f000 fe0f 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pin : PE5 */
  GPIO_InitStruct.Pin = GPIO_PIN_5;
   195ea:	2320      	movs	r3, #32
   195ec:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
   195ee:	4b6d      	ldr	r3, [pc, #436]	; (197a4 <MX_GPIO_Init+0x32c>)
   195f0:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
   195f2:	2302      	movs	r3, #2
   195f4:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
   195f6:	f107 0324 	add.w	r3, r7, #36	; 0x24
   195fa:	4619      	mov	r1, r3
   195fc:	4864      	ldr	r0, [pc, #400]	; (19790 <MX_GPIO_Init+0x318>)
   195fe:	f000 fe03 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
   19602:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   19606:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   19608:	2300      	movs	r3, #0
   1960a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
   1960c:	2302      	movs	r3, #2
   1960e:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   19610:	f107 0324 	add.w	r3, r7, #36	; 0x24
   19614:	4619      	mov	r1, r3
   19616:	4864      	ldr	r0, [pc, #400]	; (197a8 <MX_GPIO_Init+0x330>)
   19618:	f000 fdf6 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pins : PF6 PF8 PF9 PF10 */
  GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10;
   1961c:	f44f 63e8 	mov.w	r3, #1856	; 0x740
   19620:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
   19622:	4b60      	ldr	r3, [pc, #384]	; (197a4 <MX_GPIO_Init+0x32c>)
   19624:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
   19626:	2302      	movs	r3, #2
   19628:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
   1962a:	f107 0324 	add.w	r3, r7, #36	; 0x24
   1962e:	4619      	mov	r1, r3
   19630:	4856      	ldr	r0, [pc, #344]	; (1978c <MX_GPIO_Init+0x314>)
   19632:	f000 fde9 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pin : PF7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
   19636:	2380      	movs	r3, #128	; 0x80
   19638:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   1963a:	2300      	movs	r3, #0
   1963c:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
   1963e:	2300      	movs	r3, #0
   19640:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
   19642:	f107 0324 	add.w	r3, r7, #36	; 0x24
   19646:	4619      	mov	r1, r3
   19648:	4850      	ldr	r0, [pc, #320]	; (1978c <MX_GPIO_Init+0x314>)
   1964a:	f000 fddd 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pins : PC1 PC7 PC10 */
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_7|GPIO_PIN_10;
   1964e:	f240 4382 	movw	r3, #1154	; 0x482
   19652:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   19654:	2300      	movs	r3, #0
   19656:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
   19658:	2301      	movs	r3, #1
   1965a:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   1965c:	f107 0324 	add.w	r3, r7, #36	; 0x24
   19660:	4619      	mov	r1, r3
   19662:	4851      	ldr	r0, [pc, #324]	; (197a8 <MX_GPIO_Init+0x330>)
   19664:	f000 fdd0 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA0 PA1 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
   19668:	2303      	movs	r3, #3
   1966a:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
   1966c:	4b4c      	ldr	r3, [pc, #304]	; (197a0 <MX_GPIO_Init+0x328>)
   1966e:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
   19670:	2301      	movs	r3, #1
   19672:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   19674:	f107 0324 	add.w	r3, r7, #36	; 0x24
   19678:	4619      	mov	r1, r3
   1967a:	484c      	ldr	r0, [pc, #304]	; (197ac <MX_GPIO_Init+0x334>)
   1967c:	f000 fdc4 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pin : RMII_MDIO_Pin */
  GPIO_InitStruct.Pin = RMII_MDIO_Pin;
   19680:	2304      	movs	r3, #4
   19682:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   19684:	2302      	movs	r3, #2
   19686:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
   19688:	2300      	movs	r3, #0
   1968a:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   1968c:	2300      	movs	r3, #0
   1968e:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
   19690:	230b      	movs	r3, #11
   19692:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(RMII_MDIO_GPIO_Port, &GPIO_InitStruct);
   19694:	f107 0324 	add.w	r3, r7, #36	; 0x24
   19698:	4619      	mov	r1, r3
   1969a:	4844      	ldr	r0, [pc, #272]	; (197ac <MX_GPIO_Init+0x334>)
   1969c:	f000 fdb4 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pins : RMII_RXD0_Pin RMII_RXD1_Pin */
  GPIO_InitStruct.Pin = RMII_RXD0_Pin|RMII_RXD1_Pin;
   196a0:	2330      	movs	r3, #48	; 0x30
   196a2:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   196a4:	2302      	movs	r3, #2
   196a6:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
   196a8:	2300      	movs	r3, #0
   196aa:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   196ac:	2300      	movs	r3, #0
   196ae:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
   196b0:	230b      	movs	r3, #11
   196b2:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   196b4:	f107 0324 	add.w	r3, r7, #36	; 0x24
   196b8:	4619      	mov	r1, r3
   196ba:	483b      	ldr	r0, [pc, #236]	; (197a8 <MX_GPIO_Init+0x330>)
   196bc:	f000 fda4 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
   196c0:	2304      	movs	r3, #4
   196c2:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
   196c4:	4b36      	ldr	r3, [pc, #216]	; (197a0 <MX_GPIO_Init+0x328>)
   196c6:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
   196c8:	2301      	movs	r3, #1
   196ca:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   196cc:	f107 0324 	add.w	r3, r7, #36	; 0x24
   196d0:	4619      	mov	r1, r3
   196d2:	4830      	ldr	r0, [pc, #192]	; (19794 <MX_GPIO_Init+0x31c>)
   196d4:	f000 fd98 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pin : PF11 */
  GPIO_InitStruct.Pin = GPIO_PIN_11;
   196d8:	f44f 6300 	mov.w	r3, #2048	; 0x800
   196dc:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   196de:	2301      	movs	r3, #1
   196e0:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
   196e2:	2302      	movs	r3, #2
   196e4:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   196e6:	2300      	movs	r3, #0
   196e8:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
   196ea:	f107 0324 	add.w	r3, r7, #36	; 0x24
   196ee:	4619      	mov	r1, r3
   196f0:	4826      	ldr	r0, [pc, #152]	; (1978c <MX_GPIO_Init+0x314>)
   196f2:	f000 fd89 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pin : PF15 */
  GPIO_InitStruct.Pin = GPIO_PIN_15;
   196f6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   196fa:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   196fc:	2301      	movs	r3, #1
   196fe:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
   19700:	2300      	movs	r3, #0
   19702:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   19704:	2300      	movs	r3, #0
   19706:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
   19708:	f107 0324 	add.w	r3, r7, #36	; 0x24
   1970c:	4619      	mov	r1, r3
   1970e:	481f      	ldr	r0, [pc, #124]	; (1978c <MX_GPIO_Init+0x314>)
   19710:	f000 fd7a 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pins : PE10 PE12 PE0 */
  GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12|GPIO_PIN_0;
   19714:	f241 4301 	movw	r3, #5121	; 0x1401
   19718:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   1971a:	2301      	movs	r3, #1
   1971c:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
   1971e:	2302      	movs	r3, #2
   19720:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   19722:	2300      	movs	r3, #0
   19724:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
   19726:	f107 0324 	add.w	r3, r7, #36	; 0x24
   1972a:	4619      	mov	r1, r3
   1972c:	4818      	ldr	r0, [pc, #96]	; (19790 <MX_GPIO_Init+0x318>)
   1972e:	f000 fd6b 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pin : RMII_TXD1_Pin */
  GPIO_InitStruct.Pin = RMII_TXD1_Pin;
   19732:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   19736:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   19738:	2302      	movs	r3, #2
   1973a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
   1973c:	2300      	movs	r3, #0
   1973e:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   19740:	2300      	movs	r3, #0
   19742:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
   19744:	230b      	movs	r3, #11
   19746:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(RMII_TXD1_GPIO_Port, &GPIO_InitStruct);
   19748:	f107 0324 	add.w	r3, r7, #36	; 0x24
   1974c:	4619      	mov	r1, r3
   1974e:	4811      	ldr	r0, [pc, #68]	; (19794 <MX_GPIO_Init+0x31c>)
   19750:	f000 fd5a 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD3_Pin LD2_Pin */
  GPIO_InitStruct.Pin = LD3_Pin|LD2_Pin;
   19754:	f44f 4381 	mov.w	r3, #16512	; 0x4080
   19758:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   1975a:	2301      	movs	r3, #1
   1975c:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
   1975e:	2300      	movs	r3, #0
   19760:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   19762:	2300      	movs	r3, #0
   19764:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   19766:	f107 0324 	add.w	r3, r7, #36	; 0x24
   1976a:	4619      	mov	r1, r3
   1976c:	4809      	ldr	r0, [pc, #36]	; (19794 <MX_GPIO_Init+0x31c>)
   1976e:	f000 fd4b 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pins : PD10 PD11 PD12 PD13 */
  GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13;
   19772:	f44f 5370 	mov.w	r3, #15360	; 0x3c00
   19776:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   19778:	2301      	movs	r3, #1
   1977a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
   1977c:	2302      	movs	r3, #2
   1977e:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   19780:	2300      	movs	r3, #0
   19782:	633b      	str	r3, [r7, #48]	; 0x30
   19784:	e014      	b.n	197b0 <MX_GPIO_Init+0x338>
   19786:	bf00      	nop
   19788:	58024400 	.word	0x58024400
   1978c:	58021400 	.word	0x58021400
   19790:	58021000 	.word	0x58021000
   19794:	58020400 	.word	0x58020400
   19798:	58020c00 	.word	0x58020c00
   1979c:	58021800 	.word	0x58021800
   197a0:	11310000 	.word	0x11310000
   197a4:	11110000 	.word	0x11110000
   197a8:	58020800 	.word	0x58020800
   197ac:	58020000 	.word	0x58020000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
   197b0:	f107 0324 	add.w	r3, r7, #36	; 0x24
   197b4:	4619      	mov	r1, r3
   197b6:	4851      	ldr	r0, [pc, #324]	; (198fc <MX_GPIO_Init+0x484>)
   197b8:	f000 fd26 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pins : PG4 PG5 PG8 */
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_8;
   197bc:	f44f 7398 	mov.w	r3, #304	; 0x130
   197c0:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   197c2:	2301      	movs	r3, #1
   197c4:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
   197c6:	2302      	movs	r3, #2
   197c8:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   197ca:	2300      	movs	r3, #0
   197cc:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
   197ce:	f107 0324 	add.w	r3, r7, #36	; 0x24
   197d2:	4619      	mov	r1, r3
   197d4:	484a      	ldr	r0, [pc, #296]	; (19900 <MX_GPIO_Init+0x488>)
   197d6:	f000 fd17 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
  GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
   197da:	2340      	movs	r3, #64	; 0x40
   197dc:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   197de:	2301      	movs	r3, #1
   197e0:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
   197e2:	2300      	movs	r3, #0
   197e4:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   197e6:	2300      	movs	r3, #0
   197e8:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
   197ea:	f107 0324 	add.w	r3, r7, #36	; 0x24
   197ee:	4619      	mov	r1, r3
   197f0:	4843      	ldr	r0, [pc, #268]	; (19900 <MX_GPIO_Init+0x488>)
   197f2:	f000 fd09 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pin : USB_OverCurrent_Pin */
  GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
   197f6:	2380      	movs	r3, #128	; 0x80
   197f8:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   197fa:	2300      	movs	r3, #0
   197fc:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
   197fe:	2301      	movs	r3, #1
   19800:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
   19802:	f107 0324 	add.w	r3, r7, #36	; 0x24
   19806:	4619      	mov	r1, r3
   19808:	483d      	ldr	r0, [pc, #244]	; (19900 <MX_GPIO_Init+0x488>)
   1980a:	f000 fcfd 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pin : PC11 */
  GPIO_InitStruct.Pin = GPIO_PIN_11;
   1980e:	f44f 6300 	mov.w	r3, #2048	; 0x800
   19812:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   19814:	2300      	movs	r3, #0
   19816:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
   19818:	2300      	movs	r3, #0
   1981a:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   1981c:	f107 0324 	add.w	r3, r7, #36	; 0x24
   19820:	4619      	mov	r1, r3
   19822:	4838      	ldr	r0, [pc, #224]	; (19904 <MX_GPIO_Init+0x48c>)
   19824:	f000 fcf0 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pin : PD3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
   19828:	2308      	movs	r3, #8
   1982a:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   1982c:	2300      	movs	r3, #0
   1982e:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
   19830:	2300      	movs	r3, #0
   19832:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
   19834:	f107 0324 	add.w	r3, r7, #36	; 0x24
   19838:	4619      	mov	r1, r3
   1983a:	4830      	ldr	r0, [pc, #192]	; (198fc <MX_GPIO_Init+0x484>)
   1983c:	f000 fce4 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pins : PD4 PD7 */
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_7;
   19840:	2390      	movs	r3, #144	; 0x90
   19842:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
   19844:	4b30      	ldr	r3, [pc, #192]	; (19908 <MX_GPIO_Init+0x490>)
   19846:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
   19848:	2301      	movs	r3, #1
   1984a:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
   1984c:	f107 0324 	add.w	r3, r7, #36	; 0x24
   19850:	4619      	mov	r1, r3
   19852:	482a      	ldr	r0, [pc, #168]	; (198fc <MX_GPIO_Init+0x484>)
   19854:	f000 fcd8 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pin : PD5 */
  GPIO_InitStruct.Pin = GPIO_PIN_5;
   19858:	2320      	movs	r3, #32
   1985a:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   1985c:	2300      	movs	r3, #0
   1985e:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
   19860:	2301      	movs	r3, #1
   19862:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
   19864:	f107 0324 	add.w	r3, r7, #36	; 0x24
   19868:	4619      	mov	r1, r3
   1986a:	4824      	ldr	r0, [pc, #144]	; (198fc <MX_GPIO_Init+0x484>)
   1986c:	f000 fccc 	bl	1a208 <HAL_GPIO_Init>

  /*Configure GPIO pins : RMII_TX_EN_Pin RMII_TXD0_Pin */
  GPIO_InitStruct.Pin = RMII_TX_EN_Pin|RMII_TXD0_Pin;
   19870:	f44f 5320 	mov.w	r3, #10240	; 0x2800
   19874:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   19876:	2302      	movs	r3, #2
   19878:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
   1987a:	2300      	movs	r3, #0
   1987c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   1987e:	2300      	movs	r3, #0
   19880:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
   19882:	230b      	movs	r3, #11
   19884:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
   19886:	f107 0324 	add.w	r3, r7, #36	; 0x24
   1988a:	4619      	mov	r1, r3
   1988c:	481c      	ldr	r0, [pc, #112]	; (19900 <MX_GPIO_Init+0x488>)
   1988e:	f000 fcbb 	bl	1a208 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
   19892:	2200      	movs	r2, #0
   19894:	2100      	movs	r1, #0
   19896:	2006      	movs	r0, #6
   19898:	f000 fc81 	bl	1a19e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
   1989c:	2006      	movs	r0, #6
   1989e:	f000 fc98 	bl	1a1d2 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
   198a2:	2200      	movs	r2, #0
   198a4:	2100      	movs	r1, #0
   198a6:	2007      	movs	r0, #7
   198a8:	f000 fc79 	bl	1a19e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI1_IRQn);
   198ac:	2007      	movs	r0, #7
   198ae:	f000 fc90 	bl	1a1d2 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
   198b2:	2200      	movs	r2, #0
   198b4:	2100      	movs	r1, #0
   198b6:	2008      	movs	r0, #8
   198b8:	f000 fc71 	bl	1a19e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI2_IRQn);
   198bc:	2008      	movs	r0, #8
   198be:	f000 fc88 	bl	1a1d2 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI3_IRQn, 0, 0);
   198c2:	2200      	movs	r2, #0
   198c4:	2100      	movs	r1, #0
   198c6:	2009      	movs	r0, #9
   198c8:	f000 fc69 	bl	1a19e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
   198cc:	2009      	movs	r0, #9
   198ce:	f000 fc80 	bl	1a1d2 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI4_IRQn, 0, 0);
   198d2:	2200      	movs	r2, #0
   198d4:	2100      	movs	r1, #0
   198d6:	200a      	movs	r0, #10
   198d8:	f000 fc61 	bl	1a19e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
   198dc:	200a      	movs	r0, #10
   198de:	f000 fc78 	bl	1a1d2 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
   198e2:	2200      	movs	r2, #0
   198e4:	2100      	movs	r1, #0
   198e6:	2017      	movs	r0, #23
   198e8:	f000 fc59 	bl	1a19e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
   198ec:	2017      	movs	r0, #23
   198ee:	f000 fc70 	bl	1a1d2 <HAL_NVIC_EnableIRQ>

}
   198f2:	bf00      	nop
   198f4:	3738      	adds	r7, #56	; 0x38
   198f6:	46bd      	mov	sp, r7
   198f8:	bd80      	pop	{r7, pc}
   198fa:	bf00      	nop
   198fc:	58020c00 	.word	0x58020c00
   19900:	58021800 	.word	0x58021800
   19904:	58020800 	.word	0x58020800
   19908:	11310000 	.word	0x11310000

0001990c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
   1990c:	b480      	push	{r7}
   1990e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
   19910:	bf00      	nop
   19912:	46bd      	mov	sp, r7
   19914:	f85d 7b04 	ldr.w	r7, [sp], #4
   19918:	4770      	bx	lr
	...

0001991c <rt_InitInfAndNaN>:
#pragma warning(disable: 4756 56)

#endif

void rt_InitInfAndNaN()
{
   1991c:	b490      	push	{r4, r7}
   1991e:	af00      	add	r7, sp, #0
  rtNaN = nan("");
   19920:	4a0f      	ldr	r2, [pc, #60]	; (19960 <rt_InitInfAndNaN+0x44>)
   19922:	f04f 0300 	mov.w	r3, #0
   19926:	4c0f      	ldr	r4, [pc, #60]	; (19964 <rt_InitInfAndNaN+0x48>)
   19928:	e9c2 3400 	strd	r3, r4, [r2]
  rtNaNF = nanf("");
   1992c:	4b0e      	ldr	r3, [pc, #56]	; (19968 <rt_InitInfAndNaN+0x4c>)
   1992e:	4a0f      	ldr	r2, [pc, #60]	; (1996c <rt_InitInfAndNaN+0x50>)
   19930:	601a      	str	r2, [r3, #0]
  rtInf = (real_T)INFINITY;
   19932:	4a0f      	ldr	r2, [pc, #60]	; (19970 <rt_InitInfAndNaN+0x54>)
   19934:	f04f 0300 	mov.w	r3, #0
   19938:	4c0e      	ldr	r4, [pc, #56]	; (19974 <rt_InitInfAndNaN+0x58>)
   1993a:	e9c2 3400 	strd	r3, r4, [r2]
  rtInfF = (real32_T)INFINITY;
   1993e:	4b0e      	ldr	r3, [pc, #56]	; (19978 <rt_InitInfAndNaN+0x5c>)
   19940:	f04f 42ff 	mov.w	r2, #2139095040	; 0x7f800000
   19944:	601a      	str	r2, [r3, #0]
  rtMinusInf = -(real_T)INFINITY;
   19946:	4a0d      	ldr	r2, [pc, #52]	; (1997c <rt_InitInfAndNaN+0x60>)
   19948:	f04f 0300 	mov.w	r3, #0
   1994c:	4c0c      	ldr	r4, [pc, #48]	; (19980 <rt_InitInfAndNaN+0x64>)
   1994e:	e9c2 3400 	strd	r3, r4, [r2]
  rtMinusInfF = -(real32_T)INFINITY;
   19952:	4b0c      	ldr	r3, [pc, #48]	; (19984 <rt_InitInfAndNaN+0x68>)
   19954:	4a0c      	ldr	r2, [pc, #48]	; (19988 <rt_InitInfAndNaN+0x6c>)
   19956:	601a      	str	r2, [r3, #0]

#pragma warning(default: 4756 56)

#endif

}
   19958:	bf00      	nop
   1995a:	46bd      	mov	sp, r7
   1995c:	bc90      	pop	{r4, r7}
   1995e:	4770      	bx	lr
   19960:	000347f8 	.word	0x000347f8
   19964:	7ff80000 	.word	0x7ff80000
   19968:	000347e8 	.word	0x000347e8
   1996c:	7fc00000 	.word	0x7fc00000
   19970:	000347f0 	.word	0x000347f0
   19974:	7ff00000 	.word	0x7ff00000
   19978:	000347ec 	.word	0x000347ec
   1997c:	00034800 	.word	0x00034800
   19980:	fff00000 	.word	0xfff00000
   19984:	00034808 	.word	0x00034808
   19988:	ff800000 	.word	0xff800000
   1998c:	00000000 	.word	0x00000000

00019990 <rtIsInf>:
/* Function: rtIsInf ==================================================
 * Abstract:
 * Test if value is infinite
 */
boolean_T rtIsInf(real_T value)
{
   19990:	b480      	push	{r7}
   19992:	b083      	sub	sp, #12
   19994:	af00      	add	r7, sp, #0
   19996:	ed87 0b00 	vstr	d0, [r7]
  return (isinf(value) ? 1U : 0U);
   1999a:	ed97 7b00 	vldr	d7, [r7]
   1999e:	eeb0 7bc7 	vabs.f64	d7, d7
   199a2:	ed9f 6b0b 	vldr	d6, [pc, #44]	; 199d0 <rtIsInf+0x40>
   199a6:	eeb4 7b46 	vcmp.f64	d7, d6
   199aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   199ae:	bfd4      	ite	le
   199b0:	2301      	movle	r3, #1
   199b2:	2300      	movgt	r3, #0
   199b4:	b2db      	uxtb	r3, r3
   199b6:	f083 0301 	eor.w	r3, r3, #1
   199ba:	b2db      	uxtb	r3, r3
   199bc:	b2db      	uxtb	r3, r3
}
   199be:	4618      	mov	r0, r3
   199c0:	370c      	adds	r7, #12
   199c2:	46bd      	mov	sp, r7
   199c4:	f85d 7b04 	ldr.w	r7, [sp], #4
   199c8:	4770      	bx	lr
   199ca:	bf00      	nop
   199cc:	f3af 8000 	nop.w
   199d0:	ffffffff 	.word	0xffffffff
   199d4:	7fefffff 	.word	0x7fefffff

000199d8 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                                                /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
   199d8:	b480      	push	{r7}
   199da:	b083      	sub	sp, #12
   199dc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
   199de:	4b0a      	ldr	r3, [pc, #40]	; (19a08 <HAL_MspInit+0x30>)
   199e0:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
   199e4:	4a08      	ldr	r2, [pc, #32]	; (19a08 <HAL_MspInit+0x30>)
   199e6:	f043 0302 	orr.w	r3, r3, #2
   199ea:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
   199ee:	4b06      	ldr	r3, [pc, #24]	; (19a08 <HAL_MspInit+0x30>)
   199f0:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
   199f4:	f003 0302 	and.w	r3, r3, #2
   199f8:	607b      	str	r3, [r7, #4]
   199fa:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
   199fc:	bf00      	nop
   199fe:	370c      	adds	r7, #12
   19a00:	46bd      	mov	sp, r7
   19a02:	f85d 7b04 	ldr.w	r7, [sp], #4
   19a06:	4770      	bx	lr
   19a08:	58024400 	.word	0x58024400

00019a0c <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
   19a0c:	b480      	push	{r7}
   19a0e:	b087      	sub	sp, #28
   19a10:	af00      	add	r7, sp, #0
   19a12:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM1)
   19a14:	687b      	ldr	r3, [r7, #4]
   19a16:	681b      	ldr	r3, [r3, #0]
   19a18:	4a2b      	ldr	r2, [pc, #172]	; (19ac8 <HAL_TIM_PWM_MspInit+0xbc>)
   19a1a:	4293      	cmp	r3, r2
   19a1c:	d10f      	bne.n	19a3e <HAL_TIM_PWM_MspInit+0x32>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
   19a1e:	4b2b      	ldr	r3, [pc, #172]	; (19acc <HAL_TIM_PWM_MspInit+0xc0>)
   19a20:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
   19a24:	4a29      	ldr	r2, [pc, #164]	; (19acc <HAL_TIM_PWM_MspInit+0xc0>)
   19a26:	f043 0301 	orr.w	r3, r3, #1
   19a2a:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
   19a2e:	4b27      	ldr	r3, [pc, #156]	; (19acc <HAL_TIM_PWM_MspInit+0xc0>)
   19a30:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
   19a34:	f003 0301 	and.w	r3, r3, #1
   19a38:	617b      	str	r3, [r7, #20]
   19a3a:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }

}
   19a3c:	e03d      	b.n	19aba <HAL_TIM_PWM_MspInit+0xae>
  else if(htim_pwm->Instance==TIM2)
   19a3e:	687b      	ldr	r3, [r7, #4]
   19a40:	681b      	ldr	r3, [r3, #0]
   19a42:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
   19a46:	d10f      	bne.n	19a68 <HAL_TIM_PWM_MspInit+0x5c>
    __HAL_RCC_TIM2_CLK_ENABLE();
   19a48:	4b20      	ldr	r3, [pc, #128]	; (19acc <HAL_TIM_PWM_MspInit+0xc0>)
   19a4a:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
   19a4e:	4a1f      	ldr	r2, [pc, #124]	; (19acc <HAL_TIM_PWM_MspInit+0xc0>)
   19a50:	f043 0301 	orr.w	r3, r3, #1
   19a54:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
   19a58:	4b1c      	ldr	r3, [pc, #112]	; (19acc <HAL_TIM_PWM_MspInit+0xc0>)
   19a5a:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
   19a5e:	f003 0301 	and.w	r3, r3, #1
   19a62:	613b      	str	r3, [r7, #16]
   19a64:	693b      	ldr	r3, [r7, #16]
}
   19a66:	e028      	b.n	19aba <HAL_TIM_PWM_MspInit+0xae>
  else if(htim_pwm->Instance==TIM3)
   19a68:	687b      	ldr	r3, [r7, #4]
   19a6a:	681b      	ldr	r3, [r3, #0]
   19a6c:	4a18      	ldr	r2, [pc, #96]	; (19ad0 <HAL_TIM_PWM_MspInit+0xc4>)
   19a6e:	4293      	cmp	r3, r2
   19a70:	d10f      	bne.n	19a92 <HAL_TIM_PWM_MspInit+0x86>
    __HAL_RCC_TIM3_CLK_ENABLE();
   19a72:	4b16      	ldr	r3, [pc, #88]	; (19acc <HAL_TIM_PWM_MspInit+0xc0>)
   19a74:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
   19a78:	4a14      	ldr	r2, [pc, #80]	; (19acc <HAL_TIM_PWM_MspInit+0xc0>)
   19a7a:	f043 0302 	orr.w	r3, r3, #2
   19a7e:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
   19a82:	4b12      	ldr	r3, [pc, #72]	; (19acc <HAL_TIM_PWM_MspInit+0xc0>)
   19a84:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
   19a88:	f003 0302 	and.w	r3, r3, #2
   19a8c:	60fb      	str	r3, [r7, #12]
   19a8e:	68fb      	ldr	r3, [r7, #12]
}
   19a90:	e013      	b.n	19aba <HAL_TIM_PWM_MspInit+0xae>
  else if(htim_pwm->Instance==TIM5)
   19a92:	687b      	ldr	r3, [r7, #4]
   19a94:	681b      	ldr	r3, [r3, #0]
   19a96:	4a0f      	ldr	r2, [pc, #60]	; (19ad4 <HAL_TIM_PWM_MspInit+0xc8>)
   19a98:	4293      	cmp	r3, r2
   19a9a:	d10e      	bne.n	19aba <HAL_TIM_PWM_MspInit+0xae>
    __HAL_RCC_TIM5_CLK_ENABLE();
   19a9c:	4b0b      	ldr	r3, [pc, #44]	; (19acc <HAL_TIM_PWM_MspInit+0xc0>)
   19a9e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
   19aa2:	4a0a      	ldr	r2, [pc, #40]	; (19acc <HAL_TIM_PWM_MspInit+0xc0>)
   19aa4:	f043 0308 	orr.w	r3, r3, #8
   19aa8:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
   19aac:	4b07      	ldr	r3, [pc, #28]	; (19acc <HAL_TIM_PWM_MspInit+0xc0>)
   19aae:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
   19ab2:	f003 0308 	and.w	r3, r3, #8
   19ab6:	60bb      	str	r3, [r7, #8]
   19ab8:	68bb      	ldr	r3, [r7, #8]
}
   19aba:	bf00      	nop
   19abc:	371c      	adds	r7, #28
   19abe:	46bd      	mov	sp, r7
   19ac0:	f85d 7b04 	ldr.w	r7, [sp], #4
   19ac4:	4770      	bx	lr
   19ac6:	bf00      	nop
   19ac8:	40010000 	.word	0x40010000
   19acc:	58024400 	.word	0x58024400
   19ad0:	40000400 	.word	0x40000400
   19ad4:	40000c00 	.word	0x40000c00

00019ad8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
   19ad8:	b580      	push	{r7, lr}
   19ada:	b084      	sub	sp, #16
   19adc:	af00      	add	r7, sp, #0
   19ade:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM7)
   19ae0:	687b      	ldr	r3, [r7, #4]
   19ae2:	681b      	ldr	r3, [r3, #0]
   19ae4:	4a0e      	ldr	r2, [pc, #56]	; (19b20 <HAL_TIM_Base_MspInit+0x48>)
   19ae6:	4293      	cmp	r3, r2
   19ae8:	d116      	bne.n	19b18 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
   19aea:	4b0e      	ldr	r3, [pc, #56]	; (19b24 <HAL_TIM_Base_MspInit+0x4c>)
   19aec:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
   19af0:	4a0c      	ldr	r2, [pc, #48]	; (19b24 <HAL_TIM_Base_MspInit+0x4c>)
   19af2:	f043 0320 	orr.w	r3, r3, #32
   19af6:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
   19afa:	4b0a      	ldr	r3, [pc, #40]	; (19b24 <HAL_TIM_Base_MspInit+0x4c>)
   19afc:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
   19b00:	f003 0320 	and.w	r3, r3, #32
   19b04:	60fb      	str	r3, [r7, #12]
   19b06:	68fb      	ldr	r3, [r7, #12]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 0, 0);
   19b08:	2200      	movs	r2, #0
   19b0a:	2100      	movs	r1, #0
   19b0c:	2037      	movs	r0, #55	; 0x37
   19b0e:	f000 fb46 	bl	1a19e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
   19b12:	2037      	movs	r0, #55	; 0x37
   19b14:	f000 fb5d 	bl	1a1d2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
   19b18:	bf00      	nop
   19b1a:	3710      	adds	r7, #16
   19b1c:	46bd      	mov	sp, r7
   19b1e:	bd80      	pop	{r7, pc}
   19b20:	40001400 	.word	0x40001400
   19b24:	58024400 	.word	0x58024400

00019b28 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
   19b28:	b580      	push	{r7, lr}
   19b2a:	b08c      	sub	sp, #48	; 0x30
   19b2c:	af00      	add	r7, sp, #0
   19b2e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
   19b30:	f107 031c 	add.w	r3, r7, #28
   19b34:	2200      	movs	r2, #0
   19b36:	601a      	str	r2, [r3, #0]
   19b38:	605a      	str	r2, [r3, #4]
   19b3a:	609a      	str	r2, [r3, #8]
   19b3c:	60da      	str	r2, [r3, #12]
   19b3e:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
   19b40:	687b      	ldr	r3, [r7, #4]
   19b42:	681b      	ldr	r3, [r3, #0]
   19b44:	4a5a      	ldr	r2, [pc, #360]	; (19cb0 <HAL_TIM_MspPostInit+0x188>)
   19b46:	4293      	cmp	r3, r2
   19b48:	d120      	bne.n	19b8c <HAL_TIM_MspPostInit+0x64>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOE_CLK_ENABLE();
   19b4a:	4b5a      	ldr	r3, [pc, #360]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19b4c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19b50:	4a58      	ldr	r2, [pc, #352]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19b52:	f043 0310 	orr.w	r3, r3, #16
   19b56:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   19b5a:	4b56      	ldr	r3, [pc, #344]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19b5c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19b60:	f003 0310 	and.w	r3, r3, #16
   19b64:	61bb      	str	r3, [r7, #24]
   19b66:	69bb      	ldr	r3, [r7, #24]
    /**TIM1 GPIO Configuration    
    PE11     ------> TIM1_CH2
    PE13     ------> TIM1_CH3 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_13;
   19b68:	f44f 5320 	mov.w	r3, #10240	; 0x2800
   19b6c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   19b6e:	2302      	movs	r3, #2
   19b70:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
   19b72:	2300      	movs	r3, #0
   19b74:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   19b76:	2300      	movs	r3, #0
   19b78:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
   19b7a:	2301      	movs	r3, #1
   19b7c:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
   19b7e:	f107 031c 	add.w	r3, r7, #28
   19b82:	4619      	mov	r1, r3
   19b84:	484c      	ldr	r0, [pc, #304]	; (19cb8 <HAL_TIM_MspPostInit+0x190>)
   19b86:	f000 fb3f 	bl	1a208 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM5_MspPostInit 1 */

  /* USER CODE END TIM5_MspPostInit 1 */
  }

}
   19b8a:	e08c      	b.n	19ca6 <HAL_TIM_MspPostInit+0x17e>
  else if(htim->Instance==TIM2)
   19b8c:	687b      	ldr	r3, [r7, #4]
   19b8e:	681b      	ldr	r3, [r3, #0]
   19b90:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
   19b94:	d11f      	bne.n	19bd6 <HAL_TIM_MspPostInit+0xae>
    __HAL_RCC_GPIOA_CLK_ENABLE();
   19b96:	4b47      	ldr	r3, [pc, #284]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19b98:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19b9c:	4a45      	ldr	r2, [pc, #276]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19b9e:	f043 0301 	orr.w	r3, r3, #1
   19ba2:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   19ba6:	4b43      	ldr	r3, [pc, #268]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19ba8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19bac:	f003 0301 	and.w	r3, r3, #1
   19bb0:	617b      	str	r3, [r7, #20]
   19bb2:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_5;
   19bb4:	2320      	movs	r3, #32
   19bb6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   19bb8:	2302      	movs	r3, #2
   19bba:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
   19bbc:	2300      	movs	r3, #0
   19bbe:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   19bc0:	2300      	movs	r3, #0
   19bc2:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
   19bc4:	2301      	movs	r3, #1
   19bc6:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   19bc8:	f107 031c 	add.w	r3, r7, #28
   19bcc:	4619      	mov	r1, r3
   19bce:	483b      	ldr	r0, [pc, #236]	; (19cbc <HAL_TIM_MspPostInit+0x194>)
   19bd0:	f000 fb1a 	bl	1a208 <HAL_GPIO_Init>
}
   19bd4:	e067      	b.n	19ca6 <HAL_TIM_MspPostInit+0x17e>
  else if(htim->Instance==TIM3)
   19bd6:	687b      	ldr	r3, [r7, #4]
   19bd8:	681b      	ldr	r3, [r3, #0]
   19bda:	4a39      	ldr	r2, [pc, #228]	; (19cc0 <HAL_TIM_MspPostInit+0x198>)
   19bdc:	4293      	cmp	r3, r2
   19bde:	d13e      	bne.n	19c5e <HAL_TIM_MspPostInit+0x136>
    __HAL_RCC_GPIOA_CLK_ENABLE();
   19be0:	4b34      	ldr	r3, [pc, #208]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19be2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19be6:	4a33      	ldr	r2, [pc, #204]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19be8:	f043 0301 	orr.w	r3, r3, #1
   19bec:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   19bf0:	4b30      	ldr	r3, [pc, #192]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19bf2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19bf6:	f003 0301 	and.w	r3, r3, #1
   19bfa:	613b      	str	r3, [r7, #16]
   19bfc:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
   19bfe:	4b2d      	ldr	r3, [pc, #180]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19c00:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19c04:	4a2b      	ldr	r2, [pc, #172]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19c06:	f043 0302 	orr.w	r3, r3, #2
   19c0a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   19c0e:	4b29      	ldr	r3, [pc, #164]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19c10:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19c14:	f003 0302 	and.w	r3, r3, #2
   19c18:	60fb      	str	r3, [r7, #12]
   19c1a:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
   19c1c:	23c0      	movs	r3, #192	; 0xc0
   19c1e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   19c20:	2302      	movs	r3, #2
   19c22:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
   19c24:	2300      	movs	r3, #0
   19c26:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   19c28:	2300      	movs	r3, #0
   19c2a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
   19c2c:	2302      	movs	r3, #2
   19c2e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   19c30:	f107 031c 	add.w	r3, r7, #28
   19c34:	4619      	mov	r1, r3
   19c36:	4821      	ldr	r0, [pc, #132]	; (19cbc <HAL_TIM_MspPostInit+0x194>)
   19c38:	f000 fae6 	bl	1a208 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1;
   19c3c:	2302      	movs	r3, #2
   19c3e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   19c40:	2302      	movs	r3, #2
   19c42:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
   19c44:	2300      	movs	r3, #0
   19c46:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   19c48:	2300      	movs	r3, #0
   19c4a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
   19c4c:	2302      	movs	r3, #2
   19c4e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   19c50:	f107 031c 	add.w	r3, r7, #28
   19c54:	4619      	mov	r1, r3
   19c56:	481b      	ldr	r0, [pc, #108]	; (19cc4 <HAL_TIM_MspPostInit+0x19c>)
   19c58:	f000 fad6 	bl	1a208 <HAL_GPIO_Init>
}
   19c5c:	e023      	b.n	19ca6 <HAL_TIM_MspPostInit+0x17e>
  else if(htim->Instance==TIM5)
   19c5e:	687b      	ldr	r3, [r7, #4]
   19c60:	681b      	ldr	r3, [r3, #0]
   19c62:	4a19      	ldr	r2, [pc, #100]	; (19cc8 <HAL_TIM_MspPostInit+0x1a0>)
   19c64:	4293      	cmp	r3, r2
   19c66:	d11e      	bne.n	19ca6 <HAL_TIM_MspPostInit+0x17e>
    __HAL_RCC_GPIOA_CLK_ENABLE();
   19c68:	4b12      	ldr	r3, [pc, #72]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19c6a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19c6e:	4a11      	ldr	r2, [pc, #68]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19c70:	f043 0301 	orr.w	r3, r3, #1
   19c74:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   19c78:	4b0e      	ldr	r3, [pc, #56]	; (19cb4 <HAL_TIM_MspPostInit+0x18c>)
   19c7a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19c7e:	f003 0301 	and.w	r3, r3, #1
   19c82:	60bb      	str	r3, [r7, #8]
   19c84:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_3;
   19c86:	2308      	movs	r3, #8
   19c88:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   19c8a:	2302      	movs	r3, #2
   19c8c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
   19c8e:	2300      	movs	r3, #0
   19c90:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   19c92:	2300      	movs	r3, #0
   19c94:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
   19c96:	2302      	movs	r3, #2
   19c98:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   19c9a:	f107 031c 	add.w	r3, r7, #28
   19c9e:	4619      	mov	r1, r3
   19ca0:	4806      	ldr	r0, [pc, #24]	; (19cbc <HAL_TIM_MspPostInit+0x194>)
   19ca2:	f000 fab1 	bl	1a208 <HAL_GPIO_Init>
}
   19ca6:	bf00      	nop
   19ca8:	3730      	adds	r7, #48	; 0x30
   19caa:	46bd      	mov	sp, r7
   19cac:	bd80      	pop	{r7, pc}
   19cae:	bf00      	nop
   19cb0:	40010000 	.word	0x40010000
   19cb4:	58024400 	.word	0x58024400
   19cb8:	58021000 	.word	0x58021000
   19cbc:	58020000 	.word	0x58020000
   19cc0:	40000400 	.word	0x40000400
   19cc4:	58020400 	.word	0x58020400
   19cc8:	40000c00 	.word	0x40000c00

00019ccc <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
   19ccc:	b580      	push	{r7, lr}
   19cce:	b08c      	sub	sp, #48	; 0x30
   19cd0:	af00      	add	r7, sp, #0
   19cd2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
   19cd4:	f107 031c 	add.w	r3, r7, #28
   19cd8:	2200      	movs	r2, #0
   19cda:	601a      	str	r2, [r3, #0]
   19cdc:	605a      	str	r2, [r3, #4]
   19cde:	609a      	str	r2, [r3, #8]
   19ce0:	60da      	str	r2, [r3, #12]
   19ce2:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
   19ce4:	687b      	ldr	r3, [r7, #4]
   19ce6:	681b      	ldr	r3, [r3, #0]
   19ce8:	4a41      	ldr	r2, [pc, #260]	; (19df0 <HAL_UART_MspInit+0x124>)
   19cea:	4293      	cmp	r3, r2
   19cec:	d13f      	bne.n	19d6e <HAL_UART_MspInit+0xa2>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
   19cee:	4b41      	ldr	r3, [pc, #260]	; (19df4 <HAL_UART_MspInit+0x128>)
   19cf0:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
   19cf4:	4a3f      	ldr	r2, [pc, #252]	; (19df4 <HAL_UART_MspInit+0x128>)
   19cf6:	f043 0310 	orr.w	r3, r3, #16
   19cfa:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
   19cfe:	4b3d      	ldr	r3, [pc, #244]	; (19df4 <HAL_UART_MspInit+0x128>)
   19d00:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
   19d04:	f003 0310 	and.w	r3, r3, #16
   19d08:	61bb      	str	r3, [r7, #24]
   19d0a:	69bb      	ldr	r3, [r7, #24]
  
    __HAL_RCC_GPIOB_CLK_ENABLE();
   19d0c:	4b39      	ldr	r3, [pc, #228]	; (19df4 <HAL_UART_MspInit+0x128>)
   19d0e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19d12:	4a38      	ldr	r2, [pc, #224]	; (19df4 <HAL_UART_MspInit+0x128>)
   19d14:	f043 0302 	orr.w	r3, r3, #2
   19d18:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   19d1c:	4b35      	ldr	r3, [pc, #212]	; (19df4 <HAL_UART_MspInit+0x128>)
   19d1e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19d22:	f003 0302 	and.w	r3, r3, #2
   19d26:	617b      	str	r3, [r7, #20]
   19d28:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration    
    PB15     ------> USART1_RX
    PB6     ------> USART1_TX 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_15;
   19d2a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   19d2e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   19d30:	2302      	movs	r3, #2
   19d32:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
   19d34:	2300      	movs	r3, #0
   19d36:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   19d38:	2300      	movs	r3, #0
   19d3a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF4_USART1;
   19d3c:	2304      	movs	r3, #4
   19d3e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   19d40:	f107 031c 	add.w	r3, r7, #28
   19d44:	4619      	mov	r1, r3
   19d46:	482c      	ldr	r0, [pc, #176]	; (19df8 <HAL_UART_MspInit+0x12c>)
   19d48:	f000 fa5e 	bl	1a208 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6;
   19d4c:	2340      	movs	r3, #64	; 0x40
   19d4e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   19d50:	2302      	movs	r3, #2
   19d52:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
   19d54:	2300      	movs	r3, #0
   19d56:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   19d58:	2300      	movs	r3, #0
   19d5a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
   19d5c:	2307      	movs	r3, #7
   19d5e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   19d60:	f107 031c 	add.w	r3, r7, #28
   19d64:	4619      	mov	r1, r3
   19d66:	4824      	ldr	r0, [pc, #144]	; (19df8 <HAL_UART_MspInit+0x12c>)
   19d68:	f000 fa4e 	bl	1a208 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
   19d6c:	e03b      	b.n	19de6 <HAL_UART_MspInit+0x11a>
  else if(huart->Instance==USART3)
   19d6e:	687b      	ldr	r3, [r7, #4]
   19d70:	681b      	ldr	r3, [r3, #0]
   19d72:	4a22      	ldr	r2, [pc, #136]	; (19dfc <HAL_UART_MspInit+0x130>)
   19d74:	4293      	cmp	r3, r2
   19d76:	d136      	bne.n	19de6 <HAL_UART_MspInit+0x11a>
    __HAL_RCC_USART3_CLK_ENABLE();
   19d78:	4b1e      	ldr	r3, [pc, #120]	; (19df4 <HAL_UART_MspInit+0x128>)
   19d7a:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
   19d7e:	4a1d      	ldr	r2, [pc, #116]	; (19df4 <HAL_UART_MspInit+0x128>)
   19d80:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
   19d84:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
   19d88:	4b1a      	ldr	r3, [pc, #104]	; (19df4 <HAL_UART_MspInit+0x128>)
   19d8a:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
   19d8e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
   19d92:	613b      	str	r3, [r7, #16]
   19d94:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
   19d96:	4b17      	ldr	r3, [pc, #92]	; (19df4 <HAL_UART_MspInit+0x128>)
   19d98:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19d9c:	4a15      	ldr	r2, [pc, #84]	; (19df4 <HAL_UART_MspInit+0x128>)
   19d9e:	f043 0308 	orr.w	r3, r3, #8
   19da2:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   19da6:	4b13      	ldr	r3, [pc, #76]	; (19df4 <HAL_UART_MspInit+0x128>)
   19da8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   19dac:	f003 0308 	and.w	r3, r3, #8
   19db0:	60fb      	str	r3, [r7, #12]
   19db2:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = STLK_RX_Pin|STLK_TX_Pin;
   19db4:	f44f 7340 	mov.w	r3, #768	; 0x300
   19db8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   19dba:	2302      	movs	r3, #2
   19dbc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
   19dbe:	2300      	movs	r3, #0
   19dc0:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   19dc2:	2300      	movs	r3, #0
   19dc4:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
   19dc6:	2307      	movs	r3, #7
   19dc8:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
   19dca:	f107 031c 	add.w	r3, r7, #28
   19dce:	4619      	mov	r1, r3
   19dd0:	480b      	ldr	r0, [pc, #44]	; (19e00 <HAL_UART_MspInit+0x134>)
   19dd2:	f000 fa19 	bl	1a208 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
   19dd6:	2200      	movs	r2, #0
   19dd8:	2100      	movs	r1, #0
   19dda:	2027      	movs	r0, #39	; 0x27
   19ddc:	f000 f9df 	bl	1a19e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
   19de0:	2027      	movs	r0, #39	; 0x27
   19de2:	f000 f9f6 	bl	1a1d2 <HAL_NVIC_EnableIRQ>
}
   19de6:	bf00      	nop
   19de8:	3730      	adds	r7, #48	; 0x30
   19dea:	46bd      	mov	sp, r7
   19dec:	bd80      	pop	{r7, pc}
   19dee:	bf00      	nop
   19df0:	40011000 	.word	0x40011000
   19df4:	58024400 	.word	0x58024400
   19df8:	58020400 	.word	0x58020400
   19dfc:	40004800 	.word	0x40004800
   19e00:	58020c00 	.word	0x58020c00

00019e04 <_kill>:
{
	return 1;
}

int _kill(int pid, int sig)
{
   19e04:	b580      	push	{r7, lr}
   19e06:	b082      	sub	sp, #8
   19e08:	af00      	add	r7, sp, #0
   19e0a:	6078      	str	r0, [r7, #4]
   19e0c:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
   19e0e:	f008 fd07 	bl	22820 <__errno>
   19e12:	4602      	mov	r2, r0
   19e14:	2316      	movs	r3, #22
   19e16:	6013      	str	r3, [r2, #0]
	return -1;
   19e18:	f04f 33ff 	mov.w	r3, #4294967295
}
   19e1c:	4618      	mov	r0, r3
   19e1e:	3708      	adds	r7, #8
   19e20:	46bd      	mov	sp, r7
   19e22:	bd80      	pop	{r7, pc}

00019e24 <_exit>:

void _exit (int status)
{
   19e24:	b580      	push	{r7, lr}
   19e26:	b082      	sub	sp, #8
   19e28:	af00      	add	r7, sp, #0
   19e2a:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
   19e2c:	f04f 31ff 	mov.w	r1, #4294967295
   19e30:	6878      	ldr	r0, [r7, #4]
   19e32:	f7ff ffe7 	bl	19e04 <_kill>
	while (1) {}		/* Make sure we hang here */
   19e36:	e7fe      	b.n	19e36 <_exit+0x12>

00019e38 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
   19e38:	b580      	push	{r7, lr}
   19e3a:	b084      	sub	sp, #16
   19e3c:	af00      	add	r7, sp, #0
   19e3e:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
   19e40:	4b11      	ldr	r3, [pc, #68]	; (19e88 <_sbrk+0x50>)
   19e42:	681b      	ldr	r3, [r3, #0]
   19e44:	2b00      	cmp	r3, #0
   19e46:	d102      	bne.n	19e4e <_sbrk+0x16>
		heap_end = &end;
   19e48:	4b0f      	ldr	r3, [pc, #60]	; (19e88 <_sbrk+0x50>)
   19e4a:	4a10      	ldr	r2, [pc, #64]	; (19e8c <_sbrk+0x54>)
   19e4c:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
   19e4e:	4b0e      	ldr	r3, [pc, #56]	; (19e88 <_sbrk+0x50>)
   19e50:	681b      	ldr	r3, [r3, #0]
   19e52:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
   19e54:	4b0c      	ldr	r3, [pc, #48]	; (19e88 <_sbrk+0x50>)
   19e56:	681a      	ldr	r2, [r3, #0]
   19e58:	687b      	ldr	r3, [r7, #4]
   19e5a:	4413      	add	r3, r2
   19e5c:	466a      	mov	r2, sp
   19e5e:	4293      	cmp	r3, r2
   19e60:	d907      	bls.n	19e72 <_sbrk+0x3a>
	{
		errno = ENOMEM;
   19e62:	f008 fcdd 	bl	22820 <__errno>
   19e66:	4602      	mov	r2, r0
   19e68:	230c      	movs	r3, #12
   19e6a:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
   19e6c:	f04f 33ff 	mov.w	r3, #4294967295
   19e70:	e006      	b.n	19e80 <_sbrk+0x48>
	}

	heap_end += incr;
   19e72:	4b05      	ldr	r3, [pc, #20]	; (19e88 <_sbrk+0x50>)
   19e74:	681a      	ldr	r2, [r3, #0]
   19e76:	687b      	ldr	r3, [r7, #4]
   19e78:	4413      	add	r3, r2
   19e7a:	4a03      	ldr	r2, [pc, #12]	; (19e88 <_sbrk+0x50>)
   19e7c:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
   19e7e:	68fb      	ldr	r3, [r7, #12]
}
   19e80:	4618      	mov	r0, r3
   19e82:	3710      	adds	r7, #16
   19e84:	46bd      	mov	sp, r7
   19e86:	bd80      	pop	{r7, pc}
   19e88:	00034440 	.word	0x00034440
   19e8c:	000360e0 	.word	0x000360e0

00019e90 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
   19e90:	b580      	push	{r7, lr}
   19e92:	b082      	sub	sp, #8
   19e94:	af00      	add	r7, sp, #0
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
   19e96:	2003      	movs	r0, #3
   19e98:	f000 f976 	bl	1a188 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
   19e9c:	f001 fd04 	bl	1b8a8 <HAL_RCC_GetSysClockFreq>
   19ea0:	4601      	mov	r1, r0
   19ea2:	4b15      	ldr	r3, [pc, #84]	; (19ef8 <HAL_Init+0x68>)
   19ea4:	699b      	ldr	r3, [r3, #24]
   19ea6:	0a1b      	lsrs	r3, r3, #8
   19ea8:	f003 030f 	and.w	r3, r3, #15
   19eac:	4a13      	ldr	r2, [pc, #76]	; (19efc <HAL_Init+0x6c>)
   19eae:	5cd3      	ldrb	r3, [r2, r3]
   19eb0:	f003 031f 	and.w	r3, r3, #31
   19eb4:	fa21 f303 	lsr.w	r3, r1, r3
   19eb8:	607b      	str	r3, [r7, #4]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
   19eba:	4b0f      	ldr	r3, [pc, #60]	; (19ef8 <HAL_Init+0x68>)
   19ebc:	699b      	ldr	r3, [r3, #24]
   19ebe:	f003 030f 	and.w	r3, r3, #15
   19ec2:	4a0e      	ldr	r2, [pc, #56]	; (19efc <HAL_Init+0x6c>)
   19ec4:	5cd3      	ldrb	r3, [r2, r3]
   19ec6:	f003 031f 	and.w	r3, r3, #31
   19eca:	687a      	ldr	r2, [r7, #4]
   19ecc:	fa22 f303 	lsr.w	r3, r2, r3
   19ed0:	4a0b      	ldr	r2, [pc, #44]	; (19f00 <HAL_Init+0x70>)
   19ed2:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
   19ed4:	4a0b      	ldr	r2, [pc, #44]	; (19f04 <HAL_Init+0x74>)
   19ed6:	687b      	ldr	r3, [r7, #4]
   19ed8:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
   19eda:	2000      	movs	r0, #0
   19edc:	f000 f814 	bl	19f08 <HAL_InitTick>
   19ee0:	4603      	mov	r3, r0
   19ee2:	2b00      	cmp	r3, #0
   19ee4:	d001      	beq.n	19eea <HAL_Init+0x5a>
  {
    return HAL_ERROR;
   19ee6:	2301      	movs	r3, #1
   19ee8:	e002      	b.n	19ef0 <HAL_Init+0x60>
  }

  /* Init the low level hardware */
  HAL_MspInit();
   19eea:	f7ff fd75 	bl	199d8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
   19eee:	2300      	movs	r3, #0
}
   19ef0:	4618      	mov	r0, r3
   19ef2:	3708      	adds	r7, #8
   19ef4:	46bd      	mov	sp, r7
   19ef6:	bd80      	pop	{r7, pc}
   19ef8:	58024400 	.word	0x58024400
   19efc:	00023e94 	.word	0x00023e94
   19f00:	0003415c 	.word	0x0003415c
   19f04:	00034158 	.word	0x00034158

00019f08 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
   19f08:	b580      	push	{r7, lr}
   19f0a:	b082      	sub	sp, #8
   19f0c:	af00      	add	r7, sp, #0
   19f0e:	6078      	str	r0, [r7, #4]
  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if((uint32_t)uwTickFreq == 0UL)
   19f10:	4b15      	ldr	r3, [pc, #84]	; (19f68 <HAL_InitTick+0x60>)
   19f12:	781b      	ldrb	r3, [r3, #0]
   19f14:	2b00      	cmp	r3, #0
   19f16:	d101      	bne.n	19f1c <HAL_InitTick+0x14>
  {
    return HAL_ERROR;
   19f18:	2301      	movs	r3, #1
   19f1a:	e021      	b.n	19f60 <HAL_InitTick+0x58>
  }

  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
   19f1c:	4b13      	ldr	r3, [pc, #76]	; (19f6c <HAL_InitTick+0x64>)
   19f1e:	681a      	ldr	r2, [r3, #0]
   19f20:	4b11      	ldr	r3, [pc, #68]	; (19f68 <HAL_InitTick+0x60>)
   19f22:	781b      	ldrb	r3, [r3, #0]
   19f24:	4619      	mov	r1, r3
   19f26:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   19f2a:	fbb3 f3f1 	udiv	r3, r3, r1
   19f2e:	fbb2 f3f3 	udiv	r3, r2, r3
   19f32:	4618      	mov	r0, r3
   19f34:	f000 f95b 	bl	1a1ee <HAL_SYSTICK_Config>
   19f38:	4603      	mov	r3, r0
   19f3a:	2b00      	cmp	r3, #0
   19f3c:	d001      	beq.n	19f42 <HAL_InitTick+0x3a>
  {
    return HAL_ERROR;
   19f3e:	2301      	movs	r3, #1
   19f40:	e00e      	b.n	19f60 <HAL_InitTick+0x58>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
   19f42:	687b      	ldr	r3, [r7, #4]
   19f44:	2b0f      	cmp	r3, #15
   19f46:	d80a      	bhi.n	19f5e <HAL_InitTick+0x56>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
   19f48:	2200      	movs	r2, #0
   19f4a:	6879      	ldr	r1, [r7, #4]
   19f4c:	f04f 30ff 	mov.w	r0, #4294967295
   19f50:	f000 f925 	bl	1a19e <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
   19f54:	4a06      	ldr	r2, [pc, #24]	; (19f70 <HAL_InitTick+0x68>)
   19f56:	687b      	ldr	r3, [r7, #4]
   19f58:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
   19f5a:	2300      	movs	r3, #0
   19f5c:	e000      	b.n	19f60 <HAL_InitTick+0x58>
    return HAL_ERROR;
   19f5e:	2301      	movs	r3, #1
}
   19f60:	4618      	mov	r0, r3
   19f62:	3708      	adds	r7, #8
   19f64:	46bd      	mov	sp, r7
   19f66:	bd80      	pop	{r7, pc}
   19f68:	00034164 	.word	0x00034164
   19f6c:	00034158 	.word	0x00034158
   19f70:	00034160 	.word	0x00034160

00019f74 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
   19f74:	b480      	push	{r7}
   19f76:	af00      	add	r7, sp, #0
  return uwTick;
   19f78:	4b03      	ldr	r3, [pc, #12]	; (19f88 <HAL_GetTick+0x14>)
   19f7a:	681b      	ldr	r3, [r3, #0]
}
   19f7c:	4618      	mov	r0, r3
   19f7e:	46bd      	mov	sp, r7
   19f80:	f85d 7b04 	ldr.w	r7, [sp], #4
   19f84:	4770      	bx	lr
   19f86:	bf00      	nop
   19f88:	0003480c 	.word	0x0003480c

00019f8c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
   19f8c:	b580      	push	{r7, lr}
   19f8e:	b084      	sub	sp, #16
   19f90:	af00      	add	r7, sp, #0
   19f92:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
   19f94:	f7ff ffee 	bl	19f74 <HAL_GetTick>
   19f98:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
   19f9a:	687b      	ldr	r3, [r7, #4]
   19f9c:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
   19f9e:	68fb      	ldr	r3, [r7, #12]
   19fa0:	f1b3 3fff 	cmp.w	r3, #4294967295
   19fa4:	d005      	beq.n	19fb2 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
   19fa6:	4b09      	ldr	r3, [pc, #36]	; (19fcc <HAL_Delay+0x40>)
   19fa8:	781b      	ldrb	r3, [r3, #0]
   19faa:	461a      	mov	r2, r3
   19fac:	68fb      	ldr	r3, [r7, #12]
   19fae:	4413      	add	r3, r2
   19fb0:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
   19fb2:	bf00      	nop
   19fb4:	f7ff ffde 	bl	19f74 <HAL_GetTick>
   19fb8:	4602      	mov	r2, r0
   19fba:	68bb      	ldr	r3, [r7, #8]
   19fbc:	1ad3      	subs	r3, r2, r3
   19fbe:	68fa      	ldr	r2, [r7, #12]
   19fc0:	429a      	cmp	r2, r3
   19fc2:	d8f7      	bhi.n	19fb4 <HAL_Delay+0x28>
  {
  }
}
   19fc4:	bf00      	nop
   19fc6:	3710      	adds	r7, #16
   19fc8:	46bd      	mov	sp, r7
   19fca:	bd80      	pop	{r7, pc}
   19fcc:	00034164 	.word	0x00034164

00019fd0 <HAL_GetREVID>:
/**
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   19fd0:	b480      	push	{r7}
   19fd2:	af00      	add	r7, sp, #0
   return((DBGMCU->IDCODE) >> 16);
   19fd4:	4b03      	ldr	r3, [pc, #12]	; (19fe4 <HAL_GetREVID+0x14>)
   19fd6:	681b      	ldr	r3, [r3, #0]
   19fd8:	0c1b      	lsrs	r3, r3, #16
}
   19fda:	4618      	mov	r0, r3
   19fdc:	46bd      	mov	sp, r7
   19fde:	f85d 7b04 	ldr.w	r7, [sp], #4
   19fe2:	4770      	bx	lr
   19fe4:	5c001000 	.word	0x5c001000

00019fe8 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
   19fe8:	b480      	push	{r7}
   19fea:	b085      	sub	sp, #20
   19fec:	af00      	add	r7, sp, #0
   19fee:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
   19ff0:	687b      	ldr	r3, [r7, #4]
   19ff2:	f003 0307 	and.w	r3, r3, #7
   19ff6:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
   19ff8:	4b0b      	ldr	r3, [pc, #44]	; (1a028 <__NVIC_SetPriorityGrouping+0x40>)
   19ffa:	68db      	ldr	r3, [r3, #12]
   19ffc:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
   19ffe:	68ba      	ldr	r2, [r7, #8]
   1a000:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
   1a004:	4013      	ands	r3, r2
   1a006:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
   1a008:	68fb      	ldr	r3, [r7, #12]
   1a00a:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
   1a00c:	68bb      	ldr	r3, [r7, #8]
   1a00e:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
   1a010:	4b06      	ldr	r3, [pc, #24]	; (1a02c <__NVIC_SetPriorityGrouping+0x44>)
   1a012:	4313      	orrs	r3, r2
   1a014:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
   1a016:	4a04      	ldr	r2, [pc, #16]	; (1a028 <__NVIC_SetPriorityGrouping+0x40>)
   1a018:	68bb      	ldr	r3, [r7, #8]
   1a01a:	60d3      	str	r3, [r2, #12]
}
   1a01c:	bf00      	nop
   1a01e:	3714      	adds	r7, #20
   1a020:	46bd      	mov	sp, r7
   1a022:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a026:	4770      	bx	lr
   1a028:	e000ed00 	.word	0xe000ed00
   1a02c:	05fa0000 	.word	0x05fa0000

0001a030 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
   1a030:	b480      	push	{r7}
   1a032:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
   1a034:	4b04      	ldr	r3, [pc, #16]	; (1a048 <__NVIC_GetPriorityGrouping+0x18>)
   1a036:	68db      	ldr	r3, [r3, #12]
   1a038:	0a1b      	lsrs	r3, r3, #8
   1a03a:	f003 0307 	and.w	r3, r3, #7
}
   1a03e:	4618      	mov	r0, r3
   1a040:	46bd      	mov	sp, r7
   1a042:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a046:	4770      	bx	lr
   1a048:	e000ed00 	.word	0xe000ed00

0001a04c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
   1a04c:	b480      	push	{r7}
   1a04e:	b083      	sub	sp, #12
   1a050:	af00      	add	r7, sp, #0
   1a052:	4603      	mov	r3, r0
   1a054:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
   1a056:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
   1a05a:	2b00      	cmp	r3, #0
   1a05c:	db0b      	blt.n	1a076 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   1a05e:	88fb      	ldrh	r3, [r7, #6]
   1a060:	f003 021f 	and.w	r2, r3, #31
   1a064:	4907      	ldr	r1, [pc, #28]	; (1a084 <__NVIC_EnableIRQ+0x38>)
   1a066:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
   1a06a:	095b      	lsrs	r3, r3, #5
   1a06c:	2001      	movs	r0, #1
   1a06e:	fa00 f202 	lsl.w	r2, r0, r2
   1a072:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
   1a076:	bf00      	nop
   1a078:	370c      	adds	r7, #12
   1a07a:	46bd      	mov	sp, r7
   1a07c:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a080:	4770      	bx	lr
   1a082:	bf00      	nop
   1a084:	e000e100 	.word	0xe000e100

0001a088 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
   1a088:	b480      	push	{r7}
   1a08a:	b083      	sub	sp, #12
   1a08c:	af00      	add	r7, sp, #0
   1a08e:	4603      	mov	r3, r0
   1a090:	6039      	str	r1, [r7, #0]
   1a092:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
   1a094:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
   1a098:	2b00      	cmp	r3, #0
   1a09a:	db0a      	blt.n	1a0b2 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   1a09c:	683b      	ldr	r3, [r7, #0]
   1a09e:	b2da      	uxtb	r2, r3
   1a0a0:	490c      	ldr	r1, [pc, #48]	; (1a0d4 <__NVIC_SetPriority+0x4c>)
   1a0a2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
   1a0a6:	0112      	lsls	r2, r2, #4
   1a0a8:	b2d2      	uxtb	r2, r2
   1a0aa:	440b      	add	r3, r1
   1a0ac:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
   1a0b0:	e00a      	b.n	1a0c8 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   1a0b2:	683b      	ldr	r3, [r7, #0]
   1a0b4:	b2da      	uxtb	r2, r3
   1a0b6:	4908      	ldr	r1, [pc, #32]	; (1a0d8 <__NVIC_SetPriority+0x50>)
   1a0b8:	88fb      	ldrh	r3, [r7, #6]
   1a0ba:	f003 030f 	and.w	r3, r3, #15
   1a0be:	3b04      	subs	r3, #4
   1a0c0:	0112      	lsls	r2, r2, #4
   1a0c2:	b2d2      	uxtb	r2, r2
   1a0c4:	440b      	add	r3, r1
   1a0c6:	761a      	strb	r2, [r3, #24]
}
   1a0c8:	bf00      	nop
   1a0ca:	370c      	adds	r7, #12
   1a0cc:	46bd      	mov	sp, r7
   1a0ce:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a0d2:	4770      	bx	lr
   1a0d4:	e000e100 	.word	0xe000e100
   1a0d8:	e000ed00 	.word	0xe000ed00

0001a0dc <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
   1a0dc:	b480      	push	{r7}
   1a0de:	b089      	sub	sp, #36	; 0x24
   1a0e0:	af00      	add	r7, sp, #0
   1a0e2:	60f8      	str	r0, [r7, #12]
   1a0e4:	60b9      	str	r1, [r7, #8]
   1a0e6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
   1a0e8:	68fb      	ldr	r3, [r7, #12]
   1a0ea:	f003 0307 	and.w	r3, r3, #7
   1a0ee:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
   1a0f0:	69fb      	ldr	r3, [r7, #28]
   1a0f2:	f1c3 0307 	rsb	r3, r3, #7
   1a0f6:	2b04      	cmp	r3, #4
   1a0f8:	bf28      	it	cs
   1a0fa:	2304      	movcs	r3, #4
   1a0fc:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
   1a0fe:	69fb      	ldr	r3, [r7, #28]
   1a100:	3304      	adds	r3, #4
   1a102:	2b06      	cmp	r3, #6
   1a104:	d902      	bls.n	1a10c <NVIC_EncodePriority+0x30>
   1a106:	69fb      	ldr	r3, [r7, #28]
   1a108:	3b03      	subs	r3, #3
   1a10a:	e000      	b.n	1a10e <NVIC_EncodePriority+0x32>
   1a10c:	2300      	movs	r3, #0
   1a10e:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
   1a110:	f04f 32ff 	mov.w	r2, #4294967295
   1a114:	69bb      	ldr	r3, [r7, #24]
   1a116:	fa02 f303 	lsl.w	r3, r2, r3
   1a11a:	43da      	mvns	r2, r3
   1a11c:	68bb      	ldr	r3, [r7, #8]
   1a11e:	401a      	ands	r2, r3
   1a120:	697b      	ldr	r3, [r7, #20]
   1a122:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
   1a124:	f04f 31ff 	mov.w	r1, #4294967295
   1a128:	697b      	ldr	r3, [r7, #20]
   1a12a:	fa01 f303 	lsl.w	r3, r1, r3
   1a12e:	43d9      	mvns	r1, r3
   1a130:	687b      	ldr	r3, [r7, #4]
   1a132:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
   1a134:	4313      	orrs	r3, r2
         );
}
   1a136:	4618      	mov	r0, r3
   1a138:	3724      	adds	r7, #36	; 0x24
   1a13a:	46bd      	mov	sp, r7
   1a13c:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a140:	4770      	bx	lr
	...

0001a144 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
   1a144:	b580      	push	{r7, lr}
   1a146:	b082      	sub	sp, #8
   1a148:	af00      	add	r7, sp, #0
   1a14a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
   1a14c:	687b      	ldr	r3, [r7, #4]
   1a14e:	3b01      	subs	r3, #1
   1a150:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
   1a154:	d301      	bcc.n	1a15a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
   1a156:	2301      	movs	r3, #1
   1a158:	e00f      	b.n	1a17a <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
   1a15a:	4a0a      	ldr	r2, [pc, #40]	; (1a184 <SysTick_Config+0x40>)
   1a15c:	687b      	ldr	r3, [r7, #4]
   1a15e:	3b01      	subs	r3, #1
   1a160:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
   1a162:	210f      	movs	r1, #15
   1a164:	f04f 30ff 	mov.w	r0, #4294967295
   1a168:	f7ff ff8e 	bl	1a088 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
   1a16c:	4b05      	ldr	r3, [pc, #20]	; (1a184 <SysTick_Config+0x40>)
   1a16e:	2200      	movs	r2, #0
   1a170:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
   1a172:	4b04      	ldr	r3, [pc, #16]	; (1a184 <SysTick_Config+0x40>)
   1a174:	2207      	movs	r2, #7
   1a176:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
   1a178:	2300      	movs	r3, #0
}
   1a17a:	4618      	mov	r0, r3
   1a17c:	3708      	adds	r7, #8
   1a17e:	46bd      	mov	sp, r7
   1a180:	bd80      	pop	{r7, pc}
   1a182:	bf00      	nop
   1a184:	e000e010 	.word	0xe000e010

0001a188 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
   1a188:	b580      	push	{r7, lr}
   1a18a:	b082      	sub	sp, #8
   1a18c:	af00      	add	r7, sp, #0
   1a18e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
   1a190:	6878      	ldr	r0, [r7, #4]
   1a192:	f7ff ff29 	bl	19fe8 <__NVIC_SetPriorityGrouping>
}
   1a196:	bf00      	nop
   1a198:	3708      	adds	r7, #8
   1a19a:	46bd      	mov	sp, r7
   1a19c:	bd80      	pop	{r7, pc}

0001a19e <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
   1a19e:	b580      	push	{r7, lr}
   1a1a0:	b086      	sub	sp, #24
   1a1a2:	af00      	add	r7, sp, #0
   1a1a4:	4603      	mov	r3, r0
   1a1a6:	60b9      	str	r1, [r7, #8]
   1a1a8:	607a      	str	r2, [r7, #4]
   1a1aa:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
   1a1ac:	f7ff ff40 	bl	1a030 <__NVIC_GetPriorityGrouping>
   1a1b0:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
   1a1b2:	687a      	ldr	r2, [r7, #4]
   1a1b4:	68b9      	ldr	r1, [r7, #8]
   1a1b6:	6978      	ldr	r0, [r7, #20]
   1a1b8:	f7ff ff90 	bl	1a0dc <NVIC_EncodePriority>
   1a1bc:	4602      	mov	r2, r0
   1a1be:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
   1a1c2:	4611      	mov	r1, r2
   1a1c4:	4618      	mov	r0, r3
   1a1c6:	f7ff ff5f 	bl	1a088 <__NVIC_SetPriority>
}
   1a1ca:	bf00      	nop
   1a1cc:	3718      	adds	r7, #24
   1a1ce:	46bd      	mov	sp, r7
   1a1d0:	bd80      	pop	{r7, pc}

0001a1d2 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32h7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
   1a1d2:	b580      	push	{r7, lr}
   1a1d4:	b082      	sub	sp, #8
   1a1d6:	af00      	add	r7, sp, #0
   1a1d8:	4603      	mov	r3, r0
   1a1da:	80fb      	strh	r3, [r7, #6]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
   1a1dc:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
   1a1e0:	4618      	mov	r0, r3
   1a1e2:	f7ff ff33 	bl	1a04c <__NVIC_EnableIRQ>
}
   1a1e6:	bf00      	nop
   1a1e8:	3708      	adds	r7, #8
   1a1ea:	46bd      	mov	sp, r7
   1a1ec:	bd80      	pop	{r7, pc}

0001a1ee <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status   - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   1a1ee:	b580      	push	{r7, lr}
   1a1f0:	b082      	sub	sp, #8
   1a1f2:	af00      	add	r7, sp, #0
   1a1f4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
   1a1f6:	6878      	ldr	r0, [r7, #4]
   1a1f8:	f7ff ffa4 	bl	1a144 <SysTick_Config>
   1a1fc:	4603      	mov	r3, r0
}
   1a1fe:	4618      	mov	r0, r3
   1a200:	3708      	adds	r7, #8
   1a202:	46bd      	mov	sp, r7
   1a204:	bd80      	pop	{r7, pc}
	...

0001a208 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
   1a208:	b480      	push	{r7}
   1a20a:	b089      	sub	sp, #36	; 0x24
   1a20c:	af00      	add	r7, sp, #0
   1a20e:	6078      	str	r0, [r7, #4]
   1a210:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
   1a212:	2300      	movs	r3, #0
   1a214:	61fb      	str	r3, [r7, #28]
  EXTI_Core_TypeDef *EXTI_CurrentCPU;

#if defined(DUAL_CORE) && defined(CORE_CM4)
  EXTI_CurrentCPU = EXTI_D2; /* EXTI for CM4 CPU */
#else
  EXTI_CurrentCPU = EXTI_D1; /* EXTI for CM7 CPU */
   1a216:	4b89      	ldr	r3, [pc, #548]	; (1a43c <HAL_GPIO_Init+0x234>)
   1a218:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
   1a21a:	e194      	b.n	1a546 <HAL_GPIO_Init+0x33e>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
   1a21c:	683b      	ldr	r3, [r7, #0]
   1a21e:	681a      	ldr	r2, [r3, #0]
   1a220:	2101      	movs	r1, #1
   1a222:	69fb      	ldr	r3, [r7, #28]
   1a224:	fa01 f303 	lsl.w	r3, r1, r3
   1a228:	4013      	ands	r3, r2
   1a22a:	613b      	str	r3, [r7, #16]

    if (iocurrent != 0x00U)
   1a22c:	693b      	ldr	r3, [r7, #16]
   1a22e:	2b00      	cmp	r3, #0
   1a230:	f000 8186 	beq.w	1a540 <HAL_GPIO_Init+0x338>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
   1a234:	683b      	ldr	r3, [r7, #0]
   1a236:	685b      	ldr	r3, [r3, #4]
   1a238:	2b01      	cmp	r3, #1
   1a23a:	d00b      	beq.n	1a254 <HAL_GPIO_Init+0x4c>
   1a23c:	683b      	ldr	r3, [r7, #0]
   1a23e:	685b      	ldr	r3, [r3, #4]
   1a240:	2b02      	cmp	r3, #2
   1a242:	d007      	beq.n	1a254 <HAL_GPIO_Init+0x4c>
          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
   1a244:	683b      	ldr	r3, [r7, #0]
   1a246:	685b      	ldr	r3, [r3, #4]
      if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
   1a248:	2b11      	cmp	r3, #17
   1a24a:	d003      	beq.n	1a254 <HAL_GPIO_Init+0x4c>
          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
   1a24c:	683b      	ldr	r3, [r7, #0]
   1a24e:	685b      	ldr	r3, [r3, #4]
   1a250:	2b12      	cmp	r3, #18
   1a252:	d130      	bne.n	1a2b6 <HAL_GPIO_Init+0xae>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
   1a254:	687b      	ldr	r3, [r7, #4]
   1a256:	689b      	ldr	r3, [r3, #8]
   1a258:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
   1a25a:	69fb      	ldr	r3, [r7, #28]
   1a25c:	005b      	lsls	r3, r3, #1
   1a25e:	2203      	movs	r2, #3
   1a260:	fa02 f303 	lsl.w	r3, r2, r3
   1a264:	43db      	mvns	r3, r3
   1a266:	69ba      	ldr	r2, [r7, #24]
   1a268:	4013      	ands	r3, r2
   1a26a:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
   1a26c:	683b      	ldr	r3, [r7, #0]
   1a26e:	68da      	ldr	r2, [r3, #12]
   1a270:	69fb      	ldr	r3, [r7, #28]
   1a272:	005b      	lsls	r3, r3, #1
   1a274:	fa02 f303 	lsl.w	r3, r2, r3
   1a278:	69ba      	ldr	r2, [r7, #24]
   1a27a:	4313      	orrs	r3, r2
   1a27c:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
   1a27e:	687b      	ldr	r3, [r7, #4]
   1a280:	69ba      	ldr	r2, [r7, #24]
   1a282:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
   1a284:	687b      	ldr	r3, [r7, #4]
   1a286:	685b      	ldr	r3, [r3, #4]
   1a288:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
   1a28a:	2201      	movs	r2, #1
   1a28c:	69fb      	ldr	r3, [r7, #28]
   1a28e:	fa02 f303 	lsl.w	r3, r2, r3
   1a292:	43db      	mvns	r3, r3
   1a294:	69ba      	ldr	r2, [r7, #24]
   1a296:	4013      	ands	r3, r2
   1a298:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
   1a29a:	683b      	ldr	r3, [r7, #0]
   1a29c:	685b      	ldr	r3, [r3, #4]
   1a29e:	091b      	lsrs	r3, r3, #4
   1a2a0:	f003 0201 	and.w	r2, r3, #1
   1a2a4:	69fb      	ldr	r3, [r7, #28]
   1a2a6:	fa02 f303 	lsl.w	r3, r2, r3
   1a2aa:	69ba      	ldr	r2, [r7, #24]
   1a2ac:	4313      	orrs	r3, r2
   1a2ae:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
   1a2b0:	687b      	ldr	r3, [r7, #4]
   1a2b2:	69ba      	ldr	r2, [r7, #24]
   1a2b4:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
   1a2b6:	687b      	ldr	r3, [r7, #4]
   1a2b8:	68db      	ldr	r3, [r3, #12]
   1a2ba:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
   1a2bc:	69fb      	ldr	r3, [r7, #28]
   1a2be:	005b      	lsls	r3, r3, #1
   1a2c0:	2203      	movs	r2, #3
   1a2c2:	fa02 f303 	lsl.w	r3, r2, r3
   1a2c6:	43db      	mvns	r3, r3
   1a2c8:	69ba      	ldr	r2, [r7, #24]
   1a2ca:	4013      	ands	r3, r2
   1a2cc:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
   1a2ce:	683b      	ldr	r3, [r7, #0]
   1a2d0:	689a      	ldr	r2, [r3, #8]
   1a2d2:	69fb      	ldr	r3, [r7, #28]
   1a2d4:	005b      	lsls	r3, r3, #1
   1a2d6:	fa02 f303 	lsl.w	r3, r2, r3
   1a2da:	69ba      	ldr	r2, [r7, #24]
   1a2dc:	4313      	orrs	r3, r2
   1a2de:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
   1a2e0:	687b      	ldr	r3, [r7, #4]
   1a2e2:	69ba      	ldr	r2, [r7, #24]
   1a2e4:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
   1a2e6:	683b      	ldr	r3, [r7, #0]
   1a2e8:	685b      	ldr	r3, [r3, #4]
   1a2ea:	2b02      	cmp	r3, #2
   1a2ec:	d003      	beq.n	1a2f6 <HAL_GPIO_Init+0xee>
   1a2ee:	683b      	ldr	r3, [r7, #0]
   1a2f0:	685b      	ldr	r3, [r3, #4]
   1a2f2:	2b12      	cmp	r3, #18
   1a2f4:	d123      	bne.n	1a33e <HAL_GPIO_Init+0x136>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
   1a2f6:	69fb      	ldr	r3, [r7, #28]
   1a2f8:	08da      	lsrs	r2, r3, #3
   1a2fa:	687b      	ldr	r3, [r7, #4]
   1a2fc:	3208      	adds	r2, #8
   1a2fe:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   1a302:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
   1a304:	69fb      	ldr	r3, [r7, #28]
   1a306:	f003 0307 	and.w	r3, r3, #7
   1a30a:	009b      	lsls	r3, r3, #2
   1a30c:	220f      	movs	r2, #15
   1a30e:	fa02 f303 	lsl.w	r3, r2, r3
   1a312:	43db      	mvns	r3, r3
   1a314:	69ba      	ldr	r2, [r7, #24]
   1a316:	4013      	ands	r3, r2
   1a318:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
   1a31a:	683b      	ldr	r3, [r7, #0]
   1a31c:	691a      	ldr	r2, [r3, #16]
   1a31e:	69fb      	ldr	r3, [r7, #28]
   1a320:	f003 0307 	and.w	r3, r3, #7
   1a324:	009b      	lsls	r3, r3, #2
   1a326:	fa02 f303 	lsl.w	r3, r2, r3
   1a32a:	69ba      	ldr	r2, [r7, #24]
   1a32c:	4313      	orrs	r3, r2
   1a32e:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
   1a330:	69fb      	ldr	r3, [r7, #28]
   1a332:	08da      	lsrs	r2, r3, #3
   1a334:	687b      	ldr	r3, [r7, #4]
   1a336:	3208      	adds	r2, #8
   1a338:	69b9      	ldr	r1, [r7, #24]
   1a33a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
   1a33e:	687b      	ldr	r3, [r7, #4]
   1a340:	681b      	ldr	r3, [r3, #0]
   1a342:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
   1a344:	69fb      	ldr	r3, [r7, #28]
   1a346:	005b      	lsls	r3, r3, #1
   1a348:	2203      	movs	r2, #3
   1a34a:	fa02 f303 	lsl.w	r3, r2, r3
   1a34e:	43db      	mvns	r3, r3
   1a350:	69ba      	ldr	r2, [r7, #24]
   1a352:	4013      	ands	r3, r2
   1a354:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
   1a356:	683b      	ldr	r3, [r7, #0]
   1a358:	685b      	ldr	r3, [r3, #4]
   1a35a:	f003 0203 	and.w	r2, r3, #3
   1a35e:	69fb      	ldr	r3, [r7, #28]
   1a360:	005b      	lsls	r3, r3, #1
   1a362:	fa02 f303 	lsl.w	r3, r2, r3
   1a366:	69ba      	ldr	r2, [r7, #24]
   1a368:	4313      	orrs	r3, r2
   1a36a:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
   1a36c:	687b      	ldr	r3, [r7, #4]
   1a36e:	69ba      	ldr	r2, [r7, #24]
   1a370:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
   1a372:	683b      	ldr	r3, [r7, #0]
   1a374:	685b      	ldr	r3, [r3, #4]
   1a376:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
   1a37a:	2b00      	cmp	r3, #0
   1a37c:	f000 80e0 	beq.w	1a540 <HAL_GPIO_Init+0x338>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
   1a380:	4b2f      	ldr	r3, [pc, #188]	; (1a440 <HAL_GPIO_Init+0x238>)
   1a382:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
   1a386:	4a2e      	ldr	r2, [pc, #184]	; (1a440 <HAL_GPIO_Init+0x238>)
   1a388:	f043 0302 	orr.w	r3, r3, #2
   1a38c:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
   1a390:	4b2b      	ldr	r3, [pc, #172]	; (1a440 <HAL_GPIO_Init+0x238>)
   1a392:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
   1a396:	f003 0302 	and.w	r3, r3, #2
   1a39a:	60fb      	str	r3, [r7, #12]
   1a39c:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
   1a39e:	4a29      	ldr	r2, [pc, #164]	; (1a444 <HAL_GPIO_Init+0x23c>)
   1a3a0:	69fb      	ldr	r3, [r7, #28]
   1a3a2:	089b      	lsrs	r3, r3, #2
   1a3a4:	3302      	adds	r3, #2
   1a3a6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   1a3aa:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
   1a3ac:	69fb      	ldr	r3, [r7, #28]
   1a3ae:	f003 0303 	and.w	r3, r3, #3
   1a3b2:	009b      	lsls	r3, r3, #2
   1a3b4:	220f      	movs	r2, #15
   1a3b6:	fa02 f303 	lsl.w	r3, r2, r3
   1a3ba:	43db      	mvns	r3, r3
   1a3bc:	69ba      	ldr	r2, [r7, #24]
   1a3be:	4013      	ands	r3, r2
   1a3c0:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
   1a3c2:	687b      	ldr	r3, [r7, #4]
   1a3c4:	4a20      	ldr	r2, [pc, #128]	; (1a448 <HAL_GPIO_Init+0x240>)
   1a3c6:	4293      	cmp	r3, r2
   1a3c8:	d052      	beq.n	1a470 <HAL_GPIO_Init+0x268>
   1a3ca:	687b      	ldr	r3, [r7, #4]
   1a3cc:	4a1f      	ldr	r2, [pc, #124]	; (1a44c <HAL_GPIO_Init+0x244>)
   1a3ce:	4293      	cmp	r3, r2
   1a3d0:	d031      	beq.n	1a436 <HAL_GPIO_Init+0x22e>
   1a3d2:	687b      	ldr	r3, [r7, #4]
   1a3d4:	4a1e      	ldr	r2, [pc, #120]	; (1a450 <HAL_GPIO_Init+0x248>)
   1a3d6:	4293      	cmp	r3, r2
   1a3d8:	d02b      	beq.n	1a432 <HAL_GPIO_Init+0x22a>
   1a3da:	687b      	ldr	r3, [r7, #4]
   1a3dc:	4a1d      	ldr	r2, [pc, #116]	; (1a454 <HAL_GPIO_Init+0x24c>)
   1a3de:	4293      	cmp	r3, r2
   1a3e0:	d025      	beq.n	1a42e <HAL_GPIO_Init+0x226>
   1a3e2:	687b      	ldr	r3, [r7, #4]
   1a3e4:	4a1c      	ldr	r2, [pc, #112]	; (1a458 <HAL_GPIO_Init+0x250>)
   1a3e6:	4293      	cmp	r3, r2
   1a3e8:	d01f      	beq.n	1a42a <HAL_GPIO_Init+0x222>
   1a3ea:	687b      	ldr	r3, [r7, #4]
   1a3ec:	4a1b      	ldr	r2, [pc, #108]	; (1a45c <HAL_GPIO_Init+0x254>)
   1a3ee:	4293      	cmp	r3, r2
   1a3f0:	d019      	beq.n	1a426 <HAL_GPIO_Init+0x21e>
   1a3f2:	687b      	ldr	r3, [r7, #4]
   1a3f4:	4a1a      	ldr	r2, [pc, #104]	; (1a460 <HAL_GPIO_Init+0x258>)
   1a3f6:	4293      	cmp	r3, r2
   1a3f8:	d013      	beq.n	1a422 <HAL_GPIO_Init+0x21a>
   1a3fa:	687b      	ldr	r3, [r7, #4]
   1a3fc:	4a19      	ldr	r2, [pc, #100]	; (1a464 <HAL_GPIO_Init+0x25c>)
   1a3fe:	4293      	cmp	r3, r2
   1a400:	d00d      	beq.n	1a41e <HAL_GPIO_Init+0x216>
   1a402:	687b      	ldr	r3, [r7, #4]
   1a404:	4a18      	ldr	r2, [pc, #96]	; (1a468 <HAL_GPIO_Init+0x260>)
   1a406:	4293      	cmp	r3, r2
   1a408:	d007      	beq.n	1a41a <HAL_GPIO_Init+0x212>
   1a40a:	687b      	ldr	r3, [r7, #4]
   1a40c:	4a17      	ldr	r2, [pc, #92]	; (1a46c <HAL_GPIO_Init+0x264>)
   1a40e:	4293      	cmp	r3, r2
   1a410:	d101      	bne.n	1a416 <HAL_GPIO_Init+0x20e>
   1a412:	2309      	movs	r3, #9
   1a414:	e02d      	b.n	1a472 <HAL_GPIO_Init+0x26a>
   1a416:	230a      	movs	r3, #10
   1a418:	e02b      	b.n	1a472 <HAL_GPIO_Init+0x26a>
   1a41a:	2308      	movs	r3, #8
   1a41c:	e029      	b.n	1a472 <HAL_GPIO_Init+0x26a>
   1a41e:	2307      	movs	r3, #7
   1a420:	e027      	b.n	1a472 <HAL_GPIO_Init+0x26a>
   1a422:	2306      	movs	r3, #6
   1a424:	e025      	b.n	1a472 <HAL_GPIO_Init+0x26a>
   1a426:	2305      	movs	r3, #5
   1a428:	e023      	b.n	1a472 <HAL_GPIO_Init+0x26a>
   1a42a:	2304      	movs	r3, #4
   1a42c:	e021      	b.n	1a472 <HAL_GPIO_Init+0x26a>
   1a42e:	2303      	movs	r3, #3
   1a430:	e01f      	b.n	1a472 <HAL_GPIO_Init+0x26a>
   1a432:	2302      	movs	r3, #2
   1a434:	e01d      	b.n	1a472 <HAL_GPIO_Init+0x26a>
   1a436:	2301      	movs	r3, #1
   1a438:	e01b      	b.n	1a472 <HAL_GPIO_Init+0x26a>
   1a43a:	bf00      	nop
   1a43c:	58000080 	.word	0x58000080
   1a440:	58024400 	.word	0x58024400
   1a444:	58000400 	.word	0x58000400
   1a448:	58020000 	.word	0x58020000
   1a44c:	58020400 	.word	0x58020400
   1a450:	58020800 	.word	0x58020800
   1a454:	58020c00 	.word	0x58020c00
   1a458:	58021000 	.word	0x58021000
   1a45c:	58021400 	.word	0x58021400
   1a460:	58021800 	.word	0x58021800
   1a464:	58021c00 	.word	0x58021c00
   1a468:	58022000 	.word	0x58022000
   1a46c:	58022400 	.word	0x58022400
   1a470:	2300      	movs	r3, #0
   1a472:	69fa      	ldr	r2, [r7, #28]
   1a474:	f002 0203 	and.w	r2, r2, #3
   1a478:	0092      	lsls	r2, r2, #2
   1a47a:	4093      	lsls	r3, r2
   1a47c:	69ba      	ldr	r2, [r7, #24]
   1a47e:	4313      	orrs	r3, r2
   1a480:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
   1a482:	4938      	ldr	r1, [pc, #224]	; (1a564 <HAL_GPIO_Init+0x35c>)
   1a484:	69fb      	ldr	r3, [r7, #28]
   1a486:	089b      	lsrs	r3, r3, #2
   1a488:	3302      	adds	r3, #2
   1a48a:	69ba      	ldr	r2, [r7, #24]
   1a48c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
   1a490:	697b      	ldr	r3, [r7, #20]
   1a492:	681b      	ldr	r3, [r3, #0]
   1a494:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
   1a496:	693b      	ldr	r3, [r7, #16]
   1a498:	43db      	mvns	r3, r3
   1a49a:	69ba      	ldr	r2, [r7, #24]
   1a49c:	4013      	ands	r3, r2
   1a49e:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
   1a4a0:	683b      	ldr	r3, [r7, #0]
   1a4a2:	685b      	ldr	r3, [r3, #4]
   1a4a4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
   1a4a8:	2b00      	cmp	r3, #0
   1a4aa:	d003      	beq.n	1a4b4 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
   1a4ac:	69ba      	ldr	r2, [r7, #24]
   1a4ae:	693b      	ldr	r3, [r7, #16]
   1a4b0:	4313      	orrs	r3, r2
   1a4b2:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->IMR1 = temp;
   1a4b4:	697b      	ldr	r3, [r7, #20]
   1a4b6:	69ba      	ldr	r2, [r7, #24]
   1a4b8:	601a      	str	r2, [r3, #0]

        temp = EXTI_CurrentCPU->EMR1;
   1a4ba:	697b      	ldr	r3, [r7, #20]
   1a4bc:	685b      	ldr	r3, [r3, #4]
   1a4be:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
   1a4c0:	693b      	ldr	r3, [r7, #16]
   1a4c2:	43db      	mvns	r3, r3
   1a4c4:	69ba      	ldr	r2, [r7, #24]
   1a4c6:	4013      	ands	r3, r2
   1a4c8:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
   1a4ca:	683b      	ldr	r3, [r7, #0]
   1a4cc:	685b      	ldr	r3, [r3, #4]
   1a4ce:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
   1a4d2:	2b00      	cmp	r3, #0
   1a4d4:	d003      	beq.n	1a4de <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
   1a4d6:	69ba      	ldr	r2, [r7, #24]
   1a4d8:	693b      	ldr	r3, [r7, #16]
   1a4da:	4313      	orrs	r3, r2
   1a4dc:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->EMR1 = temp;
   1a4de:	697b      	ldr	r3, [r7, #20]
   1a4e0:	69ba      	ldr	r2, [r7, #24]
   1a4e2:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
   1a4e4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
   1a4e8:	681b      	ldr	r3, [r3, #0]
   1a4ea:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
   1a4ec:	693b      	ldr	r3, [r7, #16]
   1a4ee:	43db      	mvns	r3, r3
   1a4f0:	69ba      	ldr	r2, [r7, #24]
   1a4f2:	4013      	ands	r3, r2
   1a4f4:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
   1a4f6:	683b      	ldr	r3, [r7, #0]
   1a4f8:	685b      	ldr	r3, [r3, #4]
   1a4fa:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
   1a4fe:	2b00      	cmp	r3, #0
   1a500:	d003      	beq.n	1a50a <HAL_GPIO_Init+0x302>
        {
          temp |= iocurrent;
   1a502:	69ba      	ldr	r2, [r7, #24]
   1a504:	693b      	ldr	r3, [r7, #16]
   1a506:	4313      	orrs	r3, r2
   1a508:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR1 = temp;
   1a50a:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
   1a50e:	69bb      	ldr	r3, [r7, #24]
   1a510:	6013      	str	r3, [r2, #0]

        temp = EXTI->FTSR1;
   1a512:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
   1a516:	685b      	ldr	r3, [r3, #4]
   1a518:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
   1a51a:	693b      	ldr	r3, [r7, #16]
   1a51c:	43db      	mvns	r3, r3
   1a51e:	69ba      	ldr	r2, [r7, #24]
   1a520:	4013      	ands	r3, r2
   1a522:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
   1a524:	683b      	ldr	r3, [r7, #0]
   1a526:	685b      	ldr	r3, [r3, #4]
   1a528:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
   1a52c:	2b00      	cmp	r3, #0
   1a52e:	d003      	beq.n	1a538 <HAL_GPIO_Init+0x330>
        {
          temp |= iocurrent;
   1a530:	69ba      	ldr	r2, [r7, #24]
   1a532:	693b      	ldr	r3, [r7, #16]
   1a534:	4313      	orrs	r3, r2
   1a536:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR1 = temp;
   1a538:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
   1a53c:	69bb      	ldr	r3, [r7, #24]
   1a53e:	6053      	str	r3, [r2, #4]
      }
    }

    position++;
   1a540:	69fb      	ldr	r3, [r7, #28]
   1a542:	3301      	adds	r3, #1
   1a544:	61fb      	str	r3, [r7, #28]
  while (((GPIO_Init->Pin) >> position) != 0x00U)
   1a546:	683b      	ldr	r3, [r7, #0]
   1a548:	681a      	ldr	r2, [r3, #0]
   1a54a:	69fb      	ldr	r3, [r7, #28]
   1a54c:	fa22 f303 	lsr.w	r3, r2, r3
   1a550:	2b00      	cmp	r3, #0
   1a552:	f47f ae63 	bne.w	1a21c <HAL_GPIO_Init+0x14>
  }
}
   1a556:	bf00      	nop
   1a558:	3724      	adds	r7, #36	; 0x24
   1a55a:	46bd      	mov	sp, r7
   1a55c:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a560:	4770      	bx	lr
   1a562:	bf00      	nop
   1a564:	58000400 	.word	0x58000400

0001a568 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin: specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
   1a568:	b480      	push	{r7}
   1a56a:	b085      	sub	sp, #20
   1a56c:	af00      	add	r7, sp, #0
   1a56e:	6078      	str	r0, [r7, #4]
   1a570:	460b      	mov	r3, r1
   1a572:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
   1a574:	687b      	ldr	r3, [r7, #4]
   1a576:	691a      	ldr	r2, [r3, #16]
   1a578:	887b      	ldrh	r3, [r7, #2]
   1a57a:	4013      	ands	r3, r2
   1a57c:	2b00      	cmp	r3, #0
   1a57e:	d002      	beq.n	1a586 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
   1a580:	2301      	movs	r3, #1
   1a582:	73fb      	strb	r3, [r7, #15]
   1a584:	e001      	b.n	1a58a <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
   1a586:	2300      	movs	r3, #0
   1a588:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
   1a58a:	7bfb      	ldrb	r3, [r7, #15]
}
   1a58c:	4618      	mov	r0, r3
   1a58e:	3714      	adds	r7, #20
   1a590:	46bd      	mov	sp, r7
   1a592:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a596:	4770      	bx	lr

0001a598 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
   1a598:	b480      	push	{r7}
   1a59a:	b083      	sub	sp, #12
   1a59c:	af00      	add	r7, sp, #0
   1a59e:	6078      	str	r0, [r7, #4]
   1a5a0:	460b      	mov	r3, r1
   1a5a2:	807b      	strh	r3, [r7, #2]
   1a5a4:	4613      	mov	r3, r2
   1a5a6:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
   1a5a8:	787b      	ldrb	r3, [r7, #1]
   1a5aa:	2b00      	cmp	r3, #0
   1a5ac:	d003      	beq.n	1a5b6 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
   1a5ae:	887a      	ldrh	r2, [r7, #2]
   1a5b0:	687b      	ldr	r3, [r7, #4]
   1a5b2:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
  }
}
   1a5b4:	e003      	b.n	1a5be <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
   1a5b6:	887b      	ldrh	r3, [r7, #2]
   1a5b8:	041a      	lsls	r2, r3, #16
   1a5ba:	687b      	ldr	r3, [r7, #4]
   1a5bc:	619a      	str	r2, [r3, #24]
}
   1a5be:	bf00      	nop
   1a5c0:	370c      	adds	r7, #12
   1a5c2:	46bd      	mov	sp, r7
   1a5c4:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a5c8:	4770      	bx	lr

0001a5ca <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
   1a5ca:	b5f0      	push	{r4, r5, r6, r7, lr}
   1a5cc:	b08f      	sub	sp, #60	; 0x3c
   1a5ce:	af0a      	add	r7, sp, #40	; 0x28
   1a5d0:	6078      	str	r0, [r7, #4]
  USB_OTG_GlobalTypeDef *USBx;
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
   1a5d2:	687b      	ldr	r3, [r7, #4]
   1a5d4:	2b00      	cmp	r3, #0
   1a5d6:	d101      	bne.n	1a5dc <HAL_PCD_Init+0x12>
  {
    return HAL_ERROR;
   1a5d8:	2301      	movs	r3, #1
   1a5da:	e116      	b.n	1a80a <HAL_PCD_Init+0x240>
  }

  /* Check the parameters */
  assert_param(IS_PCD_ALL_INSTANCE(hpcd->Instance));

  USBx = hpcd->Instance;
   1a5dc:	687b      	ldr	r3, [r7, #4]
   1a5de:	681b      	ldr	r3, [r3, #0]
   1a5e0:	60bb      	str	r3, [r7, #8]

  if (hpcd->State == HAL_PCD_STATE_RESET)
   1a5e2:	687b      	ldr	r3, [r7, #4]
   1a5e4:	f893 33bd 	ldrb.w	r3, [r3, #957]	; 0x3bd
   1a5e8:	b2db      	uxtb	r3, r3
   1a5ea:	2b00      	cmp	r3, #0
   1a5ec:	d106      	bne.n	1a5fc <HAL_PCD_Init+0x32>
  {
    /* Allocate lock resource and initialize it */
    hpcd->Lock = HAL_UNLOCKED;
   1a5ee:	687b      	ldr	r3, [r7, #4]
   1a5f0:	2200      	movs	r2, #0
   1a5f2:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc

    /* Init the low level hardware */
    hpcd->MspInitCallback(hpcd);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
   1a5f6:	6878      	ldr	r0, [r7, #4]
   1a5f8:	f007 ff6c 	bl	224d4 <HAL_PCD_MspInit>
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
   1a5fc:	687b      	ldr	r3, [r7, #4]
   1a5fe:	2203      	movs	r2, #3
   1a600:	f883 23bd 	strb.w	r2, [r3, #957]	; 0x3bd

  /* Disable DMA mode for FS instance */
  if ((USBx->CID & (0x1U << 8)) == 0U)
   1a604:	68bb      	ldr	r3, [r7, #8]
   1a606:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
   1a608:	f403 7380 	and.w	r3, r3, #256	; 0x100
   1a60c:	2b00      	cmp	r3, #0
   1a60e:	d102      	bne.n	1a616 <HAL_PCD_Init+0x4c>
  {
    hpcd->Init.dma_enable = 0U;
   1a610:	687b      	ldr	r3, [r7, #4]
   1a612:	2200      	movs	r2, #0
   1a614:	611a      	str	r2, [r3, #16]
  }

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
   1a616:	687b      	ldr	r3, [r7, #4]
   1a618:	681b      	ldr	r3, [r3, #0]
   1a61a:	4618      	mov	r0, r3
   1a61c:	f006 f951 	bl	208c2 <USB_DisableGlobalInt>

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
   1a620:	687b      	ldr	r3, [r7, #4]
   1a622:	681b      	ldr	r3, [r3, #0]
   1a624:	603b      	str	r3, [r7, #0]
   1a626:	687e      	ldr	r6, [r7, #4]
   1a628:	466d      	mov	r5, sp
   1a62a:	f106 0410 	add.w	r4, r6, #16
   1a62e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1a630:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1a632:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1a634:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1a636:	e894 0003 	ldmia.w	r4, {r0, r1}
   1a63a:	e885 0003 	stmia.w	r5, {r0, r1}
   1a63e:	1d33      	adds	r3, r6, #4
   1a640:	cb0e      	ldmia	r3, {r1, r2, r3}
   1a642:	6838      	ldr	r0, [r7, #0]
   1a644:	f006 f8ca 	bl	207dc <USB_CoreInit>
   1a648:	4603      	mov	r3, r0
   1a64a:	2b00      	cmp	r3, #0
   1a64c:	d005      	beq.n	1a65a <HAL_PCD_Init+0x90>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
   1a64e:	687b      	ldr	r3, [r7, #4]
   1a650:	2202      	movs	r2, #2
   1a652:	f883 23bd 	strb.w	r2, [r3, #957]	; 0x3bd
    return HAL_ERROR;
   1a656:	2301      	movs	r3, #1
   1a658:	e0d7      	b.n	1a80a <HAL_PCD_Init+0x240>
  }

  /* Force Device Mode*/
  (void)USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE);
   1a65a:	687b      	ldr	r3, [r7, #4]
   1a65c:	681b      	ldr	r3, [r3, #0]
   1a65e:	2100      	movs	r1, #0
   1a660:	4618      	mov	r0, r3
   1a662:	f006 f93f 	bl	208e4 <USB_SetCurrentMode>

  /* Init endpoints structures */
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
   1a666:	2300      	movs	r3, #0
   1a668:	73fb      	strb	r3, [r7, #15]
   1a66a:	e04a      	b.n	1a702 <HAL_PCD_Init+0x138>
  {
    /* Init ep structure */
    hpcd->IN_ep[i].is_in = 1U;
   1a66c:	7bfa      	ldrb	r2, [r7, #15]
   1a66e:	6879      	ldr	r1, [r7, #4]
   1a670:	4613      	mov	r3, r2
   1a672:	00db      	lsls	r3, r3, #3
   1a674:	1a9b      	subs	r3, r3, r2
   1a676:	009b      	lsls	r3, r3, #2
   1a678:	440b      	add	r3, r1
   1a67a:	333d      	adds	r3, #61	; 0x3d
   1a67c:	2201      	movs	r2, #1
   1a67e:	701a      	strb	r2, [r3, #0]
    hpcd->IN_ep[i].num = i;
   1a680:	7bfa      	ldrb	r2, [r7, #15]
   1a682:	6879      	ldr	r1, [r7, #4]
   1a684:	4613      	mov	r3, r2
   1a686:	00db      	lsls	r3, r3, #3
   1a688:	1a9b      	subs	r3, r3, r2
   1a68a:	009b      	lsls	r3, r3, #2
   1a68c:	440b      	add	r3, r1
   1a68e:	333c      	adds	r3, #60	; 0x3c
   1a690:	7bfa      	ldrb	r2, [r7, #15]
   1a692:	701a      	strb	r2, [r3, #0]
    hpcd->IN_ep[i].tx_fifo_num = i;
   1a694:	7bfa      	ldrb	r2, [r7, #15]
   1a696:	7bfb      	ldrb	r3, [r7, #15]
   1a698:	b298      	uxth	r0, r3
   1a69a:	6879      	ldr	r1, [r7, #4]
   1a69c:	4613      	mov	r3, r2
   1a69e:	00db      	lsls	r3, r3, #3
   1a6a0:	1a9b      	subs	r3, r3, r2
   1a6a2:	009b      	lsls	r3, r3, #2
   1a6a4:	440b      	add	r3, r1
   1a6a6:	3342      	adds	r3, #66	; 0x42
   1a6a8:	4602      	mov	r2, r0
   1a6aa:	801a      	strh	r2, [r3, #0]
    /* Control until ep is activated */
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
   1a6ac:	7bfa      	ldrb	r2, [r7, #15]
   1a6ae:	6879      	ldr	r1, [r7, #4]
   1a6b0:	4613      	mov	r3, r2
   1a6b2:	00db      	lsls	r3, r3, #3
   1a6b4:	1a9b      	subs	r3, r3, r2
   1a6b6:	009b      	lsls	r3, r3, #2
   1a6b8:	440b      	add	r3, r1
   1a6ba:	333f      	adds	r3, #63	; 0x3f
   1a6bc:	2200      	movs	r2, #0
   1a6be:	701a      	strb	r2, [r3, #0]
    hpcd->IN_ep[i].maxpacket = 0U;
   1a6c0:	7bfa      	ldrb	r2, [r7, #15]
   1a6c2:	6879      	ldr	r1, [r7, #4]
   1a6c4:	4613      	mov	r3, r2
   1a6c6:	00db      	lsls	r3, r3, #3
   1a6c8:	1a9b      	subs	r3, r3, r2
   1a6ca:	009b      	lsls	r3, r3, #2
   1a6cc:	440b      	add	r3, r1
   1a6ce:	3344      	adds	r3, #68	; 0x44
   1a6d0:	2200      	movs	r2, #0
   1a6d2:	601a      	str	r2, [r3, #0]
    hpcd->IN_ep[i].xfer_buff = 0U;
   1a6d4:	7bfa      	ldrb	r2, [r7, #15]
   1a6d6:	6879      	ldr	r1, [r7, #4]
   1a6d8:	4613      	mov	r3, r2
   1a6da:	00db      	lsls	r3, r3, #3
   1a6dc:	1a9b      	subs	r3, r3, r2
   1a6de:	009b      	lsls	r3, r3, #2
   1a6e0:	440b      	add	r3, r1
   1a6e2:	3348      	adds	r3, #72	; 0x48
   1a6e4:	2200      	movs	r2, #0
   1a6e6:	601a      	str	r2, [r3, #0]
    hpcd->IN_ep[i].xfer_len = 0U;
   1a6e8:	7bfa      	ldrb	r2, [r7, #15]
   1a6ea:	6879      	ldr	r1, [r7, #4]
   1a6ec:	4613      	mov	r3, r2
   1a6ee:	00db      	lsls	r3, r3, #3
   1a6f0:	1a9b      	subs	r3, r3, r2
   1a6f2:	009b      	lsls	r3, r3, #2
   1a6f4:	440b      	add	r3, r1
   1a6f6:	3350      	adds	r3, #80	; 0x50
   1a6f8:	2200      	movs	r2, #0
   1a6fa:	601a      	str	r2, [r3, #0]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
   1a6fc:	7bfb      	ldrb	r3, [r7, #15]
   1a6fe:	3301      	adds	r3, #1
   1a700:	73fb      	strb	r3, [r7, #15]
   1a702:	7bfa      	ldrb	r2, [r7, #15]
   1a704:	687b      	ldr	r3, [r7, #4]
   1a706:	685b      	ldr	r3, [r3, #4]
   1a708:	429a      	cmp	r2, r3
   1a70a:	d3af      	bcc.n	1a66c <HAL_PCD_Init+0xa2>
  }

  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
   1a70c:	2300      	movs	r3, #0
   1a70e:	73fb      	strb	r3, [r7, #15]
   1a710:	e044      	b.n	1a79c <HAL_PCD_Init+0x1d2>
  {
    hpcd->OUT_ep[i].is_in = 0U;
   1a712:	7bfa      	ldrb	r2, [r7, #15]
   1a714:	6879      	ldr	r1, [r7, #4]
   1a716:	4613      	mov	r3, r2
   1a718:	00db      	lsls	r3, r3, #3
   1a71a:	1a9b      	subs	r3, r3, r2
   1a71c:	009b      	lsls	r3, r3, #2
   1a71e:	440b      	add	r3, r1
   1a720:	f203 13fd 	addw	r3, r3, #509	; 0x1fd
   1a724:	2200      	movs	r2, #0
   1a726:	701a      	strb	r2, [r3, #0]
    hpcd->OUT_ep[i].num = i;
   1a728:	7bfa      	ldrb	r2, [r7, #15]
   1a72a:	6879      	ldr	r1, [r7, #4]
   1a72c:	4613      	mov	r3, r2
   1a72e:	00db      	lsls	r3, r3, #3
   1a730:	1a9b      	subs	r3, r3, r2
   1a732:	009b      	lsls	r3, r3, #2
   1a734:	440b      	add	r3, r1
   1a736:	f503 73fe 	add.w	r3, r3, #508	; 0x1fc
   1a73a:	7bfa      	ldrb	r2, [r7, #15]
   1a73c:	701a      	strb	r2, [r3, #0]
    /* Control until ep is activated */
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
   1a73e:	7bfa      	ldrb	r2, [r7, #15]
   1a740:	6879      	ldr	r1, [r7, #4]
   1a742:	4613      	mov	r3, r2
   1a744:	00db      	lsls	r3, r3, #3
   1a746:	1a9b      	subs	r3, r3, r2
   1a748:	009b      	lsls	r3, r3, #2
   1a74a:	440b      	add	r3, r1
   1a74c:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   1a750:	2200      	movs	r2, #0
   1a752:	701a      	strb	r2, [r3, #0]
    hpcd->OUT_ep[i].maxpacket = 0U;
   1a754:	7bfa      	ldrb	r2, [r7, #15]
   1a756:	6879      	ldr	r1, [r7, #4]
   1a758:	4613      	mov	r3, r2
   1a75a:	00db      	lsls	r3, r3, #3
   1a75c:	1a9b      	subs	r3, r3, r2
   1a75e:	009b      	lsls	r3, r3, #2
   1a760:	440b      	add	r3, r1
   1a762:	f503 7301 	add.w	r3, r3, #516	; 0x204
   1a766:	2200      	movs	r2, #0
   1a768:	601a      	str	r2, [r3, #0]
    hpcd->OUT_ep[i].xfer_buff = 0U;
   1a76a:	7bfa      	ldrb	r2, [r7, #15]
   1a76c:	6879      	ldr	r1, [r7, #4]
   1a76e:	4613      	mov	r3, r2
   1a770:	00db      	lsls	r3, r3, #3
   1a772:	1a9b      	subs	r3, r3, r2
   1a774:	009b      	lsls	r3, r3, #2
   1a776:	440b      	add	r3, r1
   1a778:	f503 7302 	add.w	r3, r3, #520	; 0x208
   1a77c:	2200      	movs	r2, #0
   1a77e:	601a      	str	r2, [r3, #0]
    hpcd->OUT_ep[i].xfer_len = 0U;
   1a780:	7bfa      	ldrb	r2, [r7, #15]
   1a782:	6879      	ldr	r1, [r7, #4]
   1a784:	4613      	mov	r3, r2
   1a786:	00db      	lsls	r3, r3, #3
   1a788:	1a9b      	subs	r3, r3, r2
   1a78a:	009b      	lsls	r3, r3, #2
   1a78c:	440b      	add	r3, r1
   1a78e:	f503 7304 	add.w	r3, r3, #528	; 0x210
   1a792:	2200      	movs	r2, #0
   1a794:	601a      	str	r2, [r3, #0]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
   1a796:	7bfb      	ldrb	r3, [r7, #15]
   1a798:	3301      	adds	r3, #1
   1a79a:	73fb      	strb	r3, [r7, #15]
   1a79c:	7bfa      	ldrb	r2, [r7, #15]
   1a79e:	687b      	ldr	r3, [r7, #4]
   1a7a0:	685b      	ldr	r3, [r3, #4]
   1a7a2:	429a      	cmp	r2, r3
   1a7a4:	d3b5      	bcc.n	1a712 <HAL_PCD_Init+0x148>
  }

  /* Init Device */
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
   1a7a6:	687b      	ldr	r3, [r7, #4]
   1a7a8:	681b      	ldr	r3, [r3, #0]
   1a7aa:	603b      	str	r3, [r7, #0]
   1a7ac:	687e      	ldr	r6, [r7, #4]
   1a7ae:	466d      	mov	r5, sp
   1a7b0:	f106 0410 	add.w	r4, r6, #16
   1a7b4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1a7b6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1a7b8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1a7ba:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1a7bc:	e894 0003 	ldmia.w	r4, {r0, r1}
   1a7c0:	e885 0003 	stmia.w	r5, {r0, r1}
   1a7c4:	1d33      	adds	r3, r6, #4
   1a7c6:	cb0e      	ldmia	r3, {r1, r2, r3}
   1a7c8:	6838      	ldr	r0, [r7, #0]
   1a7ca:	f006 f8b5 	bl	20938 <USB_DevInit>
   1a7ce:	4603      	mov	r3, r0
   1a7d0:	2b00      	cmp	r3, #0
   1a7d2:	d005      	beq.n	1a7e0 <HAL_PCD_Init+0x216>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
   1a7d4:	687b      	ldr	r3, [r7, #4]
   1a7d6:	2202      	movs	r2, #2
   1a7d8:	f883 23bd 	strb.w	r2, [r3, #957]	; 0x3bd
    return HAL_ERROR;
   1a7dc:	2301      	movs	r3, #1
   1a7de:	e014      	b.n	1a80a <HAL_PCD_Init+0x240>
  }

  hpcd->USB_Address = 0U;
   1a7e0:	687b      	ldr	r3, [r7, #4]
   1a7e2:	2200      	movs	r2, #0
   1a7e4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
  hpcd->State = HAL_PCD_STATE_READY;
   1a7e8:	687b      	ldr	r3, [r7, #4]
   1a7ea:	2201      	movs	r2, #1
   1a7ec:	f883 23bd 	strb.w	r2, [r3, #957]	; 0x3bd
  
  /* Activate LPM */
  if (hpcd->Init.lpm_enable == 1U)
   1a7f0:	687b      	ldr	r3, [r7, #4]
   1a7f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1a7f4:	2b01      	cmp	r3, #1
   1a7f6:	d102      	bne.n	1a7fe <HAL_PCD_Init+0x234>
  {
    (void)HAL_PCDEx_ActivateLPM(hpcd);
   1a7f8:	6878      	ldr	r0, [r7, #4]
   1a7fa:	f000 fa59 	bl	1acb0 <HAL_PCDEx_ActivateLPM>
  }
  
  (void)USB_DevDisconnect(hpcd->Instance);
   1a7fe:	687b      	ldr	r3, [r7, #4]
   1a800:	681b      	ldr	r3, [r3, #0]
   1a802:	4618      	mov	r0, r3
   1a804:	f006 ffc3 	bl	2178e <USB_DevDisconnect>

  return HAL_OK;
   1a808:	2300      	movs	r3, #0
}
   1a80a:	4618      	mov	r0, r3
   1a80c:	3714      	adds	r7, #20
   1a80e:	46bd      	mov	sp, r7
   1a810:	bdf0      	pop	{r4, r5, r6, r7, pc}

0001a812 <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
   1a812:	b580      	push	{r7, lr}
   1a814:	b084      	sub	sp, #16
   1a816:	af00      	add	r7, sp, #0
   1a818:	6078      	str	r0, [r7, #4]
#if defined (USB_OTG_FS) || defined (USB_OTG_HS)
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
   1a81a:	687b      	ldr	r3, [r7, #4]
   1a81c:	681b      	ldr	r3, [r3, #0]
   1a81e:	60fb      	str	r3, [r7, #12]
#endif /* defined (USB_OTG_FS) || defined (USB_OTG_HS) */

  __HAL_LOCK(hpcd);
   1a820:	687b      	ldr	r3, [r7, #4]
   1a822:	f893 33bc 	ldrb.w	r3, [r3, #956]	; 0x3bc
   1a826:	2b01      	cmp	r3, #1
   1a828:	d101      	bne.n	1a82e <HAL_PCD_Start+0x1c>
   1a82a:	2302      	movs	r3, #2
   1a82c:	e020      	b.n	1a870 <HAL_PCD_Start+0x5e>
   1a82e:	687b      	ldr	r3, [r7, #4]
   1a830:	2201      	movs	r2, #1
   1a832:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
#if defined (USB_OTG_FS) || defined (USB_OTG_HS)
  if ((hpcd->Init.battery_charging_enable == 1U) &&
   1a836:	687b      	ldr	r3, [r7, #4]
   1a838:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1a83a:	2b01      	cmp	r3, #1
   1a83c:	d109      	bne.n	1a852 <HAL_PCD_Start+0x40>
      (hpcd->Init.phy_itface != USB_OTG_ULPI_PHY))
   1a83e:	687b      	ldr	r3, [r7, #4]
   1a840:	699b      	ldr	r3, [r3, #24]
  if ((hpcd->Init.battery_charging_enable == 1U) &&
   1a842:	2b01      	cmp	r3, #1
   1a844:	d005      	beq.n	1a852 <HAL_PCD_Start+0x40>
  {
    /* Enable USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
   1a846:	68fb      	ldr	r3, [r7, #12]
   1a848:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   1a84a:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
   1a84e:	68fb      	ldr	r3, [r7, #12]
   1a850:	639a      	str	r2, [r3, #56]	; 0x38
  }
#endif /* defined (USB_OTG_FS) || defined (USB_OTG_HS) */
  (void)USB_DevConnect(hpcd->Instance);
   1a852:	687b      	ldr	r3, [r7, #4]
   1a854:	681b      	ldr	r3, [r3, #0]
   1a856:	4618      	mov	r0, r3
   1a858:	f006 ff81 	bl	2175e <USB_DevConnect>
  __HAL_PCD_ENABLE(hpcd);
   1a85c:	687b      	ldr	r3, [r7, #4]
   1a85e:	681b      	ldr	r3, [r3, #0]
   1a860:	4618      	mov	r0, r3
   1a862:	f006 f81d 	bl	208a0 <USB_EnableGlobalInt>
  __HAL_UNLOCK(hpcd);
   1a866:	687b      	ldr	r3, [r7, #4]
   1a868:	2200      	movs	r2, #0
   1a86a:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
  return HAL_OK;
   1a86e:	2300      	movs	r3, #0
}
   1a870:	4618      	mov	r0, r3
   1a872:	3710      	adds	r7, #16
   1a874:	46bd      	mov	sp, r7
   1a876:	bd80      	pop	{r7, pc}

0001a878 <HAL_PCD_EP_Open>:
  * @param  ep_mps endpoint max packet size
  * @param  ep_type endpoint type
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Open(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint16_t ep_mps, uint8_t ep_type)
{
   1a878:	b580      	push	{r7, lr}
   1a87a:	b084      	sub	sp, #16
   1a87c:	af00      	add	r7, sp, #0
   1a87e:	6078      	str	r0, [r7, #4]
   1a880:	4608      	mov	r0, r1
   1a882:	4611      	mov	r1, r2
   1a884:	461a      	mov	r2, r3
   1a886:	4603      	mov	r3, r0
   1a888:	70fb      	strb	r3, [r7, #3]
   1a88a:	460b      	mov	r3, r1
   1a88c:	803b      	strh	r3, [r7, #0]
   1a88e:	4613      	mov	r3, r2
   1a890:	70bb      	strb	r3, [r7, #2]
  HAL_StatusTypeDef  ret = HAL_OK;
   1a892:	2300      	movs	r3, #0
   1a894:	72fb      	strb	r3, [r7, #11]
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
   1a896:	f997 3003 	ldrsb.w	r3, [r7, #3]
   1a89a:	2b00      	cmp	r3, #0
   1a89c:	da0f      	bge.n	1a8be <HAL_PCD_EP_Open+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
   1a89e:	78fb      	ldrb	r3, [r7, #3]
   1a8a0:	f003 020f 	and.w	r2, r3, #15
   1a8a4:	4613      	mov	r3, r2
   1a8a6:	00db      	lsls	r3, r3, #3
   1a8a8:	1a9b      	subs	r3, r3, r2
   1a8aa:	009b      	lsls	r3, r3, #2
   1a8ac:	3338      	adds	r3, #56	; 0x38
   1a8ae:	687a      	ldr	r2, [r7, #4]
   1a8b0:	4413      	add	r3, r2
   1a8b2:	3304      	adds	r3, #4
   1a8b4:	60fb      	str	r3, [r7, #12]
    ep->is_in = 1U;
   1a8b6:	68fb      	ldr	r3, [r7, #12]
   1a8b8:	2201      	movs	r2, #1
   1a8ba:	705a      	strb	r2, [r3, #1]
   1a8bc:	e00f      	b.n	1a8de <HAL_PCD_EP_Open+0x66>
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
   1a8be:	78fb      	ldrb	r3, [r7, #3]
   1a8c0:	f003 020f 	and.w	r2, r3, #15
   1a8c4:	4613      	mov	r3, r2
   1a8c6:	00db      	lsls	r3, r3, #3
   1a8c8:	1a9b      	subs	r3, r3, r2
   1a8ca:	009b      	lsls	r3, r3, #2
   1a8cc:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
   1a8d0:	687a      	ldr	r2, [r7, #4]
   1a8d2:	4413      	add	r3, r2
   1a8d4:	3304      	adds	r3, #4
   1a8d6:	60fb      	str	r3, [r7, #12]
    ep->is_in = 0U;
   1a8d8:	68fb      	ldr	r3, [r7, #12]
   1a8da:	2200      	movs	r2, #0
   1a8dc:	705a      	strb	r2, [r3, #1]
  }

  ep->num = ep_addr & EP_ADDR_MSK;
   1a8de:	78fb      	ldrb	r3, [r7, #3]
   1a8e0:	f003 030f 	and.w	r3, r3, #15
   1a8e4:	b2da      	uxtb	r2, r3
   1a8e6:	68fb      	ldr	r3, [r7, #12]
   1a8e8:	701a      	strb	r2, [r3, #0]
  ep->maxpacket = ep_mps;
   1a8ea:	883a      	ldrh	r2, [r7, #0]
   1a8ec:	68fb      	ldr	r3, [r7, #12]
   1a8ee:	609a      	str	r2, [r3, #8]
  ep->type = ep_type;
   1a8f0:	68fb      	ldr	r3, [r7, #12]
   1a8f2:	78ba      	ldrb	r2, [r7, #2]
   1a8f4:	70da      	strb	r2, [r3, #3]

  if (ep->is_in != 0U)
   1a8f6:	68fb      	ldr	r3, [r7, #12]
   1a8f8:	785b      	ldrb	r3, [r3, #1]
   1a8fa:	2b00      	cmp	r3, #0
   1a8fc:	d004      	beq.n	1a908 <HAL_PCD_EP_Open+0x90>
  {
    /* Assign a Tx FIFO */
    ep->tx_fifo_num = ep->num;
   1a8fe:	68fb      	ldr	r3, [r7, #12]
   1a900:	781b      	ldrb	r3, [r3, #0]
   1a902:	b29a      	uxth	r2, r3
   1a904:	68fb      	ldr	r3, [r7, #12]
   1a906:	80da      	strh	r2, [r3, #6]
  }
  /* Set initial data PID. */
  if (ep_type == EP_TYPE_BULK)
   1a908:	78bb      	ldrb	r3, [r7, #2]
   1a90a:	2b02      	cmp	r3, #2
   1a90c:	d102      	bne.n	1a914 <HAL_PCD_EP_Open+0x9c>
  {
    ep->data_pid_start = 0U;
   1a90e:	68fb      	ldr	r3, [r7, #12]
   1a910:	2200      	movs	r2, #0
   1a912:	711a      	strb	r2, [r3, #4]
  }

  __HAL_LOCK(hpcd);
   1a914:	687b      	ldr	r3, [r7, #4]
   1a916:	f893 33bc 	ldrb.w	r3, [r3, #956]	; 0x3bc
   1a91a:	2b01      	cmp	r3, #1
   1a91c:	d101      	bne.n	1a922 <HAL_PCD_EP_Open+0xaa>
   1a91e:	2302      	movs	r3, #2
   1a920:	e00e      	b.n	1a940 <HAL_PCD_EP_Open+0xc8>
   1a922:	687b      	ldr	r3, [r7, #4]
   1a924:	2201      	movs	r2, #1
   1a926:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
   1a92a:	687b      	ldr	r3, [r7, #4]
   1a92c:	681b      	ldr	r3, [r3, #0]
   1a92e:	68f9      	ldr	r1, [r7, #12]
   1a930:	4618      	mov	r0, r3
   1a932:	f006 f9c1 	bl	20cb8 <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
   1a936:	687b      	ldr	r3, [r7, #4]
   1a938:	2200      	movs	r2, #0
   1a93a:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc

  return ret;
   1a93e:	7afb      	ldrb	r3, [r7, #11]
}
   1a940:	4618      	mov	r0, r3
   1a942:	3710      	adds	r7, #16
   1a944:	46bd      	mov	sp, r7
   1a946:	bd80      	pop	{r7, pc}

0001a948 <HAL_PCD_EP_Close>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Close(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
   1a948:	b580      	push	{r7, lr}
   1a94a:	b084      	sub	sp, #16
   1a94c:	af00      	add	r7, sp, #0
   1a94e:	6078      	str	r0, [r7, #4]
   1a950:	460b      	mov	r3, r1
   1a952:	70fb      	strb	r3, [r7, #3]
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
   1a954:	f997 3003 	ldrsb.w	r3, [r7, #3]
   1a958:	2b00      	cmp	r3, #0
   1a95a:	da0f      	bge.n	1a97c <HAL_PCD_EP_Close+0x34>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
   1a95c:	78fb      	ldrb	r3, [r7, #3]
   1a95e:	f003 020f 	and.w	r2, r3, #15
   1a962:	4613      	mov	r3, r2
   1a964:	00db      	lsls	r3, r3, #3
   1a966:	1a9b      	subs	r3, r3, r2
   1a968:	009b      	lsls	r3, r3, #2
   1a96a:	3338      	adds	r3, #56	; 0x38
   1a96c:	687a      	ldr	r2, [r7, #4]
   1a96e:	4413      	add	r3, r2
   1a970:	3304      	adds	r3, #4
   1a972:	60fb      	str	r3, [r7, #12]
    ep->is_in = 1U;
   1a974:	68fb      	ldr	r3, [r7, #12]
   1a976:	2201      	movs	r2, #1
   1a978:	705a      	strb	r2, [r3, #1]
   1a97a:	e00f      	b.n	1a99c <HAL_PCD_EP_Close+0x54>
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
   1a97c:	78fb      	ldrb	r3, [r7, #3]
   1a97e:	f003 020f 	and.w	r2, r3, #15
   1a982:	4613      	mov	r3, r2
   1a984:	00db      	lsls	r3, r3, #3
   1a986:	1a9b      	subs	r3, r3, r2
   1a988:	009b      	lsls	r3, r3, #2
   1a98a:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
   1a98e:	687a      	ldr	r2, [r7, #4]
   1a990:	4413      	add	r3, r2
   1a992:	3304      	adds	r3, #4
   1a994:	60fb      	str	r3, [r7, #12]
    ep->is_in = 0U;
   1a996:	68fb      	ldr	r3, [r7, #12]
   1a998:	2200      	movs	r2, #0
   1a99a:	705a      	strb	r2, [r3, #1]
  }
  ep->num   = ep_addr & EP_ADDR_MSK;
   1a99c:	78fb      	ldrb	r3, [r7, #3]
   1a99e:	f003 030f 	and.w	r3, r3, #15
   1a9a2:	b2da      	uxtb	r2, r3
   1a9a4:	68fb      	ldr	r3, [r7, #12]
   1a9a6:	701a      	strb	r2, [r3, #0]

  __HAL_LOCK(hpcd);
   1a9a8:	687b      	ldr	r3, [r7, #4]
   1a9aa:	f893 33bc 	ldrb.w	r3, [r3, #956]	; 0x3bc
   1a9ae:	2b01      	cmp	r3, #1
   1a9b0:	d101      	bne.n	1a9b6 <HAL_PCD_EP_Close+0x6e>
   1a9b2:	2302      	movs	r3, #2
   1a9b4:	e00e      	b.n	1a9d4 <HAL_PCD_EP_Close+0x8c>
   1a9b6:	687b      	ldr	r3, [r7, #4]
   1a9b8:	2201      	movs	r2, #1
   1a9ba:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
   1a9be:	687b      	ldr	r3, [r7, #4]
   1a9c0:	681b      	ldr	r3, [r3, #0]
   1a9c2:	68f9      	ldr	r1, [r7, #12]
   1a9c4:	4618      	mov	r0, r3
   1a9c6:	f006 f9ff 	bl	20dc8 <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
   1a9ca:	687b      	ldr	r3, [r7, #4]
   1a9cc:	2200      	movs	r2, #0
   1a9ce:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
  return HAL_OK;
   1a9d2:	2300      	movs	r3, #0
}
   1a9d4:	4618      	mov	r0, r3
   1a9d6:	3710      	adds	r7, #16
   1a9d8:	46bd      	mov	sp, r7
   1a9da:	bd80      	pop	{r7, pc}

0001a9dc <HAL_PCD_EP_Receive>:
  * @param  pBuf pointer to the reception buffer
  * @param  len amount of data to be received
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Receive(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
   1a9dc:	b580      	push	{r7, lr}
   1a9de:	b086      	sub	sp, #24
   1a9e0:	af00      	add	r7, sp, #0
   1a9e2:	60f8      	str	r0, [r7, #12]
   1a9e4:	607a      	str	r2, [r7, #4]
   1a9e6:	603b      	str	r3, [r7, #0]
   1a9e8:	460b      	mov	r3, r1
   1a9ea:	72fb      	strb	r3, [r7, #11]
  PCD_EPTypeDef *ep;

  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
   1a9ec:	7afb      	ldrb	r3, [r7, #11]
   1a9ee:	f003 020f 	and.w	r2, r3, #15
   1a9f2:	4613      	mov	r3, r2
   1a9f4:	00db      	lsls	r3, r3, #3
   1a9f6:	1a9b      	subs	r3, r3, r2
   1a9f8:	009b      	lsls	r3, r3, #2
   1a9fa:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
   1a9fe:	68fa      	ldr	r2, [r7, #12]
   1aa00:	4413      	add	r3, r2
   1aa02:	3304      	adds	r3, #4
   1aa04:	617b      	str	r3, [r7, #20]

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
   1aa06:	697b      	ldr	r3, [r7, #20]
   1aa08:	687a      	ldr	r2, [r7, #4]
   1aa0a:	60da      	str	r2, [r3, #12]
  ep->xfer_len = len;
   1aa0c:	697b      	ldr	r3, [r7, #20]
   1aa0e:	683a      	ldr	r2, [r7, #0]
   1aa10:	615a      	str	r2, [r3, #20]
  ep->xfer_count = 0U;
   1aa12:	697b      	ldr	r3, [r7, #20]
   1aa14:	2200      	movs	r2, #0
   1aa16:	619a      	str	r2, [r3, #24]
  ep->is_in = 0U;
   1aa18:	697b      	ldr	r3, [r7, #20]
   1aa1a:	2200      	movs	r2, #0
   1aa1c:	705a      	strb	r2, [r3, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
   1aa1e:	7afb      	ldrb	r3, [r7, #11]
   1aa20:	f003 030f 	and.w	r3, r3, #15
   1aa24:	b2da      	uxtb	r2, r3
   1aa26:	697b      	ldr	r3, [r7, #20]
   1aa28:	701a      	strb	r2, [r3, #0]

  if (hpcd->Init.dma_enable == 1U)
   1aa2a:	68fb      	ldr	r3, [r7, #12]
   1aa2c:	691b      	ldr	r3, [r3, #16]
   1aa2e:	2b01      	cmp	r3, #1
   1aa30:	d102      	bne.n	1aa38 <HAL_PCD_EP_Receive+0x5c>
  {
    ep->dma_addr = (uint32_t)pBuf;
   1aa32:	687a      	ldr	r2, [r7, #4]
   1aa34:	697b      	ldr	r3, [r7, #20]
   1aa36:	611a      	str	r2, [r3, #16]
  }

  if ((ep_addr & EP_ADDR_MSK) == 0U)
   1aa38:	7afb      	ldrb	r3, [r7, #11]
   1aa3a:	f003 030f 	and.w	r3, r3, #15
   1aa3e:	2b00      	cmp	r3, #0
   1aa40:	d109      	bne.n	1aa56 <HAL_PCD_EP_Receive+0x7a>
  {
    (void)USB_EP0StartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
   1aa42:	68fb      	ldr	r3, [r7, #12]
   1aa44:	6818      	ldr	r0, [r3, #0]
   1aa46:	68fb      	ldr	r3, [r7, #12]
   1aa48:	691b      	ldr	r3, [r3, #16]
   1aa4a:	b2db      	uxtb	r3, r3
   1aa4c:	461a      	mov	r2, r3
   1aa4e:	6979      	ldr	r1, [r7, #20]
   1aa50:	f006 fc8a 	bl	21368 <USB_EP0StartXfer>
   1aa54:	e008      	b.n	1aa68 <HAL_PCD_EP_Receive+0x8c>
  }
  else
  {
    (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
   1aa56:	68fb      	ldr	r3, [r7, #12]
   1aa58:	6818      	ldr	r0, [r3, #0]
   1aa5a:	68fb      	ldr	r3, [r7, #12]
   1aa5c:	691b      	ldr	r3, [r3, #16]
   1aa5e:	b2db      	uxtb	r3, r3
   1aa60:	461a      	mov	r2, r3
   1aa62:	6979      	ldr	r1, [r7, #20]
   1aa64:	f006 fa34 	bl	20ed0 <USB_EPStartXfer>
  }

  return HAL_OK;
   1aa68:	2300      	movs	r3, #0
}
   1aa6a:	4618      	mov	r0, r3
   1aa6c:	3718      	adds	r7, #24
   1aa6e:	46bd      	mov	sp, r7
   1aa70:	bd80      	pop	{r7, pc}

0001aa72 <HAL_PCD_EP_GetRxCount>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval Data Size
  */
uint32_t HAL_PCD_EP_GetRxCount(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
   1aa72:	b480      	push	{r7}
   1aa74:	b083      	sub	sp, #12
   1aa76:	af00      	add	r7, sp, #0
   1aa78:	6078      	str	r0, [r7, #4]
   1aa7a:	460b      	mov	r3, r1
   1aa7c:	70fb      	strb	r3, [r7, #3]
  return hpcd->OUT_ep[ep_addr & EP_ADDR_MSK].xfer_count;
   1aa7e:	78fb      	ldrb	r3, [r7, #3]
   1aa80:	f003 020f 	and.w	r2, r3, #15
   1aa84:	6879      	ldr	r1, [r7, #4]
   1aa86:	4613      	mov	r3, r2
   1aa88:	00db      	lsls	r3, r3, #3
   1aa8a:	1a9b      	subs	r3, r3, r2
   1aa8c:	009b      	lsls	r3, r3, #2
   1aa8e:	440b      	add	r3, r1
   1aa90:	f503 7305 	add.w	r3, r3, #532	; 0x214
   1aa94:	681b      	ldr	r3, [r3, #0]
}
   1aa96:	4618      	mov	r0, r3
   1aa98:	370c      	adds	r7, #12
   1aa9a:	46bd      	mov	sp, r7
   1aa9c:	f85d 7b04 	ldr.w	r7, [sp], #4
   1aaa0:	4770      	bx	lr

0001aaa2 <HAL_PCD_EP_Transmit>:
  * @param  pBuf pointer to the transmission buffer
  * @param  len amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Transmit(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
   1aaa2:	b580      	push	{r7, lr}
   1aaa4:	b086      	sub	sp, #24
   1aaa6:	af00      	add	r7, sp, #0
   1aaa8:	60f8      	str	r0, [r7, #12]
   1aaaa:	607a      	str	r2, [r7, #4]
   1aaac:	603b      	str	r3, [r7, #0]
   1aaae:	460b      	mov	r3, r1
   1aab0:	72fb      	strb	r3, [r7, #11]
  PCD_EPTypeDef *ep;

  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
   1aab2:	7afb      	ldrb	r3, [r7, #11]
   1aab4:	f003 020f 	and.w	r2, r3, #15
   1aab8:	4613      	mov	r3, r2
   1aaba:	00db      	lsls	r3, r3, #3
   1aabc:	1a9b      	subs	r3, r3, r2
   1aabe:	009b      	lsls	r3, r3, #2
   1aac0:	3338      	adds	r3, #56	; 0x38
   1aac2:	68fa      	ldr	r2, [r7, #12]
   1aac4:	4413      	add	r3, r2
   1aac6:	3304      	adds	r3, #4
   1aac8:	617b      	str	r3, [r7, #20]

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
   1aaca:	697b      	ldr	r3, [r7, #20]
   1aacc:	687a      	ldr	r2, [r7, #4]
   1aace:	60da      	str	r2, [r3, #12]
  ep->xfer_len = len;
   1aad0:	697b      	ldr	r3, [r7, #20]
   1aad2:	683a      	ldr	r2, [r7, #0]
   1aad4:	615a      	str	r2, [r3, #20]
  ep->xfer_count = 0U;
   1aad6:	697b      	ldr	r3, [r7, #20]
   1aad8:	2200      	movs	r2, #0
   1aada:	619a      	str	r2, [r3, #24]
  ep->is_in = 1U;
   1aadc:	697b      	ldr	r3, [r7, #20]
   1aade:	2201      	movs	r2, #1
   1aae0:	705a      	strb	r2, [r3, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
   1aae2:	7afb      	ldrb	r3, [r7, #11]
   1aae4:	f003 030f 	and.w	r3, r3, #15
   1aae8:	b2da      	uxtb	r2, r3
   1aaea:	697b      	ldr	r3, [r7, #20]
   1aaec:	701a      	strb	r2, [r3, #0]

  if (hpcd->Init.dma_enable == 1U)
   1aaee:	68fb      	ldr	r3, [r7, #12]
   1aaf0:	691b      	ldr	r3, [r3, #16]
   1aaf2:	2b01      	cmp	r3, #1
   1aaf4:	d102      	bne.n	1aafc <HAL_PCD_EP_Transmit+0x5a>
  {
    ep->dma_addr = (uint32_t)pBuf;
   1aaf6:	687a      	ldr	r2, [r7, #4]
   1aaf8:	697b      	ldr	r3, [r7, #20]
   1aafa:	611a      	str	r2, [r3, #16]
  }

  if ((ep_addr & EP_ADDR_MSK) == 0U)
   1aafc:	7afb      	ldrb	r3, [r7, #11]
   1aafe:	f003 030f 	and.w	r3, r3, #15
   1ab02:	2b00      	cmp	r3, #0
   1ab04:	d109      	bne.n	1ab1a <HAL_PCD_EP_Transmit+0x78>
  {
    (void)USB_EP0StartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
   1ab06:	68fb      	ldr	r3, [r7, #12]
   1ab08:	6818      	ldr	r0, [r3, #0]
   1ab0a:	68fb      	ldr	r3, [r7, #12]
   1ab0c:	691b      	ldr	r3, [r3, #16]
   1ab0e:	b2db      	uxtb	r3, r3
   1ab10:	461a      	mov	r2, r3
   1ab12:	6979      	ldr	r1, [r7, #20]
   1ab14:	f006 fc28 	bl	21368 <USB_EP0StartXfer>
   1ab18:	e008      	b.n	1ab2c <HAL_PCD_EP_Transmit+0x8a>
  }
  else
  {
    (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
   1ab1a:	68fb      	ldr	r3, [r7, #12]
   1ab1c:	6818      	ldr	r0, [r3, #0]
   1ab1e:	68fb      	ldr	r3, [r7, #12]
   1ab20:	691b      	ldr	r3, [r3, #16]
   1ab22:	b2db      	uxtb	r3, r3
   1ab24:	461a      	mov	r2, r3
   1ab26:	6979      	ldr	r1, [r7, #20]
   1ab28:	f006 f9d2 	bl	20ed0 <USB_EPStartXfer>
  }

  return HAL_OK;
   1ab2c:	2300      	movs	r3, #0
}
   1ab2e:	4618      	mov	r0, r3
   1ab30:	3718      	adds	r7, #24
   1ab32:	46bd      	mov	sp, r7
   1ab34:	bd80      	pop	{r7, pc}

0001ab36 <HAL_PCD_EP_SetStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_SetStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
   1ab36:	b580      	push	{r7, lr}
   1ab38:	b084      	sub	sp, #16
   1ab3a:	af00      	add	r7, sp, #0
   1ab3c:	6078      	str	r0, [r7, #4]
   1ab3e:	460b      	mov	r3, r1
   1ab40:	70fb      	strb	r3, [r7, #3]
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
   1ab42:	78fb      	ldrb	r3, [r7, #3]
   1ab44:	f003 020f 	and.w	r2, r3, #15
   1ab48:	687b      	ldr	r3, [r7, #4]
   1ab4a:	685b      	ldr	r3, [r3, #4]
   1ab4c:	429a      	cmp	r2, r3
   1ab4e:	d901      	bls.n	1ab54 <HAL_PCD_EP_SetStall+0x1e>
  {
    return HAL_ERROR;
   1ab50:	2301      	movs	r3, #1
   1ab52:	e050      	b.n	1abf6 <HAL_PCD_EP_SetStall+0xc0>
  }

  if ((0x80U & ep_addr) == 0x80U)
   1ab54:	f997 3003 	ldrsb.w	r3, [r7, #3]
   1ab58:	2b00      	cmp	r3, #0
   1ab5a:	da0f      	bge.n	1ab7c <HAL_PCD_EP_SetStall+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
   1ab5c:	78fb      	ldrb	r3, [r7, #3]
   1ab5e:	f003 020f 	and.w	r2, r3, #15
   1ab62:	4613      	mov	r3, r2
   1ab64:	00db      	lsls	r3, r3, #3
   1ab66:	1a9b      	subs	r3, r3, r2
   1ab68:	009b      	lsls	r3, r3, #2
   1ab6a:	3338      	adds	r3, #56	; 0x38
   1ab6c:	687a      	ldr	r2, [r7, #4]
   1ab6e:	4413      	add	r3, r2
   1ab70:	3304      	adds	r3, #4
   1ab72:	60fb      	str	r3, [r7, #12]
    ep->is_in = 1U;
   1ab74:	68fb      	ldr	r3, [r7, #12]
   1ab76:	2201      	movs	r2, #1
   1ab78:	705a      	strb	r2, [r3, #1]
   1ab7a:	e00d      	b.n	1ab98 <HAL_PCD_EP_SetStall+0x62>
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr];
   1ab7c:	78fa      	ldrb	r2, [r7, #3]
   1ab7e:	4613      	mov	r3, r2
   1ab80:	00db      	lsls	r3, r3, #3
   1ab82:	1a9b      	subs	r3, r3, r2
   1ab84:	009b      	lsls	r3, r3, #2
   1ab86:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
   1ab8a:	687a      	ldr	r2, [r7, #4]
   1ab8c:	4413      	add	r3, r2
   1ab8e:	3304      	adds	r3, #4
   1ab90:	60fb      	str	r3, [r7, #12]
    ep->is_in = 0U;
   1ab92:	68fb      	ldr	r3, [r7, #12]
   1ab94:	2200      	movs	r2, #0
   1ab96:	705a      	strb	r2, [r3, #1]
  }

  ep->is_stall = 1U;
   1ab98:	68fb      	ldr	r3, [r7, #12]
   1ab9a:	2201      	movs	r2, #1
   1ab9c:	709a      	strb	r2, [r3, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
   1ab9e:	78fb      	ldrb	r3, [r7, #3]
   1aba0:	f003 030f 	and.w	r3, r3, #15
   1aba4:	b2da      	uxtb	r2, r3
   1aba6:	68fb      	ldr	r3, [r7, #12]
   1aba8:	701a      	strb	r2, [r3, #0]

  __HAL_LOCK(hpcd);
   1abaa:	687b      	ldr	r3, [r7, #4]
   1abac:	f893 33bc 	ldrb.w	r3, [r3, #956]	; 0x3bc
   1abb0:	2b01      	cmp	r3, #1
   1abb2:	d101      	bne.n	1abb8 <HAL_PCD_EP_SetStall+0x82>
   1abb4:	2302      	movs	r3, #2
   1abb6:	e01e      	b.n	1abf6 <HAL_PCD_EP_SetStall+0xc0>
   1abb8:	687b      	ldr	r3, [r7, #4]
   1abba:	2201      	movs	r2, #1
   1abbc:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc

  (void)USB_EPSetStall(hpcd->Instance, ep);
   1abc0:	687b      	ldr	r3, [r7, #4]
   1abc2:	681b      	ldr	r3, [r3, #0]
   1abc4:	68f9      	ldr	r1, [r7, #12]
   1abc6:	4618      	mov	r0, r3
   1abc8:	f006 fd5b 	bl	21682 <USB_EPSetStall>
  if ((ep_addr & EP_ADDR_MSK) == 0U)
   1abcc:	78fb      	ldrb	r3, [r7, #3]
   1abce:	f003 030f 	and.w	r3, r3, #15
   1abd2:	2b00      	cmp	r3, #0
   1abd4:	d10a      	bne.n	1abec <HAL_PCD_EP_SetStall+0xb6>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
   1abd6:	687b      	ldr	r3, [r7, #4]
   1abd8:	6818      	ldr	r0, [r3, #0]
   1abda:	687b      	ldr	r3, [r7, #4]
   1abdc:	691b      	ldr	r3, [r3, #16]
   1abde:	b2d9      	uxtb	r1, r3
   1abe0:	687b      	ldr	r3, [r7, #4]
   1abe2:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
   1abe6:	461a      	mov	r2, r3
   1abe8:	f006 fdea 	bl	217c0 <USB_EP0_OutStart>
  }
  __HAL_UNLOCK(hpcd);
   1abec:	687b      	ldr	r3, [r7, #4]
   1abee:	2200      	movs	r2, #0
   1abf0:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc

  return HAL_OK;
   1abf4:	2300      	movs	r3, #0
}
   1abf6:	4618      	mov	r0, r3
   1abf8:	3710      	adds	r7, #16
   1abfa:	46bd      	mov	sp, r7
   1abfc:	bd80      	pop	{r7, pc}

0001abfe <HAL_PCDEx_SetTxFiFo>:
  * @param  fifo The number of Tx fifo
  * @param  size Fifo size
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetTxFiFo(PCD_HandleTypeDef *hpcd, uint8_t fifo, uint16_t size)
{
   1abfe:	b480      	push	{r7}
   1ac00:	b085      	sub	sp, #20
   1ac02:	af00      	add	r7, sp, #0
   1ac04:	6078      	str	r0, [r7, #4]
   1ac06:	460b      	mov	r3, r1
   1ac08:	70fb      	strb	r3, [r7, #3]
   1ac0a:	4613      	mov	r3, r2
   1ac0c:	803b      	strh	r3, [r7, #0]
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
   1ac0e:	687b      	ldr	r3, [r7, #4]
   1ac10:	681b      	ldr	r3, [r3, #0]
   1ac12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ac14:	60bb      	str	r3, [r7, #8]

  if (fifo == 0U)
   1ac16:	78fb      	ldrb	r3, [r7, #3]
   1ac18:	2b00      	cmp	r3, #0
   1ac1a:	d107      	bne.n	1ac2c <HAL_PCDEx_SetTxFiFo+0x2e>
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
   1ac1c:	883b      	ldrh	r3, [r7, #0]
   1ac1e:	0419      	lsls	r1, r3, #16
   1ac20:	687b      	ldr	r3, [r7, #4]
   1ac22:	681b      	ldr	r3, [r3, #0]
   1ac24:	68ba      	ldr	r2, [r7, #8]
   1ac26:	430a      	orrs	r2, r1
   1ac28:	629a      	str	r2, [r3, #40]	; 0x28
   1ac2a:	e028      	b.n	1ac7e <HAL_PCDEx_SetTxFiFo+0x80>
  }
  else
  {
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
   1ac2c:	687b      	ldr	r3, [r7, #4]
   1ac2e:	681b      	ldr	r3, [r3, #0]
   1ac30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1ac32:	0c1b      	lsrs	r3, r3, #16
   1ac34:	68ba      	ldr	r2, [r7, #8]
   1ac36:	4413      	add	r3, r2
   1ac38:	60bb      	str	r3, [r7, #8]
    for (i = 0U; i < (fifo - 1U); i++)
   1ac3a:	2300      	movs	r3, #0
   1ac3c:	73fb      	strb	r3, [r7, #15]
   1ac3e:	e00d      	b.n	1ac5c <HAL_PCDEx_SetTxFiFo+0x5e>
    {
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
   1ac40:	687b      	ldr	r3, [r7, #4]
   1ac42:	681a      	ldr	r2, [r3, #0]
   1ac44:	7bfb      	ldrb	r3, [r7, #15]
   1ac46:	3340      	adds	r3, #64	; 0x40
   1ac48:	009b      	lsls	r3, r3, #2
   1ac4a:	4413      	add	r3, r2
   1ac4c:	685b      	ldr	r3, [r3, #4]
   1ac4e:	0c1b      	lsrs	r3, r3, #16
   1ac50:	68ba      	ldr	r2, [r7, #8]
   1ac52:	4413      	add	r3, r2
   1ac54:	60bb      	str	r3, [r7, #8]
    for (i = 0U; i < (fifo - 1U); i++)
   1ac56:	7bfb      	ldrb	r3, [r7, #15]
   1ac58:	3301      	adds	r3, #1
   1ac5a:	73fb      	strb	r3, [r7, #15]
   1ac5c:	7bfa      	ldrb	r2, [r7, #15]
   1ac5e:	78fb      	ldrb	r3, [r7, #3]
   1ac60:	3b01      	subs	r3, #1
   1ac62:	429a      	cmp	r2, r3
   1ac64:	d3ec      	bcc.n	1ac40 <HAL_PCDEx_SetTxFiFo+0x42>
    }

    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
   1ac66:	883b      	ldrh	r3, [r7, #0]
   1ac68:	0418      	lsls	r0, r3, #16
   1ac6a:	687b      	ldr	r3, [r7, #4]
   1ac6c:	6819      	ldr	r1, [r3, #0]
   1ac6e:	78fb      	ldrb	r3, [r7, #3]
   1ac70:	3b01      	subs	r3, #1
   1ac72:	68ba      	ldr	r2, [r7, #8]
   1ac74:	4302      	orrs	r2, r0
   1ac76:	3340      	adds	r3, #64	; 0x40
   1ac78:	009b      	lsls	r3, r3, #2
   1ac7a:	440b      	add	r3, r1
   1ac7c:	605a      	str	r2, [r3, #4]
  }

  return HAL_OK;
   1ac7e:	2300      	movs	r3, #0
}
   1ac80:	4618      	mov	r0, r3
   1ac82:	3714      	adds	r7, #20
   1ac84:	46bd      	mov	sp, r7
   1ac86:	f85d 7b04 	ldr.w	r7, [sp], #4
   1ac8a:	4770      	bx	lr

0001ac8c <HAL_PCDEx_SetRxFiFo>:
  * @param  hpcd PCD handle
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
   1ac8c:	b480      	push	{r7}
   1ac8e:	b083      	sub	sp, #12
   1ac90:	af00      	add	r7, sp, #0
   1ac92:	6078      	str	r0, [r7, #4]
   1ac94:	460b      	mov	r3, r1
   1ac96:	807b      	strh	r3, [r7, #2]
  hpcd->Instance->GRXFSIZ = size;
   1ac98:	687b      	ldr	r3, [r7, #4]
   1ac9a:	681b      	ldr	r3, [r3, #0]
   1ac9c:	887a      	ldrh	r2, [r7, #2]
   1ac9e:	625a      	str	r2, [r3, #36]	; 0x24

  return HAL_OK;
   1aca0:	2300      	movs	r3, #0
}
   1aca2:	4618      	mov	r0, r3
   1aca4:	370c      	adds	r7, #12
   1aca6:	46bd      	mov	sp, r7
   1aca8:	f85d 7b04 	ldr.w	r7, [sp], #4
   1acac:	4770      	bx	lr
	...

0001acb0 <HAL_PCDEx_ActivateLPM>:
  * @brief  Activate LPM feature.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_ActivateLPM(PCD_HandleTypeDef *hpcd)
{
   1acb0:	b480      	push	{r7}
   1acb2:	b085      	sub	sp, #20
   1acb4:	af00      	add	r7, sp, #0
   1acb6:	6078      	str	r0, [r7, #4]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
   1acb8:	687b      	ldr	r3, [r7, #4]
   1acba:	681b      	ldr	r3, [r3, #0]
   1acbc:	60fb      	str	r3, [r7, #12]

  hpcd->lpm_active = 1U;
   1acbe:	687b      	ldr	r3, [r7, #4]
   1acc0:	2201      	movs	r2, #1
   1acc2:	f8c3 23fc 	str.w	r2, [r3, #1020]	; 0x3fc
  hpcd->LPM_State = LPM_L0;
   1acc6:	687b      	ldr	r3, [r7, #4]
   1acc8:	2200      	movs	r2, #0
   1acca:	f883 23f4 	strb.w	r2, [r3, #1012]	; 0x3f4
  USBx->GINTMSK |= USB_OTG_GINTMSK_LPMINTM;
   1acce:	68fb      	ldr	r3, [r7, #12]
   1acd0:	699b      	ldr	r3, [r3, #24]
   1acd2:	f043 6200 	orr.w	r2, r3, #134217728	; 0x8000000
   1acd6:	68fb      	ldr	r3, [r7, #12]
   1acd8:	619a      	str	r2, [r3, #24]
  USBx->GLPMCFG |= (USB_OTG_GLPMCFG_LPMEN | USB_OTG_GLPMCFG_LPMACK | USB_OTG_GLPMCFG_ENBESL);
   1acda:	68fb      	ldr	r3, [r7, #12]
   1acdc:	6d5a      	ldr	r2, [r3, #84]	; 0x54
   1acde:	4b05      	ldr	r3, [pc, #20]	; (1acf4 <HAL_PCDEx_ActivateLPM+0x44>)
   1ace0:	4313      	orrs	r3, r2
   1ace2:	68fa      	ldr	r2, [r7, #12]
   1ace4:	6553      	str	r3, [r2, #84]	; 0x54

  return HAL_OK;
   1ace6:	2300      	movs	r3, #0
}
   1ace8:	4618      	mov	r0, r3
   1acea:	3714      	adds	r7, #20
   1acec:	46bd      	mov	sp, r7
   1acee:	f85d 7b04 	ldr.w	r7, [sp], #4
   1acf2:	4770      	bx	lr
   1acf4:	10000003 	.word	0x10000003

0001acf8 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
   1acf8:	b580      	push	{r7, lr}
   1acfa:	b084      	sub	sp, #16
   1acfc:	af00      	add	r7, sp, #0
   1acfe:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
   1ad00:	4b19      	ldr	r3, [pc, #100]	; (1ad68 <HAL_PWREx_ConfigSupply+0x70>)
   1ad02:	68db      	ldr	r3, [r3, #12]
   1ad04:	f003 0304 	and.w	r3, r3, #4
   1ad08:	2b04      	cmp	r3, #4
   1ad0a:	d00a      	beq.n	1ad22 <HAL_PWREx_ConfigSupply+0x2a>
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
   1ad0c:	4b16      	ldr	r3, [pc, #88]	; (1ad68 <HAL_PWREx_ConfigSupply+0x70>)
   1ad0e:	68db      	ldr	r3, [r3, #12]
   1ad10:	f003 0307 	and.w	r3, r3, #7
   1ad14:	687a      	ldr	r2, [r7, #4]
   1ad16:	429a      	cmp	r2, r3
   1ad18:	d001      	beq.n	1ad1e <HAL_PWREx_ConfigSupply+0x26>
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
   1ad1a:	2301      	movs	r3, #1
   1ad1c:	e01f      	b.n	1ad5e <HAL_PWREx_ConfigSupply+0x66>
    else
    {
      /* Supply configuration update locked, but new supply configuration
         matches with old supply configuration : nothing to do
      */
      return HAL_OK;
   1ad1e:	2300      	movs	r3, #0
   1ad20:	e01d      	b.n	1ad5e <HAL_PWREx_ConfigSupply+0x66>
    }
  }

  /* Set the power supply configuration */
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
   1ad22:	4b11      	ldr	r3, [pc, #68]	; (1ad68 <HAL_PWREx_ConfigSupply+0x70>)
   1ad24:	68db      	ldr	r3, [r3, #12]
   1ad26:	f023 0207 	bic.w	r2, r3, #7
   1ad2a:	490f      	ldr	r1, [pc, #60]	; (1ad68 <HAL_PWREx_ConfigSupply+0x70>)
   1ad2c:	687b      	ldr	r3, [r7, #4]
   1ad2e:	4313      	orrs	r3, r2
   1ad30:	60cb      	str	r3, [r1, #12]

  /* Get tick */
  tickstart = HAL_GetTick ();
   1ad32:	f7ff f91f 	bl	19f74 <HAL_GetTick>
   1ad36:	60f8      	str	r0, [r7, #12]

  /* Wait till voltage level flag is set */
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
   1ad38:	e009      	b.n	1ad4e <HAL_PWREx_ConfigSupply+0x56>
  {
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
   1ad3a:	f7ff f91b 	bl	19f74 <HAL_GetTick>
   1ad3e:	4602      	mov	r2, r0
   1ad40:	68fb      	ldr	r3, [r7, #12]
   1ad42:	1ad3      	subs	r3, r2, r3
   1ad44:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
   1ad48:	d901      	bls.n	1ad4e <HAL_PWREx_ConfigSupply+0x56>
    {
      return HAL_ERROR;
   1ad4a:	2301      	movs	r3, #1
   1ad4c:	e007      	b.n	1ad5e <HAL_PWREx_ConfigSupply+0x66>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
   1ad4e:	4b06      	ldr	r3, [pc, #24]	; (1ad68 <HAL_PWREx_ConfigSupply+0x70>)
   1ad50:	685b      	ldr	r3, [r3, #4]
   1ad52:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
   1ad56:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
   1ad5a:	d1ee      	bne.n	1ad3a <HAL_PWREx_ConfigSupply+0x42>
      }
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
   1ad5c:	2300      	movs	r3, #0
}
   1ad5e:	4618      	mov	r0, r3
   1ad60:	3710      	adds	r7, #16
   1ad62:	46bd      	mov	sp, r7
   1ad64:	bd80      	pop	{r7, pc}
   1ad66:	bf00      	nop
   1ad68:	58024800 	.word	0x58024800

0001ad6c <HAL_PWREx_EnableUSBVoltageDetector>:
/**
  * @brief Enable the USB voltage level detector.
  * @retval None.
  */
void HAL_PWREx_EnableUSBVoltageDetector (void)
{
   1ad6c:	b480      	push	{r7}
   1ad6e:	af00      	add	r7, sp, #0
  /* Enable the USB voltage detector */
  SET_BIT (PWR->CR3, PWR_CR3_USB33DEN);
   1ad70:	4b05      	ldr	r3, [pc, #20]	; (1ad88 <HAL_PWREx_EnableUSBVoltageDetector+0x1c>)
   1ad72:	68db      	ldr	r3, [r3, #12]
   1ad74:	4a04      	ldr	r2, [pc, #16]	; (1ad88 <HAL_PWREx_EnableUSBVoltageDetector+0x1c>)
   1ad76:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
   1ad7a:	60d3      	str	r3, [r2, #12]
}
   1ad7c:	bf00      	nop
   1ad7e:	46bd      	mov	sp, r7
   1ad80:	f85d 7b04 	ldr.w	r7, [sp], #4
   1ad84:	4770      	bx	lr
   1ad86:	bf00      	nop
   1ad88:	58024800 	.word	0x58024800

0001ad8c <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
   1ad8c:	b580      	push	{r7, lr}
   1ad8e:	b08c      	sub	sp, #48	; 0x30
   1ad90:	af00      	add	r7, sp, #0
   1ad92:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

    /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
   1ad94:	687b      	ldr	r3, [r7, #4]
   1ad96:	2b00      	cmp	r3, #0
   1ad98:	d101      	bne.n	1ad9e <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
   1ad9a:	2301      	movs	r3, #1
   1ad9c:	e3c4      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
   1ad9e:	687b      	ldr	r3, [r7, #4]
   1ada0:	681b      	ldr	r3, [r3, #0]
   1ada2:	f003 0301 	and.w	r3, r3, #1
   1ada6:	2b00      	cmp	r3, #0
   1ada8:	f000 8087 	beq.w	1aeba <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
   1adac:	4ba2      	ldr	r3, [pc, #648]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1adae:	691b      	ldr	r3, [r3, #16]
   1adb0:	f003 0338 	and.w	r3, r3, #56	; 0x38
   1adb4:	62fb      	str	r3, [r7, #44]	; 0x2c
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
   1adb6:	4ba0      	ldr	r3, [pc, #640]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1adb8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1adba:	62bb      	str	r3, [r7, #40]	; 0x28
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
   1adbc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1adbe:	2b10      	cmp	r3, #16
   1adc0:	d007      	beq.n	1add2 <HAL_RCC_OscConfig+0x46>
   1adc2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1adc4:	2b18      	cmp	r3, #24
   1adc6:	d110      	bne.n	1adea <HAL_RCC_OscConfig+0x5e>
   1adc8:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1adca:	f003 0303 	and.w	r3, r3, #3
   1adce:	2b02      	cmp	r3, #2
   1add0:	d10b      	bne.n	1adea <HAL_RCC_OscConfig+0x5e>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
   1add2:	4b99      	ldr	r3, [pc, #612]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1add4:	681b      	ldr	r3, [r3, #0]
   1add6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
   1adda:	2b00      	cmp	r3, #0
   1addc:	d06c      	beq.n	1aeb8 <HAL_RCC_OscConfig+0x12c>
   1adde:	687b      	ldr	r3, [r7, #4]
   1ade0:	685b      	ldr	r3, [r3, #4]
   1ade2:	2b00      	cmp	r3, #0
   1ade4:	d168      	bne.n	1aeb8 <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
   1ade6:	2301      	movs	r3, #1
   1ade8:	e39e      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
   1adea:	687b      	ldr	r3, [r7, #4]
   1adec:	685b      	ldr	r3, [r3, #4]
   1adee:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   1adf2:	d106      	bne.n	1ae02 <HAL_RCC_OscConfig+0x76>
   1adf4:	4b90      	ldr	r3, [pc, #576]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1adf6:	681b      	ldr	r3, [r3, #0]
   1adf8:	4a8f      	ldr	r2, [pc, #572]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1adfa:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   1adfe:	6013      	str	r3, [r2, #0]
   1ae00:	e02e      	b.n	1ae60 <HAL_RCC_OscConfig+0xd4>
   1ae02:	687b      	ldr	r3, [r7, #4]
   1ae04:	685b      	ldr	r3, [r3, #4]
   1ae06:	2b00      	cmp	r3, #0
   1ae08:	d10c      	bne.n	1ae24 <HAL_RCC_OscConfig+0x98>
   1ae0a:	4b8b      	ldr	r3, [pc, #556]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1ae0c:	681b      	ldr	r3, [r3, #0]
   1ae0e:	4a8a      	ldr	r2, [pc, #552]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1ae10:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
   1ae14:	6013      	str	r3, [r2, #0]
   1ae16:	4b88      	ldr	r3, [pc, #544]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1ae18:	681b      	ldr	r3, [r3, #0]
   1ae1a:	4a87      	ldr	r2, [pc, #540]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1ae1c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
   1ae20:	6013      	str	r3, [r2, #0]
   1ae22:	e01d      	b.n	1ae60 <HAL_RCC_OscConfig+0xd4>
   1ae24:	687b      	ldr	r3, [r7, #4]
   1ae26:	685b      	ldr	r3, [r3, #4]
   1ae28:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
   1ae2c:	d10c      	bne.n	1ae48 <HAL_RCC_OscConfig+0xbc>
   1ae2e:	4b82      	ldr	r3, [pc, #520]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1ae30:	681b      	ldr	r3, [r3, #0]
   1ae32:	4a81      	ldr	r2, [pc, #516]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1ae34:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
   1ae38:	6013      	str	r3, [r2, #0]
   1ae3a:	4b7f      	ldr	r3, [pc, #508]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1ae3c:	681b      	ldr	r3, [r3, #0]
   1ae3e:	4a7e      	ldr	r2, [pc, #504]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1ae40:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   1ae44:	6013      	str	r3, [r2, #0]
   1ae46:	e00b      	b.n	1ae60 <HAL_RCC_OscConfig+0xd4>
   1ae48:	4b7b      	ldr	r3, [pc, #492]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1ae4a:	681b      	ldr	r3, [r3, #0]
   1ae4c:	4a7a      	ldr	r2, [pc, #488]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1ae4e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
   1ae52:	6013      	str	r3, [r2, #0]
   1ae54:	4b78      	ldr	r3, [pc, #480]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1ae56:	681b      	ldr	r3, [r3, #0]
   1ae58:	4a77      	ldr	r2, [pc, #476]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1ae5a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
   1ae5e:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
   1ae60:	687b      	ldr	r3, [r7, #4]
   1ae62:	685b      	ldr	r3, [r3, #4]
   1ae64:	2b00      	cmp	r3, #0
   1ae66:	d013      	beq.n	1ae90 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
   1ae68:	f7ff f884 	bl	19f74 <HAL_GetTick>
   1ae6c:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
   1ae6e:	e008      	b.n	1ae82 <HAL_RCC_OscConfig+0xf6>
        {
          if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
   1ae70:	f7ff f880 	bl	19f74 <HAL_GetTick>
   1ae74:	4602      	mov	r2, r0
   1ae76:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1ae78:	1ad3      	subs	r3, r2, r3
   1ae7a:	2b64      	cmp	r3, #100	; 0x64
   1ae7c:	d901      	bls.n	1ae82 <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
   1ae7e:	2303      	movs	r3, #3
   1ae80:	e352      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
   1ae82:	4b6d      	ldr	r3, [pc, #436]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1ae84:	681b      	ldr	r3, [r3, #0]
   1ae86:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
   1ae8a:	2b00      	cmp	r3, #0
   1ae8c:	d0f0      	beq.n	1ae70 <HAL_RCC_OscConfig+0xe4>
   1ae8e:	e014      	b.n	1aeba <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
   1ae90:	f7ff f870 	bl	19f74 <HAL_GetTick>
   1ae94:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
   1ae96:	e008      	b.n	1aeaa <HAL_RCC_OscConfig+0x11e>
        {
          if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
   1ae98:	f7ff f86c 	bl	19f74 <HAL_GetTick>
   1ae9c:	4602      	mov	r2, r0
   1ae9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1aea0:	1ad3      	subs	r3, r2, r3
   1aea2:	2b64      	cmp	r3, #100	; 0x64
   1aea4:	d901      	bls.n	1aeaa <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
   1aea6:	2303      	movs	r3, #3
   1aea8:	e33e      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
   1aeaa:	4b63      	ldr	r3, [pc, #396]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1aeac:	681b      	ldr	r3, [r3, #0]
   1aeae:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
   1aeb2:	2b00      	cmp	r3, #0
   1aeb4:	d1f0      	bne.n	1ae98 <HAL_RCC_OscConfig+0x10c>
   1aeb6:	e000      	b.n	1aeba <HAL_RCC_OscConfig+0x12e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
   1aeb8:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
   1aeba:	687b      	ldr	r3, [r7, #4]
   1aebc:	681b      	ldr	r3, [r3, #0]
   1aebe:	f003 0302 	and.w	r3, r3, #2
   1aec2:	2b00      	cmp	r3, #0
   1aec4:	f000 8092 	beq.w	1afec <HAL_RCC_OscConfig+0x260>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSICALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* When the HSI is used as system clock it will not be disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
   1aec8:	4b5b      	ldr	r3, [pc, #364]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1aeca:	691b      	ldr	r3, [r3, #16]
   1aecc:	f003 0338 	and.w	r3, r3, #56	; 0x38
   1aed0:	623b      	str	r3, [r7, #32]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
   1aed2:	4b59      	ldr	r3, [pc, #356]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1aed4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1aed6:	61fb      	str	r3, [r7, #28]
    if((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
   1aed8:	6a3b      	ldr	r3, [r7, #32]
   1aeda:	2b00      	cmp	r3, #0
   1aedc:	d007      	beq.n	1aeee <HAL_RCC_OscConfig+0x162>
   1aede:	6a3b      	ldr	r3, [r7, #32]
   1aee0:	2b18      	cmp	r3, #24
   1aee2:	d12d      	bne.n	1af40 <HAL_RCC_OscConfig+0x1b4>
   1aee4:	69fb      	ldr	r3, [r7, #28]
   1aee6:	f003 0303 	and.w	r3, r3, #3
   1aeea:	2b00      	cmp	r3, #0
   1aeec:	d128      	bne.n	1af40 <HAL_RCC_OscConfig+0x1b4>
    {
      /* When HSI is used as system clock it will not be disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
   1aeee:	4b52      	ldr	r3, [pc, #328]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1aef0:	681b      	ldr	r3, [r3, #0]
   1aef2:	f003 0304 	and.w	r3, r3, #4
   1aef6:	2b00      	cmp	r3, #0
   1aef8:	d005      	beq.n	1af06 <HAL_RCC_OscConfig+0x17a>
   1aefa:	687b      	ldr	r3, [r7, #4]
   1aefc:	68db      	ldr	r3, [r3, #12]
   1aefe:	2b00      	cmp	r3, #0
   1af00:	d101      	bne.n	1af06 <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
   1af02:	2301      	movs	r3, #1
   1af04:	e310      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
   1af06:	f7ff f863 	bl	19fd0 <HAL_GetREVID>
   1af0a:	4602      	mov	r2, r0
   1af0c:	f241 0303 	movw	r3, #4099	; 0x1003
   1af10:	429a      	cmp	r2, r3
   1af12:	d80a      	bhi.n	1af2a <HAL_RCC_OscConfig+0x19e>
   1af14:	4b48      	ldr	r3, [pc, #288]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1af16:	685b      	ldr	r3, [r3, #4]
   1af18:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
   1af1c:	687b      	ldr	r3, [r7, #4]
   1af1e:	691b      	ldr	r3, [r3, #16]
   1af20:	031b      	lsls	r3, r3, #12
   1af22:	4945      	ldr	r1, [pc, #276]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1af24:	4313      	orrs	r3, r2
   1af26:	604b      	str	r3, [r1, #4]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
   1af28:	e060      	b.n	1afec <HAL_RCC_OscConfig+0x260>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
   1af2a:	4b43      	ldr	r3, [pc, #268]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1af2c:	685b      	ldr	r3, [r3, #4]
   1af2e:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
   1af32:	687b      	ldr	r3, [r7, #4]
   1af34:	691b      	ldr	r3, [r3, #16]
   1af36:	061b      	lsls	r3, r3, #24
   1af38:	493f      	ldr	r1, [pc, #252]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1af3a:	4313      	orrs	r3, r2
   1af3c:	604b      	str	r3, [r1, #4]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
   1af3e:	e055      	b.n	1afec <HAL_RCC_OscConfig+0x260>
    }

    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
   1af40:	687b      	ldr	r3, [r7, #4]
   1af42:	68db      	ldr	r3, [r3, #12]
   1af44:	2b00      	cmp	r3, #0
   1af46:	d038      	beq.n	1afba <HAL_RCC_OscConfig+0x22e>
      {
     /* Enable the Internal High Speed oscillator (HSI, HSIDIV2,HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
   1af48:	4b3b      	ldr	r3, [pc, #236]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1af4a:	681b      	ldr	r3, [r3, #0]
   1af4c:	f023 0219 	bic.w	r2, r3, #25
   1af50:	687b      	ldr	r3, [r7, #4]
   1af52:	68db      	ldr	r3, [r3, #12]
   1af54:	4938      	ldr	r1, [pc, #224]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1af56:	4313      	orrs	r3, r2
   1af58:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
   1af5a:	f7ff f80b 	bl	19f74 <HAL_GetTick>
   1af5e:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
   1af60:	e008      	b.n	1af74 <HAL_RCC_OscConfig+0x1e8>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
   1af62:	f7ff f807 	bl	19f74 <HAL_GetTick>
   1af66:	4602      	mov	r2, r0
   1af68:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1af6a:	1ad3      	subs	r3, r2, r3
   1af6c:	2b02      	cmp	r3, #2
   1af6e:	d901      	bls.n	1af74 <HAL_RCC_OscConfig+0x1e8>
          {
            return HAL_TIMEOUT;
   1af70:	2303      	movs	r3, #3
   1af72:	e2d9      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
   1af74:	4b30      	ldr	r3, [pc, #192]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1af76:	681b      	ldr	r3, [r3, #0]
   1af78:	f003 0304 	and.w	r3, r3, #4
   1af7c:	2b00      	cmp	r3, #0
   1af7e:	d0f0      	beq.n	1af62 <HAL_RCC_OscConfig+0x1d6>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
   1af80:	f7ff f826 	bl	19fd0 <HAL_GetREVID>
   1af84:	4602      	mov	r2, r0
   1af86:	f241 0303 	movw	r3, #4099	; 0x1003
   1af8a:	429a      	cmp	r2, r3
   1af8c:	d80a      	bhi.n	1afa4 <HAL_RCC_OscConfig+0x218>
   1af8e:	4b2a      	ldr	r3, [pc, #168]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1af90:	685b      	ldr	r3, [r3, #4]
   1af92:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
   1af96:	687b      	ldr	r3, [r7, #4]
   1af98:	691b      	ldr	r3, [r3, #16]
   1af9a:	031b      	lsls	r3, r3, #12
   1af9c:	4926      	ldr	r1, [pc, #152]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1af9e:	4313      	orrs	r3, r2
   1afa0:	604b      	str	r3, [r1, #4]
   1afa2:	e023      	b.n	1afec <HAL_RCC_OscConfig+0x260>
   1afa4:	4b24      	ldr	r3, [pc, #144]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1afa6:	685b      	ldr	r3, [r3, #4]
   1afa8:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
   1afac:	687b      	ldr	r3, [r7, #4]
   1afae:	691b      	ldr	r3, [r3, #16]
   1afb0:	061b      	lsls	r3, r3, #24
   1afb2:	4921      	ldr	r1, [pc, #132]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1afb4:	4313      	orrs	r3, r2
   1afb6:	604b      	str	r3, [r1, #4]
   1afb8:	e018      	b.n	1afec <HAL_RCC_OscConfig+0x260>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
   1afba:	4b1f      	ldr	r3, [pc, #124]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1afbc:	681b      	ldr	r3, [r3, #0]
   1afbe:	4a1e      	ldr	r2, [pc, #120]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1afc0:	f023 0301 	bic.w	r3, r3, #1
   1afc4:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
   1afc6:	f7fe ffd5 	bl	19f74 <HAL_GetTick>
   1afca:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
   1afcc:	e008      	b.n	1afe0 <HAL_RCC_OscConfig+0x254>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
   1afce:	f7fe ffd1 	bl	19f74 <HAL_GetTick>
   1afd2:	4602      	mov	r2, r0
   1afd4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1afd6:	1ad3      	subs	r3, r2, r3
   1afd8:	2b02      	cmp	r3, #2
   1afda:	d901      	bls.n	1afe0 <HAL_RCC_OscConfig+0x254>
          {
            return HAL_TIMEOUT;
   1afdc:	2303      	movs	r3, #3
   1afde:	e2a3      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
   1afe0:	4b15      	ldr	r3, [pc, #84]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1afe2:	681b      	ldr	r3, [r3, #0]
   1afe4:	f003 0304 	and.w	r3, r3, #4
   1afe8:	2b00      	cmp	r3, #0
   1afea:	d1f0      	bne.n	1afce <HAL_RCC_OscConfig+0x242>
        }
      }
    }
  }
  /*----------------------------- CSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
   1afec:	687b      	ldr	r3, [r7, #4]
   1afee:	681b      	ldr	r3, [r3, #0]
   1aff0:	f003 0310 	and.w	r3, r3, #16
   1aff4:	2b00      	cmp	r3, #0
   1aff6:	f000 8091 	beq.w	1b11c <HAL_RCC_OscConfig+0x390>
    /* Check the parameters */
    assert_param(IS_RCC_CSI(RCC_OscInitStruct->CSIState));
    assert_param(IS_RCC_CSICALIBRATION_VALUE(RCC_OscInitStruct->CSICalibrationValue));

    /* When the CSI is used as system clock it will not disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
   1affa:	4b0f      	ldr	r3, [pc, #60]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1affc:	691b      	ldr	r3, [r3, #16]
   1affe:	f003 0338 	and.w	r3, r3, #56	; 0x38
   1b002:	61bb      	str	r3, [r7, #24]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
   1b004:	4b0c      	ldr	r3, [pc, #48]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1b006:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1b008:	617b      	str	r3, [r7, #20]
    if((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
   1b00a:	69bb      	ldr	r3, [r7, #24]
   1b00c:	2b08      	cmp	r3, #8
   1b00e:	d007      	beq.n	1b020 <HAL_RCC_OscConfig+0x294>
   1b010:	69bb      	ldr	r3, [r7, #24]
   1b012:	2b18      	cmp	r3, #24
   1b014:	d12f      	bne.n	1b076 <HAL_RCC_OscConfig+0x2ea>
   1b016:	697b      	ldr	r3, [r7, #20]
   1b018:	f003 0303 	and.w	r3, r3, #3
   1b01c:	2b01      	cmp	r3, #1
   1b01e:	d12a      	bne.n	1b076 <HAL_RCC_OscConfig+0x2ea>
    {
      /* When CSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
   1b020:	4b05      	ldr	r3, [pc, #20]	; (1b038 <HAL_RCC_OscConfig+0x2ac>)
   1b022:	681b      	ldr	r3, [r3, #0]
   1b024:	f403 7380 	and.w	r3, r3, #256	; 0x100
   1b028:	2b00      	cmp	r3, #0
   1b02a:	d007      	beq.n	1b03c <HAL_RCC_OscConfig+0x2b0>
   1b02c:	687b      	ldr	r3, [r7, #4]
   1b02e:	69db      	ldr	r3, [r3, #28]
   1b030:	2b80      	cmp	r3, #128	; 0x80
   1b032:	d003      	beq.n	1b03c <HAL_RCC_OscConfig+0x2b0>
      {
        return HAL_ERROR;
   1b034:	2301      	movs	r3, #1
   1b036:	e277      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
   1b038:	58024400 	.word	0x58024400
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
   1b03c:	f7fe ffc8 	bl	19fd0 <HAL_GetREVID>
   1b040:	4602      	mov	r2, r0
   1b042:	f241 0303 	movw	r3, #4099	; 0x1003
   1b046:	429a      	cmp	r2, r3
   1b048:	d80a      	bhi.n	1b060 <HAL_RCC_OscConfig+0x2d4>
   1b04a:	4ba2      	ldr	r3, [pc, #648]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b04c:	685b      	ldr	r3, [r3, #4]
   1b04e:	f023 42f8 	bic.w	r2, r3, #2080374784	; 0x7c000000
   1b052:	687b      	ldr	r3, [r7, #4]
   1b054:	6a1b      	ldr	r3, [r3, #32]
   1b056:	069b      	lsls	r3, r3, #26
   1b058:	499e      	ldr	r1, [pc, #632]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b05a:	4313      	orrs	r3, r2
   1b05c:	604b      	str	r3, [r1, #4]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
   1b05e:	e05d      	b.n	1b11c <HAL_RCC_OscConfig+0x390>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
   1b060:	4b9c      	ldr	r3, [pc, #624]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b062:	68db      	ldr	r3, [r3, #12]
   1b064:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
   1b068:	687b      	ldr	r3, [r7, #4]
   1b06a:	6a1b      	ldr	r3, [r3, #32]
   1b06c:	061b      	lsls	r3, r3, #24
   1b06e:	4999      	ldr	r1, [pc, #612]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b070:	4313      	orrs	r3, r2
   1b072:	60cb      	str	r3, [r1, #12]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
   1b074:	e052      	b.n	1b11c <HAL_RCC_OscConfig+0x390>
      }
    }
    else
    {
      /* Check the CSI State */
      if((RCC_OscInitStruct->CSIState)!= RCC_CSI_OFF)
   1b076:	687b      	ldr	r3, [r7, #4]
   1b078:	69db      	ldr	r3, [r3, #28]
   1b07a:	2b00      	cmp	r3, #0
   1b07c:	d035      	beq.n	1b0ea <HAL_RCC_OscConfig+0x35e>
      {
        /* Enable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_ENABLE();
   1b07e:	4b95      	ldr	r3, [pc, #596]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b080:	681b      	ldr	r3, [r3, #0]
   1b082:	4a94      	ldr	r2, [pc, #592]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b084:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1b088:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
   1b08a:	f7fe ff73 	bl	19f74 <HAL_GetTick>
   1b08e:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till CSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
   1b090:	e008      	b.n	1b0a4 <HAL_RCC_OscConfig+0x318>
        {
          if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
   1b092:	f7fe ff6f 	bl	19f74 <HAL_GetTick>
   1b096:	4602      	mov	r2, r0
   1b098:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1b09a:	1ad3      	subs	r3, r2, r3
   1b09c:	2b02      	cmp	r3, #2
   1b09e:	d901      	bls.n	1b0a4 <HAL_RCC_OscConfig+0x318>
          {
            return HAL_TIMEOUT;
   1b0a0:	2303      	movs	r3, #3
   1b0a2:	e241      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
   1b0a4:	4b8b      	ldr	r3, [pc, #556]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b0a6:	681b      	ldr	r3, [r3, #0]
   1b0a8:	f403 7380 	and.w	r3, r3, #256	; 0x100
   1b0ac:	2b00      	cmp	r3, #0
   1b0ae:	d0f0      	beq.n	1b092 <HAL_RCC_OscConfig+0x306>
          }
        }

        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
   1b0b0:	f7fe ff8e 	bl	19fd0 <HAL_GetREVID>
   1b0b4:	4602      	mov	r2, r0
   1b0b6:	f241 0303 	movw	r3, #4099	; 0x1003
   1b0ba:	429a      	cmp	r2, r3
   1b0bc:	d80a      	bhi.n	1b0d4 <HAL_RCC_OscConfig+0x348>
   1b0be:	4b85      	ldr	r3, [pc, #532]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b0c0:	685b      	ldr	r3, [r3, #4]
   1b0c2:	f023 42f8 	bic.w	r2, r3, #2080374784	; 0x7c000000
   1b0c6:	687b      	ldr	r3, [r7, #4]
   1b0c8:	6a1b      	ldr	r3, [r3, #32]
   1b0ca:	069b      	lsls	r3, r3, #26
   1b0cc:	4981      	ldr	r1, [pc, #516]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b0ce:	4313      	orrs	r3, r2
   1b0d0:	604b      	str	r3, [r1, #4]
   1b0d2:	e023      	b.n	1b11c <HAL_RCC_OscConfig+0x390>
   1b0d4:	4b7f      	ldr	r3, [pc, #508]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b0d6:	68db      	ldr	r3, [r3, #12]
   1b0d8:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
   1b0dc:	687b      	ldr	r3, [r7, #4]
   1b0de:	6a1b      	ldr	r3, [r3, #32]
   1b0e0:	061b      	lsls	r3, r3, #24
   1b0e2:	497c      	ldr	r1, [pc, #496]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b0e4:	4313      	orrs	r3, r2
   1b0e6:	60cb      	str	r3, [r1, #12]
   1b0e8:	e018      	b.n	1b11c <HAL_RCC_OscConfig+0x390>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_DISABLE();
   1b0ea:	4b7a      	ldr	r3, [pc, #488]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b0ec:	681b      	ldr	r3, [r3, #0]
   1b0ee:	4a79      	ldr	r2, [pc, #484]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b0f0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   1b0f4:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
   1b0f6:	f7fe ff3d 	bl	19f74 <HAL_GetTick>
   1b0fa:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till CSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
   1b0fc:	e008      	b.n	1b110 <HAL_RCC_OscConfig+0x384>
        {
          if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
   1b0fe:	f7fe ff39 	bl	19f74 <HAL_GetTick>
   1b102:	4602      	mov	r2, r0
   1b104:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1b106:	1ad3      	subs	r3, r2, r3
   1b108:	2b02      	cmp	r3, #2
   1b10a:	d901      	bls.n	1b110 <HAL_RCC_OscConfig+0x384>
          {
            return HAL_TIMEOUT;
   1b10c:	2303      	movs	r3, #3
   1b10e:	e20b      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
   1b110:	4b70      	ldr	r3, [pc, #448]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b112:	681b      	ldr	r3, [r3, #0]
   1b114:	f403 7380 	and.w	r3, r3, #256	; 0x100
   1b118:	2b00      	cmp	r3, #0
   1b11a:	d1f0      	bne.n	1b0fe <HAL_RCC_OscConfig+0x372>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
   1b11c:	687b      	ldr	r3, [r7, #4]
   1b11e:	681b      	ldr	r3, [r3, #0]
   1b120:	f003 0308 	and.w	r3, r3, #8
   1b124:	2b00      	cmp	r3, #0
   1b126:	d036      	beq.n	1b196 <HAL_RCC_OscConfig+0x40a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
   1b128:	687b      	ldr	r3, [r7, #4]
   1b12a:	695b      	ldr	r3, [r3, #20]
   1b12c:	2b00      	cmp	r3, #0
   1b12e:	d019      	beq.n	1b164 <HAL_RCC_OscConfig+0x3d8>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
   1b130:	4b68      	ldr	r3, [pc, #416]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b132:	6f5b      	ldr	r3, [r3, #116]	; 0x74
   1b134:	4a67      	ldr	r2, [pc, #412]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b136:	f043 0301 	orr.w	r3, r3, #1
   1b13a:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
   1b13c:	f7fe ff1a 	bl	19f74 <HAL_GetTick>
   1b140:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
   1b142:	e008      	b.n	1b156 <HAL_RCC_OscConfig+0x3ca>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
   1b144:	f7fe ff16 	bl	19f74 <HAL_GetTick>
   1b148:	4602      	mov	r2, r0
   1b14a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1b14c:	1ad3      	subs	r3, r2, r3
   1b14e:	2b02      	cmp	r3, #2
   1b150:	d901      	bls.n	1b156 <HAL_RCC_OscConfig+0x3ca>
        {
          return HAL_TIMEOUT;
   1b152:	2303      	movs	r3, #3
   1b154:	e1e8      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
   1b156:	4b5f      	ldr	r3, [pc, #380]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b158:	6f5b      	ldr	r3, [r3, #116]	; 0x74
   1b15a:	f003 0302 	and.w	r3, r3, #2
   1b15e:	2b00      	cmp	r3, #0
   1b160:	d0f0      	beq.n	1b144 <HAL_RCC_OscConfig+0x3b8>
   1b162:	e018      	b.n	1b196 <HAL_RCC_OscConfig+0x40a>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
   1b164:	4b5b      	ldr	r3, [pc, #364]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b166:	6f5b      	ldr	r3, [r3, #116]	; 0x74
   1b168:	4a5a      	ldr	r2, [pc, #360]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b16a:	f023 0301 	bic.w	r3, r3, #1
   1b16e:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
   1b170:	f7fe ff00 	bl	19f74 <HAL_GetTick>
   1b174:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
   1b176:	e008      	b.n	1b18a <HAL_RCC_OscConfig+0x3fe>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
   1b178:	f7fe fefc 	bl	19f74 <HAL_GetTick>
   1b17c:	4602      	mov	r2, r0
   1b17e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1b180:	1ad3      	subs	r3, r2, r3
   1b182:	2b02      	cmp	r3, #2
   1b184:	d901      	bls.n	1b18a <HAL_RCC_OscConfig+0x3fe>
        {
          return HAL_TIMEOUT;
   1b186:	2303      	movs	r3, #3
   1b188:	e1ce      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
   1b18a:	4b52      	ldr	r3, [pc, #328]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b18c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
   1b18e:	f003 0302 	and.w	r3, r3, #2
   1b192:	2b00      	cmp	r3, #0
   1b194:	d1f0      	bne.n	1b178 <HAL_RCC_OscConfig+0x3ec>
      }
    }
  }

  /*------------------------------ HSI48 Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
   1b196:	687b      	ldr	r3, [r7, #4]
   1b198:	681b      	ldr	r3, [r3, #0]
   1b19a:	f003 0320 	and.w	r3, r3, #32
   1b19e:	2b00      	cmp	r3, #0
   1b1a0:	d036      	beq.n	1b210 <HAL_RCC_OscConfig+0x484>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

    /* Check the HSI48 State */
    if((RCC_OscInitStruct->HSI48State)!= RCC_HSI48_OFF)
   1b1a2:	687b      	ldr	r3, [r7, #4]
   1b1a4:	699b      	ldr	r3, [r3, #24]
   1b1a6:	2b00      	cmp	r3, #0
   1b1a8:	d019      	beq.n	1b1de <HAL_RCC_OscConfig+0x452>
    {
      /* Enable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_ENABLE();
   1b1aa:	4b4a      	ldr	r3, [pc, #296]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b1ac:	681b      	ldr	r3, [r3, #0]
   1b1ae:	4a49      	ldr	r2, [pc, #292]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b1b0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
   1b1b4:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
   1b1b6:	f7fe fedd 	bl	19f74 <HAL_GetTick>
   1b1ba:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till HSI48 is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
   1b1bc:	e008      	b.n	1b1d0 <HAL_RCC_OscConfig+0x444>
      {
        if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
   1b1be:	f7fe fed9 	bl	19f74 <HAL_GetTick>
   1b1c2:	4602      	mov	r2, r0
   1b1c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1b1c6:	1ad3      	subs	r3, r2, r3
   1b1c8:	2b02      	cmp	r3, #2
   1b1ca:	d901      	bls.n	1b1d0 <HAL_RCC_OscConfig+0x444>
        {
          return HAL_TIMEOUT;
   1b1cc:	2303      	movs	r3, #3
   1b1ce:	e1ab      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
   1b1d0:	4b40      	ldr	r3, [pc, #256]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b1d2:	681b      	ldr	r3, [r3, #0]
   1b1d4:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
   1b1d8:	2b00      	cmp	r3, #0
   1b1da:	d0f0      	beq.n	1b1be <HAL_RCC_OscConfig+0x432>
   1b1dc:	e018      	b.n	1b210 <HAL_RCC_OscConfig+0x484>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_DISABLE();
   1b1de:	4b3d      	ldr	r3, [pc, #244]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b1e0:	681b      	ldr	r3, [r3, #0]
   1b1e2:	4a3c      	ldr	r2, [pc, #240]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b1e4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1b1e8:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
   1b1ea:	f7fe fec3 	bl	19f74 <HAL_GetTick>
   1b1ee:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till HSI48 is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
   1b1f0:	e008      	b.n	1b204 <HAL_RCC_OscConfig+0x478>
      {
        if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
   1b1f2:	f7fe febf 	bl	19f74 <HAL_GetTick>
   1b1f6:	4602      	mov	r2, r0
   1b1f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1b1fa:	1ad3      	subs	r3, r2, r3
   1b1fc:	2b02      	cmp	r3, #2
   1b1fe:	d901      	bls.n	1b204 <HAL_RCC_OscConfig+0x478>
        {
          return HAL_TIMEOUT;
   1b200:	2303      	movs	r3, #3
   1b202:	e191      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
   1b204:	4b33      	ldr	r3, [pc, #204]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b206:	681b      	ldr	r3, [r3, #0]
   1b208:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
   1b20c:	2b00      	cmp	r3, #0
   1b20e:	d1f0      	bne.n	1b1f2 <HAL_RCC_OscConfig+0x466>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
   1b210:	687b      	ldr	r3, [r7, #4]
   1b212:	681b      	ldr	r3, [r3, #0]
   1b214:	f003 0304 	and.w	r3, r3, #4
   1b218:	2b00      	cmp	r3, #0
   1b21a:	f000 8086 	beq.w	1b32a <HAL_RCC_OscConfig+0x59e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
   1b21e:	4b2e      	ldr	r3, [pc, #184]	; (1b2d8 <HAL_RCC_OscConfig+0x54c>)
   1b220:	681b      	ldr	r3, [r3, #0]
   1b222:	4a2d      	ldr	r2, [pc, #180]	; (1b2d8 <HAL_RCC_OscConfig+0x54c>)
   1b224:	f443 7380 	orr.w	r3, r3, #256	; 0x100
   1b228:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
   1b22a:	f7fe fea3 	bl	19f74 <HAL_GetTick>
   1b22e:	6278      	str	r0, [r7, #36]	; 0x24

    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
   1b230:	e008      	b.n	1b244 <HAL_RCC_OscConfig+0x4b8>
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
   1b232:	f7fe fe9f 	bl	19f74 <HAL_GetTick>
   1b236:	4602      	mov	r2, r0
   1b238:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1b23a:	1ad3      	subs	r3, r2, r3
   1b23c:	2b64      	cmp	r3, #100	; 0x64
   1b23e:	d901      	bls.n	1b244 <HAL_RCC_OscConfig+0x4b8>
      {
        return HAL_TIMEOUT;
   1b240:	2303      	movs	r3, #3
   1b242:	e171      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
   1b244:	4b24      	ldr	r3, [pc, #144]	; (1b2d8 <HAL_RCC_OscConfig+0x54c>)
   1b246:	681b      	ldr	r3, [r3, #0]
   1b248:	f403 7380 	and.w	r3, r3, #256	; 0x100
   1b24c:	2b00      	cmp	r3, #0
   1b24e:	d0f0      	beq.n	1b232 <HAL_RCC_OscConfig+0x4a6>
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
   1b250:	687b      	ldr	r3, [r7, #4]
   1b252:	689b      	ldr	r3, [r3, #8]
   1b254:	2b01      	cmp	r3, #1
   1b256:	d106      	bne.n	1b266 <HAL_RCC_OscConfig+0x4da>
   1b258:	4b1e      	ldr	r3, [pc, #120]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b25a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   1b25c:	4a1d      	ldr	r2, [pc, #116]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b25e:	f043 0301 	orr.w	r3, r3, #1
   1b262:	6713      	str	r3, [r2, #112]	; 0x70
   1b264:	e02d      	b.n	1b2c2 <HAL_RCC_OscConfig+0x536>
   1b266:	687b      	ldr	r3, [r7, #4]
   1b268:	689b      	ldr	r3, [r3, #8]
   1b26a:	2b00      	cmp	r3, #0
   1b26c:	d10c      	bne.n	1b288 <HAL_RCC_OscConfig+0x4fc>
   1b26e:	4b19      	ldr	r3, [pc, #100]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b270:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   1b272:	4a18      	ldr	r2, [pc, #96]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b274:	f023 0301 	bic.w	r3, r3, #1
   1b278:	6713      	str	r3, [r2, #112]	; 0x70
   1b27a:	4b16      	ldr	r3, [pc, #88]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b27c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   1b27e:	4a15      	ldr	r2, [pc, #84]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b280:	f023 0304 	bic.w	r3, r3, #4
   1b284:	6713      	str	r3, [r2, #112]	; 0x70
   1b286:	e01c      	b.n	1b2c2 <HAL_RCC_OscConfig+0x536>
   1b288:	687b      	ldr	r3, [r7, #4]
   1b28a:	689b      	ldr	r3, [r3, #8]
   1b28c:	2b05      	cmp	r3, #5
   1b28e:	d10c      	bne.n	1b2aa <HAL_RCC_OscConfig+0x51e>
   1b290:	4b10      	ldr	r3, [pc, #64]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b292:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   1b294:	4a0f      	ldr	r2, [pc, #60]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b296:	f043 0304 	orr.w	r3, r3, #4
   1b29a:	6713      	str	r3, [r2, #112]	; 0x70
   1b29c:	4b0d      	ldr	r3, [pc, #52]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b29e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   1b2a0:	4a0c      	ldr	r2, [pc, #48]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b2a2:	f043 0301 	orr.w	r3, r3, #1
   1b2a6:	6713      	str	r3, [r2, #112]	; 0x70
   1b2a8:	e00b      	b.n	1b2c2 <HAL_RCC_OscConfig+0x536>
   1b2aa:	4b0a      	ldr	r3, [pc, #40]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b2ac:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   1b2ae:	4a09      	ldr	r2, [pc, #36]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b2b0:	f023 0301 	bic.w	r3, r3, #1
   1b2b4:	6713      	str	r3, [r2, #112]	; 0x70
   1b2b6:	4b07      	ldr	r3, [pc, #28]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b2b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   1b2ba:	4a06      	ldr	r2, [pc, #24]	; (1b2d4 <HAL_RCC_OscConfig+0x548>)
   1b2bc:	f023 0304 	bic.w	r3, r3, #4
   1b2c0:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
   1b2c2:	687b      	ldr	r3, [r7, #4]
   1b2c4:	689b      	ldr	r3, [r3, #8]
   1b2c6:	2b00      	cmp	r3, #0
   1b2c8:	d01a      	beq.n	1b300 <HAL_RCC_OscConfig+0x574>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
   1b2ca:	f7fe fe53 	bl	19f74 <HAL_GetTick>
   1b2ce:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
   1b2d0:	e00f      	b.n	1b2f2 <HAL_RCC_OscConfig+0x566>
   1b2d2:	bf00      	nop
   1b2d4:	58024400 	.word	0x58024400
   1b2d8:	58024800 	.word	0x58024800
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
   1b2dc:	f7fe fe4a 	bl	19f74 <HAL_GetTick>
   1b2e0:	4602      	mov	r2, r0
   1b2e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1b2e4:	1ad3      	subs	r3, r2, r3
   1b2e6:	f241 3288 	movw	r2, #5000	; 0x1388
   1b2ea:	4293      	cmp	r3, r2
   1b2ec:	d901      	bls.n	1b2f2 <HAL_RCC_OscConfig+0x566>
        {
          return HAL_TIMEOUT;
   1b2ee:	2303      	movs	r3, #3
   1b2f0:	e11a      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
   1b2f2:	4b8f      	ldr	r3, [pc, #572]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b2f4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   1b2f6:	f003 0302 	and.w	r3, r3, #2
   1b2fa:	2b00      	cmp	r3, #0
   1b2fc:	d0ee      	beq.n	1b2dc <HAL_RCC_OscConfig+0x550>
   1b2fe:	e014      	b.n	1b32a <HAL_RCC_OscConfig+0x59e>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
   1b300:	f7fe fe38 	bl	19f74 <HAL_GetTick>
   1b304:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSE is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
   1b306:	e00a      	b.n	1b31e <HAL_RCC_OscConfig+0x592>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
   1b308:	f7fe fe34 	bl	19f74 <HAL_GetTick>
   1b30c:	4602      	mov	r2, r0
   1b30e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1b310:	1ad3      	subs	r3, r2, r3
   1b312:	f241 3288 	movw	r2, #5000	; 0x1388
   1b316:	4293      	cmp	r3, r2
   1b318:	d901      	bls.n	1b31e <HAL_RCC_OscConfig+0x592>
        {
          return HAL_TIMEOUT;
   1b31a:	2303      	movs	r3, #3
   1b31c:	e104      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
   1b31e:	4b84      	ldr	r3, [pc, #528]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b320:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   1b322:	f003 0302 	and.w	r3, r3, #2
   1b326:	2b00      	cmp	r3, #0
   1b328:	d1ee      	bne.n	1b308 <HAL_RCC_OscConfig+0x57c>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
   1b32a:	687b      	ldr	r3, [r7, #4]
   1b32c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1b32e:	2b00      	cmp	r3, #0
   1b330:	f000 80f9 	beq.w	1b526 <HAL_RCC_OscConfig+0x79a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
   1b334:	4b7e      	ldr	r3, [pc, #504]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b336:	691b      	ldr	r3, [r3, #16]
   1b338:	f003 0338 	and.w	r3, r3, #56	; 0x38
   1b33c:	2b18      	cmp	r3, #24
   1b33e:	f000 80b4 	beq.w	1b4aa <HAL_RCC_OscConfig+0x71e>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
   1b342:	687b      	ldr	r3, [r7, #4]
   1b344:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1b346:	2b02      	cmp	r3, #2
   1b348:	f040 8095 	bne.w	1b476 <HAL_RCC_OscConfig+0x6ea>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
        assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
   1b34c:	4b78      	ldr	r3, [pc, #480]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b34e:	681b      	ldr	r3, [r3, #0]
   1b350:	4a77      	ldr	r2, [pc, #476]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b352:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
   1b356:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
   1b358:	f7fe fe0c 	bl	19f74 <HAL_GetTick>
   1b35c:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
   1b35e:	e008      	b.n	1b372 <HAL_RCC_OscConfig+0x5e6>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
   1b360:	f7fe fe08 	bl	19f74 <HAL_GetTick>
   1b364:	4602      	mov	r2, r0
   1b366:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1b368:	1ad3      	subs	r3, r2, r3
   1b36a:	2b02      	cmp	r3, #2
   1b36c:	d901      	bls.n	1b372 <HAL_RCC_OscConfig+0x5e6>
          {
            return HAL_TIMEOUT;
   1b36e:	2303      	movs	r3, #3
   1b370:	e0da      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
   1b372:	4b6f      	ldr	r3, [pc, #444]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b374:	681b      	ldr	r3, [r3, #0]
   1b376:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
   1b37a:	2b00      	cmp	r3, #0
   1b37c:	d1f0      	bne.n	1b360 <HAL_RCC_OscConfig+0x5d4>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
   1b37e:	4b6c      	ldr	r3, [pc, #432]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b380:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   1b382:	4b6c      	ldr	r3, [pc, #432]	; (1b534 <HAL_RCC_OscConfig+0x7a8>)
   1b384:	4013      	ands	r3, r2
   1b386:	687a      	ldr	r2, [r7, #4]
   1b388:	6a91      	ldr	r1, [r2, #40]	; 0x28
   1b38a:	687a      	ldr	r2, [r7, #4]
   1b38c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1b38e:	0112      	lsls	r2, r2, #4
   1b390:	430a      	orrs	r2, r1
   1b392:	4967      	ldr	r1, [pc, #412]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b394:	4313      	orrs	r3, r2
   1b396:	628b      	str	r3, [r1, #40]	; 0x28
   1b398:	687b      	ldr	r3, [r7, #4]
   1b39a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   1b39c:	3b01      	subs	r3, #1
   1b39e:	f3c3 0208 	ubfx	r2, r3, #0, #9
   1b3a2:	687b      	ldr	r3, [r7, #4]
   1b3a4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   1b3a6:	3b01      	subs	r3, #1
   1b3a8:	025b      	lsls	r3, r3, #9
   1b3aa:	b29b      	uxth	r3, r3
   1b3ac:	431a      	orrs	r2, r3
   1b3ae:	687b      	ldr	r3, [r7, #4]
   1b3b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   1b3b2:	3b01      	subs	r3, #1
   1b3b4:	041b      	lsls	r3, r3, #16
   1b3b6:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
   1b3ba:	431a      	orrs	r2, r3
   1b3bc:	687b      	ldr	r3, [r7, #4]
   1b3be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
   1b3c0:	3b01      	subs	r3, #1
   1b3c2:	061b      	lsls	r3, r3, #24
   1b3c4:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
   1b3c8:	4959      	ldr	r1, [pc, #356]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b3ca:	4313      	orrs	r3, r2
   1b3cc:	630b      	str	r3, [r1, #48]	; 0x30
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);

         /* Disable PLLFRACN . */
         __HAL_RCC_PLLFRACN_DISABLE();
   1b3ce:	4b58      	ldr	r3, [pc, #352]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b3d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b3d2:	4a57      	ldr	r2, [pc, #348]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b3d4:	f023 0301 	bic.w	r3, r3, #1
   1b3d8:	62d3      	str	r3, [r2, #44]	; 0x2c

         /* Configure PLL PLL1FRACN */
         __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
   1b3da:	4b55      	ldr	r3, [pc, #340]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b3dc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   1b3de:	4b56      	ldr	r3, [pc, #344]	; (1b538 <HAL_RCC_OscConfig+0x7ac>)
   1b3e0:	4013      	ands	r3, r2
   1b3e2:	687a      	ldr	r2, [r7, #4]
   1b3e4:	6c92      	ldr	r2, [r2, #72]	; 0x48
   1b3e6:	00d2      	lsls	r2, r2, #3
   1b3e8:	4951      	ldr	r1, [pc, #324]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b3ea:	4313      	orrs	r3, r2
   1b3ec:	634b      	str	r3, [r1, #52]	; 0x34

        /* Select PLL1 input reference frequency range: VCI */
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
   1b3ee:	4b50      	ldr	r3, [pc, #320]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b3f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b3f2:	f023 020c 	bic.w	r2, r3, #12
   1b3f6:	687b      	ldr	r3, [r7, #4]
   1b3f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
   1b3fa:	494d      	ldr	r1, [pc, #308]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b3fc:	4313      	orrs	r3, r2
   1b3fe:	62cb      	str	r3, [r1, #44]	; 0x2c

        /* Select PLL1 output frequency range : VCO */
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
   1b400:	4b4b      	ldr	r3, [pc, #300]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b402:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b404:	f023 0202 	bic.w	r2, r3, #2
   1b408:	687b      	ldr	r3, [r7, #4]
   1b40a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
   1b40c:	4948      	ldr	r1, [pc, #288]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b40e:	4313      	orrs	r3, r2
   1b410:	62cb      	str	r3, [r1, #44]	; 0x2c

        /* Enable PLL System Clock output. */
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
   1b412:	4b47      	ldr	r3, [pc, #284]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b414:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b416:	4a46      	ldr	r2, [pc, #280]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b418:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   1b41c:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1Q Clock output. */
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
   1b41e:	4b44      	ldr	r3, [pc, #272]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b420:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b422:	4a43      	ldr	r2, [pc, #268]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b424:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1b428:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1R  Clock output. */
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
   1b42a:	4b41      	ldr	r3, [pc, #260]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b42c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b42e:	4a40      	ldr	r2, [pc, #256]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b430:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
   1b434:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1FRACN . */
         __HAL_RCC_PLLFRACN_ENABLE();
   1b436:	4b3e      	ldr	r3, [pc, #248]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b438:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b43a:	4a3d      	ldr	r2, [pc, #244]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b43c:	f043 0301 	orr.w	r3, r3, #1
   1b440:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
   1b442:	4b3b      	ldr	r3, [pc, #236]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b444:	681b      	ldr	r3, [r3, #0]
   1b446:	4a3a      	ldr	r2, [pc, #232]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b448:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
   1b44c:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
   1b44e:	f7fe fd91 	bl	19f74 <HAL_GetTick>
   1b452:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
   1b454:	e008      	b.n	1b468 <HAL_RCC_OscConfig+0x6dc>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
   1b456:	f7fe fd8d 	bl	19f74 <HAL_GetTick>
   1b45a:	4602      	mov	r2, r0
   1b45c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1b45e:	1ad3      	subs	r3, r2, r3
   1b460:	2b02      	cmp	r3, #2
   1b462:	d901      	bls.n	1b468 <HAL_RCC_OscConfig+0x6dc>
          {
            return HAL_TIMEOUT;
   1b464:	2303      	movs	r3, #3
   1b466:	e05f      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
   1b468:	4b31      	ldr	r3, [pc, #196]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b46a:	681b      	ldr	r3, [r3, #0]
   1b46c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
   1b470:	2b00      	cmp	r3, #0
   1b472:	d0f0      	beq.n	1b456 <HAL_RCC_OscConfig+0x6ca>
   1b474:	e057      	b.n	1b526 <HAL_RCC_OscConfig+0x79a>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
   1b476:	4b2e      	ldr	r3, [pc, #184]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b478:	681b      	ldr	r3, [r3, #0]
   1b47a:	4a2d      	ldr	r2, [pc, #180]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b47c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
   1b480:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
   1b482:	f7fe fd77 	bl	19f74 <HAL_GetTick>
   1b486:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
   1b488:	e008      	b.n	1b49c <HAL_RCC_OscConfig+0x710>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
   1b48a:	f7fe fd73 	bl	19f74 <HAL_GetTick>
   1b48e:	4602      	mov	r2, r0
   1b490:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1b492:	1ad3      	subs	r3, r2, r3
   1b494:	2b02      	cmp	r3, #2
   1b496:	d901      	bls.n	1b49c <HAL_RCC_OscConfig+0x710>
          {
            return HAL_TIMEOUT;
   1b498:	2303      	movs	r3, #3
   1b49a:	e045      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
   1b49c:	4b24      	ldr	r3, [pc, #144]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b49e:	681b      	ldr	r3, [r3, #0]
   1b4a0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
   1b4a4:	2b00      	cmp	r3, #0
   1b4a6:	d1f0      	bne.n	1b48a <HAL_RCC_OscConfig+0x6fe>
   1b4a8:	e03d      	b.n	1b526 <HAL_RCC_OscConfig+0x79a>
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      temp1_pllckcfg = RCC->PLLCKSELR;
   1b4aa:	4b21      	ldr	r3, [pc, #132]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b4ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1b4ae:	613b      	str	r3, [r7, #16]
      temp2_pllckcfg = RCC->PLL1DIVR;
   1b4b0:	4b1f      	ldr	r3, [pc, #124]	; (1b530 <HAL_RCC_OscConfig+0x7a4>)
   1b4b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   1b4b4:	60fb      	str	r3, [r7, #12]
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
   1b4b6:	687b      	ldr	r3, [r7, #4]
   1b4b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1b4ba:	2b01      	cmp	r3, #1
   1b4bc:	d031      	beq.n	1b522 <HAL_RCC_OscConfig+0x796>
	 (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
   1b4be:	693b      	ldr	r3, [r7, #16]
   1b4c0:	f003 0203 	and.w	r2, r3, #3
   1b4c4:	687b      	ldr	r3, [r7, #4]
   1b4c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
   1b4c8:	429a      	cmp	r2, r3
   1b4ca:	d12a      	bne.n	1b522 <HAL_RCC_OscConfig+0x796>
         ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
   1b4cc:	693b      	ldr	r3, [r7, #16]
   1b4ce:	091b      	lsrs	r3, r3, #4
   1b4d0:	f003 023f 	and.w	r2, r3, #63	; 0x3f
   1b4d4:	687b      	ldr	r3, [r7, #4]
   1b4d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
	 (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
   1b4d8:	429a      	cmp	r2, r3
   1b4da:	d122      	bne.n	1b522 <HAL_RCC_OscConfig+0x796>
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
   1b4dc:	68fb      	ldr	r3, [r7, #12]
   1b4de:	f3c3 0208 	ubfx	r2, r3, #0, #9
   1b4e2:	687b      	ldr	r3, [r7, #4]
   1b4e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   1b4e6:	3b01      	subs	r3, #1
         ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
   1b4e8:	429a      	cmp	r2, r3
   1b4ea:	d11a      	bne.n	1b522 <HAL_RCC_OscConfig+0x796>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
   1b4ec:	68fb      	ldr	r3, [r7, #12]
   1b4ee:	0a5b      	lsrs	r3, r3, #9
   1b4f0:	f003 027f 	and.w	r2, r3, #127	; 0x7f
   1b4f4:	687b      	ldr	r3, [r7, #4]
   1b4f6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   1b4f8:	3b01      	subs	r3, #1
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
   1b4fa:	429a      	cmp	r2, r3
   1b4fc:	d111      	bne.n	1b522 <HAL_RCC_OscConfig+0x796>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
   1b4fe:	68fb      	ldr	r3, [r7, #12]
   1b500:	0c1b      	lsrs	r3, r3, #16
   1b502:	f003 027f 	and.w	r2, r3, #127	; 0x7f
   1b506:	687b      	ldr	r3, [r7, #4]
   1b508:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   1b50a:	3b01      	subs	r3, #1
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
   1b50c:	429a      	cmp	r2, r3
   1b50e:	d108      	bne.n	1b522 <HAL_RCC_OscConfig+0x796>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
   1b510:	68fb      	ldr	r3, [r7, #12]
   1b512:	0e1b      	lsrs	r3, r3, #24
   1b514:	f003 027f 	and.w	r2, r3, #127	; 0x7f
   1b518:	687b      	ldr	r3, [r7, #4]
   1b51a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
   1b51c:	3b01      	subs	r3, #1
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
   1b51e:	429a      	cmp	r2, r3
   1b520:	d001      	beq.n	1b526 <HAL_RCC_OscConfig+0x79a>
      {
        return HAL_ERROR;
   1b522:	2301      	movs	r3, #1
   1b524:	e000      	b.n	1b528 <HAL_RCC_OscConfig+0x79c>
      }
    }
  }
  return HAL_OK;
   1b526:	2300      	movs	r3, #0
}
   1b528:	4618      	mov	r0, r3
   1b52a:	3730      	adds	r7, #48	; 0x30
   1b52c:	46bd      	mov	sp, r7
   1b52e:	bd80      	pop	{r7, pc}
   1b530:	58024400 	.word	0x58024400
   1b534:	fffffc0c 	.word	0xfffffc0c
   1b538:	ffff0007 	.word	0xffff0007

0001b53c <HAL_RCC_ClockConfig>:
  *         D1CPRE[3:0] bits to ensure that  Domain1 core clock not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
   1b53c:	b580      	push	{r7, lr}
   1b53e:	b086      	sub	sp, #24
   1b540:	af00      	add	r7, sp, #0
   1b542:	6078      	str	r0, [r7, #4]
   1b544:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef halstatus;
  uint32_t tickstart;
  uint32_t common_system_clock;

   /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
   1b546:	687b      	ldr	r3, [r7, #4]
   1b548:	2b00      	cmp	r3, #0
   1b54a:	d101      	bne.n	1b550 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
   1b54c:	2301      	movs	r3, #1
   1b54e:	e19c      	b.n	1b88a <HAL_RCC_ClockConfig+0x34e>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
   1b550:	4b8a      	ldr	r3, [pc, #552]	; (1b77c <HAL_RCC_ClockConfig+0x240>)
   1b552:	681b      	ldr	r3, [r3, #0]
   1b554:	f003 030f 	and.w	r3, r3, #15
   1b558:	683a      	ldr	r2, [r7, #0]
   1b55a:	429a      	cmp	r2, r3
   1b55c:	d910      	bls.n	1b580 <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
   1b55e:	4b87      	ldr	r3, [pc, #540]	; (1b77c <HAL_RCC_ClockConfig+0x240>)
   1b560:	681b      	ldr	r3, [r3, #0]
   1b562:	f023 020f 	bic.w	r2, r3, #15
   1b566:	4985      	ldr	r1, [pc, #532]	; (1b77c <HAL_RCC_ClockConfig+0x240>)
   1b568:	683b      	ldr	r3, [r7, #0]
   1b56a:	4313      	orrs	r3, r2
   1b56c:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
   1b56e:	4b83      	ldr	r3, [pc, #524]	; (1b77c <HAL_RCC_ClockConfig+0x240>)
   1b570:	681b      	ldr	r3, [r3, #0]
   1b572:	f003 030f 	and.w	r3, r3, #15
   1b576:	683a      	ldr	r2, [r7, #0]
   1b578:	429a      	cmp	r2, r3
   1b57a:	d001      	beq.n	1b580 <HAL_RCC_ClockConfig+0x44>
    {
      return HAL_ERROR;
   1b57c:	2301      	movs	r3, #1
   1b57e:	e184      	b.n	1b88a <HAL_RCC_ClockConfig+0x34e>

  }

  /* Increasing the BUS frequency divider */
  /*-------------------------- D1PCLK1/CDPCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
   1b580:	687b      	ldr	r3, [r7, #4]
   1b582:	681b      	ldr	r3, [r3, #0]
   1b584:	f003 0304 	and.w	r3, r3, #4
   1b588:	2b00      	cmp	r3, #0
   1b58a:	d010      	beq.n	1b5ae <HAL_RCC_ClockConfig+0x72>
  {
#if defined (RCC_D1CFGR_D1PPRE)
    if((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
   1b58c:	687b      	ldr	r3, [r7, #4]
   1b58e:	691a      	ldr	r2, [r3, #16]
   1b590:	4b7b      	ldr	r3, [pc, #492]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b592:	699b      	ldr	r3, [r3, #24]
   1b594:	f003 0370 	and.w	r3, r3, #112	; 0x70
   1b598:	429a      	cmp	r2, r3
   1b59a:	d908      	bls.n	1b5ae <HAL_RCC_ClockConfig+0x72>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
   1b59c:	4b78      	ldr	r3, [pc, #480]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b59e:	699b      	ldr	r3, [r3, #24]
   1b5a0:	f023 0270 	bic.w	r2, r3, #112	; 0x70
   1b5a4:	687b      	ldr	r3, [r7, #4]
   1b5a6:	691b      	ldr	r3, [r3, #16]
   1b5a8:	4975      	ldr	r1, [pc, #468]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b5aa:	4313      	orrs	r3, r2
   1b5ac:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
   1b5ae:	687b      	ldr	r3, [r7, #4]
   1b5b0:	681b      	ldr	r3, [r3, #0]
   1b5b2:	f003 0308 	and.w	r3, r3, #8
   1b5b6:	2b00      	cmp	r3, #0
   1b5b8:	d010      	beq.n	1b5dc <HAL_RCC_ClockConfig+0xa0>
  {
#if defined (RCC_D2CFGR_D2PPRE1)
    if((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
   1b5ba:	687b      	ldr	r3, [r7, #4]
   1b5bc:	695a      	ldr	r2, [r3, #20]
   1b5be:	4b70      	ldr	r3, [pc, #448]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b5c0:	69db      	ldr	r3, [r3, #28]
   1b5c2:	f003 0370 	and.w	r3, r3, #112	; 0x70
   1b5c6:	429a      	cmp	r2, r3
   1b5c8:	d908      	bls.n	1b5dc <HAL_RCC_ClockConfig+0xa0>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
   1b5ca:	4b6d      	ldr	r3, [pc, #436]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b5cc:	69db      	ldr	r3, [r3, #28]
   1b5ce:	f023 0270 	bic.w	r2, r3, #112	; 0x70
   1b5d2:	687b      	ldr	r3, [r7, #4]
   1b5d4:	695b      	ldr	r3, [r3, #20]
   1b5d6:	496a      	ldr	r1, [pc, #424]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b5d8:	4313      	orrs	r3, r2
   1b5da:	61cb      	str	r3, [r1, #28]
      MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
  }
#endif
    }
  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
   1b5dc:	687b      	ldr	r3, [r7, #4]
   1b5de:	681b      	ldr	r3, [r3, #0]
   1b5e0:	f003 0310 	and.w	r3, r3, #16
   1b5e4:	2b00      	cmp	r3, #0
   1b5e6:	d010      	beq.n	1b60a <HAL_RCC_ClockConfig+0xce>
  {
#if defined(RCC_D2CFGR_D2PPRE2)
    if((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
   1b5e8:	687b      	ldr	r3, [r7, #4]
   1b5ea:	699a      	ldr	r2, [r3, #24]
   1b5ec:	4b64      	ldr	r3, [pc, #400]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b5ee:	69db      	ldr	r3, [r3, #28]
   1b5f0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
   1b5f4:	429a      	cmp	r2, r3
   1b5f6:	d908      	bls.n	1b60a <HAL_RCC_ClockConfig+0xce>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
   1b5f8:	4b61      	ldr	r3, [pc, #388]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b5fa:	69db      	ldr	r3, [r3, #28]
   1b5fc:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
   1b600:	687b      	ldr	r3, [r7, #4]
   1b602:	699b      	ldr	r3, [r3, #24]
   1b604:	495e      	ldr	r1, [pc, #376]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b606:	4313      	orrs	r3, r2
   1b608:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
   1b60a:	687b      	ldr	r3, [r7, #4]
   1b60c:	681b      	ldr	r3, [r3, #0]
   1b60e:	f003 0320 	and.w	r3, r3, #32
   1b612:	2b00      	cmp	r3, #0
   1b614:	d010      	beq.n	1b638 <HAL_RCC_ClockConfig+0xfc>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
   1b616:	687b      	ldr	r3, [r7, #4]
   1b618:	69da      	ldr	r2, [r3, #28]
   1b61a:	4b59      	ldr	r3, [pc, #356]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b61c:	6a1b      	ldr	r3, [r3, #32]
   1b61e:	f003 0370 	and.w	r3, r3, #112	; 0x70
   1b622:	429a      	cmp	r2, r3
   1b624:	d908      	bls.n	1b638 <HAL_RCC_ClockConfig+0xfc>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
   1b626:	4b56      	ldr	r3, [pc, #344]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b628:	6a1b      	ldr	r3, [r3, #32]
   1b62a:	f023 0270 	bic.w	r2, r3, #112	; 0x70
   1b62e:	687b      	ldr	r3, [r7, #4]
   1b630:	69db      	ldr	r3, [r3, #28]
   1b632:	4953      	ldr	r1, [pc, #332]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b634:	4313      	orrs	r3, r2
   1b636:	620b      	str	r3, [r1, #32]
    }
#endif
  }

   /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
   1b638:	687b      	ldr	r3, [r7, #4]
   1b63a:	681b      	ldr	r3, [r3, #0]
   1b63c:	f003 0302 	and.w	r3, r3, #2
   1b640:	2b00      	cmp	r3, #0
   1b642:	d010      	beq.n	1b666 <HAL_RCC_ClockConfig+0x12a>
  {
#if defined (RCC_D1CFGR_HPRE)
    if((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
   1b644:	687b      	ldr	r3, [r7, #4]
   1b646:	68da      	ldr	r2, [r3, #12]
   1b648:	4b4d      	ldr	r3, [pc, #308]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b64a:	699b      	ldr	r3, [r3, #24]
   1b64c:	f003 030f 	and.w	r3, r3, #15
   1b650:	429a      	cmp	r2, r3
   1b652:	d908      	bls.n	1b666 <HAL_RCC_ClockConfig+0x12a>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
   1b654:	4b4a      	ldr	r3, [pc, #296]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b656:	699b      	ldr	r3, [r3, #24]
   1b658:	f023 020f 	bic.w	r2, r3, #15
   1b65c:	687b      	ldr	r3, [r7, #4]
   1b65e:	68db      	ldr	r3, [r3, #12]
   1b660:	4947      	ldr	r1, [pc, #284]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b662:	4313      	orrs	r3, r2
   1b664:	618b      	str	r3, [r1, #24]
    }
#endif
  }

    /*------------------------- SYSCLK Configuration -------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
   1b666:	687b      	ldr	r3, [r7, #4]
   1b668:	681b      	ldr	r3, [r3, #0]
   1b66a:	f003 0301 	and.w	r3, r3, #1
   1b66e:	2b00      	cmp	r3, #0
   1b670:	d055      	beq.n	1b71e <HAL_RCC_ClockConfig+0x1e2>
    {
      assert_param(IS_RCC_SYSCLK(RCC_ClkInitStruct->SYSCLKDivider));
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
#if defined(RCC_D1CFGR_D1CPRE)
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
   1b672:	4b43      	ldr	r3, [pc, #268]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b674:	699b      	ldr	r3, [r3, #24]
   1b676:	f423 6270 	bic.w	r2, r3, #3840	; 0xf00
   1b67a:	687b      	ldr	r3, [r7, #4]
   1b67c:	689b      	ldr	r3, [r3, #8]
   1b67e:	4940      	ldr	r1, [pc, #256]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b680:	4313      	orrs	r3, r2
   1b682:	618b      	str	r3, [r1, #24]
#else
      MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDCPRE, RCC_ClkInitStruct->SYSCLKDivider);
#endif
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
   1b684:	687b      	ldr	r3, [r7, #4]
   1b686:	685b      	ldr	r3, [r3, #4]
   1b688:	2b02      	cmp	r3, #2
   1b68a:	d107      	bne.n	1b69c <HAL_RCC_ClockConfig+0x160>
      {
        /* Check the HSE ready flag */
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
   1b68c:	4b3c      	ldr	r3, [pc, #240]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b68e:	681b      	ldr	r3, [r3, #0]
   1b690:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
   1b694:	2b00      	cmp	r3, #0
   1b696:	d121      	bne.n	1b6dc <HAL_RCC_ClockConfig+0x1a0>
        {
          return HAL_ERROR;
   1b698:	2301      	movs	r3, #1
   1b69a:	e0f6      	b.n	1b88a <HAL_RCC_ClockConfig+0x34e>
        }
      }
      /* PLL is selected as System Clock Source */
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
   1b69c:	687b      	ldr	r3, [r7, #4]
   1b69e:	685b      	ldr	r3, [r3, #4]
   1b6a0:	2b03      	cmp	r3, #3
   1b6a2:	d107      	bne.n	1b6b4 <HAL_RCC_ClockConfig+0x178>
      {
        /* Check the PLL ready flag */
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
   1b6a4:	4b36      	ldr	r3, [pc, #216]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b6a6:	681b      	ldr	r3, [r3, #0]
   1b6a8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
   1b6ac:	2b00      	cmp	r3, #0
   1b6ae:	d115      	bne.n	1b6dc <HAL_RCC_ClockConfig+0x1a0>
        {
          return HAL_ERROR;
   1b6b0:	2301      	movs	r3, #1
   1b6b2:	e0ea      	b.n	1b88a <HAL_RCC_ClockConfig+0x34e>
        }
      }
      /* CSI is selected as System Clock Source */
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
   1b6b4:	687b      	ldr	r3, [r7, #4]
   1b6b6:	685b      	ldr	r3, [r3, #4]
   1b6b8:	2b01      	cmp	r3, #1
   1b6ba:	d107      	bne.n	1b6cc <HAL_RCC_ClockConfig+0x190>
      {
        /* Check the PLL ready flag */
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
   1b6bc:	4b30      	ldr	r3, [pc, #192]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b6be:	681b      	ldr	r3, [r3, #0]
   1b6c0:	f403 7380 	and.w	r3, r3, #256	; 0x100
   1b6c4:	2b00      	cmp	r3, #0
   1b6c6:	d109      	bne.n	1b6dc <HAL_RCC_ClockConfig+0x1a0>
        {
          return HAL_ERROR;
   1b6c8:	2301      	movs	r3, #1
   1b6ca:	e0de      	b.n	1b88a <HAL_RCC_ClockConfig+0x34e>
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
   1b6cc:	4b2c      	ldr	r3, [pc, #176]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b6ce:	681b      	ldr	r3, [r3, #0]
   1b6d0:	f003 0304 	and.w	r3, r3, #4
   1b6d4:	2b00      	cmp	r3, #0
   1b6d6:	d101      	bne.n	1b6dc <HAL_RCC_ClockConfig+0x1a0>
        {
          return HAL_ERROR;
   1b6d8:	2301      	movs	r3, #1
   1b6da:	e0d6      	b.n	1b88a <HAL_RCC_ClockConfig+0x34e>
        }
      }
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
   1b6dc:	4b28      	ldr	r3, [pc, #160]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b6de:	691b      	ldr	r3, [r3, #16]
   1b6e0:	f023 0207 	bic.w	r2, r3, #7
   1b6e4:	687b      	ldr	r3, [r7, #4]
   1b6e6:	685b      	ldr	r3, [r3, #4]
   1b6e8:	4925      	ldr	r1, [pc, #148]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b6ea:	4313      	orrs	r3, r2
   1b6ec:	610b      	str	r3, [r1, #16]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
   1b6ee:	f7fe fc41 	bl	19f74 <HAL_GetTick>
   1b6f2:	6178      	str	r0, [r7, #20]

        while (__HAL_RCC_GET_SYSCLK_SOURCE() !=  (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
   1b6f4:	e00a      	b.n	1b70c <HAL_RCC_ClockConfig+0x1d0>
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
   1b6f6:	f7fe fc3d 	bl	19f74 <HAL_GetTick>
   1b6fa:	4602      	mov	r2, r0
   1b6fc:	697b      	ldr	r3, [r7, #20]
   1b6fe:	1ad3      	subs	r3, r2, r3
   1b700:	f241 3288 	movw	r2, #5000	; 0x1388
   1b704:	4293      	cmp	r3, r2
   1b706:	d901      	bls.n	1b70c <HAL_RCC_ClockConfig+0x1d0>
          {
            return HAL_TIMEOUT;
   1b708:	2303      	movs	r3, #3
   1b70a:	e0be      	b.n	1b88a <HAL_RCC_ClockConfig+0x34e>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() !=  (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
   1b70c:	4b1c      	ldr	r3, [pc, #112]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b70e:	691b      	ldr	r3, [r3, #16]
   1b710:	f003 0238 	and.w	r2, r3, #56	; 0x38
   1b714:	687b      	ldr	r3, [r7, #4]
   1b716:	685b      	ldr	r3, [r3, #4]
   1b718:	00db      	lsls	r3, r3, #3
   1b71a:	429a      	cmp	r2, r3
   1b71c:	d1eb      	bne.n	1b6f6 <HAL_RCC_ClockConfig+0x1ba>

    }

    /* Decreasing the BUS frequency divider */
   /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
   1b71e:	687b      	ldr	r3, [r7, #4]
   1b720:	681b      	ldr	r3, [r3, #0]
   1b722:	f003 0302 	and.w	r3, r3, #2
   1b726:	2b00      	cmp	r3, #0
   1b728:	d010      	beq.n	1b74c <HAL_RCC_ClockConfig+0x210>
  {
#if defined(RCC_D1CFGR_HPRE)
    if((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
   1b72a:	687b      	ldr	r3, [r7, #4]
   1b72c:	68da      	ldr	r2, [r3, #12]
   1b72e:	4b14      	ldr	r3, [pc, #80]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b730:	699b      	ldr	r3, [r3, #24]
   1b732:	f003 030f 	and.w	r3, r3, #15
   1b736:	429a      	cmp	r2, r3
   1b738:	d208      	bcs.n	1b74c <HAL_RCC_ClockConfig+0x210>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
   1b73a:	4b11      	ldr	r3, [pc, #68]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b73c:	699b      	ldr	r3, [r3, #24]
   1b73e:	f023 020f 	bic.w	r2, r3, #15
   1b742:	687b      	ldr	r3, [r7, #4]
   1b744:	68db      	ldr	r3, [r3, #12]
   1b746:	490e      	ldr	r1, [pc, #56]	; (1b780 <HAL_RCC_ClockConfig+0x244>)
   1b748:	4313      	orrs	r3, r2
   1b74a:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
   1b74c:	4b0b      	ldr	r3, [pc, #44]	; (1b77c <HAL_RCC_ClockConfig+0x240>)
   1b74e:	681b      	ldr	r3, [r3, #0]
   1b750:	f003 030f 	and.w	r3, r3, #15
   1b754:	683a      	ldr	r2, [r7, #0]
   1b756:	429a      	cmp	r2, r3
   1b758:	d214      	bcs.n	1b784 <HAL_RCC_ClockConfig+0x248>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
   1b75a:	4b08      	ldr	r3, [pc, #32]	; (1b77c <HAL_RCC_ClockConfig+0x240>)
   1b75c:	681b      	ldr	r3, [r3, #0]
   1b75e:	f023 020f 	bic.w	r2, r3, #15
   1b762:	4906      	ldr	r1, [pc, #24]	; (1b77c <HAL_RCC_ClockConfig+0x240>)
   1b764:	683b      	ldr	r3, [r7, #0]
   1b766:	4313      	orrs	r3, r2
   1b768:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
   1b76a:	4b04      	ldr	r3, [pc, #16]	; (1b77c <HAL_RCC_ClockConfig+0x240>)
   1b76c:	681b      	ldr	r3, [r3, #0]
   1b76e:	f003 030f 	and.w	r3, r3, #15
   1b772:	683a      	ldr	r2, [r7, #0]
   1b774:	429a      	cmp	r2, r3
   1b776:	d005      	beq.n	1b784 <HAL_RCC_ClockConfig+0x248>
    {
      return HAL_ERROR;
   1b778:	2301      	movs	r3, #1
   1b77a:	e086      	b.n	1b88a <HAL_RCC_ClockConfig+0x34e>
   1b77c:	52002000 	.word	0x52002000
   1b780:	58024400 	.word	0x58024400
    }
 }

  /*-------------------------- D1PCLK1/CDPCLK Configuration ---------------------------*/
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
   1b784:	687b      	ldr	r3, [r7, #4]
   1b786:	681b      	ldr	r3, [r3, #0]
   1b788:	f003 0304 	and.w	r3, r3, #4
   1b78c:	2b00      	cmp	r3, #0
   1b78e:	d010      	beq.n	1b7b2 <HAL_RCC_ClockConfig+0x276>
 {
#if defined(RCC_D1CFGR_D1PPRE)
   if((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
   1b790:	687b      	ldr	r3, [r7, #4]
   1b792:	691a      	ldr	r2, [r3, #16]
   1b794:	4b3f      	ldr	r3, [pc, #252]	; (1b894 <HAL_RCC_ClockConfig+0x358>)
   1b796:	699b      	ldr	r3, [r3, #24]
   1b798:	f003 0370 	and.w	r3, r3, #112	; 0x70
   1b79c:	429a      	cmp	r2, r3
   1b79e:	d208      	bcs.n	1b7b2 <HAL_RCC_ClockConfig+0x276>
   {
     assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
     MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
   1b7a0:	4b3c      	ldr	r3, [pc, #240]	; (1b894 <HAL_RCC_ClockConfig+0x358>)
   1b7a2:	699b      	ldr	r3, [r3, #24]
   1b7a4:	f023 0270 	bic.w	r2, r3, #112	; 0x70
   1b7a8:	687b      	ldr	r3, [r7, #4]
   1b7aa:	691b      	ldr	r3, [r3, #16]
   1b7ac:	4939      	ldr	r1, [pc, #228]	; (1b894 <HAL_RCC_ClockConfig+0x358>)
   1b7ae:	4313      	orrs	r3, r2
   1b7b0:	618b      	str	r3, [r1, #24]
   }
#endif
 }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
   1b7b2:	687b      	ldr	r3, [r7, #4]
   1b7b4:	681b      	ldr	r3, [r3, #0]
   1b7b6:	f003 0308 	and.w	r3, r3, #8
   1b7ba:	2b00      	cmp	r3, #0
   1b7bc:	d010      	beq.n	1b7e0 <HAL_RCC_ClockConfig+0x2a4>
 {
#if defined(RCC_D2CFGR_D2PPRE1)
   if((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
   1b7be:	687b      	ldr	r3, [r7, #4]
   1b7c0:	695a      	ldr	r2, [r3, #20]
   1b7c2:	4b34      	ldr	r3, [pc, #208]	; (1b894 <HAL_RCC_ClockConfig+0x358>)
   1b7c4:	69db      	ldr	r3, [r3, #28]
   1b7c6:	f003 0370 	and.w	r3, r3, #112	; 0x70
   1b7ca:	429a      	cmp	r2, r3
   1b7cc:	d208      	bcs.n	1b7e0 <HAL_RCC_ClockConfig+0x2a4>
   {
     assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
     MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
   1b7ce:	4b31      	ldr	r3, [pc, #196]	; (1b894 <HAL_RCC_ClockConfig+0x358>)
   1b7d0:	69db      	ldr	r3, [r3, #28]
   1b7d2:	f023 0270 	bic.w	r2, r3, #112	; 0x70
   1b7d6:	687b      	ldr	r3, [r7, #4]
   1b7d8:	695b      	ldr	r3, [r3, #20]
   1b7da:	492e      	ldr	r1, [pc, #184]	; (1b894 <HAL_RCC_ClockConfig+0x358>)
   1b7dc:	4313      	orrs	r3, r2
   1b7de:	61cb      	str	r3, [r1, #28]
   }
#endif
 }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
   1b7e0:	687b      	ldr	r3, [r7, #4]
   1b7e2:	681b      	ldr	r3, [r3, #0]
   1b7e4:	f003 0310 	and.w	r3, r3, #16
   1b7e8:	2b00      	cmp	r3, #0
   1b7ea:	d010      	beq.n	1b80e <HAL_RCC_ClockConfig+0x2d2>
 {
#if defined (RCC_D2CFGR_D2PPRE2)
   if((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
   1b7ec:	687b      	ldr	r3, [r7, #4]
   1b7ee:	699a      	ldr	r2, [r3, #24]
   1b7f0:	4b28      	ldr	r3, [pc, #160]	; (1b894 <HAL_RCC_ClockConfig+0x358>)
   1b7f2:	69db      	ldr	r3, [r3, #28]
   1b7f4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
   1b7f8:	429a      	cmp	r2, r3
   1b7fa:	d208      	bcs.n	1b80e <HAL_RCC_ClockConfig+0x2d2>
   {
     assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
     MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
   1b7fc:	4b25      	ldr	r3, [pc, #148]	; (1b894 <HAL_RCC_ClockConfig+0x358>)
   1b7fe:	69db      	ldr	r3, [r3, #28]
   1b800:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
   1b804:	687b      	ldr	r3, [r7, #4]
   1b806:	699b      	ldr	r3, [r3, #24]
   1b808:	4922      	ldr	r1, [pc, #136]	; (1b894 <HAL_RCC_ClockConfig+0x358>)
   1b80a:	4313      	orrs	r3, r2
   1b80c:	61cb      	str	r3, [r1, #28]
   }
#endif
 }

  /*-------------------------- D3PCLK1/SRDPCLK1 Configuration ---------------------------*/
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
   1b80e:	687b      	ldr	r3, [r7, #4]
   1b810:	681b      	ldr	r3, [r3, #0]
   1b812:	f003 0320 	and.w	r3, r3, #32
   1b816:	2b00      	cmp	r3, #0
   1b818:	d010      	beq.n	1b83c <HAL_RCC_ClockConfig+0x300>
 {
#if defined(RCC_D3CFGR_D3PPRE)
   if((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
   1b81a:	687b      	ldr	r3, [r7, #4]
   1b81c:	69da      	ldr	r2, [r3, #28]
   1b81e:	4b1d      	ldr	r3, [pc, #116]	; (1b894 <HAL_RCC_ClockConfig+0x358>)
   1b820:	6a1b      	ldr	r3, [r3, #32]
   1b822:	f003 0370 	and.w	r3, r3, #112	; 0x70
   1b826:	429a      	cmp	r2, r3
   1b828:	d208      	bcs.n	1b83c <HAL_RCC_ClockConfig+0x300>
   {
     assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
     MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
   1b82a:	4b1a      	ldr	r3, [pc, #104]	; (1b894 <HAL_RCC_ClockConfig+0x358>)
   1b82c:	6a1b      	ldr	r3, [r3, #32]
   1b82e:	f023 0270 	bic.w	r2, r3, #112	; 0x70
   1b832:	687b      	ldr	r3, [r7, #4]
   1b834:	69db      	ldr	r3, [r3, #28]
   1b836:	4917      	ldr	r1, [pc, #92]	; (1b894 <HAL_RCC_ClockConfig+0x358>)
   1b838:	4313      	orrs	r3, r2
   1b83a:	620b      	str	r3, [r1, #32]
#endif
 }

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
   1b83c:	f000 f834 	bl	1b8a8 <HAL_RCC_GetSysClockFreq>
   1b840:	4601      	mov	r1, r0
   1b842:	4b14      	ldr	r3, [pc, #80]	; (1b894 <HAL_RCC_ClockConfig+0x358>)
   1b844:	699b      	ldr	r3, [r3, #24]
   1b846:	0a1b      	lsrs	r3, r3, #8
   1b848:	f003 030f 	and.w	r3, r3, #15
   1b84c:	4a12      	ldr	r2, [pc, #72]	; (1b898 <HAL_RCC_ClockConfig+0x35c>)
   1b84e:	5cd3      	ldrb	r3, [r2, r3]
   1b850:	f003 031f 	and.w	r3, r3, #31
   1b854:	fa21 f303 	lsr.w	r3, r1, r3
   1b858:	613b      	str	r3, [r7, #16]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
   1b85a:	4b0e      	ldr	r3, [pc, #56]	; (1b894 <HAL_RCC_ClockConfig+0x358>)
   1b85c:	699b      	ldr	r3, [r3, #24]
   1b85e:	f003 030f 	and.w	r3, r3, #15
   1b862:	4a0d      	ldr	r2, [pc, #52]	; (1b898 <HAL_RCC_ClockConfig+0x35c>)
   1b864:	5cd3      	ldrb	r3, [r2, r3]
   1b866:	f003 031f 	and.w	r3, r3, #31
   1b86a:	693a      	ldr	r2, [r7, #16]
   1b86c:	fa22 f303 	lsr.w	r3, r2, r3
   1b870:	4a0a      	ldr	r2, [pc, #40]	; (1b89c <HAL_RCC_ClockConfig+0x360>)
   1b872:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
   1b874:	4a0a      	ldr	r2, [pc, #40]	; (1b8a0 <HAL_RCC_ClockConfig+0x364>)
   1b876:	693b      	ldr	r3, [r7, #16]
   1b878:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Configure the source of time base considering new system clocks settings*/
  halstatus = HAL_InitTick (uwTickPrio);
   1b87a:	4b0a      	ldr	r3, [pc, #40]	; (1b8a4 <HAL_RCC_ClockConfig+0x368>)
   1b87c:	681b      	ldr	r3, [r3, #0]
   1b87e:	4618      	mov	r0, r3
   1b880:	f7fe fb42 	bl	19f08 <HAL_InitTick>
   1b884:	4603      	mov	r3, r0
   1b886:	73fb      	strb	r3, [r7, #15]

  return halstatus;
   1b888:	7bfb      	ldrb	r3, [r7, #15]
}
   1b88a:	4618      	mov	r0, r3
   1b88c:	3718      	adds	r7, #24
   1b88e:	46bd      	mov	sp, r7
   1b890:	bd80      	pop	{r7, pc}
   1b892:	bf00      	nop
   1b894:	58024400 	.word	0x58024400
   1b898:	00023e94 	.word	0x00023e94
   1b89c:	0003415c 	.word	0x0003415c
   1b8a0:	00034158 	.word	0x00034158
   1b8a4:	00034160 	.word	0x00034160

0001b8a8 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
   1b8a8:	b480      	push	{r7}
   1b8aa:	b089      	sub	sp, #36	; 0x24
   1b8ac:	af00      	add	r7, sp, #0
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
   1b8ae:	4baf      	ldr	r3, [pc, #700]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1b8b0:	691b      	ldr	r3, [r3, #16]
   1b8b2:	f003 0338 	and.w	r3, r3, #56	; 0x38
   1b8b6:	2b18      	cmp	r3, #24
   1b8b8:	f200 814e 	bhi.w	1bb58 <HAL_RCC_GetSysClockFreq+0x2b0>
   1b8bc:	a201      	add	r2, pc, #4	; (adr r2, 1b8c4 <HAL_RCC_GetSysClockFreq+0x1c>)
   1b8be:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1b8c2:	bf00      	nop
   1b8c4:	0001b929 	.word	0x0001b929
   1b8c8:	0001bb59 	.word	0x0001bb59
   1b8cc:	0001bb59 	.word	0x0001bb59
   1b8d0:	0001bb59 	.word	0x0001bb59
   1b8d4:	0001bb59 	.word	0x0001bb59
   1b8d8:	0001bb59 	.word	0x0001bb59
   1b8dc:	0001bb59 	.word	0x0001bb59
   1b8e0:	0001bb59 	.word	0x0001bb59
   1b8e4:	0001b94f 	.word	0x0001b94f
   1b8e8:	0001bb59 	.word	0x0001bb59
   1b8ec:	0001bb59 	.word	0x0001bb59
   1b8f0:	0001bb59 	.word	0x0001bb59
   1b8f4:	0001bb59 	.word	0x0001bb59
   1b8f8:	0001bb59 	.word	0x0001bb59
   1b8fc:	0001bb59 	.word	0x0001bb59
   1b900:	0001bb59 	.word	0x0001bb59
   1b904:	0001b955 	.word	0x0001b955
   1b908:	0001bb59 	.word	0x0001bb59
   1b90c:	0001bb59 	.word	0x0001bb59
   1b910:	0001bb59 	.word	0x0001bb59
   1b914:	0001bb59 	.word	0x0001bb59
   1b918:	0001bb59 	.word	0x0001bb59
   1b91c:	0001bb59 	.word	0x0001bb59
   1b920:	0001bb59 	.word	0x0001bb59
   1b924:	0001b95b 	.word	0x0001b95b
  {
  case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

   if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
   1b928:	4b90      	ldr	r3, [pc, #576]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1b92a:	681b      	ldr	r3, [r3, #0]
   1b92c:	f003 0320 	and.w	r3, r3, #32
   1b930:	2b00      	cmp	r3, #0
   1b932:	d009      	beq.n	1b948 <HAL_RCC_GetSysClockFreq+0xa0>
      {
        sysclockfreq = (uint32_t) (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
   1b934:	4b8d      	ldr	r3, [pc, #564]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1b936:	681b      	ldr	r3, [r3, #0]
   1b938:	08db      	lsrs	r3, r3, #3
   1b93a:	f003 0303 	and.w	r3, r3, #3
   1b93e:	4a8c      	ldr	r2, [pc, #560]	; (1bb70 <HAL_RCC_GetSysClockFreq+0x2c8>)
   1b940:	fa22 f303 	lsr.w	r3, r2, r3
   1b944:	61bb      	str	r3, [r7, #24]
      else
      {
        sysclockfreq = (uint32_t) HSI_VALUE;
      }

    break;
   1b946:	e10a      	b.n	1bb5e <HAL_RCC_GetSysClockFreq+0x2b6>
        sysclockfreq = (uint32_t) HSI_VALUE;
   1b948:	4b89      	ldr	r3, [pc, #548]	; (1bb70 <HAL_RCC_GetSysClockFreq+0x2c8>)
   1b94a:	61bb      	str	r3, [r7, #24]
    break;
   1b94c:	e107      	b.n	1bb5e <HAL_RCC_GetSysClockFreq+0x2b6>

  case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
    sysclockfreq = CSI_VALUE;
   1b94e:	4b89      	ldr	r3, [pc, #548]	; (1bb74 <HAL_RCC_GetSysClockFreq+0x2cc>)
   1b950:	61bb      	str	r3, [r7, #24]
    break;
   1b952:	e104      	b.n	1bb5e <HAL_RCC_GetSysClockFreq+0x2b6>

  case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    sysclockfreq = HSE_VALUE;
   1b954:	4b88      	ldr	r3, [pc, #544]	; (1bb78 <HAL_RCC_GetSysClockFreq+0x2d0>)
   1b956:	61bb      	str	r3, [r7, #24]
    break;
   1b958:	e101      	b.n	1bb5e <HAL_RCC_GetSysClockFreq+0x2b6>
  case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

    /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
    SYSCLK = PLL_VCO / PLLR
    */
    pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
   1b95a:	4b84      	ldr	r3, [pc, #528]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1b95c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1b95e:	f003 0303 	and.w	r3, r3, #3
   1b962:	617b      	str	r3, [r7, #20]
    pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
   1b964:	4b81      	ldr	r3, [pc, #516]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1b966:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1b968:	091b      	lsrs	r3, r3, #4
   1b96a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1b96e:	613b      	str	r3, [r7, #16]
    pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
   1b970:	4b7e      	ldr	r3, [pc, #504]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1b972:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b974:	f003 0301 	and.w	r3, r3, #1
   1b978:	60fb      	str	r3, [r7, #12]
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
   1b97a:	4b7c      	ldr	r3, [pc, #496]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1b97c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   1b97e:	08db      	lsrs	r3, r3, #3
   1b980:	f3c3 030c 	ubfx	r3, r3, #0, #13
   1b984:	68fa      	ldr	r2, [r7, #12]
   1b986:	fb02 f303 	mul.w	r3, r2, r3
   1b98a:	ee07 3a90 	vmov	s15, r3
   1b98e:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1b992:	edc7 7a02 	vstr	s15, [r7, #8]

    if (pllm != 0U)
   1b996:	693b      	ldr	r3, [r7, #16]
   1b998:	2b00      	cmp	r3, #0
   1b99a:	f000 80da 	beq.w	1bb52 <HAL_RCC_GetSysClockFreq+0x2aa>
    {
      switch (pllsource)
   1b99e:	697b      	ldr	r3, [r7, #20]
   1b9a0:	2b01      	cmp	r3, #1
   1b9a2:	d05a      	beq.n	1ba5a <HAL_RCC_GetSysClockFreq+0x1b2>
   1b9a4:	2b01      	cmp	r3, #1
   1b9a6:	d302      	bcc.n	1b9ae <HAL_RCC_GetSysClockFreq+0x106>
   1b9a8:	2b02      	cmp	r3, #2
   1b9aa:	d078      	beq.n	1ba9e <HAL_RCC_GetSysClockFreq+0x1f6>
   1b9ac:	e099      	b.n	1bae2 <HAL_RCC_GetSysClockFreq+0x23a>
      {
      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
   1b9ae:	4b6f      	ldr	r3, [pc, #444]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1b9b0:	681b      	ldr	r3, [r3, #0]
   1b9b2:	f003 0320 	and.w	r3, r3, #32
   1b9b6:	2b00      	cmp	r3, #0
   1b9b8:	d02d      	beq.n	1ba16 <HAL_RCC_GetSysClockFreq+0x16e>
        {
          hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
   1b9ba:	4b6c      	ldr	r3, [pc, #432]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1b9bc:	681b      	ldr	r3, [r3, #0]
   1b9be:	08db      	lsrs	r3, r3, #3
   1b9c0:	f003 0303 	and.w	r3, r3, #3
   1b9c4:	4a6a      	ldr	r2, [pc, #424]	; (1bb70 <HAL_RCC_GetSysClockFreq+0x2c8>)
   1b9c6:	fa22 f303 	lsr.w	r3, r2, r3
   1b9ca:	607b      	str	r3, [r7, #4]
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
   1b9cc:	687b      	ldr	r3, [r7, #4]
   1b9ce:	ee07 3a90 	vmov	s15, r3
   1b9d2:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1b9d6:	693b      	ldr	r3, [r7, #16]
   1b9d8:	ee07 3a90 	vmov	s15, r3
   1b9dc:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1b9e0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1b9e4:	4b61      	ldr	r3, [pc, #388]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1b9e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   1b9e8:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1b9ec:	ee07 3a90 	vmov	s15, r3
   1b9f0:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1b9f4:	ed97 6a02 	vldr	s12, [r7, #8]
   1b9f8:	eddf 5a60 	vldr	s11, [pc, #384]	; 1bb7c <HAL_RCC_GetSysClockFreq+0x2d4>
   1b9fc:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1ba00:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1ba04:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1ba08:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1ba0c:	ee67 7a27 	vmul.f32	s15, s14, s15
   1ba10:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
        }
        break;
   1ba14:	e087      	b.n	1bb26 <HAL_RCC_GetSysClockFreq+0x27e>
          pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
   1ba16:	693b      	ldr	r3, [r7, #16]
   1ba18:	ee07 3a90 	vmov	s15, r3
   1ba1c:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1ba20:	eddf 6a57 	vldr	s13, [pc, #348]	; 1bb80 <HAL_RCC_GetSysClockFreq+0x2d8>
   1ba24:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1ba28:	4b50      	ldr	r3, [pc, #320]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1ba2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   1ba2c:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1ba30:	ee07 3a90 	vmov	s15, r3
   1ba34:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1ba38:	ed97 6a02 	vldr	s12, [r7, #8]
   1ba3c:	eddf 5a4f 	vldr	s11, [pc, #316]	; 1bb7c <HAL_RCC_GetSysClockFreq+0x2d4>
   1ba40:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1ba44:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1ba48:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1ba4c:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1ba50:	ee67 7a27 	vmul.f32	s15, s14, s15
   1ba54:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
   1ba58:	e065      	b.n	1bb26 <HAL_RCC_GetSysClockFreq+0x27e>

      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
   1ba5a:	693b      	ldr	r3, [r7, #16]
   1ba5c:	ee07 3a90 	vmov	s15, r3
   1ba60:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1ba64:	eddf 6a47 	vldr	s13, [pc, #284]	; 1bb84 <HAL_RCC_GetSysClockFreq+0x2dc>
   1ba68:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1ba6c:	4b3f      	ldr	r3, [pc, #252]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1ba6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   1ba70:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1ba74:	ee07 3a90 	vmov	s15, r3
   1ba78:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1ba7c:	ed97 6a02 	vldr	s12, [r7, #8]
   1ba80:	eddf 5a3e 	vldr	s11, [pc, #248]	; 1bb7c <HAL_RCC_GetSysClockFreq+0x2d4>
   1ba84:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1ba88:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1ba8c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1ba90:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1ba94:	ee67 7a27 	vmul.f32	s15, s14, s15
   1ba98:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
   1ba9c:	e043      	b.n	1bb26 <HAL_RCC_GetSysClockFreq+0x27e>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
   1ba9e:	693b      	ldr	r3, [r7, #16]
   1baa0:	ee07 3a90 	vmov	s15, r3
   1baa4:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1baa8:	eddf 6a37 	vldr	s13, [pc, #220]	; 1bb88 <HAL_RCC_GetSysClockFreq+0x2e0>
   1baac:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1bab0:	4b2e      	ldr	r3, [pc, #184]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1bab2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   1bab4:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1bab8:	ee07 3a90 	vmov	s15, r3
   1babc:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1bac0:	ed97 6a02 	vldr	s12, [r7, #8]
   1bac4:	eddf 5a2d 	vldr	s11, [pc, #180]	; 1bb7c <HAL_RCC_GetSysClockFreq+0x2d4>
   1bac8:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1bacc:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1bad0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1bad4:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1bad8:	ee67 7a27 	vmul.f32	s15, s14, s15
   1badc:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
   1bae0:	e021      	b.n	1bb26 <HAL_RCC_GetSysClockFreq+0x27e>

      default:
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
   1bae2:	693b      	ldr	r3, [r7, #16]
   1bae4:	ee07 3a90 	vmov	s15, r3
   1bae8:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1baec:	eddf 6a25 	vldr	s13, [pc, #148]	; 1bb84 <HAL_RCC_GetSysClockFreq+0x2dc>
   1baf0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1baf4:	4b1d      	ldr	r3, [pc, #116]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1baf6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   1baf8:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1bafc:	ee07 3a90 	vmov	s15, r3
   1bb00:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1bb04:	ed97 6a02 	vldr	s12, [r7, #8]
   1bb08:	eddf 5a1c 	vldr	s11, [pc, #112]	; 1bb7c <HAL_RCC_GetSysClockFreq+0x2d4>
   1bb0c:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1bb10:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1bb14:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1bb18:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1bb1c:	ee67 7a27 	vmul.f32	s15, s14, s15
   1bb20:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
   1bb24:	bf00      	nop
      }
      pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
   1bb26:	4b11      	ldr	r3, [pc, #68]	; (1bb6c <HAL_RCC_GetSysClockFreq+0x2c4>)
   1bb28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   1bb2a:	0a5b      	lsrs	r3, r3, #9
   1bb2c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
   1bb30:	3301      	adds	r3, #1
   1bb32:	603b      	str	r3, [r7, #0]
      sysclockfreq =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
   1bb34:	683b      	ldr	r3, [r7, #0]
   1bb36:	ee07 3a90 	vmov	s15, r3
   1bb3a:	eeb8 7a67 	vcvt.f32.u32	s14, s15
   1bb3e:	edd7 6a07 	vldr	s13, [r7, #28]
   1bb42:	eec6 7a87 	vdiv.f32	s15, s13, s14
   1bb46:	eefc 7ae7 	vcvt.u32.f32	s15, s15
   1bb4a:	ee17 3a90 	vmov	r3, s15
   1bb4e:	61bb      	str	r3, [r7, #24]
    }
    else
    {
      sysclockfreq = 0U;
    }
    break;
   1bb50:	e005      	b.n	1bb5e <HAL_RCC_GetSysClockFreq+0x2b6>
      sysclockfreq = 0U;
   1bb52:	2300      	movs	r3, #0
   1bb54:	61bb      	str	r3, [r7, #24]
    break;
   1bb56:	e002      	b.n	1bb5e <HAL_RCC_GetSysClockFreq+0x2b6>

  default:
    sysclockfreq = CSI_VALUE;
   1bb58:	4b06      	ldr	r3, [pc, #24]	; (1bb74 <HAL_RCC_GetSysClockFreq+0x2cc>)
   1bb5a:	61bb      	str	r3, [r7, #24]
    break;
   1bb5c:	bf00      	nop
  }

  return sysclockfreq;
   1bb5e:	69bb      	ldr	r3, [r7, #24]
}
   1bb60:	4618      	mov	r0, r3
   1bb62:	3724      	adds	r7, #36	; 0x24
   1bb64:	46bd      	mov	sp, r7
   1bb66:	f85d 7b04 	ldr.w	r7, [sp], #4
   1bb6a:	4770      	bx	lr
   1bb6c:	58024400 	.word	0x58024400
   1bb70:	03d09000 	.word	0x03d09000
   1bb74:	003d0900 	.word	0x003d0900
   1bb78:	007a1200 	.word	0x007a1200
   1bb7c:	46000000 	.word	0x46000000
   1bb80:	4c742400 	.word	0x4c742400
   1bb84:	4a742400 	.word	0x4a742400
   1bb88:	4af42400 	.word	0x4af42400

0001bb8c <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
   1bb8c:	b580      	push	{r7, lr}
   1bb8e:	b082      	sub	sp, #8
   1bb90:	af00      	add	r7, sp, #0
uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
   1bb92:	f7ff fe89 	bl	1b8a8 <HAL_RCC_GetSysClockFreq>
   1bb96:	4601      	mov	r1, r0
   1bb98:	4b10      	ldr	r3, [pc, #64]	; (1bbdc <HAL_RCC_GetHCLKFreq+0x50>)
   1bb9a:	699b      	ldr	r3, [r3, #24]
   1bb9c:	0a1b      	lsrs	r3, r3, #8
   1bb9e:	f003 030f 	and.w	r3, r3, #15
   1bba2:	4a0f      	ldr	r2, [pc, #60]	; (1bbe0 <HAL_RCC_GetHCLKFreq+0x54>)
   1bba4:	5cd3      	ldrb	r3, [r2, r3]
   1bba6:	f003 031f 	and.w	r3, r3, #31
   1bbaa:	fa21 f303 	lsr.w	r3, r1, r3
   1bbae:	607b      	str	r3, [r7, #4]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
   1bbb0:	4b0a      	ldr	r3, [pc, #40]	; (1bbdc <HAL_RCC_GetHCLKFreq+0x50>)
   1bbb2:	699b      	ldr	r3, [r3, #24]
   1bbb4:	f003 030f 	and.w	r3, r3, #15
   1bbb8:	4a09      	ldr	r2, [pc, #36]	; (1bbe0 <HAL_RCC_GetHCLKFreq+0x54>)
   1bbba:	5cd3      	ldrb	r3, [r2, r3]
   1bbbc:	f003 031f 	and.w	r3, r3, #31
   1bbc0:	687a      	ldr	r2, [r7, #4]
   1bbc2:	fa22 f303 	lsr.w	r3, r2, r3
   1bbc6:	4a07      	ldr	r2, [pc, #28]	; (1bbe4 <HAL_RCC_GetHCLKFreq+0x58>)
   1bbc8:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
   1bbca:	4a07      	ldr	r2, [pc, #28]	; (1bbe8 <HAL_RCC_GetHCLKFreq+0x5c>)
   1bbcc:	687b      	ldr	r3, [r7, #4]
   1bbce:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
   1bbd0:	4b04      	ldr	r3, [pc, #16]	; (1bbe4 <HAL_RCC_GetHCLKFreq+0x58>)
   1bbd2:	681b      	ldr	r3, [r3, #0]
}
   1bbd4:	4618      	mov	r0, r3
   1bbd6:	3708      	adds	r7, #8
   1bbd8:	46bd      	mov	sp, r7
   1bbda:	bd80      	pop	{r7, pc}
   1bbdc:	58024400 	.word	0x58024400
   1bbe0:	00023e94 	.word	0x00023e94
   1bbe4:	0003415c 	.word	0x0003415c
   1bbe8:	00034158 	.word	0x00034158

0001bbec <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
   1bbec:	b580      	push	{r7, lr}
   1bbee:	af00      	add	r7, sp, #0
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1)>> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
   1bbf0:	f7ff ffcc 	bl	1bb8c <HAL_RCC_GetHCLKFreq>
   1bbf4:	4601      	mov	r1, r0
   1bbf6:	4b06      	ldr	r3, [pc, #24]	; (1bc10 <HAL_RCC_GetPCLK1Freq+0x24>)
   1bbf8:	69db      	ldr	r3, [r3, #28]
   1bbfa:	091b      	lsrs	r3, r3, #4
   1bbfc:	f003 0307 	and.w	r3, r3, #7
   1bc00:	4a04      	ldr	r2, [pc, #16]	; (1bc14 <HAL_RCC_GetPCLK1Freq+0x28>)
   1bc02:	5cd3      	ldrb	r3, [r2, r3]
   1bc04:	f003 031f 	and.w	r3, r3, #31
   1bc08:	fa21 f303 	lsr.w	r3, r1, r3
#else
 /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1)>> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
   1bc0c:	4618      	mov	r0, r3
   1bc0e:	bd80      	pop	{r7, pc}
   1bc10:	58024400 	.word	0x58024400
   1bc14:	00023e94 	.word	0x00023e94

0001bc18 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
   1bc18:	b580      	push	{r7, lr}
   1bc1a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2)>> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
   1bc1c:	f7ff ffb6 	bl	1bb8c <HAL_RCC_GetHCLKFreq>
   1bc20:	4601      	mov	r1, r0
   1bc22:	4b06      	ldr	r3, [pc, #24]	; (1bc3c <HAL_RCC_GetPCLK2Freq+0x24>)
   1bc24:	69db      	ldr	r3, [r3, #28]
   1bc26:	0a1b      	lsrs	r3, r3, #8
   1bc28:	f003 0307 	and.w	r3, r3, #7
   1bc2c:	4a04      	ldr	r2, [pc, #16]	; (1bc40 <HAL_RCC_GetPCLK2Freq+0x28>)
   1bc2e:	5cd3      	ldrb	r3, [r2, r3]
   1bc30:	f003 031f 	and.w	r3, r3, #31
   1bc34:	fa21 f303 	lsr.w	r3, r1, r3
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2)>> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
   1bc38:	4618      	mov	r0, r3
   1bc3a:	bd80      	pop	{r7, pc}
   1bc3c:	58024400 	.word	0x58024400
   1bc40:	00023e94 	.word	0x00023e94

0001bc44 <HAL_RCCEx_PeriphCLKConfig>:
  * (*) : Available on some STM32H7 lines only.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
   1bc44:	b580      	push	{r7, lr}
   1bc46:	b086      	sub	sp, #24
   1bc48:	af00      	add	r7, sp, #0
   1bc4a:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint32_t tickstart;
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
   1bc4c:	2300      	movs	r3, #0
   1bc4e:	75fb      	strb	r3, [r7, #23]
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
   1bc50:	2300      	movs	r3, #0
   1bc52:	75bb      	strb	r3, [r7, #22]

  /*---------------------------- SPDIFRX configuration -------------------------------*/

  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
   1bc54:	687b      	ldr	r3, [r7, #4]
   1bc56:	681b      	ldr	r3, [r3, #0]
   1bc58:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
   1bc5c:	2b00      	cmp	r3, #0
   1bc5e:	d03d      	beq.n	1bcdc <HAL_RCCEx_PeriphCLKConfig+0x98>
  {

    switch(PeriphClkInit->SpdifrxClockSelection)
   1bc60:	687b      	ldr	r3, [r7, #4]
   1bc62:	6e5b      	ldr	r3, [r3, #100]	; 0x64
   1bc64:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   1bc68:	d013      	beq.n	1bc92 <HAL_RCCEx_PeriphCLKConfig+0x4e>
   1bc6a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   1bc6e:	d802      	bhi.n	1bc76 <HAL_RCCEx_PeriphCLKConfig+0x32>
   1bc70:	2b00      	cmp	r3, #0
   1bc72:	d007      	beq.n	1bc84 <HAL_RCCEx_PeriphCLKConfig+0x40>
   1bc74:	e01f      	b.n	1bcb6 <HAL_RCCEx_PeriphCLKConfig+0x72>
   1bc76:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
   1bc7a:	d013      	beq.n	1bca4 <HAL_RCCEx_PeriphCLKConfig+0x60>
   1bc7c:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
   1bc80:	d01c      	beq.n	1bcbc <HAL_RCCEx_PeriphCLKConfig+0x78>
   1bc82:	e018      	b.n	1bcb6 <HAL_RCCEx_PeriphCLKConfig+0x72>
    {
    case RCC_SPDIFRXCLKSOURCE_PLL:      /* PLL is used as clock source for SPDIFRX*/
      /* Enable PLL1Q Clock output generated form System PLL . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
   1bc84:	4baf      	ldr	r3, [pc, #700]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bc86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1bc88:	4aae      	ldr	r2, [pc, #696]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bc8a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1bc8e:	62d3      	str	r3, [r2, #44]	; 0x2c

      /* SPDIFRX clock source configuration done later after clock selection check */
      break;
   1bc90:	e015      	b.n	1bcbe <HAL_RCCEx_PeriphCLKConfig+0x7a>

    case RCC_SPDIFRXCLKSOURCE_PLL2: /* PLL2 is used as clock source for SPDIFRX*/

      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
   1bc92:	687b      	ldr	r3, [r7, #4]
   1bc94:	3304      	adds	r3, #4
   1bc96:	2102      	movs	r1, #2
   1bc98:	4618      	mov	r0, r3
   1bc9a:	f001 f95f 	bl	1cf5c <RCCEx_PLL2_Config>
   1bc9e:	4603      	mov	r3, r0
   1bca0:	75fb      	strb	r3, [r7, #23]

      /* SPDIFRX clock source configuration done later after clock selection check */
      break;
   1bca2:	e00c      	b.n	1bcbe <HAL_RCCEx_PeriphCLKConfig+0x7a>

    case RCC_SPDIFRXCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPDIFRX*/
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
   1bca4:	687b      	ldr	r3, [r7, #4]
   1bca6:	3324      	adds	r3, #36	; 0x24
   1bca8:	2102      	movs	r1, #2
   1bcaa:	4618      	mov	r0, r3
   1bcac:	f001 fa08 	bl	1d0c0 <RCCEx_PLL3_Config>
   1bcb0:	4603      	mov	r3, r0
   1bcb2:	75fb      	strb	r3, [r7, #23]

      /* SPDIFRX clock source configuration done later after clock selection check */
      break;
   1bcb4:	e003      	b.n	1bcbe <HAL_RCCEx_PeriphCLKConfig+0x7a>
      /* Internal OSC clock is used as source of SPDIFRX clock*/
      /* SPDIFRX clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1bcb6:	2301      	movs	r3, #1
   1bcb8:	75fb      	strb	r3, [r7, #23]
      break;
   1bcba:	e000      	b.n	1bcbe <HAL_RCCEx_PeriphCLKConfig+0x7a>
      break;
   1bcbc:	bf00      	nop
    }

    if(ret == HAL_OK)
   1bcbe:	7dfb      	ldrb	r3, [r7, #23]
   1bcc0:	2b00      	cmp	r3, #0
   1bcc2:	d109      	bne.n	1bcd8 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      /* Set the source of SPDIFRX clock*/
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
   1bcc4:	4b9f      	ldr	r3, [pc, #636]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bcc6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
   1bcc8:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
   1bccc:	687b      	ldr	r3, [r7, #4]
   1bcce:	6e5b      	ldr	r3, [r3, #100]	; 0x64
   1bcd0:	499c      	ldr	r1, [pc, #624]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bcd2:	4313      	orrs	r3, r2
   1bcd4:	650b      	str	r3, [r1, #80]	; 0x50
   1bcd6:	e001      	b.n	1bcdc <HAL_RCCEx_PeriphCLKConfig+0x98>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1bcd8:	7dfb      	ldrb	r3, [r7, #23]
   1bcda:	75bb      	strb	r3, [r7, #22]
    }
  }

  /*---------------------------- SAI1 configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
   1bcdc:	687b      	ldr	r3, [r7, #4]
   1bcde:	681b      	ldr	r3, [r3, #0]
   1bce0:	f403 7380 	and.w	r3, r3, #256	; 0x100
   1bce4:	2b00      	cmp	r3, #0
   1bce6:	d03d      	beq.n	1bd64 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    switch(PeriphClkInit->Sai1ClockSelection)
   1bce8:	687b      	ldr	r3, [r7, #4]
   1bcea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1bcec:	2b04      	cmp	r3, #4
   1bcee:	d826      	bhi.n	1bd3e <HAL_RCCEx_PeriphCLKConfig+0xfa>
   1bcf0:	a201      	add	r2, pc, #4	; (adr r2, 1bcf8 <HAL_RCCEx_PeriphCLKConfig+0xb4>)
   1bcf2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1bcf6:	bf00      	nop
   1bcf8:	0001bd0d 	.word	0x0001bd0d
   1bcfc:	0001bd1b 	.word	0x0001bd1b
   1bd00:	0001bd2d 	.word	0x0001bd2d
   1bd04:	0001bd45 	.word	0x0001bd45
   1bd08:	0001bd45 	.word	0x0001bd45
    {
    case RCC_SAI1CLKSOURCE_PLL:      /* PLL is used as clock source for SAI1*/
      /* Enable SAI Clock output generated form System PLL . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
   1bd0c:	4b8d      	ldr	r3, [pc, #564]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bd0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1bd10:	4a8c      	ldr	r2, [pc, #560]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bd12:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1bd16:	62d3      	str	r3, [r2, #44]	; 0x2c

      /* SAI1 clock source configuration done later after clock selection check */
      break;
   1bd18:	e015      	b.n	1bd46 <HAL_RCCEx_PeriphCLKConfig+0x102>

    case RCC_SAI1CLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI1*/

      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
   1bd1a:	687b      	ldr	r3, [r7, #4]
   1bd1c:	3304      	adds	r3, #4
   1bd1e:	2100      	movs	r1, #0
   1bd20:	4618      	mov	r0, r3
   1bd22:	f001 f91b 	bl	1cf5c <RCCEx_PLL2_Config>
   1bd26:	4603      	mov	r3, r0
   1bd28:	75fb      	strb	r3, [r7, #23]

      /* SAI1 clock source configuration done later after clock selection check */
      break;
   1bd2a:	e00c      	b.n	1bd46 <HAL_RCCEx_PeriphCLKConfig+0x102>

    case RCC_SAI1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI1*/
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
   1bd2c:	687b      	ldr	r3, [r7, #4]
   1bd2e:	3324      	adds	r3, #36	; 0x24
   1bd30:	2100      	movs	r1, #0
   1bd32:	4618      	mov	r0, r3
   1bd34:	f001 f9c4 	bl	1d0c0 <RCCEx_PLL3_Config>
   1bd38:	4603      	mov	r3, r0
   1bd3a:	75fb      	strb	r3, [r7, #23]

      /* SAI1 clock source configuration done later after clock selection check */
      break;
   1bd3c:	e003      	b.n	1bd46 <HAL_RCCEx_PeriphCLKConfig+0x102>
      /* HSI, HSE, or CSI oscillator is used as source of SAI1 clock */
      /* SAI1 clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1bd3e:	2301      	movs	r3, #1
   1bd40:	75fb      	strb	r3, [r7, #23]
      break;
   1bd42:	e000      	b.n	1bd46 <HAL_RCCEx_PeriphCLKConfig+0x102>
      break;
   1bd44:	bf00      	nop
    }

    if(ret == HAL_OK)
   1bd46:	7dfb      	ldrb	r3, [r7, #23]
   1bd48:	2b00      	cmp	r3, #0
   1bd4a:	d109      	bne.n	1bd60 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    {
      /* Set the source of SAI1 clock*/
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
   1bd4c:	4b7d      	ldr	r3, [pc, #500]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bd4e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
   1bd50:	f023 0207 	bic.w	r2, r3, #7
   1bd54:	687b      	ldr	r3, [r7, #4]
   1bd56:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1bd58:	497a      	ldr	r1, [pc, #488]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bd5a:	4313      	orrs	r3, r2
   1bd5c:	650b      	str	r3, [r1, #80]	; 0x50
   1bd5e:	e001      	b.n	1bd64 <HAL_RCCEx_PeriphCLKConfig+0x120>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1bd60:	7dfb      	ldrb	r3, [r7, #23]
   1bd62:	75bb      	strb	r3, [r7, #22]
    }
  }

#if defined(SAI3)
  /*---------------------------- SAI2/3 configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
   1bd64:	687b      	ldr	r3, [r7, #4]
   1bd66:	681b      	ldr	r3, [r3, #0]
   1bd68:	f403 7300 	and.w	r3, r3, #512	; 0x200
   1bd6c:	2b00      	cmp	r3, #0
   1bd6e:	d03e      	beq.n	1bdee <HAL_RCCEx_PeriphCLKConfig+0x1aa>
  {
    switch(PeriphClkInit->Sai23ClockSelection)
   1bd70:	687b      	ldr	r3, [r7, #4]
   1bd72:	6d9b      	ldr	r3, [r3, #88]	; 0x58
   1bd74:	2b80      	cmp	r3, #128	; 0x80
   1bd76:	d01c      	beq.n	1bdb2 <HAL_RCCEx_PeriphCLKConfig+0x16e>
   1bd78:	2b80      	cmp	r3, #128	; 0x80
   1bd7a:	d804      	bhi.n	1bd86 <HAL_RCCEx_PeriphCLKConfig+0x142>
   1bd7c:	2b00      	cmp	r3, #0
   1bd7e:	d008      	beq.n	1bd92 <HAL_RCCEx_PeriphCLKConfig+0x14e>
   1bd80:	2b40      	cmp	r3, #64	; 0x40
   1bd82:	d00d      	beq.n	1bda0 <HAL_RCCEx_PeriphCLKConfig+0x15c>
   1bd84:	e01e      	b.n	1bdc4 <HAL_RCCEx_PeriphCLKConfig+0x180>
   1bd86:	2bc0      	cmp	r3, #192	; 0xc0
   1bd88:	d01f      	beq.n	1bdca <HAL_RCCEx_PeriphCLKConfig+0x186>
   1bd8a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   1bd8e:	d01e      	beq.n	1bdce <HAL_RCCEx_PeriphCLKConfig+0x18a>
   1bd90:	e018      	b.n	1bdc4 <HAL_RCCEx_PeriphCLKConfig+0x180>
    {
    case RCC_SAI23CLKSOURCE_PLL:      /* PLL is used as clock source for SAI2/3 */
      /* Enable SAI Clock output generated form System PLL . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
   1bd92:	4b6c      	ldr	r3, [pc, #432]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bd94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1bd96:	4a6b      	ldr	r2, [pc, #428]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bd98:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1bd9c:	62d3      	str	r3, [r2, #44]	; 0x2c

      /* SAI2/3 clock source configuration done later after clock selection check */
      break;
   1bd9e:	e017      	b.n	1bdd0 <HAL_RCCEx_PeriphCLKConfig+0x18c>

    case RCC_SAI23CLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2/3 */

      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
   1bda0:	687b      	ldr	r3, [r7, #4]
   1bda2:	3304      	adds	r3, #4
   1bda4:	2100      	movs	r1, #0
   1bda6:	4618      	mov	r0, r3
   1bda8:	f001 f8d8 	bl	1cf5c <RCCEx_PLL2_Config>
   1bdac:	4603      	mov	r3, r0
   1bdae:	75fb      	strb	r3, [r7, #23]

      /* SAI2/3 clock source configuration done later after clock selection check */
      break;
   1bdb0:	e00e      	b.n	1bdd0 <HAL_RCCEx_PeriphCLKConfig+0x18c>

    case RCC_SAI23CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2/3 */
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
   1bdb2:	687b      	ldr	r3, [r7, #4]
   1bdb4:	3324      	adds	r3, #36	; 0x24
   1bdb6:	2100      	movs	r1, #0
   1bdb8:	4618      	mov	r0, r3
   1bdba:	f001 f981 	bl	1d0c0 <RCCEx_PLL3_Config>
   1bdbe:	4603      	mov	r3, r0
   1bdc0:	75fb      	strb	r3, [r7, #23]

      /* SAI2/3 clock source configuration done later after clock selection check */
      break;
   1bdc2:	e005      	b.n	1bdd0 <HAL_RCCEx_PeriphCLKConfig+0x18c>
      /* HSI, HSE, or CSI oscillator is used as source of SAI2/3 clock */
      /* SAI2/3 clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1bdc4:	2301      	movs	r3, #1
   1bdc6:	75fb      	strb	r3, [r7, #23]
      break;
   1bdc8:	e002      	b.n	1bdd0 <HAL_RCCEx_PeriphCLKConfig+0x18c>
      break;
   1bdca:	bf00      	nop
   1bdcc:	e000      	b.n	1bdd0 <HAL_RCCEx_PeriphCLKConfig+0x18c>
      break;
   1bdce:	bf00      	nop
    }

    if(ret == HAL_OK)
   1bdd0:	7dfb      	ldrb	r3, [r7, #23]
   1bdd2:	2b00      	cmp	r3, #0
   1bdd4:	d109      	bne.n	1bdea <HAL_RCCEx_PeriphCLKConfig+0x1a6>
    {
      /* Set the source of SAI2/3 clock*/
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
   1bdd6:	4b5b      	ldr	r3, [pc, #364]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bdd8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
   1bdda:	f423 72e0 	bic.w	r2, r3, #448	; 0x1c0
   1bdde:	687b      	ldr	r3, [r7, #4]
   1bde0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
   1bde2:	4958      	ldr	r1, [pc, #352]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bde4:	4313      	orrs	r3, r2
   1bde6:	650b      	str	r3, [r1, #80]	; 0x50
   1bde8:	e001      	b.n	1bdee <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1bdea:	7dfb      	ldrb	r3, [r7, #23]
   1bdec:	75bb      	strb	r3, [r7, #22]
  }
#endif  /*SAI2B*/

#if defined(SAI4)
  /*---------------------------- SAI4A configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
   1bdee:	687b      	ldr	r3, [r7, #4]
   1bdf0:	681b      	ldr	r3, [r3, #0]
   1bdf2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
   1bdf6:	2b00      	cmp	r3, #0
   1bdf8:	d044      	beq.n	1be84 <HAL_RCCEx_PeriphCLKConfig+0x240>
  {
    switch(PeriphClkInit->Sai4AClockSelection)
   1bdfa:	687b      	ldr	r3, [r7, #4]
   1bdfc:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
   1be00:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
   1be04:	d01f      	beq.n	1be46 <HAL_RCCEx_PeriphCLKConfig+0x202>
   1be06:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
   1be0a:	d805      	bhi.n	1be18 <HAL_RCCEx_PeriphCLKConfig+0x1d4>
   1be0c:	2b00      	cmp	r3, #0
   1be0e:	d00a      	beq.n	1be26 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
   1be10:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
   1be14:	d00e      	beq.n	1be34 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
   1be16:	e01f      	b.n	1be58 <HAL_RCCEx_PeriphCLKConfig+0x214>
   1be18:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
   1be1c:	d01f      	beq.n	1be5e <HAL_RCCEx_PeriphCLKConfig+0x21a>
   1be1e:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
   1be22:	d01e      	beq.n	1be62 <HAL_RCCEx_PeriphCLKConfig+0x21e>
   1be24:	e018      	b.n	1be58 <HAL_RCCEx_PeriphCLKConfig+0x214>
    {
    case RCC_SAI4ACLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
      /* Enable SAI Clock output generated form System PLL . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
   1be26:	4b47      	ldr	r3, [pc, #284]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1be28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1be2a:	4a46      	ldr	r2, [pc, #280]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1be2c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1be30:	62d3      	str	r3, [r2, #44]	; 0x2c

      /* SAI1 clock source configuration done later after clock selection check */
      break;
   1be32:	e017      	b.n	1be64 <HAL_RCCEx_PeriphCLKConfig+0x220>

    case RCC_SAI4ACLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
   1be34:	687b      	ldr	r3, [r7, #4]
   1be36:	3304      	adds	r3, #4
   1be38:	2100      	movs	r1, #0
   1be3a:	4618      	mov	r0, r3
   1be3c:	f001 f88e 	bl	1cf5c <RCCEx_PLL2_Config>
   1be40:	4603      	mov	r3, r0
   1be42:	75fb      	strb	r3, [r7, #23]

      /* SAI2 clock source configuration done later after clock selection check */
      break;
   1be44:	e00e      	b.n	1be64 <HAL_RCCEx_PeriphCLKConfig+0x220>

    case RCC_SAI4ACLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
   1be46:	687b      	ldr	r3, [r7, #4]
   1be48:	3324      	adds	r3, #36	; 0x24
   1be4a:	2100      	movs	r1, #0
   1be4c:	4618      	mov	r0, r3
   1be4e:	f001 f937 	bl	1d0c0 <RCCEx_PLL3_Config>
   1be52:	4603      	mov	r3, r0
   1be54:	75fb      	strb	r3, [r7, #23]

      /* SAI1 clock source configuration done later after clock selection check */
      break;
   1be56:	e005      	b.n	1be64 <HAL_RCCEx_PeriphCLKConfig+0x220>
      /* HSI, HSE, or CSI oscillator is used as source of SAI2 clock */
      /* SAI1 clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1be58:	2301      	movs	r3, #1
   1be5a:	75fb      	strb	r3, [r7, #23]
      break;
   1be5c:	e002      	b.n	1be64 <HAL_RCCEx_PeriphCLKConfig+0x220>
      break;
   1be5e:	bf00      	nop
   1be60:	e000      	b.n	1be64 <HAL_RCCEx_PeriphCLKConfig+0x220>
      break;
   1be62:	bf00      	nop
    }

    if(ret == HAL_OK)
   1be64:	7dfb      	ldrb	r3, [r7, #23]
   1be66:	2b00      	cmp	r3, #0
   1be68:	d10a      	bne.n	1be80 <HAL_RCCEx_PeriphCLKConfig+0x23c>
    {
      /* Set the source of SAI4A clock*/
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
   1be6a:	4b36      	ldr	r3, [pc, #216]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1be6c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
   1be6e:	f423 0260 	bic.w	r2, r3, #14680064	; 0xe00000
   1be72:	687b      	ldr	r3, [r7, #4]
   1be74:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
   1be78:	4932      	ldr	r1, [pc, #200]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1be7a:	4313      	orrs	r3, r2
   1be7c:	658b      	str	r3, [r1, #88]	; 0x58
   1be7e:	e001      	b.n	1be84 <HAL_RCCEx_PeriphCLKConfig+0x240>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1be80:	7dfb      	ldrb	r3, [r7, #23]
   1be82:	75bb      	strb	r3, [r7, #22]
    }
  }
  /*---------------------------- SAI4B configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
   1be84:	687b      	ldr	r3, [r7, #4]
   1be86:	681b      	ldr	r3, [r3, #0]
   1be88:	f403 6300 	and.w	r3, r3, #2048	; 0x800
   1be8c:	2b00      	cmp	r3, #0
   1be8e:	d044      	beq.n	1bf1a <HAL_RCCEx_PeriphCLKConfig+0x2d6>
  {
    switch(PeriphClkInit->Sai4BClockSelection)
   1be90:	687b      	ldr	r3, [r7, #4]
   1be92:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
   1be96:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
   1be9a:	d01f      	beq.n	1bedc <HAL_RCCEx_PeriphCLKConfig+0x298>
   1be9c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
   1bea0:	d805      	bhi.n	1beae <HAL_RCCEx_PeriphCLKConfig+0x26a>
   1bea2:	2b00      	cmp	r3, #0
   1bea4:	d00a      	beq.n	1bebc <HAL_RCCEx_PeriphCLKConfig+0x278>
   1bea6:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
   1beaa:	d00e      	beq.n	1beca <HAL_RCCEx_PeriphCLKConfig+0x286>
   1beac:	e01f      	b.n	1beee <HAL_RCCEx_PeriphCLKConfig+0x2aa>
   1beae:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
   1beb2:	d01f      	beq.n	1bef4 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
   1beb4:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
   1beb8:	d01e      	beq.n	1bef8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>
   1beba:	e018      	b.n	1beee <HAL_RCCEx_PeriphCLKConfig+0x2aa>
    {
    case RCC_SAI4BCLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
      /* Enable SAI Clock output generated form System PLL . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
   1bebc:	4b21      	ldr	r3, [pc, #132]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bebe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1bec0:	4a20      	ldr	r2, [pc, #128]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bec2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1bec6:	62d3      	str	r3, [r2, #44]	; 0x2c

      /* SAI1 clock source configuration done later after clock selection check */
      break;
   1bec8:	e017      	b.n	1befa <HAL_RCCEx_PeriphCLKConfig+0x2b6>

    case RCC_SAI4BCLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
   1beca:	687b      	ldr	r3, [r7, #4]
   1becc:	3304      	adds	r3, #4
   1bece:	2100      	movs	r1, #0
   1bed0:	4618      	mov	r0, r3
   1bed2:	f001 f843 	bl	1cf5c <RCCEx_PLL2_Config>
   1bed6:	4603      	mov	r3, r0
   1bed8:	75fb      	strb	r3, [r7, #23]

      /* SAI2 clock source configuration done later after clock selection check */
      break;
   1beda:	e00e      	b.n	1befa <HAL_RCCEx_PeriphCLKConfig+0x2b6>

    case RCC_SAI4BCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
   1bedc:	687b      	ldr	r3, [r7, #4]
   1bede:	3324      	adds	r3, #36	; 0x24
   1bee0:	2100      	movs	r1, #0
   1bee2:	4618      	mov	r0, r3
   1bee4:	f001 f8ec 	bl	1d0c0 <RCCEx_PLL3_Config>
   1bee8:	4603      	mov	r3, r0
   1beea:	75fb      	strb	r3, [r7, #23]

      /* SAI1 clock source configuration done later after clock selection check */
      break;
   1beec:	e005      	b.n	1befa <HAL_RCCEx_PeriphCLKConfig+0x2b6>
      /* HSI, HSE, or CSI oscillator is used as source of SAI2 clock */
      /* SAI1 clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1beee:	2301      	movs	r3, #1
   1bef0:	75fb      	strb	r3, [r7, #23]
      break;
   1bef2:	e002      	b.n	1befa <HAL_RCCEx_PeriphCLKConfig+0x2b6>
      break;
   1bef4:	bf00      	nop
   1bef6:	e000      	b.n	1befa <HAL_RCCEx_PeriphCLKConfig+0x2b6>
      break;
   1bef8:	bf00      	nop
    }

    if(ret == HAL_OK)
   1befa:	7dfb      	ldrb	r3, [r7, #23]
   1befc:	2b00      	cmp	r3, #0
   1befe:	d10a      	bne.n	1bf16 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
    {
      /* Set the source of SAI4B clock*/
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
   1bf00:	4b10      	ldr	r3, [pc, #64]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bf02:	6d9b      	ldr	r3, [r3, #88]	; 0x58
   1bf04:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
   1bf08:	687b      	ldr	r3, [r7, #4]
   1bf0a:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
   1bf0e:	490d      	ldr	r1, [pc, #52]	; (1bf44 <HAL_RCCEx_PeriphCLKConfig+0x300>)
   1bf10:	4313      	orrs	r3, r2
   1bf12:	658b      	str	r3, [r1, #88]	; 0x58
   1bf14:	e001      	b.n	1bf1a <HAL_RCCEx_PeriphCLKConfig+0x2d6>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1bf16:	7dfb      	ldrb	r3, [r7, #23]
   1bf18:	75bb      	strb	r3, [r7, #22]
  }
#endif  /*SAI4*/

#if defined(QUADSPI)
  /*---------------------------- QSPI configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
   1bf1a:	687b      	ldr	r3, [r7, #4]
   1bf1c:	681b      	ldr	r3, [r3, #0]
   1bf1e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
   1bf22:	2b00      	cmp	r3, #0
   1bf24:	d035      	beq.n	1bf92 <HAL_RCCEx_PeriphCLKConfig+0x34e>
  {
    switch(PeriphClkInit->QspiClockSelection)
   1bf26:	687b      	ldr	r3, [r7, #4]
   1bf28:	6c9b      	ldr	r3, [r3, #72]	; 0x48
   1bf2a:	2b10      	cmp	r3, #16
   1bf2c:	d00c      	beq.n	1bf48 <HAL_RCCEx_PeriphCLKConfig+0x304>
   1bf2e:	2b10      	cmp	r3, #16
   1bf30:	d802      	bhi.n	1bf38 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
   1bf32:	2b00      	cmp	r3, #0
   1bf34:	d01b      	beq.n	1bf6e <HAL_RCCEx_PeriphCLKConfig+0x32a>
   1bf36:	e017      	b.n	1bf68 <HAL_RCCEx_PeriphCLKConfig+0x324>
   1bf38:	2b20      	cmp	r3, #32
   1bf3a:	d00c      	beq.n	1bf56 <HAL_RCCEx_PeriphCLKConfig+0x312>
   1bf3c:	2b30      	cmp	r3, #48	; 0x30
   1bf3e:	d018      	beq.n	1bf72 <HAL_RCCEx_PeriphCLKConfig+0x32e>
   1bf40:	e012      	b.n	1bf68 <HAL_RCCEx_PeriphCLKConfig+0x324>
   1bf42:	bf00      	nop
   1bf44:	58024400 	.word	0x58024400
    {
    case RCC_QSPICLKSOURCE_PLL:      /* PLL is used as clock source for QSPI*/
      /* Enable QSPI Clock output generated form System PLL . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
   1bf48:	4baf      	ldr	r3, [pc, #700]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1bf4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1bf4c:	4aae      	ldr	r2, [pc, #696]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1bf4e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1bf52:	62d3      	str	r3, [r2, #44]	; 0x2c

      /* QSPI clock source configuration done later after clock selection check */
      break;
   1bf54:	e00e      	b.n	1bf74 <HAL_RCCEx_PeriphCLKConfig+0x330>

    case RCC_QSPICLKSOURCE_PLL2: /* PLL2 is used as clock source for QSPI*/

      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
   1bf56:	687b      	ldr	r3, [r7, #4]
   1bf58:	3304      	adds	r3, #4
   1bf5a:	2102      	movs	r1, #2
   1bf5c:	4618      	mov	r0, r3
   1bf5e:	f000 fffd 	bl	1cf5c <RCCEx_PLL2_Config>
   1bf62:	4603      	mov	r3, r0
   1bf64:	75fb      	strb	r3, [r7, #23]

      /* QSPI clock source configuration done later after clock selection check */
      break;
   1bf66:	e005      	b.n	1bf74 <HAL_RCCEx_PeriphCLKConfig+0x330>
    case RCC_QSPICLKSOURCE_D1HCLK:
      /* Domain1 HCLK  clock selected as QSPI kernel peripheral clock */
      break;

    default:
      ret = HAL_ERROR;
   1bf68:	2301      	movs	r3, #1
   1bf6a:	75fb      	strb	r3, [r7, #23]
      break;
   1bf6c:	e002      	b.n	1bf74 <HAL_RCCEx_PeriphCLKConfig+0x330>
      break;
   1bf6e:	bf00      	nop
   1bf70:	e000      	b.n	1bf74 <HAL_RCCEx_PeriphCLKConfig+0x330>
      break;
   1bf72:	bf00      	nop
    }

    if(ret == HAL_OK)
   1bf74:	7dfb      	ldrb	r3, [r7, #23]
   1bf76:	2b00      	cmp	r3, #0
   1bf78:	d109      	bne.n	1bf8e <HAL_RCCEx_PeriphCLKConfig+0x34a>
    {
      /* Set the source of QSPI clock*/
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
   1bf7a:	4ba3      	ldr	r3, [pc, #652]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1bf7c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
   1bf7e:	f023 0230 	bic.w	r2, r3, #48	; 0x30
   1bf82:	687b      	ldr	r3, [r7, #4]
   1bf84:	6c9b      	ldr	r3, [r3, #72]	; 0x48
   1bf86:	49a0      	ldr	r1, [pc, #640]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1bf88:	4313      	orrs	r3, r2
   1bf8a:	64cb      	str	r3, [r1, #76]	; 0x4c
   1bf8c:	e001      	b.n	1bf92 <HAL_RCCEx_PeriphCLKConfig+0x34e>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1bf8e:	7dfb      	ldrb	r3, [r7, #23]
   1bf90:	75bb      	strb	r3, [r7, #22]
    }
  }
#endif  /*OCTOSPI*/

  /*---------------------------- SPI1/2/3 configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
   1bf92:	687b      	ldr	r3, [r7, #4]
   1bf94:	681b      	ldr	r3, [r3, #0]
   1bf96:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
   1bf9a:	2b00      	cmp	r3, #0
   1bf9c:	d042      	beq.n	1c024 <HAL_RCCEx_PeriphCLKConfig+0x3e0>
  {
    switch(PeriphClkInit->Spi123ClockSelection)
   1bf9e:	687b      	ldr	r3, [r7, #4]
   1bfa0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
   1bfa2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
   1bfa6:	d01f      	beq.n	1bfe8 <HAL_RCCEx_PeriphCLKConfig+0x3a4>
   1bfa8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
   1bfac:	d805      	bhi.n	1bfba <HAL_RCCEx_PeriphCLKConfig+0x376>
   1bfae:	2b00      	cmp	r3, #0
   1bfb0:	d00a      	beq.n	1bfc8 <HAL_RCCEx_PeriphCLKConfig+0x384>
   1bfb2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
   1bfb6:	d00e      	beq.n	1bfd6 <HAL_RCCEx_PeriphCLKConfig+0x392>
   1bfb8:	e01f      	b.n	1bffa <HAL_RCCEx_PeriphCLKConfig+0x3b6>
   1bfba:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
   1bfbe:	d01f      	beq.n	1c000 <HAL_RCCEx_PeriphCLKConfig+0x3bc>
   1bfc0:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
   1bfc4:	d01e      	beq.n	1c004 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
   1bfc6:	e018      	b.n	1bffa <HAL_RCCEx_PeriphCLKConfig+0x3b6>
    {
    case RCC_SPI123CLKSOURCE_PLL:      /* PLL is used as clock source for SPI1/2/3 */
      /* Enable SPI Clock output generated form System PLL . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
   1bfc8:	4b8f      	ldr	r3, [pc, #572]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1bfca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1bfcc:	4a8e      	ldr	r2, [pc, #568]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1bfce:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1bfd2:	62d3      	str	r3, [r2, #44]	; 0x2c

      /* SPI1/2/3 clock source configuration done later after clock selection check */
      break;
   1bfd4:	e017      	b.n	1c006 <HAL_RCCEx_PeriphCLKConfig+0x3c2>

    case RCC_SPI123CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI1/2/3 */
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
   1bfd6:	687b      	ldr	r3, [r7, #4]
   1bfd8:	3304      	adds	r3, #4
   1bfda:	2100      	movs	r1, #0
   1bfdc:	4618      	mov	r0, r3
   1bfde:	f000 ffbd 	bl	1cf5c <RCCEx_PLL2_Config>
   1bfe2:	4603      	mov	r3, r0
   1bfe4:	75fb      	strb	r3, [r7, #23]

      /* SPI1/2/3 clock source configuration done later after clock selection check */
      break;
   1bfe6:	e00e      	b.n	1c006 <HAL_RCCEx_PeriphCLKConfig+0x3c2>

    case RCC_SPI123CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI1/2/3 */
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
   1bfe8:	687b      	ldr	r3, [r7, #4]
   1bfea:	3324      	adds	r3, #36	; 0x24
   1bfec:	2100      	movs	r1, #0
   1bfee:	4618      	mov	r0, r3
   1bff0:	f001 f866 	bl	1d0c0 <RCCEx_PLL3_Config>
   1bff4:	4603      	mov	r3, r0
   1bff6:	75fb      	strb	r3, [r7, #23]

      /* SPI1/2/3 clock source configuration done later after clock selection check */
      break;
   1bff8:	e005      	b.n	1c006 <HAL_RCCEx_PeriphCLKConfig+0x3c2>
      /* HSI, HSE, or CSI oscillator is used as source of SPI1/2/3 clock */
      /* SPI1/2/3 clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1bffa:	2301      	movs	r3, #1
   1bffc:	75fb      	strb	r3, [r7, #23]
      break;
   1bffe:	e002      	b.n	1c006 <HAL_RCCEx_PeriphCLKConfig+0x3c2>
      break;
   1c000:	bf00      	nop
   1c002:	e000      	b.n	1c006 <HAL_RCCEx_PeriphCLKConfig+0x3c2>
      break;
   1c004:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c006:	7dfb      	ldrb	r3, [r7, #23]
   1c008:	2b00      	cmp	r3, #0
   1c00a:	d109      	bne.n	1c020 <HAL_RCCEx_PeriphCLKConfig+0x3dc>
    {
      /* Set the source of SPI1/2/3 clock*/
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
   1c00c:	4b7e      	ldr	r3, [pc, #504]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1c00e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
   1c010:	f423 42e0 	bic.w	r2, r3, #28672	; 0x7000
   1c014:	687b      	ldr	r3, [r7, #4]
   1c016:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
   1c018:	497b      	ldr	r1, [pc, #492]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1c01a:	4313      	orrs	r3, r2
   1c01c:	650b      	str	r3, [r1, #80]	; 0x50
   1c01e:	e001      	b.n	1c024 <HAL_RCCEx_PeriphCLKConfig+0x3e0>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c020:	7dfb      	ldrb	r3, [r7, #23]
   1c022:	75bb      	strb	r3, [r7, #22]
    }
  }

  /*---------------------------- SPI4/5 configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
   1c024:	687b      	ldr	r3, [r7, #4]
   1c026:	681b      	ldr	r3, [r3, #0]
   1c028:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
   1c02c:	2b00      	cmp	r3, #0
   1c02e:	d042      	beq.n	1c0b6 <HAL_RCCEx_PeriphCLKConfig+0x472>
  {
    switch(PeriphClkInit->Spi45ClockSelection)
   1c030:	687b      	ldr	r3, [r7, #4]
   1c032:	6e1b      	ldr	r3, [r3, #96]	; 0x60
   1c034:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
   1c038:	d01b      	beq.n	1c072 <HAL_RCCEx_PeriphCLKConfig+0x42e>
   1c03a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
   1c03e:	d805      	bhi.n	1c04c <HAL_RCCEx_PeriphCLKConfig+0x408>
   1c040:	2b00      	cmp	r3, #0
   1c042:	d022      	beq.n	1c08a <HAL_RCCEx_PeriphCLKConfig+0x446>
   1c044:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   1c048:	d00a      	beq.n	1c060 <HAL_RCCEx_PeriphCLKConfig+0x41c>
   1c04a:	e01b      	b.n	1c084 <HAL_RCCEx_PeriphCLKConfig+0x440>
   1c04c:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
   1c050:	d01d      	beq.n	1c08e <HAL_RCCEx_PeriphCLKConfig+0x44a>
   1c052:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
   1c056:	d01c      	beq.n	1c092 <HAL_RCCEx_PeriphCLKConfig+0x44e>
   1c058:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
   1c05c:	d01b      	beq.n	1c096 <HAL_RCCEx_PeriphCLKConfig+0x452>
   1c05e:	e011      	b.n	1c084 <HAL_RCCEx_PeriphCLKConfig+0x440>
      /* SPI4/5 clock source configuration done later after clock selection check */
      break;

    case RCC_SPI45CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI4/5 */

      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
   1c060:	687b      	ldr	r3, [r7, #4]
   1c062:	3304      	adds	r3, #4
   1c064:	2101      	movs	r1, #1
   1c066:	4618      	mov	r0, r3
   1c068:	f000 ff78 	bl	1cf5c <RCCEx_PLL2_Config>
   1c06c:	4603      	mov	r3, r0
   1c06e:	75fb      	strb	r3, [r7, #23]

      /* SPI4/5 clock source configuration done later after clock selection check */
      break;
   1c070:	e012      	b.n	1c098 <HAL_RCCEx_PeriphCLKConfig+0x454>
    case RCC_SPI45CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI4/5 */
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
   1c072:	687b      	ldr	r3, [r7, #4]
   1c074:	3324      	adds	r3, #36	; 0x24
   1c076:	2101      	movs	r1, #1
   1c078:	4618      	mov	r0, r3
   1c07a:	f001 f821 	bl	1d0c0 <RCCEx_PLL3_Config>
   1c07e:	4603      	mov	r3, r0
   1c080:	75fb      	strb	r3, [r7, #23]
      /* SPI4/5 clock source configuration done later after clock selection check */
      break;
   1c082:	e009      	b.n	1c098 <HAL_RCCEx_PeriphCLKConfig+0x454>
      /* HSE,  oscillator is used as source of SPI4/5 clock */
      /* SPI4/5 clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1c084:	2301      	movs	r3, #1
   1c086:	75fb      	strb	r3, [r7, #23]
      break;
   1c088:	e006      	b.n	1c098 <HAL_RCCEx_PeriphCLKConfig+0x454>
      break;
   1c08a:	bf00      	nop
   1c08c:	e004      	b.n	1c098 <HAL_RCCEx_PeriphCLKConfig+0x454>
      break;
   1c08e:	bf00      	nop
   1c090:	e002      	b.n	1c098 <HAL_RCCEx_PeriphCLKConfig+0x454>
      break;
   1c092:	bf00      	nop
   1c094:	e000      	b.n	1c098 <HAL_RCCEx_PeriphCLKConfig+0x454>
      break;
   1c096:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c098:	7dfb      	ldrb	r3, [r7, #23]
   1c09a:	2b00      	cmp	r3, #0
   1c09c:	d109      	bne.n	1c0b2 <HAL_RCCEx_PeriphCLKConfig+0x46e>
    {
      /* Set the source of SPI4/5 clock*/
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
   1c09e:	4b5a      	ldr	r3, [pc, #360]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1c0a0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
   1c0a2:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
   1c0a6:	687b      	ldr	r3, [r7, #4]
   1c0a8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
   1c0aa:	4957      	ldr	r1, [pc, #348]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1c0ac:	4313      	orrs	r3, r2
   1c0ae:	650b      	str	r3, [r1, #80]	; 0x50
   1c0b0:	e001      	b.n	1c0b6 <HAL_RCCEx_PeriphCLKConfig+0x472>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c0b2:	7dfb      	ldrb	r3, [r7, #23]
   1c0b4:	75bb      	strb	r3, [r7, #22]
    }
  }

  /*---------------------------- SPI6 configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
   1c0b6:	687b      	ldr	r3, [r7, #4]
   1c0b8:	681b      	ldr	r3, [r3, #0]
   1c0ba:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
   1c0be:	2b00      	cmp	r3, #0
   1c0c0:	d044      	beq.n	1c14c <HAL_RCCEx_PeriphCLKConfig+0x508>
  {
    switch(PeriphClkInit->Spi6ClockSelection)
   1c0c2:	687b      	ldr	r3, [r7, #4]
   1c0c4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
   1c0c8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
   1c0cc:	d01b      	beq.n	1c106 <HAL_RCCEx_PeriphCLKConfig+0x4c2>
   1c0ce:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
   1c0d2:	d805      	bhi.n	1c0e0 <HAL_RCCEx_PeriphCLKConfig+0x49c>
   1c0d4:	2b00      	cmp	r3, #0
   1c0d6:	d022      	beq.n	1c11e <HAL_RCCEx_PeriphCLKConfig+0x4da>
   1c0d8:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   1c0dc:	d00a      	beq.n	1c0f4 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
   1c0de:	e01b      	b.n	1c118 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
   1c0e0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
   1c0e4:	d01d      	beq.n	1c122 <HAL_RCCEx_PeriphCLKConfig+0x4de>
   1c0e6:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
   1c0ea:	d01c      	beq.n	1c126 <HAL_RCCEx_PeriphCLKConfig+0x4e2>
   1c0ec:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   1c0f0:	d01b      	beq.n	1c12a <HAL_RCCEx_PeriphCLKConfig+0x4e6>
   1c0f2:	e011      	b.n	1c118 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
      /* SPI6 clock source configuration done later after clock selection check */
      break;

    case RCC_SPI6CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI6*/

      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
   1c0f4:	687b      	ldr	r3, [r7, #4]
   1c0f6:	3304      	adds	r3, #4
   1c0f8:	2101      	movs	r1, #1
   1c0fa:	4618      	mov	r0, r3
   1c0fc:	f000 ff2e 	bl	1cf5c <RCCEx_PLL2_Config>
   1c100:	4603      	mov	r3, r0
   1c102:	75fb      	strb	r3, [r7, #23]

      /* SPI6 clock source configuration done later after clock selection check */
      break;
   1c104:	e012      	b.n	1c12c <HAL_RCCEx_PeriphCLKConfig+0x4e8>
    case RCC_SPI6CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI6*/
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
   1c106:	687b      	ldr	r3, [r7, #4]
   1c108:	3324      	adds	r3, #36	; 0x24
   1c10a:	2101      	movs	r1, #1
   1c10c:	4618      	mov	r0, r3
   1c10e:	f000 ffd7 	bl	1d0c0 <RCCEx_PLL3_Config>
   1c112:	4603      	mov	r3, r0
   1c114:	75fb      	strb	r3, [r7, #23]
      /* SPI6 clock source configuration done later after clock selection check */
      break;
   1c116:	e009      	b.n	1c12c <HAL_RCCEx_PeriphCLKConfig+0x4e8>
      /* SPI6 clock source configuration done later after clock selection check */
      break;
#endif

    default:
      ret = HAL_ERROR;
   1c118:	2301      	movs	r3, #1
   1c11a:	75fb      	strb	r3, [r7, #23]
      break;
   1c11c:	e006      	b.n	1c12c <HAL_RCCEx_PeriphCLKConfig+0x4e8>
      break;
   1c11e:	bf00      	nop
   1c120:	e004      	b.n	1c12c <HAL_RCCEx_PeriphCLKConfig+0x4e8>
      break;
   1c122:	bf00      	nop
   1c124:	e002      	b.n	1c12c <HAL_RCCEx_PeriphCLKConfig+0x4e8>
      break;
   1c126:	bf00      	nop
   1c128:	e000      	b.n	1c12c <HAL_RCCEx_PeriphCLKConfig+0x4e8>
      break;
   1c12a:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c12c:	7dfb      	ldrb	r3, [r7, #23]
   1c12e:	2b00      	cmp	r3, #0
   1c130:	d10a      	bne.n	1c148 <HAL_RCCEx_PeriphCLKConfig+0x504>
    {
      /* Set the source of SPI6 clock*/
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
   1c132:	4b35      	ldr	r3, [pc, #212]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1c134:	6d9b      	ldr	r3, [r3, #88]	; 0x58
   1c136:	f023 42e0 	bic.w	r2, r3, #1879048192	; 0x70000000
   1c13a:	687b      	ldr	r3, [r7, #4]
   1c13c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
   1c140:	4931      	ldr	r1, [pc, #196]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1c142:	4313      	orrs	r3, r2
   1c144:	658b      	str	r3, [r1, #88]	; 0x58
   1c146:	e001      	b.n	1c14c <HAL_RCCEx_PeriphCLKConfig+0x508>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c148:	7dfb      	ldrb	r3, [r7, #23]
   1c14a:	75bb      	strb	r3, [r7, #22]
  }
#endif /*DSI*/

#if defined(FDCAN1) || defined(FDCAN2)
  /*---------------------------- FDCAN configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
   1c14c:	687b      	ldr	r3, [r7, #4]
   1c14e:	681b      	ldr	r3, [r3, #0]
   1c150:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
   1c154:	2b00      	cmp	r3, #0
   1c156:	d02d      	beq.n	1c1b4 <HAL_RCCEx_PeriphCLKConfig+0x570>
  {
    switch(PeriphClkInit->FdcanClockSelection)
   1c158:	687b      	ldr	r3, [r7, #4]
   1c15a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
   1c15c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   1c160:	d005      	beq.n	1c16e <HAL_RCCEx_PeriphCLKConfig+0x52a>
   1c162:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
   1c166:	d009      	beq.n	1c17c <HAL_RCCEx_PeriphCLKConfig+0x538>
   1c168:	2b00      	cmp	r3, #0
   1c16a:	d013      	beq.n	1c194 <HAL_RCCEx_PeriphCLKConfig+0x550>
   1c16c:	e00f      	b.n	1c18e <HAL_RCCEx_PeriphCLKConfig+0x54a>
    {
    case RCC_FDCANCLKSOURCE_PLL:      /* PLL is used as clock source for FDCAN*/
      /* Enable FDCAN Clock output generated form System PLL . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
   1c16e:	4b26      	ldr	r3, [pc, #152]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1c170:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1c172:	4a25      	ldr	r2, [pc, #148]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1c174:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1c178:	62d3      	str	r3, [r2, #44]	; 0x2c

      /* FDCAN clock source configuration done later after clock selection check */
      break;
   1c17a:	e00c      	b.n	1c196 <HAL_RCCEx_PeriphCLKConfig+0x552>

    case RCC_FDCANCLKSOURCE_PLL2: /* PLL2 is used as clock source for FDCAN*/

      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
   1c17c:	687b      	ldr	r3, [r7, #4]
   1c17e:	3304      	adds	r3, #4
   1c180:	2101      	movs	r1, #1
   1c182:	4618      	mov	r0, r3
   1c184:	f000 feea 	bl	1cf5c <RCCEx_PLL2_Config>
   1c188:	4603      	mov	r3, r0
   1c18a:	75fb      	strb	r3, [r7, #23]

      /* FDCAN clock source configuration done later after clock selection check */
      break;
   1c18c:	e003      	b.n	1c196 <HAL_RCCEx_PeriphCLKConfig+0x552>
      /* HSE is used as clock source for FDCAN*/
      /* FDCAN clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1c18e:	2301      	movs	r3, #1
   1c190:	75fb      	strb	r3, [r7, #23]
      break;
   1c192:	e000      	b.n	1c196 <HAL_RCCEx_PeriphCLKConfig+0x552>
      break;
   1c194:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c196:	7dfb      	ldrb	r3, [r7, #23]
   1c198:	2b00      	cmp	r3, #0
   1c19a:	d109      	bne.n	1c1b0 <HAL_RCCEx_PeriphCLKConfig+0x56c>
    {
      /* Set the source of FDCAN clock*/
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
   1c19c:	4b1a      	ldr	r3, [pc, #104]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1c19e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
   1c1a0:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
   1c1a4:	687b      	ldr	r3, [r7, #4]
   1c1a6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
   1c1a8:	4917      	ldr	r1, [pc, #92]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1c1aa:	4313      	orrs	r3, r2
   1c1ac:	650b      	str	r3, [r1, #80]	; 0x50
   1c1ae:	e001      	b.n	1c1b4 <HAL_RCCEx_PeriphCLKConfig+0x570>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c1b0:	7dfb      	ldrb	r3, [r7, #23]
   1c1b2:	75bb      	strb	r3, [r7, #22]
    }
  }
#endif /*FDCAN1 || FDCAN2*/

  /*---------------------------- FMC configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
   1c1b4:	687b      	ldr	r3, [r7, #4]
   1c1b6:	681b      	ldr	r3, [r3, #0]
   1c1b8:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
   1c1bc:	2b00      	cmp	r3, #0
   1c1be:	d035      	beq.n	1c22c <HAL_RCCEx_PeriphCLKConfig+0x5e8>
  {
    switch(PeriphClkInit->FmcClockSelection)
   1c1c0:	687b      	ldr	r3, [r7, #4]
   1c1c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
   1c1c4:	2b03      	cmp	r3, #3
   1c1c6:	d81b      	bhi.n	1c200 <HAL_RCCEx_PeriphCLKConfig+0x5bc>
   1c1c8:	a201      	add	r2, pc, #4	; (adr r2, 1c1d0 <HAL_RCCEx_PeriphCLKConfig+0x58c>)
   1c1ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1c1ce:	bf00      	nop
   1c1d0:	0001c20d 	.word	0x0001c20d
   1c1d4:	0001c1e1 	.word	0x0001c1e1
   1c1d8:	0001c1ef 	.word	0x0001c1ef
   1c1dc:	0001c20d 	.word	0x0001c20d
    {
    case RCC_FMCCLKSOURCE_PLL:      /* PLL is used as clock source for FMC*/
      /* Enable FMC Clock output generated form System PLL . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
   1c1e0:	4b09      	ldr	r3, [pc, #36]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1c1e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1c1e4:	4a08      	ldr	r2, [pc, #32]	; (1c208 <HAL_RCCEx_PeriphCLKConfig+0x5c4>)
   1c1e6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1c1ea:	62d3      	str	r3, [r2, #44]	; 0x2c

      /* FMC clock source configuration done later after clock selection check */
      break;
   1c1ec:	e00f      	b.n	1c20e <HAL_RCCEx_PeriphCLKConfig+0x5ca>

    case RCC_FMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for FMC*/

      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
   1c1ee:	687b      	ldr	r3, [r7, #4]
   1c1f0:	3304      	adds	r3, #4
   1c1f2:	2102      	movs	r1, #2
   1c1f4:	4618      	mov	r0, r3
   1c1f6:	f000 feb1 	bl	1cf5c <RCCEx_PLL2_Config>
   1c1fa:	4603      	mov	r3, r0
   1c1fc:	75fb      	strb	r3, [r7, #23]

      /* FMC clock source configuration done later after clock selection check */
      break;
   1c1fe:	e006      	b.n	1c20e <HAL_RCCEx_PeriphCLKConfig+0x5ca>
    case RCC_FMCCLKSOURCE_HCLK:
      /* D1/CD HCLK  clock selected as FMC kernel peripheral clock */
      break;

    default:
      ret = HAL_ERROR;
   1c200:	2301      	movs	r3, #1
   1c202:	75fb      	strb	r3, [r7, #23]
      break;
   1c204:	e003      	b.n	1c20e <HAL_RCCEx_PeriphCLKConfig+0x5ca>
   1c206:	bf00      	nop
   1c208:	58024400 	.word	0x58024400
      break;
   1c20c:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c20e:	7dfb      	ldrb	r3, [r7, #23]
   1c210:	2b00      	cmp	r3, #0
   1c212:	d109      	bne.n	1c228 <HAL_RCCEx_PeriphCLKConfig+0x5e4>
    {
      /* Set the source of FMC clock*/
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
   1c214:	4bba      	ldr	r3, [pc, #744]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c216:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
   1c218:	f023 0203 	bic.w	r2, r3, #3
   1c21c:	687b      	ldr	r3, [r7, #4]
   1c21e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
   1c220:	49b7      	ldr	r1, [pc, #732]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c222:	4313      	orrs	r3, r2
   1c224:	64cb      	str	r3, [r1, #76]	; 0x4c
   1c226:	e001      	b.n	1c22c <HAL_RCCEx_PeriphCLKConfig+0x5e8>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c228:	7dfb      	ldrb	r3, [r7, #23]
   1c22a:	75bb      	strb	r3, [r7, #22]
    }
  }

  /*---------------------------- RTC configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
   1c22c:	687b      	ldr	r3, [r7, #4]
   1c22e:	681b      	ldr	r3, [r3, #0]
   1c230:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
   1c234:	2b00      	cmp	r3, #0
   1c236:	f000 8086 	beq.w	1c346 <HAL_RCCEx_PeriphCLKConfig+0x702>
  {
    /* check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
   1c23a:	4bb2      	ldr	r3, [pc, #712]	; (1c504 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
   1c23c:	681b      	ldr	r3, [r3, #0]
   1c23e:	4ab1      	ldr	r2, [pc, #708]	; (1c504 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
   1c240:	f443 7380 	orr.w	r3, r3, #256	; 0x100
   1c244:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
   1c246:	f7fd fe95 	bl	19f74 <HAL_GetTick>
   1c24a:	6138      	str	r0, [r7, #16]

    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
   1c24c:	e009      	b.n	1c262 <HAL_RCCEx_PeriphCLKConfig+0x61e>
    {
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
   1c24e:	f7fd fe91 	bl	19f74 <HAL_GetTick>
   1c252:	4602      	mov	r2, r0
   1c254:	693b      	ldr	r3, [r7, #16]
   1c256:	1ad3      	subs	r3, r2, r3
   1c258:	2b64      	cmp	r3, #100	; 0x64
   1c25a:	d902      	bls.n	1c262 <HAL_RCCEx_PeriphCLKConfig+0x61e>
      {
        ret = HAL_TIMEOUT;
   1c25c:	2303      	movs	r3, #3
   1c25e:	75fb      	strb	r3, [r7, #23]
        break;
   1c260:	e005      	b.n	1c26e <HAL_RCCEx_PeriphCLKConfig+0x62a>
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
   1c262:	4ba8      	ldr	r3, [pc, #672]	; (1c504 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
   1c264:	681b      	ldr	r3, [r3, #0]
   1c266:	f403 7380 	and.w	r3, r3, #256	; 0x100
   1c26a:	2b00      	cmp	r3, #0
   1c26c:	d0ef      	beq.n	1c24e <HAL_RCCEx_PeriphCLKConfig+0x60a>
      }
    }

    if(ret == HAL_OK)
   1c26e:	7dfb      	ldrb	r3, [r7, #23]
   1c270:	2b00      	cmp	r3, #0
   1c272:	d166      	bne.n	1c342 <HAL_RCCEx_PeriphCLKConfig+0x6fe>
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified */
      if((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
   1c274:	4ba2      	ldr	r3, [pc, #648]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c276:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   1c278:	687b      	ldr	r3, [r7, #4]
   1c27a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
   1c27e:	4053      	eors	r3, r2
   1c280:	f403 7340 	and.w	r3, r3, #768	; 0x300
   1c284:	2b00      	cmp	r3, #0
   1c286:	d013      	beq.n	1c2b0 <HAL_RCCEx_PeriphCLKConfig+0x66c>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
   1c288:	4b9d      	ldr	r3, [pc, #628]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c28a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   1c28c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
   1c290:	60fb      	str	r3, [r7, #12]
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
   1c292:	4b9b      	ldr	r3, [pc, #620]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c294:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   1c296:	4a9a      	ldr	r2, [pc, #616]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c298:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   1c29c:	6713      	str	r3, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
   1c29e:	4b98      	ldr	r3, [pc, #608]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c2a0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   1c2a2:	4a97      	ldr	r2, [pc, #604]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c2a4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
   1c2a8:	6713      	str	r3, [r2, #112]	; 0x70
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpreg;
   1c2aa:	4a95      	ldr	r2, [pc, #596]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c2ac:	68fb      	ldr	r3, [r7, #12]
   1c2ae:	6713      	str	r3, [r2, #112]	; 0x70
      }

      /* If LSE is selected as RTC clock source (and enabled prior to Backup Domain reset), wait for LSE reactivation */
      if(PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
   1c2b0:	687b      	ldr	r3, [r7, #4]
   1c2b2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
   1c2b6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   1c2ba:	d115      	bne.n	1c2e8 <HAL_RCCEx_PeriphCLKConfig+0x6a4>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
   1c2bc:	f7fd fe5a 	bl	19f74 <HAL_GetTick>
   1c2c0:	6138      	str	r0, [r7, #16]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
   1c2c2:	e00b      	b.n	1c2dc <HAL_RCCEx_PeriphCLKConfig+0x698>
        {
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
   1c2c4:	f7fd fe56 	bl	19f74 <HAL_GetTick>
   1c2c8:	4602      	mov	r2, r0
   1c2ca:	693b      	ldr	r3, [r7, #16]
   1c2cc:	1ad3      	subs	r3, r2, r3
   1c2ce:	f241 3288 	movw	r2, #5000	; 0x1388
   1c2d2:	4293      	cmp	r3, r2
   1c2d4:	d902      	bls.n	1c2dc <HAL_RCCEx_PeriphCLKConfig+0x698>
          {
            ret = HAL_TIMEOUT;
   1c2d6:	2303      	movs	r3, #3
   1c2d8:	75fb      	strb	r3, [r7, #23]
            break;
   1c2da:	e005      	b.n	1c2e8 <HAL_RCCEx_PeriphCLKConfig+0x6a4>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
   1c2dc:	4b88      	ldr	r3, [pc, #544]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c2de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   1c2e0:	f003 0302 	and.w	r3, r3, #2
   1c2e4:	2b00      	cmp	r3, #0
   1c2e6:	d0ed      	beq.n	1c2c4 <HAL_RCCEx_PeriphCLKConfig+0x680>
          }
        }
      }

      if(ret == HAL_OK)
   1c2e8:	7dfb      	ldrb	r3, [r7, #23]
   1c2ea:	2b00      	cmp	r3, #0
   1c2ec:	d126      	bne.n	1c33c <HAL_RCCEx_PeriphCLKConfig+0x6f8>
      {
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
   1c2ee:	687b      	ldr	r3, [r7, #4]
   1c2f0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
   1c2f4:	f403 7340 	and.w	r3, r3, #768	; 0x300
   1c2f8:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
   1c2fc:	d10d      	bne.n	1c31a <HAL_RCCEx_PeriphCLKConfig+0x6d6>
   1c2fe:	4b80      	ldr	r3, [pc, #512]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c300:	691b      	ldr	r3, [r3, #16]
   1c302:	f423 527c 	bic.w	r2, r3, #16128	; 0x3f00
   1c306:	687b      	ldr	r3, [r7, #4]
   1c308:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
   1c30c:	0919      	lsrs	r1, r3, #4
   1c30e:	4b7e      	ldr	r3, [pc, #504]	; (1c508 <HAL_RCCEx_PeriphCLKConfig+0x8c4>)
   1c310:	400b      	ands	r3, r1
   1c312:	497b      	ldr	r1, [pc, #492]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c314:	4313      	orrs	r3, r2
   1c316:	610b      	str	r3, [r1, #16]
   1c318:	e005      	b.n	1c326 <HAL_RCCEx_PeriphCLKConfig+0x6e2>
   1c31a:	4b79      	ldr	r3, [pc, #484]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c31c:	691b      	ldr	r3, [r3, #16]
   1c31e:	4a78      	ldr	r2, [pc, #480]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c320:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
   1c324:	6113      	str	r3, [r2, #16]
   1c326:	4b76      	ldr	r3, [pc, #472]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c328:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   1c32a:	687b      	ldr	r3, [r7, #4]
   1c32c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
   1c330:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1c334:	4972      	ldr	r1, [pc, #456]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c336:	4313      	orrs	r3, r2
   1c338:	670b      	str	r3, [r1, #112]	; 0x70
   1c33a:	e004      	b.n	1c346 <HAL_RCCEx_PeriphCLKConfig+0x702>
      }
      else
      {
        /* set overall return value */
        status = ret;
   1c33c:	7dfb      	ldrb	r3, [r7, #23]
   1c33e:	75bb      	strb	r3, [r7, #22]
   1c340:	e001      	b.n	1c346 <HAL_RCCEx_PeriphCLKConfig+0x702>
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c342:	7dfb      	ldrb	r3, [r7, #23]
   1c344:	75bb      	strb	r3, [r7, #22]
    }
  }


  /*-------------------------- USART1/6 configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
   1c346:	687b      	ldr	r3, [r7, #4]
   1c348:	681b      	ldr	r3, [r3, #0]
   1c34a:	f003 0301 	and.w	r3, r3, #1
   1c34e:	2b00      	cmp	r3, #0
   1c350:	d07d      	beq.n	1c44e <HAL_RCCEx_PeriphCLKConfig+0x80a>
  {
    switch(PeriphClkInit->Usart16ClockSelection)
   1c352:	687b      	ldr	r3, [r7, #4]
   1c354:	6f9b      	ldr	r3, [r3, #120]	; 0x78
   1c356:	2b28      	cmp	r3, #40	; 0x28
   1c358:	d866      	bhi.n	1c428 <HAL_RCCEx_PeriphCLKConfig+0x7e4>
   1c35a:	a201      	add	r2, pc, #4	; (adr r2, 1c360 <HAL_RCCEx_PeriphCLKConfig+0x71c>)
   1c35c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1c360:	0001c42f 	.word	0x0001c42f
   1c364:	0001c429 	.word	0x0001c429
   1c368:	0001c429 	.word	0x0001c429
   1c36c:	0001c429 	.word	0x0001c429
   1c370:	0001c429 	.word	0x0001c429
   1c374:	0001c429 	.word	0x0001c429
   1c378:	0001c429 	.word	0x0001c429
   1c37c:	0001c429 	.word	0x0001c429
   1c380:	0001c405 	.word	0x0001c405
   1c384:	0001c429 	.word	0x0001c429
   1c388:	0001c429 	.word	0x0001c429
   1c38c:	0001c429 	.word	0x0001c429
   1c390:	0001c429 	.word	0x0001c429
   1c394:	0001c429 	.word	0x0001c429
   1c398:	0001c429 	.word	0x0001c429
   1c39c:	0001c429 	.word	0x0001c429
   1c3a0:	0001c417 	.word	0x0001c417
   1c3a4:	0001c429 	.word	0x0001c429
   1c3a8:	0001c429 	.word	0x0001c429
   1c3ac:	0001c429 	.word	0x0001c429
   1c3b0:	0001c429 	.word	0x0001c429
   1c3b4:	0001c429 	.word	0x0001c429
   1c3b8:	0001c429 	.word	0x0001c429
   1c3bc:	0001c429 	.word	0x0001c429
   1c3c0:	0001c42f 	.word	0x0001c42f
   1c3c4:	0001c429 	.word	0x0001c429
   1c3c8:	0001c429 	.word	0x0001c429
   1c3cc:	0001c429 	.word	0x0001c429
   1c3d0:	0001c429 	.word	0x0001c429
   1c3d4:	0001c429 	.word	0x0001c429
   1c3d8:	0001c429 	.word	0x0001c429
   1c3dc:	0001c429 	.word	0x0001c429
   1c3e0:	0001c42f 	.word	0x0001c42f
   1c3e4:	0001c429 	.word	0x0001c429
   1c3e8:	0001c429 	.word	0x0001c429
   1c3ec:	0001c429 	.word	0x0001c429
   1c3f0:	0001c429 	.word	0x0001c429
   1c3f4:	0001c429 	.word	0x0001c429
   1c3f8:	0001c429 	.word	0x0001c429
   1c3fc:	0001c429 	.word	0x0001c429
   1c400:	0001c42f 	.word	0x0001c42f
    case RCC_USART16CLKSOURCE_PCLK2: /* CD/D2 PCLK2 as clock source for USART1/6 */
      /* USART1/6 clock source configuration done later after clock selection check */
      break;

    case RCC_USART16CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART1/6 */
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
   1c404:	687b      	ldr	r3, [r7, #4]
   1c406:	3304      	adds	r3, #4
   1c408:	2101      	movs	r1, #1
   1c40a:	4618      	mov	r0, r3
   1c40c:	f000 fda6 	bl	1cf5c <RCCEx_PLL2_Config>
   1c410:	4603      	mov	r3, r0
   1c412:	75fb      	strb	r3, [r7, #23]
      /* USART1/6 clock source configuration done later after clock selection check */
      break;
   1c414:	e00c      	b.n	1c430 <HAL_RCCEx_PeriphCLKConfig+0x7ec>

    case RCC_USART16CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART1/6 */
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
   1c416:	687b      	ldr	r3, [r7, #4]
   1c418:	3324      	adds	r3, #36	; 0x24
   1c41a:	2101      	movs	r1, #1
   1c41c:	4618      	mov	r0, r3
   1c41e:	f000 fe4f 	bl	1d0c0 <RCCEx_PLL3_Config>
   1c422:	4603      	mov	r3, r0
   1c424:	75fb      	strb	r3, [r7, #23]
      /* USART1/6 clock source configuration done later after clock selection check */
      break;
   1c426:	e003      	b.n	1c430 <HAL_RCCEx_PeriphCLKConfig+0x7ec>
      /* LSE,  oscillator is used as source of USART1/6 clock */
      /* USART1/6 clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1c428:	2301      	movs	r3, #1
   1c42a:	75fb      	strb	r3, [r7, #23]
      break;
   1c42c:	e000      	b.n	1c430 <HAL_RCCEx_PeriphCLKConfig+0x7ec>
      break;
   1c42e:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c430:	7dfb      	ldrb	r3, [r7, #23]
   1c432:	2b00      	cmp	r3, #0
   1c434:	d109      	bne.n	1c44a <HAL_RCCEx_PeriphCLKConfig+0x806>
    {
      /* Set the source of USART1/6 clock */
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
   1c436:	4b32      	ldr	r3, [pc, #200]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c438:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1c43a:	f023 0238 	bic.w	r2, r3, #56	; 0x38
   1c43e:	687b      	ldr	r3, [r7, #4]
   1c440:	6f9b      	ldr	r3, [r3, #120]	; 0x78
   1c442:	492f      	ldr	r1, [pc, #188]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c444:	4313      	orrs	r3, r2
   1c446:	654b      	str	r3, [r1, #84]	; 0x54
   1c448:	e001      	b.n	1c44e <HAL_RCCEx_PeriphCLKConfig+0x80a>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c44a:	7dfb      	ldrb	r3, [r7, #23]
   1c44c:	75bb      	strb	r3, [r7, #22]
    }
  }

  /*-------------------------- USART2/3/4/5/7/8 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
   1c44e:	687b      	ldr	r3, [r7, #4]
   1c450:	681b      	ldr	r3, [r3, #0]
   1c452:	f003 0302 	and.w	r3, r3, #2
   1c456:	2b00      	cmp	r3, #0
   1c458:	d037      	beq.n	1c4ca <HAL_RCCEx_PeriphCLKConfig+0x886>
  {
    switch(PeriphClkInit->Usart234578ClockSelection)
   1c45a:	687b      	ldr	r3, [r7, #4]
   1c45c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
   1c45e:	2b05      	cmp	r3, #5
   1c460:	d820      	bhi.n	1c4a4 <HAL_RCCEx_PeriphCLKConfig+0x860>
   1c462:	a201      	add	r2, pc, #4	; (adr r2, 1c468 <HAL_RCCEx_PeriphCLKConfig+0x824>)
   1c464:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1c468:	0001c4ab 	.word	0x0001c4ab
   1c46c:	0001c481 	.word	0x0001c481
   1c470:	0001c493 	.word	0x0001c493
   1c474:	0001c4ab 	.word	0x0001c4ab
   1c478:	0001c4ab 	.word	0x0001c4ab
   1c47c:	0001c4ab 	.word	0x0001c4ab
    case RCC_USART234578CLKSOURCE_PCLK1: /* CD/D2 PCLK1 as clock source for USART2/3/4/5/7/8 */
      /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
      break;

    case RCC_USART234578CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART2/3/4/5/7/8 */
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
   1c480:	687b      	ldr	r3, [r7, #4]
   1c482:	3304      	adds	r3, #4
   1c484:	2101      	movs	r1, #1
   1c486:	4618      	mov	r0, r3
   1c488:	f000 fd68 	bl	1cf5c <RCCEx_PLL2_Config>
   1c48c:	4603      	mov	r3, r0
   1c48e:	75fb      	strb	r3, [r7, #23]
      /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
      break;
   1c490:	e00c      	b.n	1c4ac <HAL_RCCEx_PeriphCLKConfig+0x868>

    case RCC_USART234578CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART2/3/4/5/7/8 */
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
   1c492:	687b      	ldr	r3, [r7, #4]
   1c494:	3324      	adds	r3, #36	; 0x24
   1c496:	2101      	movs	r1, #1
   1c498:	4618      	mov	r0, r3
   1c49a:	f000 fe11 	bl	1d0c0 <RCCEx_PLL3_Config>
   1c49e:	4603      	mov	r3, r0
   1c4a0:	75fb      	strb	r3, [r7, #23]
      /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
      break;
   1c4a2:	e003      	b.n	1c4ac <HAL_RCCEx_PeriphCLKConfig+0x868>
      /* LSE,  oscillator is used as source of USART2/3/4/5/7/8 clock */
      /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1c4a4:	2301      	movs	r3, #1
   1c4a6:	75fb      	strb	r3, [r7, #23]
      break;
   1c4a8:	e000      	b.n	1c4ac <HAL_RCCEx_PeriphCLKConfig+0x868>
      break;
   1c4aa:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c4ac:	7dfb      	ldrb	r3, [r7, #23]
   1c4ae:	2b00      	cmp	r3, #0
   1c4b0:	d109      	bne.n	1c4c6 <HAL_RCCEx_PeriphCLKConfig+0x882>
    {
      /* Set the source of USART2/3/4/5/7/8 clock */
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
   1c4b2:	4b13      	ldr	r3, [pc, #76]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c4b4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1c4b6:	f023 0207 	bic.w	r2, r3, #7
   1c4ba:	687b      	ldr	r3, [r7, #4]
   1c4bc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
   1c4be:	4910      	ldr	r1, [pc, #64]	; (1c500 <HAL_RCCEx_PeriphCLKConfig+0x8bc>)
   1c4c0:	4313      	orrs	r3, r2
   1c4c2:	654b      	str	r3, [r1, #84]	; 0x54
   1c4c4:	e001      	b.n	1c4ca <HAL_RCCEx_PeriphCLKConfig+0x886>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c4c6:	7dfb      	ldrb	r3, [r7, #23]
   1c4c8:	75bb      	strb	r3, [r7, #22]
    }
  }

  /*-------------------------- LPUART1 Configuration -------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
   1c4ca:	687b      	ldr	r3, [r7, #4]
   1c4cc:	681b      	ldr	r3, [r3, #0]
   1c4ce:	f003 0304 	and.w	r3, r3, #4
   1c4d2:	2b00      	cmp	r3, #0
   1c4d4:	d040      	beq.n	1c558 <HAL_RCCEx_PeriphCLKConfig+0x914>
  {
    switch(PeriphClkInit->Lpuart1ClockSelection)
   1c4d6:	687b      	ldr	r3, [r7, #4]
   1c4d8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
   1c4dc:	2b05      	cmp	r3, #5
   1c4de:	d827      	bhi.n	1c530 <HAL_RCCEx_PeriphCLKConfig+0x8ec>
   1c4e0:	a201      	add	r2, pc, #4	; (adr r2, 1c4e8 <HAL_RCCEx_PeriphCLKConfig+0x8a4>)
   1c4e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1c4e6:	bf00      	nop
   1c4e8:	0001c537 	.word	0x0001c537
   1c4ec:	0001c50d 	.word	0x0001c50d
   1c4f0:	0001c51f 	.word	0x0001c51f
   1c4f4:	0001c537 	.word	0x0001c537
   1c4f8:	0001c537 	.word	0x0001c537
   1c4fc:	0001c537 	.word	0x0001c537
   1c500:	58024400 	.word	0x58024400
   1c504:	58024800 	.word	0x58024800
   1c508:	00ffffcf 	.word	0x00ffffcf
    case RCC_LPUART1CLKSOURCE_PCLK4: /* SRD/D3 PCLK1 (PCLK4) as clock source for LPUART1 */
      /* LPUART1 clock source configuration done later after clock selection check */
      break;

    case RCC_LPUART1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPUART1 */
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
   1c50c:	687b      	ldr	r3, [r7, #4]
   1c50e:	3304      	adds	r3, #4
   1c510:	2101      	movs	r1, #1
   1c512:	4618      	mov	r0, r3
   1c514:	f000 fd22 	bl	1cf5c <RCCEx_PLL2_Config>
   1c518:	4603      	mov	r3, r0
   1c51a:	75fb      	strb	r3, [r7, #23]
      /* LPUART1 clock source configuration done later after clock selection check */
      break;
   1c51c:	e00c      	b.n	1c538 <HAL_RCCEx_PeriphCLKConfig+0x8f4>

    case RCC_LPUART1CLKSOURCE_PLL3: /* PLL3 is used as clock source for LPUART1 */
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
   1c51e:	687b      	ldr	r3, [r7, #4]
   1c520:	3324      	adds	r3, #36	; 0x24
   1c522:	2101      	movs	r1, #1
   1c524:	4618      	mov	r0, r3
   1c526:	f000 fdcb 	bl	1d0c0 <RCCEx_PLL3_Config>
   1c52a:	4603      	mov	r3, r0
   1c52c:	75fb      	strb	r3, [r7, #23]
      /* LPUART1 clock source configuration done later after clock selection check */
      break;
   1c52e:	e003      	b.n	1c538 <HAL_RCCEx_PeriphCLKConfig+0x8f4>
      /* LSE,  oscillator is used as source of LPUART1 clock */
      /* LPUART1 clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1c530:	2301      	movs	r3, #1
   1c532:	75fb      	strb	r3, [r7, #23]
      break;
   1c534:	e000      	b.n	1c538 <HAL_RCCEx_PeriphCLKConfig+0x8f4>
      break;
   1c536:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c538:	7dfb      	ldrb	r3, [r7, #23]
   1c53a:	2b00      	cmp	r3, #0
   1c53c:	d10a      	bne.n	1c554 <HAL_RCCEx_PeriphCLKConfig+0x910>
    {
      /* Set the source of LPUART1 clock */
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
   1c53e:	4bb2      	ldr	r3, [pc, #712]	; (1c808 <HAL_RCCEx_PeriphCLKConfig+0xbc4>)
   1c540:	6d9b      	ldr	r3, [r3, #88]	; 0x58
   1c542:	f023 0207 	bic.w	r2, r3, #7
   1c546:	687b      	ldr	r3, [r7, #4]
   1c548:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
   1c54c:	49ae      	ldr	r1, [pc, #696]	; (1c808 <HAL_RCCEx_PeriphCLKConfig+0xbc4>)
   1c54e:	4313      	orrs	r3, r2
   1c550:	658b      	str	r3, [r1, #88]	; 0x58
   1c552:	e001      	b.n	1c558 <HAL_RCCEx_PeriphCLKConfig+0x914>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c554:	7dfb      	ldrb	r3, [r7, #23]
   1c556:	75bb      	strb	r3, [r7, #22]
    }
  }

  /*---------------------------- LPTIM1 configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
   1c558:	687b      	ldr	r3, [r7, #4]
   1c55a:	681b      	ldr	r3, [r3, #0]
   1c55c:	f003 0320 	and.w	r3, r3, #32
   1c560:	2b00      	cmp	r3, #0
   1c562:	d044      	beq.n	1c5ee <HAL_RCCEx_PeriphCLKConfig+0x9aa>
  {
    switch(PeriphClkInit->Lptim1ClockSelection)
   1c564:	687b      	ldr	r3, [r7, #4]
   1c566:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
   1c56a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
   1c56e:	d01b      	beq.n	1c5a8 <HAL_RCCEx_PeriphCLKConfig+0x964>
   1c570:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
   1c574:	d805      	bhi.n	1c582 <HAL_RCCEx_PeriphCLKConfig+0x93e>
   1c576:	2b00      	cmp	r3, #0
   1c578:	d022      	beq.n	1c5c0 <HAL_RCCEx_PeriphCLKConfig+0x97c>
   1c57a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   1c57e:	d00a      	beq.n	1c596 <HAL_RCCEx_PeriphCLKConfig+0x952>
   1c580:	e01b      	b.n	1c5ba <HAL_RCCEx_PeriphCLKConfig+0x976>
   1c582:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
   1c586:	d01d      	beq.n	1c5c4 <HAL_RCCEx_PeriphCLKConfig+0x980>
   1c588:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
   1c58c:	d01c      	beq.n	1c5c8 <HAL_RCCEx_PeriphCLKConfig+0x984>
   1c58e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   1c592:	d01b      	beq.n	1c5cc <HAL_RCCEx_PeriphCLKConfig+0x988>
   1c594:	e011      	b.n	1c5ba <HAL_RCCEx_PeriphCLKConfig+0x976>
      /* LPTIM1 clock source configuration done later after clock selection check */
      break;

    case RCC_LPTIM1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM1*/

      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
   1c596:	687b      	ldr	r3, [r7, #4]
   1c598:	3304      	adds	r3, #4
   1c59a:	2100      	movs	r1, #0
   1c59c:	4618      	mov	r0, r3
   1c59e:	f000 fcdd 	bl	1cf5c <RCCEx_PLL2_Config>
   1c5a2:	4603      	mov	r3, r0
   1c5a4:	75fb      	strb	r3, [r7, #23]

      /* LPTIM1 clock source configuration done later after clock selection check */
      break;
   1c5a6:	e012      	b.n	1c5ce <HAL_RCCEx_PeriphCLKConfig+0x98a>

    case RCC_LPTIM1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM1*/
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
   1c5a8:	687b      	ldr	r3, [r7, #4]
   1c5aa:	3324      	adds	r3, #36	; 0x24
   1c5ac:	2102      	movs	r1, #2
   1c5ae:	4618      	mov	r0, r3
   1c5b0:	f000 fd86 	bl	1d0c0 <RCCEx_PLL3_Config>
   1c5b4:	4603      	mov	r3, r0
   1c5b6:	75fb      	strb	r3, [r7, #23]

      /* LPTIM1 clock source configuration done later after clock selection check */
      break;
   1c5b8:	e009      	b.n	1c5ce <HAL_RCCEx_PeriphCLKConfig+0x98a>
      /* HSI, HSE, or CSI oscillator is used as source of LPTIM1 clock */
      /* LPTIM1 clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1c5ba:	2301      	movs	r3, #1
   1c5bc:	75fb      	strb	r3, [r7, #23]
      break;
   1c5be:	e006      	b.n	1c5ce <HAL_RCCEx_PeriphCLKConfig+0x98a>
      break;
   1c5c0:	bf00      	nop
   1c5c2:	e004      	b.n	1c5ce <HAL_RCCEx_PeriphCLKConfig+0x98a>
      break;
   1c5c4:	bf00      	nop
   1c5c6:	e002      	b.n	1c5ce <HAL_RCCEx_PeriphCLKConfig+0x98a>
      break;
   1c5c8:	bf00      	nop
   1c5ca:	e000      	b.n	1c5ce <HAL_RCCEx_PeriphCLKConfig+0x98a>
      break;
   1c5cc:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c5ce:	7dfb      	ldrb	r3, [r7, #23]
   1c5d0:	2b00      	cmp	r3, #0
   1c5d2:	d10a      	bne.n	1c5ea <HAL_RCCEx_PeriphCLKConfig+0x9a6>
    {
      /* Set the source of LPTIM1 clock*/
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
   1c5d4:	4b8c      	ldr	r3, [pc, #560]	; (1c808 <HAL_RCCEx_PeriphCLKConfig+0xbc4>)
   1c5d6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1c5d8:	f023 42e0 	bic.w	r2, r3, #1879048192	; 0x70000000
   1c5dc:	687b      	ldr	r3, [r7, #4]
   1c5de:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
   1c5e2:	4989      	ldr	r1, [pc, #548]	; (1c808 <HAL_RCCEx_PeriphCLKConfig+0xbc4>)
   1c5e4:	4313      	orrs	r3, r2
   1c5e6:	654b      	str	r3, [r1, #84]	; 0x54
   1c5e8:	e001      	b.n	1c5ee <HAL_RCCEx_PeriphCLKConfig+0x9aa>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c5ea:	7dfb      	ldrb	r3, [r7, #23]
   1c5ec:	75bb      	strb	r3, [r7, #22]
    }
  }

  /*---------------------------- LPTIM2 configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
   1c5ee:	687b      	ldr	r3, [r7, #4]
   1c5f0:	681b      	ldr	r3, [r3, #0]
   1c5f2:	f003 0340 	and.w	r3, r3, #64	; 0x40
   1c5f6:	2b00      	cmp	r3, #0
   1c5f8:	d044      	beq.n	1c684 <HAL_RCCEx_PeriphCLKConfig+0xa40>
  {
    switch(PeriphClkInit->Lptim2ClockSelection)
   1c5fa:	687b      	ldr	r3, [r7, #4]
   1c5fc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
   1c600:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
   1c604:	d01b      	beq.n	1c63e <HAL_RCCEx_PeriphCLKConfig+0x9fa>
   1c606:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
   1c60a:	d805      	bhi.n	1c618 <HAL_RCCEx_PeriphCLKConfig+0x9d4>
   1c60c:	2b00      	cmp	r3, #0
   1c60e:	d022      	beq.n	1c656 <HAL_RCCEx_PeriphCLKConfig+0xa12>
   1c610:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   1c614:	d00a      	beq.n	1c62c <HAL_RCCEx_PeriphCLKConfig+0x9e8>
   1c616:	e01b      	b.n	1c650 <HAL_RCCEx_PeriphCLKConfig+0xa0c>
   1c618:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
   1c61c:	d01d      	beq.n	1c65a <HAL_RCCEx_PeriphCLKConfig+0xa16>
   1c61e:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
   1c622:	d01c      	beq.n	1c65e <HAL_RCCEx_PeriphCLKConfig+0xa1a>
   1c624:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
   1c628:	d01b      	beq.n	1c662 <HAL_RCCEx_PeriphCLKConfig+0xa1e>
   1c62a:	e011      	b.n	1c650 <HAL_RCCEx_PeriphCLKConfig+0xa0c>
      /* LPTIM2 clock source configuration done later after clock selection check */
      break;

    case RCC_LPTIM2CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM2*/

      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
   1c62c:	687b      	ldr	r3, [r7, #4]
   1c62e:	3304      	adds	r3, #4
   1c630:	2100      	movs	r1, #0
   1c632:	4618      	mov	r0, r3
   1c634:	f000 fc92 	bl	1cf5c <RCCEx_PLL2_Config>
   1c638:	4603      	mov	r3, r0
   1c63a:	75fb      	strb	r3, [r7, #23]

      /* LPTIM2 clock source configuration done later after clock selection check */
      break;
   1c63c:	e012      	b.n	1c664 <HAL_RCCEx_PeriphCLKConfig+0xa20>

    case RCC_LPTIM2CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM2*/
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
   1c63e:	687b      	ldr	r3, [r7, #4]
   1c640:	3324      	adds	r3, #36	; 0x24
   1c642:	2102      	movs	r1, #2
   1c644:	4618      	mov	r0, r3
   1c646:	f000 fd3b 	bl	1d0c0 <RCCEx_PLL3_Config>
   1c64a:	4603      	mov	r3, r0
   1c64c:	75fb      	strb	r3, [r7, #23]

      /* LPTIM2 clock source configuration done later after clock selection check */
      break;
   1c64e:	e009      	b.n	1c664 <HAL_RCCEx_PeriphCLKConfig+0xa20>
      /* HSI, HSE, or CSI oscillator is used as source of LPTIM2 clock */
      /* LPTIM2 clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1c650:	2301      	movs	r3, #1
   1c652:	75fb      	strb	r3, [r7, #23]
      break;
   1c654:	e006      	b.n	1c664 <HAL_RCCEx_PeriphCLKConfig+0xa20>
      break;
   1c656:	bf00      	nop
   1c658:	e004      	b.n	1c664 <HAL_RCCEx_PeriphCLKConfig+0xa20>
      break;
   1c65a:	bf00      	nop
   1c65c:	e002      	b.n	1c664 <HAL_RCCEx_PeriphCLKConfig+0xa20>
      break;
   1c65e:	bf00      	nop
   1c660:	e000      	b.n	1c664 <HAL_RCCEx_PeriphCLKConfig+0xa20>
      break;
   1c662:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c664:	7dfb      	ldrb	r3, [r7, #23]
   1c666:	2b00      	cmp	r3, #0
   1c668:	d10a      	bne.n	1c680 <HAL_RCCEx_PeriphCLKConfig+0xa3c>
    {
      /* Set the source of LPTIM2 clock*/
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
   1c66a:	4b67      	ldr	r3, [pc, #412]	; (1c808 <HAL_RCCEx_PeriphCLKConfig+0xbc4>)
   1c66c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
   1c66e:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
   1c672:	687b      	ldr	r3, [r7, #4]
   1c674:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
   1c678:	4963      	ldr	r1, [pc, #396]	; (1c808 <HAL_RCCEx_PeriphCLKConfig+0xbc4>)
   1c67a:	4313      	orrs	r3, r2
   1c67c:	658b      	str	r3, [r1, #88]	; 0x58
   1c67e:	e001      	b.n	1c684 <HAL_RCCEx_PeriphCLKConfig+0xa40>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c680:	7dfb      	ldrb	r3, [r7, #23]
   1c682:	75bb      	strb	r3, [r7, #22]
    }
  }

  /*---------------------------- LPTIM345 configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
   1c684:	687b      	ldr	r3, [r7, #4]
   1c686:	681b      	ldr	r3, [r3, #0]
   1c688:	f003 0380 	and.w	r3, r3, #128	; 0x80
   1c68c:	2b00      	cmp	r3, #0
   1c68e:	d044      	beq.n	1c71a <HAL_RCCEx_PeriphCLKConfig+0xad6>
  {
    switch(PeriphClkInit->Lptim345ClockSelection)
   1c690:	687b      	ldr	r3, [r7, #4]
   1c692:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
   1c696:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
   1c69a:	d01b      	beq.n	1c6d4 <HAL_RCCEx_PeriphCLKConfig+0xa90>
   1c69c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
   1c6a0:	d805      	bhi.n	1c6ae <HAL_RCCEx_PeriphCLKConfig+0xa6a>
   1c6a2:	2b00      	cmp	r3, #0
   1c6a4:	d022      	beq.n	1c6ec <HAL_RCCEx_PeriphCLKConfig+0xaa8>
   1c6a6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
   1c6aa:	d00a      	beq.n	1c6c2 <HAL_RCCEx_PeriphCLKConfig+0xa7e>
   1c6ac:	e01b      	b.n	1c6e6 <HAL_RCCEx_PeriphCLKConfig+0xaa2>
   1c6ae:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   1c6b2:	d01d      	beq.n	1c6f0 <HAL_RCCEx_PeriphCLKConfig+0xaac>
   1c6b4:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
   1c6b8:	d01c      	beq.n	1c6f4 <HAL_RCCEx_PeriphCLKConfig+0xab0>
   1c6ba:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
   1c6be:	d01b      	beq.n	1c6f8 <HAL_RCCEx_PeriphCLKConfig+0xab4>
   1c6c0:	e011      	b.n	1c6e6 <HAL_RCCEx_PeriphCLKConfig+0xaa2>
    case RCC_LPTIM345CLKSOURCE_PCLK4:      /* SRD/D3 PCLK1 (PCLK4) as clock source for LPTIM3/4/5 */
      /* LPTIM3/4/5 clock source configuration done later after clock selection check */
      break;

    case RCC_LPTIM345CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM3/4/5 */
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
   1c6c2:	687b      	ldr	r3, [r7, #4]
   1c6c4:	3304      	adds	r3, #4
   1c6c6:	2100      	movs	r1, #0
   1c6c8:	4618      	mov	r0, r3
   1c6ca:	f000 fc47 	bl	1cf5c <RCCEx_PLL2_Config>
   1c6ce:	4603      	mov	r3, r0
   1c6d0:	75fb      	strb	r3, [r7, #23]

      /* LPTIM3/4/5 clock source configuration done later after clock selection check */
      break;
   1c6d2:	e012      	b.n	1c6fa <HAL_RCCEx_PeriphCLKConfig+0xab6>

    case RCC_LPTIM345CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM3/4/5 */
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
   1c6d4:	687b      	ldr	r3, [r7, #4]
   1c6d6:	3324      	adds	r3, #36	; 0x24
   1c6d8:	2102      	movs	r1, #2
   1c6da:	4618      	mov	r0, r3
   1c6dc:	f000 fcf0 	bl	1d0c0 <RCCEx_PLL3_Config>
   1c6e0:	4603      	mov	r3, r0
   1c6e2:	75fb      	strb	r3, [r7, #23]

      /* LPTIM3/4/5 clock source configuration done later after clock selection check */
      break;
   1c6e4:	e009      	b.n	1c6fa <HAL_RCCEx_PeriphCLKConfig+0xab6>
      /* HSI, HSE, or CSI oscillator is used as source of LPTIM3/4/5 clock */
      /* LPTIM3/4/5 clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1c6e6:	2301      	movs	r3, #1
   1c6e8:	75fb      	strb	r3, [r7, #23]
      break;
   1c6ea:	e006      	b.n	1c6fa <HAL_RCCEx_PeriphCLKConfig+0xab6>
      break;
   1c6ec:	bf00      	nop
   1c6ee:	e004      	b.n	1c6fa <HAL_RCCEx_PeriphCLKConfig+0xab6>
      break;
   1c6f0:	bf00      	nop
   1c6f2:	e002      	b.n	1c6fa <HAL_RCCEx_PeriphCLKConfig+0xab6>
      break;
   1c6f4:	bf00      	nop
   1c6f6:	e000      	b.n	1c6fa <HAL_RCCEx_PeriphCLKConfig+0xab6>
      break;
   1c6f8:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c6fa:	7dfb      	ldrb	r3, [r7, #23]
   1c6fc:	2b00      	cmp	r3, #0
   1c6fe:	d10a      	bne.n	1c716 <HAL_RCCEx_PeriphCLKConfig+0xad2>
    {
      /* Set the source of LPTIM3/4/5 clock */
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
   1c700:	4b41      	ldr	r3, [pc, #260]	; (1c808 <HAL_RCCEx_PeriphCLKConfig+0xbc4>)
   1c702:	6d9b      	ldr	r3, [r3, #88]	; 0x58
   1c704:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
   1c708:	687b      	ldr	r3, [r7, #4]
   1c70a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
   1c70e:	493e      	ldr	r1, [pc, #248]	; (1c808 <HAL_RCCEx_PeriphCLKConfig+0xbc4>)
   1c710:	4313      	orrs	r3, r2
   1c712:	658b      	str	r3, [r1, #88]	; 0x58
   1c714:	e001      	b.n	1c71a <HAL_RCCEx_PeriphCLKConfig+0xad6>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c716:	7dfb      	ldrb	r3, [r7, #23]
   1c718:	75bb      	strb	r3, [r7, #22]
    }
  }

  /*------------------------------ I2C1/2/3 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
   1c71a:	687b      	ldr	r3, [r7, #4]
   1c71c:	681b      	ldr	r3, [r3, #0]
   1c71e:	f003 0308 	and.w	r3, r3, #8
   1c722:	2b00      	cmp	r3, #0
   1c724:	d01a      	beq.n	1c75c <HAL_RCCEx_PeriphCLKConfig+0xb18>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C123CLKSOURCE(PeriphClkInit->I2c123ClockSelection));

    if ((PeriphClkInit->I2c123ClockSelection )== RCC_I2C123CLKSOURCE_PLL3 )
   1c726:	687b      	ldr	r3, [r7, #4]
   1c728:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
   1c72c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
   1c730:	d10a      	bne.n	1c748 <HAL_RCCEx_PeriphCLKConfig+0xb04>
    {
        if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!= HAL_OK)
   1c732:	687b      	ldr	r3, [r7, #4]
   1c734:	3324      	adds	r3, #36	; 0x24
   1c736:	2102      	movs	r1, #2
   1c738:	4618      	mov	r0, r3
   1c73a:	f000 fcc1 	bl	1d0c0 <RCCEx_PLL3_Config>
   1c73e:	4603      	mov	r3, r0
   1c740:	2b00      	cmp	r3, #0
   1c742:	d001      	beq.n	1c748 <HAL_RCCEx_PeriphCLKConfig+0xb04>
        {
          status = HAL_ERROR;
   1c744:	2301      	movs	r3, #1
   1c746:	75bb      	strb	r3, [r7, #22]
        }
    }

      __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
   1c748:	4b2f      	ldr	r3, [pc, #188]	; (1c808 <HAL_RCCEx_PeriphCLKConfig+0xbc4>)
   1c74a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1c74c:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
   1c750:	687b      	ldr	r3, [r7, #4]
   1c752:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
   1c756:	492c      	ldr	r1, [pc, #176]	; (1c808 <HAL_RCCEx_PeriphCLKConfig+0xbc4>)
   1c758:	4313      	orrs	r3, r2
   1c75a:	654b      	str	r3, [r1, #84]	; 0x54

  }

  /*------------------------------ I2C4 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
   1c75c:	687b      	ldr	r3, [r7, #4]
   1c75e:	681b      	ldr	r3, [r3, #0]
   1c760:	f003 0310 	and.w	r3, r3, #16
   1c764:	2b00      	cmp	r3, #0
   1c766:	d01a      	beq.n	1c79e <HAL_RCCEx_PeriphCLKConfig+0xb5a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3 )
   1c768:	687b      	ldr	r3, [r7, #4]
   1c76a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
   1c76e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   1c772:	d10a      	bne.n	1c78a <HAL_RCCEx_PeriphCLKConfig+0xb46>
    {
      if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!= HAL_OK)
   1c774:	687b      	ldr	r3, [r7, #4]
   1c776:	3324      	adds	r3, #36	; 0x24
   1c778:	2102      	movs	r1, #2
   1c77a:	4618      	mov	r0, r3
   1c77c:	f000 fca0 	bl	1d0c0 <RCCEx_PLL3_Config>
   1c780:	4603      	mov	r3, r0
   1c782:	2b00      	cmp	r3, #0
   1c784:	d001      	beq.n	1c78a <HAL_RCCEx_PeriphCLKConfig+0xb46>
      {
        status = HAL_ERROR;
   1c786:	2301      	movs	r3, #1
   1c788:	75bb      	strb	r3, [r7, #22]
      }
    }

      __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
   1c78a:	4b1f      	ldr	r3, [pc, #124]	; (1c808 <HAL_RCCEx_PeriphCLKConfig+0xbc4>)
   1c78c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
   1c78e:	f423 7240 	bic.w	r2, r3, #768	; 0x300
   1c792:	687b      	ldr	r3, [r7, #4]
   1c794:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
   1c798:	491b      	ldr	r1, [pc, #108]	; (1c808 <HAL_RCCEx_PeriphCLKConfig+0xbc4>)
   1c79a:	4313      	orrs	r3, r2
   1c79c:	658b      	str	r3, [r1, #88]	; 0x58

  }

  /*---------------------------- ADC configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
   1c79e:	687b      	ldr	r3, [r7, #4]
   1c7a0:	681b      	ldr	r3, [r3, #0]
   1c7a2:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
   1c7a6:	2b00      	cmp	r3, #0
   1c7a8:	d032      	beq.n	1c810 <HAL_RCCEx_PeriphCLKConfig+0xbcc>
  {
    switch(PeriphClkInit->AdcClockSelection)
   1c7aa:	687b      	ldr	r3, [r7, #4]
   1c7ac:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
   1c7b0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   1c7b4:	d00d      	beq.n	1c7d2 <HAL_RCCEx_PeriphCLKConfig+0xb8e>
   1c7b6:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
   1c7ba:	d016      	beq.n	1c7ea <HAL_RCCEx_PeriphCLKConfig+0xba6>
   1c7bc:	2b00      	cmp	r3, #0
   1c7be:	d111      	bne.n	1c7e4 <HAL_RCCEx_PeriphCLKConfig+0xba0>
    {

    case RCC_ADCCLKSOURCE_PLL2: /* PLL2 is used as clock source for ADC*/

      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
   1c7c0:	687b      	ldr	r3, [r7, #4]
   1c7c2:	3304      	adds	r3, #4
   1c7c4:	2100      	movs	r1, #0
   1c7c6:	4618      	mov	r0, r3
   1c7c8:	f000 fbc8 	bl	1cf5c <RCCEx_PLL2_Config>
   1c7cc:	4603      	mov	r3, r0
   1c7ce:	75fb      	strb	r3, [r7, #23]

      /* ADC clock source configuration done later after clock selection check */
      break;
   1c7d0:	e00c      	b.n	1c7ec <HAL_RCCEx_PeriphCLKConfig+0xba8>

    case RCC_ADCCLKSOURCE_PLL3:  /* PLL3 is used as clock source for ADC*/
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
   1c7d2:	687b      	ldr	r3, [r7, #4]
   1c7d4:	3324      	adds	r3, #36	; 0x24
   1c7d6:	2102      	movs	r1, #2
   1c7d8:	4618      	mov	r0, r3
   1c7da:	f000 fc71 	bl	1d0c0 <RCCEx_PLL3_Config>
   1c7de:	4603      	mov	r3, r0
   1c7e0:	75fb      	strb	r3, [r7, #23]

      /* ADC clock source configuration done later after clock selection check */
      break;
   1c7e2:	e003      	b.n	1c7ec <HAL_RCCEx_PeriphCLKConfig+0xba8>
      /* HSI, HSE, or CSI oscillator is used as source of ADC clock */
      /* ADC clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1c7e4:	2301      	movs	r3, #1
   1c7e6:	75fb      	strb	r3, [r7, #23]
      break;
   1c7e8:	e000      	b.n	1c7ec <HAL_RCCEx_PeriphCLKConfig+0xba8>
      break;
   1c7ea:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c7ec:	7dfb      	ldrb	r3, [r7, #23]
   1c7ee:	2b00      	cmp	r3, #0
   1c7f0:	d10c      	bne.n	1c80c <HAL_RCCEx_PeriphCLKConfig+0xbc8>
    {
      /* Set the source of ADC clock*/
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
   1c7f2:	4b05      	ldr	r3, [pc, #20]	; (1c808 <HAL_RCCEx_PeriphCLKConfig+0xbc4>)
   1c7f4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
   1c7f6:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
   1c7fa:	687b      	ldr	r3, [r7, #4]
   1c7fc:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
   1c800:	4901      	ldr	r1, [pc, #4]	; (1c808 <HAL_RCCEx_PeriphCLKConfig+0xbc4>)
   1c802:	4313      	orrs	r3, r2
   1c804:	658b      	str	r3, [r1, #88]	; 0x58
   1c806:	e003      	b.n	1c810 <HAL_RCCEx_PeriphCLKConfig+0xbcc>
   1c808:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c80c:	7dfb      	ldrb	r3, [r7, #23]
   1c80e:	75bb      	strb	r3, [r7, #22]
    }
  }

  /*------------------------------ USB Configuration -------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
   1c810:	687b      	ldr	r3, [r7, #4]
   1c812:	681b      	ldr	r3, [r3, #0]
   1c814:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
   1c818:	2b00      	cmp	r3, #0
   1c81a:	d02f      	beq.n	1c87c <HAL_RCCEx_PeriphCLKConfig+0xc38>
  {

    switch(PeriphClkInit->UsbClockSelection)
   1c81c:	687b      	ldr	r3, [r7, #4]
   1c81e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
   1c822:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
   1c826:	d00c      	beq.n	1c842 <HAL_RCCEx_PeriphCLKConfig+0xbfe>
   1c828:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
   1c82c:	d015      	beq.n	1c85a <HAL_RCCEx_PeriphCLKConfig+0xc16>
   1c82e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   1c832:	d10f      	bne.n	1c854 <HAL_RCCEx_PeriphCLKConfig+0xc10>
    {
    case RCC_USBCLKSOURCE_PLL:      /* PLL is used as clock source for USB*/
      /* Enable USB Clock output generated form System USB . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
   1c834:	4b71      	ldr	r3, [pc, #452]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c836:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1c838:	4a70      	ldr	r2, [pc, #448]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c83a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1c83e:	62d3      	str	r3, [r2, #44]	; 0x2c

      /* USB clock source configuration done later after clock selection check */
      break;
   1c840:	e00c      	b.n	1c85c <HAL_RCCEx_PeriphCLKConfig+0xc18>

    case RCC_USBCLKSOURCE_PLL3: /* PLL3 is used as clock source for USB*/

      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
   1c842:	687b      	ldr	r3, [r7, #4]
   1c844:	3324      	adds	r3, #36	; 0x24
   1c846:	2101      	movs	r1, #1
   1c848:	4618      	mov	r0, r3
   1c84a:	f000 fc39 	bl	1d0c0 <RCCEx_PLL3_Config>
   1c84e:	4603      	mov	r3, r0
   1c850:	75fb      	strb	r3, [r7, #23]

      /* USB clock source configuration done later after clock selection check */
      break;
   1c852:	e003      	b.n	1c85c <HAL_RCCEx_PeriphCLKConfig+0xc18>
      /* HSI48 oscillator is used as source of USB clock */
      /* USB clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1c854:	2301      	movs	r3, #1
   1c856:	75fb      	strb	r3, [r7, #23]
      break;
   1c858:	e000      	b.n	1c85c <HAL_RCCEx_PeriphCLKConfig+0xc18>
      break;
   1c85a:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c85c:	7dfb      	ldrb	r3, [r7, #23]
   1c85e:	2b00      	cmp	r3, #0
   1c860:	d10a      	bne.n	1c878 <HAL_RCCEx_PeriphCLKConfig+0xc34>
    {
      /* Set the source of USB clock*/
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
   1c862:	4b66      	ldr	r3, [pc, #408]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c864:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1c866:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
   1c86a:	687b      	ldr	r3, [r7, #4]
   1c86c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
   1c870:	4962      	ldr	r1, [pc, #392]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c872:	4313      	orrs	r3, r2
   1c874:	654b      	str	r3, [r1, #84]	; 0x54
   1c876:	e001      	b.n	1c87c <HAL_RCCEx_PeriphCLKConfig+0xc38>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c878:	7dfb      	ldrb	r3, [r7, #23]
   1c87a:	75bb      	strb	r3, [r7, #22]
    }

  }

  /*------------------------------------- SDMMC Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
   1c87c:	687b      	ldr	r3, [r7, #4]
   1c87e:	681b      	ldr	r3, [r3, #0]
   1c880:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
   1c884:	2b00      	cmp	r3, #0
   1c886:	d029      	beq.n	1c8dc <HAL_RCCEx_PeriphCLKConfig+0xc98>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC(PeriphClkInit->SdmmcClockSelection));

    switch(PeriphClkInit->SdmmcClockSelection)
   1c888:	687b      	ldr	r3, [r7, #4]
   1c88a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
   1c88c:	2b00      	cmp	r3, #0
   1c88e:	d003      	beq.n	1c898 <HAL_RCCEx_PeriphCLKConfig+0xc54>
   1c890:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   1c894:	d007      	beq.n	1c8a6 <HAL_RCCEx_PeriphCLKConfig+0xc62>
   1c896:	e00f      	b.n	1c8b8 <HAL_RCCEx_PeriphCLKConfig+0xc74>
    {
    case RCC_SDMMCCLKSOURCE_PLL:      /* PLL is used as clock source for SDMMC*/
      /* Enable SDMMC Clock output generated form System PLL . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
   1c898:	4b58      	ldr	r3, [pc, #352]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c89a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1c89c:	4a57      	ldr	r2, [pc, #348]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c89e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1c8a2:	62d3      	str	r3, [r2, #44]	; 0x2c

      /* SDMMC clock source configuration done later after clock selection check */
      break;
   1c8a4:	e00b      	b.n	1c8be <HAL_RCCEx_PeriphCLKConfig+0xc7a>

    case RCC_SDMMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for SDMMC*/

      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
   1c8a6:	687b      	ldr	r3, [r7, #4]
   1c8a8:	3304      	adds	r3, #4
   1c8aa:	2102      	movs	r1, #2
   1c8ac:	4618      	mov	r0, r3
   1c8ae:	f000 fb55 	bl	1cf5c <RCCEx_PLL2_Config>
   1c8b2:	4603      	mov	r3, r0
   1c8b4:	75fb      	strb	r3, [r7, #23]

      /* SDMMC clock source configuration done later after clock selection check */
      break;
   1c8b6:	e002      	b.n	1c8be <HAL_RCCEx_PeriphCLKConfig+0xc7a>

    default:
      ret = HAL_ERROR;
   1c8b8:	2301      	movs	r3, #1
   1c8ba:	75fb      	strb	r3, [r7, #23]
      break;
   1c8bc:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c8be:	7dfb      	ldrb	r3, [r7, #23]
   1c8c0:	2b00      	cmp	r3, #0
   1c8c2:	d109      	bne.n	1c8d8 <HAL_RCCEx_PeriphCLKConfig+0xc94>
    {
      /* Set the source of SDMMC clock*/
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
   1c8c4:	4b4d      	ldr	r3, [pc, #308]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c8c6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
   1c8c8:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
   1c8cc:	687b      	ldr	r3, [r7, #4]
   1c8ce:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
   1c8d0:	494a      	ldr	r1, [pc, #296]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c8d2:	4313      	orrs	r3, r2
   1c8d4:	64cb      	str	r3, [r1, #76]	; 0x4c
   1c8d6:	e001      	b.n	1c8dc <HAL_RCCEx_PeriphCLKConfig+0xc98>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c8d8:	7dfb      	ldrb	r3, [r7, #23]
   1c8da:	75bb      	strb	r3, [r7, #22]
    }
  }

#if defined(LTDC)
  /*-------------------------------------- LTDC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
   1c8dc:	687b      	ldr	r3, [r7, #4]
   1c8de:	681b      	ldr	r3, [r3, #0]
   1c8e0:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
   1c8e4:	2b00      	cmp	r3, #0
   1c8e6:	d00a      	beq.n	1c8fe <HAL_RCCEx_PeriphCLKConfig+0xcba>
  {
    if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!=HAL_OK)
   1c8e8:	687b      	ldr	r3, [r7, #4]
   1c8ea:	3324      	adds	r3, #36	; 0x24
   1c8ec:	2102      	movs	r1, #2
   1c8ee:	4618      	mov	r0, r3
   1c8f0:	f000 fbe6 	bl	1d0c0 <RCCEx_PLL3_Config>
   1c8f4:	4603      	mov	r3, r0
   1c8f6:	2b00      	cmp	r3, #0
   1c8f8:	d001      	beq.n	1c8fe <HAL_RCCEx_PeriphCLKConfig+0xcba>
    {
      status=HAL_ERROR;
   1c8fa:	2301      	movs	r3, #1
   1c8fc:	75bb      	strb	r3, [r7, #22]
    }
  }
#endif /* LTDC */

  /*------------------------------ RNG Configuration -------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
   1c8fe:	687b      	ldr	r3, [r7, #4]
   1c900:	681b      	ldr	r3, [r3, #0]
   1c902:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
   1c906:	2b00      	cmp	r3, #0
   1c908:	d02f      	beq.n	1c96a <HAL_RCCEx_PeriphCLKConfig+0xd26>
  {

    switch(PeriphClkInit->RngClockSelection)
   1c90a:	687b      	ldr	r3, [r7, #4]
   1c90c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
   1c90e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   1c912:	d00c      	beq.n	1c92e <HAL_RCCEx_PeriphCLKConfig+0xcea>
   1c914:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   1c918:	d802      	bhi.n	1c920 <HAL_RCCEx_PeriphCLKConfig+0xcdc>
   1c91a:	2b00      	cmp	r3, #0
   1c91c:	d011      	beq.n	1c942 <HAL_RCCEx_PeriphCLKConfig+0xcfe>
   1c91e:	e00d      	b.n	1c93c <HAL_RCCEx_PeriphCLKConfig+0xcf8>
   1c920:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   1c924:	d00f      	beq.n	1c946 <HAL_RCCEx_PeriphCLKConfig+0xd02>
   1c926:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
   1c92a:	d00e      	beq.n	1c94a <HAL_RCCEx_PeriphCLKConfig+0xd06>
   1c92c:	e006      	b.n	1c93c <HAL_RCCEx_PeriphCLKConfig+0xcf8>
    {
    case RCC_RNGCLKSOURCE_PLL:     /* PLL is used as clock source for RNG*/
      /* Enable RNG Clock output generated form System RNG . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
   1c92e:	4b33      	ldr	r3, [pc, #204]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c930:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1c932:	4a32      	ldr	r2, [pc, #200]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c934:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1c938:	62d3      	str	r3, [r2, #44]	; 0x2c

      /* RNG clock source configuration done later after clock selection check */
      break;
   1c93a:	e007      	b.n	1c94c <HAL_RCCEx_PeriphCLKConfig+0xd08>
      /* HSI48 oscillator is used as source of RNG clock */
      /* RNG clock source configuration done later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
   1c93c:	2301      	movs	r3, #1
   1c93e:	75fb      	strb	r3, [r7, #23]
      break;
   1c940:	e004      	b.n	1c94c <HAL_RCCEx_PeriphCLKConfig+0xd08>
      break;
   1c942:	bf00      	nop
   1c944:	e002      	b.n	1c94c <HAL_RCCEx_PeriphCLKConfig+0xd08>
      break;
   1c946:	bf00      	nop
   1c948:	e000      	b.n	1c94c <HAL_RCCEx_PeriphCLKConfig+0xd08>
      break;
   1c94a:	bf00      	nop
    }

    if(ret == HAL_OK)
   1c94c:	7dfb      	ldrb	r3, [r7, #23]
   1c94e:	2b00      	cmp	r3, #0
   1c950:	d109      	bne.n	1c966 <HAL_RCCEx_PeriphCLKConfig+0xd22>
    {
      /* Set the source of RNG clock*/
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
   1c952:	4b2a      	ldr	r3, [pc, #168]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c954:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1c956:	f423 7240 	bic.w	r2, r3, #768	; 0x300
   1c95a:	687b      	ldr	r3, [r7, #4]
   1c95c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
   1c95e:	4927      	ldr	r1, [pc, #156]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c960:	4313      	orrs	r3, r2
   1c962:	654b      	str	r3, [r1, #84]	; 0x54
   1c964:	e001      	b.n	1c96a <HAL_RCCEx_PeriphCLKConfig+0xd26>
    }
    else
    {
      /* set overall return value */
      status = ret;
   1c966:	7dfb      	ldrb	r3, [r7, #23]
   1c968:	75bb      	strb	r3, [r7, #22]
    }

  }

  /*------------------------------ SWPMI1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
   1c96a:	687b      	ldr	r3, [r7, #4]
   1c96c:	681b      	ldr	r3, [r3, #0]
   1c96e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
   1c972:	2b00      	cmp	r3, #0
   1c974:	d008      	beq.n	1c988 <HAL_RCCEx_PeriphCLKConfig+0xd44>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SWPMI1CLKSOURCE(PeriphClkInit->Swpmi1ClockSelection));

    /* Configure the SWPMI1 interface clock source */
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
   1c976:	4b21      	ldr	r3, [pc, #132]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c978:	6d1b      	ldr	r3, [r3, #80]	; 0x50
   1c97a:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
   1c97e:	687b      	ldr	r3, [r7, #4]
   1c980:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   1c982:	491e      	ldr	r1, [pc, #120]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c984:	4313      	orrs	r3, r2
   1c986:	650b      	str	r3, [r1, #80]	; 0x50
    /* Configure the HRTIM1 clock source */
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
  }
#endif  /*HRTIM*/
  /*------------------------------ DFSDM1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
   1c988:	687b      	ldr	r3, [r7, #4]
   1c98a:	681b      	ldr	r3, [r3, #0]
   1c98c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
   1c990:	2b00      	cmp	r3, #0
   1c992:	d008      	beq.n	1c9a6 <HAL_RCCEx_PeriphCLKConfig+0xd62>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));

    /* Configure the DFSDM1 interface clock source */
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
   1c994:	4b19      	ldr	r3, [pc, #100]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c996:	6d1b      	ldr	r3, [r3, #80]	; 0x50
   1c998:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
   1c99c:	687b      	ldr	r3, [r7, #4]
   1c99e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   1c9a0:	4916      	ldr	r1, [pc, #88]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c9a2:	4313      	orrs	r3, r2
   1c9a4:	650b      	str	r3, [r1, #80]	; 0x50
    __HAL_RCC_DFSDM2_CONFIG(PeriphClkInit->Dfsdm2ClockSelection);
  }
#endif  /* DFSDM2 */

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
   1c9a6:	687b      	ldr	r3, [r7, #4]
   1c9a8:	681b      	ldr	r3, [r3, #0]
   1c9aa:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
   1c9ae:	2b00      	cmp	r3, #0
   1c9b0:	d00d      	beq.n	1c9ce <HAL_RCCEx_PeriphCLKConfig+0xd8a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
   1c9b2:	4b12      	ldr	r3, [pc, #72]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c9b4:	691b      	ldr	r3, [r3, #16]
   1c9b6:	4a11      	ldr	r2, [pc, #68]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c9b8:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
   1c9bc:	6113      	str	r3, [r2, #16]
   1c9be:	4b0f      	ldr	r3, [pc, #60]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c9c0:	691a      	ldr	r2, [r3, #16]
   1c9c2:	687b      	ldr	r3, [r7, #4]
   1c9c4:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
   1c9c8:	490c      	ldr	r1, [pc, #48]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c9ca:	4313      	orrs	r3, r2
   1c9cc:	610b      	str	r3, [r1, #16]
  }

  /*------------------------------------ CKPER configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
   1c9ce:	687b      	ldr	r3, [r7, #4]
   1c9d0:	681b      	ldr	r3, [r3, #0]
   1c9d2:	2b00      	cmp	r3, #0
   1c9d4:	da08      	bge.n	1c9e8 <HAL_RCCEx_PeriphCLKConfig+0xda4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLKPSOURCE(PeriphClkInit->CkperClockSelection));

    /* Configure the CKPER clock source */
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
   1c9d6:	4b09      	ldr	r3, [pc, #36]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c9d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
   1c9da:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
   1c9de:	687b      	ldr	r3, [r7, #4]
   1c9e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
   1c9e2:	4906      	ldr	r1, [pc, #24]	; (1c9fc <HAL_RCCEx_PeriphCLKConfig+0xdb8>)
   1c9e4:	4313      	orrs	r3, r2
   1c9e6:	64cb      	str	r3, [r1, #76]	; 0x4c
  }

  if (status == HAL_OK)
   1c9e8:	7dbb      	ldrb	r3, [r7, #22]
   1c9ea:	2b00      	cmp	r3, #0
   1c9ec:	d101      	bne.n	1c9f2 <HAL_RCCEx_PeriphCLKConfig+0xdae>
  {
    return HAL_OK;
   1c9ee:	2300      	movs	r3, #0
   1c9f0:	e000      	b.n	1c9f4 <HAL_RCCEx_PeriphCLKConfig+0xdb0>
  }
  return HAL_ERROR;
   1c9f2:	2301      	movs	r3, #1
}
   1c9f4:	4618      	mov	r0, r3
   1c9f6:	3718      	adds	r7, #24
   1c9f8:	46bd      	mov	sp, r7
   1c9fa:	bd80      	pop	{r7, pc}
   1c9fc:	58024400 	.word	0x58024400

0001ca00 <HAL_RCCEx_GetD3PCLK1Freq>:
  * @note   Each time D3PCLK1 changes, this function must be called to update the
  *         right D3PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval D3PCLK1 frequency
  */
uint32_t HAL_RCCEx_GetD3PCLK1Freq(void)
{
   1ca00:	b580      	push	{r7, lr}
   1ca02:	af00      	add	r7, sp, #0
#if defined(RCC_D3CFGR_D3PPRE)
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE)>> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
   1ca04:	f7ff f8c2 	bl	1bb8c <HAL_RCC_GetHCLKFreq>
   1ca08:	4601      	mov	r1, r0
   1ca0a:	4b06      	ldr	r3, [pc, #24]	; (1ca24 <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
   1ca0c:	6a1b      	ldr	r3, [r3, #32]
   1ca0e:	091b      	lsrs	r3, r3, #4
   1ca10:	f003 0307 	and.w	r3, r3, #7
   1ca14:	4a04      	ldr	r2, [pc, #16]	; (1ca28 <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
   1ca16:	5cd3      	ldrb	r3, [r2, r3]
   1ca18:	f003 031f 	and.w	r3, r3, #31
   1ca1c:	fa21 f303 	lsr.w	r3, r1, r3
#else
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE)>> RCC_SRDCFGR_SRDPPRE_Pos] & 0x1FU));
#endif
}
   1ca20:	4618      	mov	r0, r3
   1ca22:	bd80      	pop	{r7, pc}
   1ca24:	58024400 	.word	0x58024400
   1ca28:	00023e94 	.word	0x00023e94

0001ca2c <HAL_RCCEx_GetPLL2ClockFreq>:
  *         right PLL2CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL2_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL2ClockFreq(PLL2_ClocksTypeDef* PLL2_Clocks)
{
   1ca2c:	b480      	push	{r7}
   1ca2e:	b089      	sub	sp, #36	; 0x24
   1ca30:	af00      	add	r7, sp, #0
   1ca32:	6078      	str	r0, [r7, #4]
  float_t fracn2, pll2vco;

  /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL2M) * PLL2N
     PLL2xCLK = PLL2_VCO / PLL2x
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
   1ca34:	4b9d      	ldr	r3, [pc, #628]	; (1ccac <HAL_RCCEx_GetPLL2ClockFreq+0x280>)
   1ca36:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1ca38:	f003 0303 	and.w	r3, r3, #3
   1ca3c:	61bb      	str	r3, [r7, #24]
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2)>> 12);
   1ca3e:	4b9b      	ldr	r3, [pc, #620]	; (1ccac <HAL_RCCEx_GetPLL2ClockFreq+0x280>)
   1ca40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1ca42:	0b1b      	lsrs	r3, r3, #12
   1ca44:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1ca48:	617b      	str	r3, [r7, #20]
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
   1ca4a:	4b98      	ldr	r3, [pc, #608]	; (1ccac <HAL_RCCEx_GetPLL2ClockFreq+0x280>)
   1ca4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1ca4e:	091b      	lsrs	r3, r3, #4
   1ca50:	f003 0301 	and.w	r3, r3, #1
   1ca54:	613b      	str	r3, [r7, #16]
  fracn2 =(float_t)(uint32_t)(pll2fracen* ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2)>> 3));
   1ca56:	4b95      	ldr	r3, [pc, #596]	; (1ccac <HAL_RCCEx_GetPLL2ClockFreq+0x280>)
   1ca58:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
   1ca5a:	08db      	lsrs	r3, r3, #3
   1ca5c:	f3c3 030c 	ubfx	r3, r3, #0, #13
   1ca60:	693a      	ldr	r2, [r7, #16]
   1ca62:	fb02 f303 	mul.w	r3, r2, r3
   1ca66:	ee07 3a90 	vmov	s15, r3
   1ca6a:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1ca6e:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll2m != 0U)
   1ca72:	697b      	ldr	r3, [r7, #20]
   1ca74:	2b00      	cmp	r3, #0
   1ca76:	f000 810a 	beq.w	1cc8e <HAL_RCCEx_GetPLL2ClockFreq+0x262>
  {
    switch (pllsource)
   1ca7a:	69bb      	ldr	r3, [r7, #24]
   1ca7c:	2b01      	cmp	r3, #1
   1ca7e:	d05a      	beq.n	1cb36 <HAL_RCCEx_GetPLL2ClockFreq+0x10a>
   1ca80:	2b01      	cmp	r3, #1
   1ca82:	d302      	bcc.n	1ca8a <HAL_RCCEx_GetPLL2ClockFreq+0x5e>
   1ca84:	2b02      	cmp	r3, #2
   1ca86:	d078      	beq.n	1cb7a <HAL_RCCEx_GetPLL2ClockFreq+0x14e>
   1ca88:	e099      	b.n	1cbbe <HAL_RCCEx_GetPLL2ClockFreq+0x192>
    {

    case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
   1ca8a:	4b88      	ldr	r3, [pc, #544]	; (1ccac <HAL_RCCEx_GetPLL2ClockFreq+0x280>)
   1ca8c:	681b      	ldr	r3, [r3, #0]
   1ca8e:	f003 0320 	and.w	r3, r3, #32
   1ca92:	2b00      	cmp	r3, #0
   1ca94:	d02d      	beq.n	1caf2 <HAL_RCCEx_GetPLL2ClockFreq+0xc6>
      {
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
   1ca96:	4b85      	ldr	r3, [pc, #532]	; (1ccac <HAL_RCCEx_GetPLL2ClockFreq+0x280>)
   1ca98:	681b      	ldr	r3, [r3, #0]
   1ca9a:	08db      	lsrs	r3, r3, #3
   1ca9c:	f003 0303 	and.w	r3, r3, #3
   1caa0:	4a83      	ldr	r2, [pc, #524]	; (1ccb0 <HAL_RCCEx_GetPLL2ClockFreq+0x284>)
   1caa2:	fa22 f303 	lsr.w	r3, r2, r3
   1caa6:	60bb      	str	r3, [r7, #8]
        pll2vco = ( (float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
   1caa8:	68bb      	ldr	r3, [r7, #8]
   1caaa:	ee07 3a90 	vmov	s15, r3
   1caae:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1cab2:	697b      	ldr	r3, [r7, #20]
   1cab4:	ee07 3a90 	vmov	s15, r3
   1cab8:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1cabc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1cac0:	4b7a      	ldr	r3, [pc, #488]	; (1ccac <HAL_RCCEx_GetPLL2ClockFreq+0x280>)
   1cac2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   1cac4:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1cac8:	ee07 3a90 	vmov	s15, r3
   1cacc:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1cad0:	ed97 6a03 	vldr	s12, [r7, #12]
   1cad4:	eddf 5a77 	vldr	s11, [pc, #476]	; 1ccb4 <HAL_RCCEx_GetPLL2ClockFreq+0x288>
   1cad8:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1cadc:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1cae0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1cae4:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1cae8:	ee67 7a27 	vmul.f32	s15, s14, s15
   1caec:	edc7 7a07 	vstr	s15, [r7, #28]
      }
      else
      {
        pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
      }
      break;
   1caf0:	e087      	b.n	1cc02 <HAL_RCCEx_GetPLL2ClockFreq+0x1d6>
        pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
   1caf2:	697b      	ldr	r3, [r7, #20]
   1caf4:	ee07 3a90 	vmov	s15, r3
   1caf8:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1cafc:	eddf 6a6e 	vldr	s13, [pc, #440]	; 1ccb8 <HAL_RCCEx_GetPLL2ClockFreq+0x28c>
   1cb00:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1cb04:	4b69      	ldr	r3, [pc, #420]	; (1ccac <HAL_RCCEx_GetPLL2ClockFreq+0x280>)
   1cb06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   1cb08:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1cb0c:	ee07 3a90 	vmov	s15, r3
   1cb10:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1cb14:	ed97 6a03 	vldr	s12, [r7, #12]
   1cb18:	eddf 5a66 	vldr	s11, [pc, #408]	; 1ccb4 <HAL_RCCEx_GetPLL2ClockFreq+0x288>
   1cb1c:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1cb20:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1cb24:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1cb28:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1cb2c:	ee67 7a27 	vmul.f32	s15, s14, s15
   1cb30:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
   1cb34:	e065      	b.n	1cc02 <HAL_RCCEx_GetPLL2ClockFreq+0x1d6>

    case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
      pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
   1cb36:	697b      	ldr	r3, [r7, #20]
   1cb38:	ee07 3a90 	vmov	s15, r3
   1cb3c:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1cb40:	eddf 6a5e 	vldr	s13, [pc, #376]	; 1ccbc <HAL_RCCEx_GetPLL2ClockFreq+0x290>
   1cb44:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1cb48:	4b58      	ldr	r3, [pc, #352]	; (1ccac <HAL_RCCEx_GetPLL2ClockFreq+0x280>)
   1cb4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   1cb4c:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1cb50:	ee07 3a90 	vmov	s15, r3
   1cb54:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1cb58:	ed97 6a03 	vldr	s12, [r7, #12]
   1cb5c:	eddf 5a55 	vldr	s11, [pc, #340]	; 1ccb4 <HAL_RCCEx_GetPLL2ClockFreq+0x288>
   1cb60:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1cb64:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1cb68:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1cb6c:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1cb70:	ee67 7a27 	vmul.f32	s15, s14, s15
   1cb74:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
   1cb78:	e043      	b.n	1cc02 <HAL_RCCEx_GetPLL2ClockFreq+0x1d6>

    case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
      pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
   1cb7a:	697b      	ldr	r3, [r7, #20]
   1cb7c:	ee07 3a90 	vmov	s15, r3
   1cb80:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1cb84:	eddf 6a4e 	vldr	s13, [pc, #312]	; 1ccc0 <HAL_RCCEx_GetPLL2ClockFreq+0x294>
   1cb88:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1cb8c:	4b47      	ldr	r3, [pc, #284]	; (1ccac <HAL_RCCEx_GetPLL2ClockFreq+0x280>)
   1cb8e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   1cb90:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1cb94:	ee07 3a90 	vmov	s15, r3
   1cb98:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1cb9c:	ed97 6a03 	vldr	s12, [r7, #12]
   1cba0:	eddf 5a44 	vldr	s11, [pc, #272]	; 1ccb4 <HAL_RCCEx_GetPLL2ClockFreq+0x288>
   1cba4:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1cba8:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1cbac:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1cbb0:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1cbb4:	ee67 7a27 	vmul.f32	s15, s14, s15
   1cbb8:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
   1cbbc:	e021      	b.n	1cc02 <HAL_RCCEx_GetPLL2ClockFreq+0x1d6>

    default:
      pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
   1cbbe:	697b      	ldr	r3, [r7, #20]
   1cbc0:	ee07 3a90 	vmov	s15, r3
   1cbc4:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1cbc8:	eddf 6a3c 	vldr	s13, [pc, #240]	; 1ccbc <HAL_RCCEx_GetPLL2ClockFreq+0x290>
   1cbcc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1cbd0:	4b36      	ldr	r3, [pc, #216]	; (1ccac <HAL_RCCEx_GetPLL2ClockFreq+0x280>)
   1cbd2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   1cbd4:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1cbd8:	ee07 3a90 	vmov	s15, r3
   1cbdc:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1cbe0:	ed97 6a03 	vldr	s12, [r7, #12]
   1cbe4:	eddf 5a33 	vldr	s11, [pc, #204]	; 1ccb4 <HAL_RCCEx_GetPLL2ClockFreq+0x288>
   1cbe8:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1cbec:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1cbf0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1cbf4:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1cbf8:	ee67 7a27 	vmul.f32	s15, s14, s15
   1cbfc:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
   1cc00:	bf00      	nop
    }
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco/((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >>9)  + (float_t)1 )) ;
   1cc02:	4b2a      	ldr	r3, [pc, #168]	; (1ccac <HAL_RCCEx_GetPLL2ClockFreq+0x280>)
   1cc04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   1cc06:	0a5b      	lsrs	r3, r3, #9
   1cc08:	f003 037f 	and.w	r3, r3, #127	; 0x7f
   1cc0c:	ee07 3a90 	vmov	s15, r3
   1cc10:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1cc14:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
   1cc18:	ee37 7a87 	vadd.f32	s14, s15, s14
   1cc1c:	edd7 6a07 	vldr	s13, [r7, #28]
   1cc20:	eec6 7a87 	vdiv.f32	s15, s13, s14
   1cc24:	eefc 7ae7 	vcvt.u32.f32	s15, s15
   1cc28:	ee17 2a90 	vmov	r2, s15
   1cc2c:	687b      	ldr	r3, [r7, #4]
   1cc2e:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco/((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >>16) + (float_t)1 )) ;
   1cc30:	4b1e      	ldr	r3, [pc, #120]	; (1ccac <HAL_RCCEx_GetPLL2ClockFreq+0x280>)
   1cc32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   1cc34:	0c1b      	lsrs	r3, r3, #16
   1cc36:	f003 037f 	and.w	r3, r3, #127	; 0x7f
   1cc3a:	ee07 3a90 	vmov	s15, r3
   1cc3e:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1cc42:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
   1cc46:	ee37 7a87 	vadd.f32	s14, s15, s14
   1cc4a:	edd7 6a07 	vldr	s13, [r7, #28]
   1cc4e:	eec6 7a87 	vdiv.f32	s15, s13, s14
   1cc52:	eefc 7ae7 	vcvt.u32.f32	s15, s15
   1cc56:	ee17 2a90 	vmov	r2, s15
   1cc5a:	687b      	ldr	r3, [r7, #4]
   1cc5c:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco/((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >>24) + (float_t)1 )) ;
   1cc5e:	4b13      	ldr	r3, [pc, #76]	; (1ccac <HAL_RCCEx_GetPLL2ClockFreq+0x280>)
   1cc60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   1cc62:	0e1b      	lsrs	r3, r3, #24
   1cc64:	f003 037f 	and.w	r3, r3, #127	; 0x7f
   1cc68:	ee07 3a90 	vmov	s15, r3
   1cc6c:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1cc70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
   1cc74:	ee37 7a87 	vadd.f32	s14, s15, s14
   1cc78:	edd7 6a07 	vldr	s13, [r7, #28]
   1cc7c:	eec6 7a87 	vdiv.f32	s15, s13, s14
   1cc80:	eefc 7ae7 	vcvt.u32.f32	s15, s15
   1cc84:	ee17 2a90 	vmov	r2, s15
   1cc88:	687b      	ldr	r3, [r7, #4]
   1cc8a:	609a      	str	r2, [r3, #8]
  {
    PLL2_Clocks->PLL2_P_Frequency = 0U;
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
    PLL2_Clocks->PLL2_R_Frequency = 0U;
  }
}
   1cc8c:	e008      	b.n	1cca0 <HAL_RCCEx_GetPLL2ClockFreq+0x274>
    PLL2_Clocks->PLL2_P_Frequency = 0U;
   1cc8e:	687b      	ldr	r3, [r7, #4]
   1cc90:	2200      	movs	r2, #0
   1cc92:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
   1cc94:	687b      	ldr	r3, [r7, #4]
   1cc96:	2200      	movs	r2, #0
   1cc98:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = 0U;
   1cc9a:	687b      	ldr	r3, [r7, #4]
   1cc9c:	2200      	movs	r2, #0
   1cc9e:	609a      	str	r2, [r3, #8]
}
   1cca0:	bf00      	nop
   1cca2:	3724      	adds	r7, #36	; 0x24
   1cca4:	46bd      	mov	sp, r7
   1cca6:	f85d 7b04 	ldr.w	r7, [sp], #4
   1ccaa:	4770      	bx	lr
   1ccac:	58024400 	.word	0x58024400
   1ccb0:	03d09000 	.word	0x03d09000
   1ccb4:	46000000 	.word	0x46000000
   1ccb8:	4c742400 	.word	0x4c742400
   1ccbc:	4a742400 	.word	0x4a742400
   1ccc0:	4af42400 	.word	0x4af42400

0001ccc4 <HAL_RCCEx_GetPLL3ClockFreq>:
  *         right PLL3CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL3_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL3ClockFreq(PLL3_ClocksTypeDef* PLL3_Clocks)
{
   1ccc4:	b480      	push	{r7}
   1ccc6:	b089      	sub	sp, #36	; 0x24
   1ccc8:	af00      	add	r7, sp, #0
   1ccca:	6078      	str	r0, [r7, #4]
  float_t fracn3, pll3vco;

  /* PLL3_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL3M) * PLL3N
     PLL3xCLK = PLL3_VCO / PLLxR
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
   1cccc:	4b9d      	ldr	r3, [pc, #628]	; (1cf44 <HAL_RCCEx_GetPLL3ClockFreq+0x280>)
   1ccce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1ccd0:	f003 0303 	and.w	r3, r3, #3
   1ccd4:	61bb      	str	r3, [r7, #24]
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3)>> 20)  ;
   1ccd6:	4b9b      	ldr	r3, [pc, #620]	; (1cf44 <HAL_RCCEx_GetPLL3ClockFreq+0x280>)
   1ccd8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1ccda:	0d1b      	lsrs	r3, r3, #20
   1ccdc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1cce0:	617b      	str	r3, [r7, #20]
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
   1cce2:	4b98      	ldr	r3, [pc, #608]	; (1cf44 <HAL_RCCEx_GetPLL3ClockFreq+0x280>)
   1cce4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1cce6:	0a1b      	lsrs	r3, r3, #8
   1cce8:	f003 0301 	and.w	r3, r3, #1
   1ccec:	613b      	str	r3, [r7, #16]
  fracn3 = (float_t)(uint32_t)(pll3fracen* ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3)>> 3));
   1ccee:	4b95      	ldr	r3, [pc, #596]	; (1cf44 <HAL_RCCEx_GetPLL3ClockFreq+0x280>)
   1ccf0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
   1ccf2:	08db      	lsrs	r3, r3, #3
   1ccf4:	f3c3 030c 	ubfx	r3, r3, #0, #13
   1ccf8:	693a      	ldr	r2, [r7, #16]
   1ccfa:	fb02 f303 	mul.w	r3, r2, r3
   1ccfe:	ee07 3a90 	vmov	s15, r3
   1cd02:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1cd06:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll3m != 0U)
   1cd0a:	697b      	ldr	r3, [r7, #20]
   1cd0c:	2b00      	cmp	r3, #0
   1cd0e:	f000 810a 	beq.w	1cf26 <HAL_RCCEx_GetPLL3ClockFreq+0x262>
  {
    switch (pllsource)
   1cd12:	69bb      	ldr	r3, [r7, #24]
   1cd14:	2b01      	cmp	r3, #1
   1cd16:	d05a      	beq.n	1cdce <HAL_RCCEx_GetPLL3ClockFreq+0x10a>
   1cd18:	2b01      	cmp	r3, #1
   1cd1a:	d302      	bcc.n	1cd22 <HAL_RCCEx_GetPLL3ClockFreq+0x5e>
   1cd1c:	2b02      	cmp	r3, #2
   1cd1e:	d078      	beq.n	1ce12 <HAL_RCCEx_GetPLL3ClockFreq+0x14e>
   1cd20:	e099      	b.n	1ce56 <HAL_RCCEx_GetPLL3ClockFreq+0x192>
    {
    case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
   1cd22:	4b88      	ldr	r3, [pc, #544]	; (1cf44 <HAL_RCCEx_GetPLL3ClockFreq+0x280>)
   1cd24:	681b      	ldr	r3, [r3, #0]
   1cd26:	f003 0320 	and.w	r3, r3, #32
   1cd2a:	2b00      	cmp	r3, #0
   1cd2c:	d02d      	beq.n	1cd8a <HAL_RCCEx_GetPLL3ClockFreq+0xc6>
      {
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
   1cd2e:	4b85      	ldr	r3, [pc, #532]	; (1cf44 <HAL_RCCEx_GetPLL3ClockFreq+0x280>)
   1cd30:	681b      	ldr	r3, [r3, #0]
   1cd32:	08db      	lsrs	r3, r3, #3
   1cd34:	f003 0303 	and.w	r3, r3, #3
   1cd38:	4a83      	ldr	r2, [pc, #524]	; (1cf48 <HAL_RCCEx_GetPLL3ClockFreq+0x284>)
   1cd3a:	fa22 f303 	lsr.w	r3, r2, r3
   1cd3e:	60bb      	str	r3, [r7, #8]
        pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
   1cd40:	68bb      	ldr	r3, [r7, #8]
   1cd42:	ee07 3a90 	vmov	s15, r3
   1cd46:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1cd4a:	697b      	ldr	r3, [r7, #20]
   1cd4c:	ee07 3a90 	vmov	s15, r3
   1cd50:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1cd54:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1cd58:	4b7a      	ldr	r3, [pc, #488]	; (1cf44 <HAL_RCCEx_GetPLL3ClockFreq+0x280>)
   1cd5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
   1cd5c:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1cd60:	ee07 3a90 	vmov	s15, r3
   1cd64:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1cd68:	ed97 6a03 	vldr	s12, [r7, #12]
   1cd6c:	eddf 5a77 	vldr	s11, [pc, #476]	; 1cf4c <HAL_RCCEx_GetPLL3ClockFreq+0x288>
   1cd70:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1cd74:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1cd78:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1cd7c:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1cd80:	ee67 7a27 	vmul.f32	s15, s14, s15
   1cd84:	edc7 7a07 	vstr	s15, [r7, #28]
      }
      else
      {
        pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
      }
      break;
   1cd88:	e087      	b.n	1ce9a <HAL_RCCEx_GetPLL3ClockFreq+0x1d6>
        pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
   1cd8a:	697b      	ldr	r3, [r7, #20]
   1cd8c:	ee07 3a90 	vmov	s15, r3
   1cd90:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1cd94:	eddf 6a6e 	vldr	s13, [pc, #440]	; 1cf50 <HAL_RCCEx_GetPLL3ClockFreq+0x28c>
   1cd98:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1cd9c:	4b69      	ldr	r3, [pc, #420]	; (1cf44 <HAL_RCCEx_GetPLL3ClockFreq+0x280>)
   1cd9e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
   1cda0:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1cda4:	ee07 3a90 	vmov	s15, r3
   1cda8:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1cdac:	ed97 6a03 	vldr	s12, [r7, #12]
   1cdb0:	eddf 5a66 	vldr	s11, [pc, #408]	; 1cf4c <HAL_RCCEx_GetPLL3ClockFreq+0x288>
   1cdb4:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1cdb8:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1cdbc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1cdc0:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1cdc4:	ee67 7a27 	vmul.f32	s15, s14, s15
   1cdc8:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
   1cdcc:	e065      	b.n	1ce9a <HAL_RCCEx_GetPLL3ClockFreq+0x1d6>
    case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
      pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
   1cdce:	697b      	ldr	r3, [r7, #20]
   1cdd0:	ee07 3a90 	vmov	s15, r3
   1cdd4:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1cdd8:	eddf 6a5e 	vldr	s13, [pc, #376]	; 1cf54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>
   1cddc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1cde0:	4b58      	ldr	r3, [pc, #352]	; (1cf44 <HAL_RCCEx_GetPLL3ClockFreq+0x280>)
   1cde2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
   1cde4:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1cde8:	ee07 3a90 	vmov	s15, r3
   1cdec:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1cdf0:	ed97 6a03 	vldr	s12, [r7, #12]
   1cdf4:	eddf 5a55 	vldr	s11, [pc, #340]	; 1cf4c <HAL_RCCEx_GetPLL3ClockFreq+0x288>
   1cdf8:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1cdfc:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1ce00:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1ce04:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1ce08:	ee67 7a27 	vmul.f32	s15, s14, s15
   1ce0c:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
   1ce10:	e043      	b.n	1ce9a <HAL_RCCEx_GetPLL3ClockFreq+0x1d6>

    case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
      pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
   1ce12:	697b      	ldr	r3, [r7, #20]
   1ce14:	ee07 3a90 	vmov	s15, r3
   1ce18:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1ce1c:	eddf 6a4e 	vldr	s13, [pc, #312]	; 1cf58 <HAL_RCCEx_GetPLL3ClockFreq+0x294>
   1ce20:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1ce24:	4b47      	ldr	r3, [pc, #284]	; (1cf44 <HAL_RCCEx_GetPLL3ClockFreq+0x280>)
   1ce26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
   1ce28:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1ce2c:	ee07 3a90 	vmov	s15, r3
   1ce30:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1ce34:	ed97 6a03 	vldr	s12, [r7, #12]
   1ce38:	eddf 5a44 	vldr	s11, [pc, #272]	; 1cf4c <HAL_RCCEx_GetPLL3ClockFreq+0x288>
   1ce3c:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1ce40:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1ce44:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1ce48:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1ce4c:	ee67 7a27 	vmul.f32	s15, s14, s15
   1ce50:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
   1ce54:	e021      	b.n	1ce9a <HAL_RCCEx_GetPLL3ClockFreq+0x1d6>

    default:
      pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
   1ce56:	697b      	ldr	r3, [r7, #20]
   1ce58:	ee07 3a90 	vmov	s15, r3
   1ce5c:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1ce60:	eddf 6a3c 	vldr	s13, [pc, #240]	; 1cf54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>
   1ce64:	ee86 7aa7 	vdiv.f32	s14, s13, s15
   1ce68:	4b36      	ldr	r3, [pc, #216]	; (1cf44 <HAL_RCCEx_GetPLL3ClockFreq+0x280>)
   1ce6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
   1ce6c:	f3c3 0308 	ubfx	r3, r3, #0, #9
   1ce70:	ee07 3a90 	vmov	s15, r3
   1ce74:	eef8 6a67 	vcvt.f32.u32	s13, s15
   1ce78:	ed97 6a03 	vldr	s12, [r7, #12]
   1ce7c:	eddf 5a33 	vldr	s11, [pc, #204]	; 1cf4c <HAL_RCCEx_GetPLL3ClockFreq+0x288>
   1ce80:	eec6 7a25 	vdiv.f32	s15, s12, s11
   1ce84:	ee76 7aa7 	vadd.f32	s15, s13, s15
   1ce88:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
   1ce8c:	ee77 7aa6 	vadd.f32	s15, s15, s13
   1ce90:	ee67 7a27 	vmul.f32	s15, s14, s15
   1ce94:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
   1ce98:	bf00      	nop
    }
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco/((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >>9)  + (float_t)1 )) ;
   1ce9a:	4b2a      	ldr	r3, [pc, #168]	; (1cf44 <HAL_RCCEx_GetPLL3ClockFreq+0x280>)
   1ce9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
   1ce9e:	0a5b      	lsrs	r3, r3, #9
   1cea0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
   1cea4:	ee07 3a90 	vmov	s15, r3
   1cea8:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1ceac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
   1ceb0:	ee37 7a87 	vadd.f32	s14, s15, s14
   1ceb4:	edd7 6a07 	vldr	s13, [r7, #28]
   1ceb8:	eec6 7a87 	vdiv.f32	s15, s13, s14
   1cebc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
   1cec0:	ee17 2a90 	vmov	r2, s15
   1cec4:	687b      	ldr	r3, [r7, #4]
   1cec6:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco/((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >>16) + (float_t)1 )) ;
   1cec8:	4b1e      	ldr	r3, [pc, #120]	; (1cf44 <HAL_RCCEx_GetPLL3ClockFreq+0x280>)
   1ceca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
   1cecc:	0c1b      	lsrs	r3, r3, #16
   1cece:	f003 037f 	and.w	r3, r3, #127	; 0x7f
   1ced2:	ee07 3a90 	vmov	s15, r3
   1ced6:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1ceda:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
   1cede:	ee37 7a87 	vadd.f32	s14, s15, s14
   1cee2:	edd7 6a07 	vldr	s13, [r7, #28]
   1cee6:	eec6 7a87 	vdiv.f32	s15, s13, s14
   1ceea:	eefc 7ae7 	vcvt.u32.f32	s15, s15
   1ceee:	ee17 2a90 	vmov	r2, s15
   1cef2:	687b      	ldr	r3, [r7, #4]
   1cef4:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco/((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >>24) + (float_t)1 )) ;
   1cef6:	4b13      	ldr	r3, [pc, #76]	; (1cf44 <HAL_RCCEx_GetPLL3ClockFreq+0x280>)
   1cef8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
   1cefa:	0e1b      	lsrs	r3, r3, #24
   1cefc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
   1cf00:	ee07 3a90 	vmov	s15, r3
   1cf04:	eef8 7a67 	vcvt.f32.u32	s15, s15
   1cf08:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
   1cf0c:	ee37 7a87 	vadd.f32	s14, s15, s14
   1cf10:	edd7 6a07 	vldr	s13, [r7, #28]
   1cf14:	eec6 7a87 	vdiv.f32	s15, s13, s14
   1cf18:	eefc 7ae7 	vcvt.u32.f32	s15, s15
   1cf1c:	ee17 2a90 	vmov	r2, s15
   1cf20:	687b      	ldr	r3, [r7, #4]
   1cf22:	609a      	str	r2, [r3, #8]
    PLL3_Clocks->PLL3_P_Frequency = 0U;
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
    PLL3_Clocks->PLL3_R_Frequency = 0U;
  }

}
   1cf24:	e008      	b.n	1cf38 <HAL_RCCEx_GetPLL3ClockFreq+0x274>
    PLL3_Clocks->PLL3_P_Frequency = 0U;
   1cf26:	687b      	ldr	r3, [r7, #4]
   1cf28:	2200      	movs	r2, #0
   1cf2a:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
   1cf2c:	687b      	ldr	r3, [r7, #4]
   1cf2e:	2200      	movs	r2, #0
   1cf30:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = 0U;
   1cf32:	687b      	ldr	r3, [r7, #4]
   1cf34:	2200      	movs	r2, #0
   1cf36:	609a      	str	r2, [r3, #8]
}
   1cf38:	bf00      	nop
   1cf3a:	3724      	adds	r7, #36	; 0x24
   1cf3c:	46bd      	mov	sp, r7
   1cf3e:	f85d 7b04 	ldr.w	r7, [sp], #4
   1cf42:	4770      	bx	lr
   1cf44:	58024400 	.word	0x58024400
   1cf48:	03d09000 	.word	0x03d09000
   1cf4c:	46000000 	.word	0x46000000
   1cf50:	4c742400 	.word	0x4c742400
   1cf54:	4a742400 	.word	0x4a742400
   1cf58:	4af42400 	.word	0x4af42400

0001cf5c <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
   1cf5c:	b580      	push	{r7, lr}
   1cf5e:	b084      	sub	sp, #16
   1cf60:	af00      	add	r7, sp, #0
   1cf62:	6078      	str	r0, [r7, #4]
   1cf64:	6039      	str	r1, [r7, #0]

  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
   1cf66:	2300      	movs	r3, #0
   1cf68:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
   1cf6a:	4b53      	ldr	r3, [pc, #332]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1cf6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1cf6e:	f003 0303 	and.w	r3, r3, #3
   1cf72:	2b03      	cmp	r3, #3
   1cf74:	d101      	bne.n	1cf7a <RCCEx_PLL2_Config+0x1e>
  {
    return HAL_ERROR;
   1cf76:	2301      	movs	r3, #1
   1cf78:	e099      	b.n	1d0ae <RCCEx_PLL2_Config+0x152>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
   1cf7a:	4b4f      	ldr	r3, [pc, #316]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1cf7c:	681b      	ldr	r3, [r3, #0]
   1cf7e:	4a4e      	ldr	r2, [pc, #312]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1cf80:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
   1cf84:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
   1cf86:	f7fc fff5 	bl	19f74 <HAL_GetTick>
   1cf8a:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
   1cf8c:	e008      	b.n	1cfa0 <RCCEx_PLL2_Config+0x44>
    {
      if( (HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
   1cf8e:	f7fc fff1 	bl	19f74 <HAL_GetTick>
   1cf92:	4602      	mov	r2, r0
   1cf94:	68bb      	ldr	r3, [r7, #8]
   1cf96:	1ad3      	subs	r3, r2, r3
   1cf98:	2b02      	cmp	r3, #2
   1cf9a:	d901      	bls.n	1cfa0 <RCCEx_PLL2_Config+0x44>
      {
        return HAL_TIMEOUT;
   1cf9c:	2303      	movs	r3, #3
   1cf9e:	e086      	b.n	1d0ae <RCCEx_PLL2_Config+0x152>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
   1cfa0:	4b45      	ldr	r3, [pc, #276]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1cfa2:	681b      	ldr	r3, [r3, #0]
   1cfa4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
   1cfa8:	2b00      	cmp	r3, #0
   1cfaa:	d1f0      	bne.n	1cf8e <RCCEx_PLL2_Config+0x32>
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
   1cfac:	4b42      	ldr	r3, [pc, #264]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1cfae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1cfb0:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
   1cfb4:	687b      	ldr	r3, [r7, #4]
   1cfb6:	681b      	ldr	r3, [r3, #0]
   1cfb8:	031b      	lsls	r3, r3, #12
   1cfba:	493f      	ldr	r1, [pc, #252]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1cfbc:	4313      	orrs	r3, r2
   1cfbe:	628b      	str	r3, [r1, #40]	; 0x28
   1cfc0:	687b      	ldr	r3, [r7, #4]
   1cfc2:	685b      	ldr	r3, [r3, #4]
   1cfc4:	3b01      	subs	r3, #1
   1cfc6:	f3c3 0208 	ubfx	r2, r3, #0, #9
   1cfca:	687b      	ldr	r3, [r7, #4]
   1cfcc:	689b      	ldr	r3, [r3, #8]
   1cfce:	3b01      	subs	r3, #1
   1cfd0:	025b      	lsls	r3, r3, #9
   1cfd2:	b29b      	uxth	r3, r3
   1cfd4:	431a      	orrs	r2, r3
   1cfd6:	687b      	ldr	r3, [r7, #4]
   1cfd8:	68db      	ldr	r3, [r3, #12]
   1cfda:	3b01      	subs	r3, #1
   1cfdc:	041b      	lsls	r3, r3, #16
   1cfde:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
   1cfe2:	431a      	orrs	r2, r3
   1cfe4:	687b      	ldr	r3, [r7, #4]
   1cfe6:	691b      	ldr	r3, [r3, #16]
   1cfe8:	3b01      	subs	r3, #1
   1cfea:	061b      	lsls	r3, r3, #24
   1cfec:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
   1cff0:	4931      	ldr	r1, [pc, #196]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1cff2:	4313      	orrs	r3, r2
   1cff4:	638b      	str	r3, [r1, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
   1cff6:	4b30      	ldr	r3, [pc, #192]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1cff8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1cffa:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
   1cffe:	687b      	ldr	r3, [r7, #4]
   1d000:	695b      	ldr	r3, [r3, #20]
   1d002:	492d      	ldr	r1, [pc, #180]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d004:	4313      	orrs	r3, r2
   1d006:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
   1d008:	4b2b      	ldr	r3, [pc, #172]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d00a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1d00c:	f023 0220 	bic.w	r2, r3, #32
   1d010:	687b      	ldr	r3, [r7, #4]
   1d012:	699b      	ldr	r3, [r3, #24]
   1d014:	4928      	ldr	r1, [pc, #160]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d016:	4313      	orrs	r3, r2
   1d018:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
   1d01a:	4b27      	ldr	r3, [pc, #156]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d01c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1d01e:	4a26      	ldr	r2, [pc, #152]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d020:	f023 0310 	bic.w	r3, r3, #16
   1d024:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
   1d026:	4b24      	ldr	r3, [pc, #144]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d028:	6bda      	ldr	r2, [r3, #60]	; 0x3c
   1d02a:	4b24      	ldr	r3, [pc, #144]	; (1d0bc <RCCEx_PLL2_Config+0x160>)
   1d02c:	4013      	ands	r3, r2
   1d02e:	687a      	ldr	r2, [r7, #4]
   1d030:	69d2      	ldr	r2, [r2, #28]
   1d032:	00d2      	lsls	r2, r2, #3
   1d034:	4920      	ldr	r1, [pc, #128]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d036:	4313      	orrs	r3, r2
   1d038:	63cb      	str	r3, [r1, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
   1d03a:	4b1f      	ldr	r3, [pc, #124]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d03c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1d03e:	4a1e      	ldr	r2, [pc, #120]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d040:	f043 0310 	orr.w	r3, r3, #16
   1d044:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if(Divider == DIVIDER_P_UPDATE)
   1d046:	683b      	ldr	r3, [r7, #0]
   1d048:	2b00      	cmp	r3, #0
   1d04a:	d106      	bne.n	1d05a <RCCEx_PLL2_Config+0xfe>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
   1d04c:	4b1a      	ldr	r3, [pc, #104]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d04e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1d050:	4a19      	ldr	r2, [pc, #100]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d052:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
   1d056:	62d3      	str	r3, [r2, #44]	; 0x2c
   1d058:	e00f      	b.n	1d07a <RCCEx_PLL2_Config+0x11e>
    }
    else if(Divider == DIVIDER_Q_UPDATE)
   1d05a:	683b      	ldr	r3, [r7, #0]
   1d05c:	2b01      	cmp	r3, #1
   1d05e:	d106      	bne.n	1d06e <RCCEx_PLL2_Config+0x112>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
   1d060:	4b15      	ldr	r3, [pc, #84]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d062:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1d064:	4a14      	ldr	r2, [pc, #80]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d066:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   1d06a:	62d3      	str	r3, [r2, #44]	; 0x2c
   1d06c:	e005      	b.n	1d07a <RCCEx_PLL2_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
   1d06e:	4b12      	ldr	r3, [pc, #72]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d070:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1d072:	4a11      	ldr	r2, [pc, #68]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d074:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
   1d078:	62d3      	str	r3, [r2, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
   1d07a:	4b0f      	ldr	r3, [pc, #60]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d07c:	681b      	ldr	r3, [r3, #0]
   1d07e:	4a0e      	ldr	r2, [pc, #56]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d080:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
   1d084:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
   1d086:	f7fc ff75 	bl	19f74 <HAL_GetTick>
   1d08a:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL2 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
   1d08c:	e008      	b.n	1d0a0 <RCCEx_PLL2_Config+0x144>
    {
      if( (HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
   1d08e:	f7fc ff71 	bl	19f74 <HAL_GetTick>
   1d092:	4602      	mov	r2, r0
   1d094:	68bb      	ldr	r3, [r7, #8]
   1d096:	1ad3      	subs	r3, r2, r3
   1d098:	2b02      	cmp	r3, #2
   1d09a:	d901      	bls.n	1d0a0 <RCCEx_PLL2_Config+0x144>
      {
        return HAL_TIMEOUT;
   1d09c:	2303      	movs	r3, #3
   1d09e:	e006      	b.n	1d0ae <RCCEx_PLL2_Config+0x152>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
   1d0a0:	4b05      	ldr	r3, [pc, #20]	; (1d0b8 <RCCEx_PLL2_Config+0x15c>)
   1d0a2:	681b      	ldr	r3, [r3, #0]
   1d0a4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
   1d0a8:	2b00      	cmp	r3, #0
   1d0aa:	d0f0      	beq.n	1d08e <RCCEx_PLL2_Config+0x132>
    }

  }


  return status;
   1d0ac:	7bfb      	ldrb	r3, [r7, #15]
}
   1d0ae:	4618      	mov	r0, r3
   1d0b0:	3710      	adds	r7, #16
   1d0b2:	46bd      	mov	sp, r7
   1d0b4:	bd80      	pop	{r7, pc}
   1d0b6:	bf00      	nop
   1d0b8:	58024400 	.word	0x58024400
   1d0bc:	ffff0007 	.word	0xffff0007

0001d0c0 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
   1d0c0:	b580      	push	{r7, lr}
   1d0c2:	b084      	sub	sp, #16
   1d0c4:	af00      	add	r7, sp, #0
   1d0c6:	6078      	str	r0, [r7, #4]
   1d0c8:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
   1d0ca:	2300      	movs	r3, #0
   1d0cc:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
   1d0ce:	4b53      	ldr	r3, [pc, #332]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d0d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1d0d2:	f003 0303 	and.w	r3, r3, #3
   1d0d6:	2b03      	cmp	r3, #3
   1d0d8:	d101      	bne.n	1d0de <RCCEx_PLL3_Config+0x1e>
  {
    return HAL_ERROR;
   1d0da:	2301      	movs	r3, #1
   1d0dc:	e099      	b.n	1d212 <RCCEx_PLL3_Config+0x152>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
   1d0de:	4b4f      	ldr	r3, [pc, #316]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d0e0:	681b      	ldr	r3, [r3, #0]
   1d0e2:	4a4e      	ldr	r2, [pc, #312]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d0e4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
   1d0e8:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
   1d0ea:	f7fc ff43 	bl	19f74 <HAL_GetTick>
   1d0ee:	60b8      	str	r0, [r7, #8]
    /* Wait till PLL3 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
   1d0f0:	e008      	b.n	1d104 <RCCEx_PLL3_Config+0x44>
    {
      if( (HAL_GetTick() - tickstart ) > PLL3_TIMEOUT_VALUE)
   1d0f2:	f7fc ff3f 	bl	19f74 <HAL_GetTick>
   1d0f6:	4602      	mov	r2, r0
   1d0f8:	68bb      	ldr	r3, [r7, #8]
   1d0fa:	1ad3      	subs	r3, r2, r3
   1d0fc:	2b02      	cmp	r3, #2
   1d0fe:	d901      	bls.n	1d104 <RCCEx_PLL3_Config+0x44>
      {
        return HAL_TIMEOUT;
   1d100:	2303      	movs	r3, #3
   1d102:	e086      	b.n	1d212 <RCCEx_PLL3_Config+0x152>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
   1d104:	4b45      	ldr	r3, [pc, #276]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d106:	681b      	ldr	r3, [r3, #0]
   1d108:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
   1d10c:	2b00      	cmp	r3, #0
   1d10e:	d1f0      	bne.n	1d0f2 <RCCEx_PLL3_Config+0x32>
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
   1d110:	4b42      	ldr	r3, [pc, #264]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d112:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1d114:	f023 727c 	bic.w	r2, r3, #66060288	; 0x3f00000
   1d118:	687b      	ldr	r3, [r7, #4]
   1d11a:	681b      	ldr	r3, [r3, #0]
   1d11c:	051b      	lsls	r3, r3, #20
   1d11e:	493f      	ldr	r1, [pc, #252]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d120:	4313      	orrs	r3, r2
   1d122:	628b      	str	r3, [r1, #40]	; 0x28
   1d124:	687b      	ldr	r3, [r7, #4]
   1d126:	685b      	ldr	r3, [r3, #4]
   1d128:	3b01      	subs	r3, #1
   1d12a:	f3c3 0208 	ubfx	r2, r3, #0, #9
   1d12e:	687b      	ldr	r3, [r7, #4]
   1d130:	689b      	ldr	r3, [r3, #8]
   1d132:	3b01      	subs	r3, #1
   1d134:	025b      	lsls	r3, r3, #9
   1d136:	b29b      	uxth	r3, r3
   1d138:	431a      	orrs	r2, r3
   1d13a:	687b      	ldr	r3, [r7, #4]
   1d13c:	68db      	ldr	r3, [r3, #12]
   1d13e:	3b01      	subs	r3, #1
   1d140:	041b      	lsls	r3, r3, #16
   1d142:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
   1d146:	431a      	orrs	r2, r3
   1d148:	687b      	ldr	r3, [r7, #4]
   1d14a:	691b      	ldr	r3, [r3, #16]
   1d14c:	3b01      	subs	r3, #1
   1d14e:	061b      	lsls	r3, r3, #24
   1d150:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
   1d154:	4931      	ldr	r1, [pc, #196]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d156:	4313      	orrs	r3, r2
   1d158:	640b      	str	r3, [r1, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
   1d15a:	4b30      	ldr	r3, [pc, #192]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d15c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1d15e:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
   1d162:	687b      	ldr	r3, [r7, #4]
   1d164:	695b      	ldr	r3, [r3, #20]
   1d166:	492d      	ldr	r1, [pc, #180]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d168:	4313      	orrs	r3, r2
   1d16a:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
   1d16c:	4b2b      	ldr	r3, [pc, #172]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d16e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1d170:	f423 7200 	bic.w	r2, r3, #512	; 0x200
   1d174:	687b      	ldr	r3, [r7, #4]
   1d176:	699b      	ldr	r3, [r3, #24]
   1d178:	4928      	ldr	r1, [pc, #160]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d17a:	4313      	orrs	r3, r2
   1d17c:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
   1d17e:	4b27      	ldr	r3, [pc, #156]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d180:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1d182:	4a26      	ldr	r2, [pc, #152]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d184:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   1d188:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
   1d18a:	4b24      	ldr	r3, [pc, #144]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d18c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
   1d18e:	4b24      	ldr	r3, [pc, #144]	; (1d220 <RCCEx_PLL3_Config+0x160>)
   1d190:	4013      	ands	r3, r2
   1d192:	687a      	ldr	r2, [r7, #4]
   1d194:	69d2      	ldr	r2, [r2, #28]
   1d196:	00d2      	lsls	r2, r2, #3
   1d198:	4920      	ldr	r1, [pc, #128]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d19a:	4313      	orrs	r3, r2
   1d19c:	644b      	str	r3, [r1, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
   1d19e:	4b1f      	ldr	r3, [pc, #124]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d1a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1d1a2:	4a1e      	ldr	r2, [pc, #120]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d1a4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
   1d1a8:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if(Divider == DIVIDER_P_UPDATE)
   1d1aa:	683b      	ldr	r3, [r7, #0]
   1d1ac:	2b00      	cmp	r3, #0
   1d1ae:	d106      	bne.n	1d1be <RCCEx_PLL3_Config+0xfe>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
   1d1b0:	4b1a      	ldr	r3, [pc, #104]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d1b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1d1b4:	4a19      	ldr	r2, [pc, #100]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d1b6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
   1d1ba:	62d3      	str	r3, [r2, #44]	; 0x2c
   1d1bc:	e00f      	b.n	1d1de <RCCEx_PLL3_Config+0x11e>
    }
    else if(Divider == DIVIDER_Q_UPDATE)
   1d1be:	683b      	ldr	r3, [r7, #0]
   1d1c0:	2b01      	cmp	r3, #1
   1d1c2:	d106      	bne.n	1d1d2 <RCCEx_PLL3_Config+0x112>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
   1d1c4:	4b15      	ldr	r3, [pc, #84]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d1c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1d1c8:	4a14      	ldr	r2, [pc, #80]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d1ca:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   1d1ce:	62d3      	str	r3, [r2, #44]	; 0x2c
   1d1d0:	e005      	b.n	1d1de <RCCEx_PLL3_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
   1d1d2:	4b12      	ldr	r3, [pc, #72]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d1d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1d1d6:	4a11      	ldr	r2, [pc, #68]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d1d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
   1d1dc:	62d3      	str	r3, [r2, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
   1d1de:	4b0f      	ldr	r3, [pc, #60]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d1e0:	681b      	ldr	r3, [r3, #0]
   1d1e2:	4a0e      	ldr	r2, [pc, #56]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d1e4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
   1d1e8:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
   1d1ea:	f7fc fec3 	bl	19f74 <HAL_GetTick>
   1d1ee:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL3 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
   1d1f0:	e008      	b.n	1d204 <RCCEx_PLL3_Config+0x144>
    {
      if( (HAL_GetTick() - tickstart ) > PLL3_TIMEOUT_VALUE)
   1d1f2:	f7fc febf 	bl	19f74 <HAL_GetTick>
   1d1f6:	4602      	mov	r2, r0
   1d1f8:	68bb      	ldr	r3, [r7, #8]
   1d1fa:	1ad3      	subs	r3, r2, r3
   1d1fc:	2b02      	cmp	r3, #2
   1d1fe:	d901      	bls.n	1d204 <RCCEx_PLL3_Config+0x144>
      {
        return HAL_TIMEOUT;
   1d200:	2303      	movs	r3, #3
   1d202:	e006      	b.n	1d212 <RCCEx_PLL3_Config+0x152>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
   1d204:	4b05      	ldr	r3, [pc, #20]	; (1d21c <RCCEx_PLL3_Config+0x15c>)
   1d206:	681b      	ldr	r3, [r3, #0]
   1d208:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
   1d20c:	2b00      	cmp	r3, #0
   1d20e:	d0f0      	beq.n	1d1f2 <RCCEx_PLL3_Config+0x132>
    }

  }


  return status;
   1d210:	7bfb      	ldrb	r3, [r7, #15]
}
   1d212:	4618      	mov	r0, r3
   1d214:	3710      	adds	r7, #16
   1d216:	46bd      	mov	sp, r7
   1d218:	bd80      	pop	{r7, pc}
   1d21a:	bf00      	nop
   1d21c:	58024400 	.word	0x58024400
   1d220:	ffff0007 	.word	0xffff0007

0001d224 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
   1d224:	b580      	push	{r7, lr}
   1d226:	b082      	sub	sp, #8
   1d228:	af00      	add	r7, sp, #0
   1d22a:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
   1d22c:	687b      	ldr	r3, [r7, #4]
   1d22e:	2b00      	cmp	r3, #0
   1d230:	d101      	bne.n	1d236 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
   1d232:	2301      	movs	r3, #1
   1d234:	e01d      	b.n	1d272 <HAL_TIM_Base_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
   1d236:	687b      	ldr	r3, [r7, #4]
   1d238:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
   1d23c:	b2db      	uxtb	r3, r3
   1d23e:	2b00      	cmp	r3, #0
   1d240:	d106      	bne.n	1d250 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
   1d242:	687b      	ldr	r3, [r7, #4]
   1d244:	2200      	movs	r2, #0
   1d246:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
   1d24a:	6878      	ldr	r0, [r7, #4]
   1d24c:	f7fc fc44 	bl	19ad8 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
   1d250:	687b      	ldr	r3, [r7, #4]
   1d252:	2202      	movs	r2, #2
   1d254:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
   1d258:	687b      	ldr	r3, [r7, #4]
   1d25a:	681a      	ldr	r2, [r3, #0]
   1d25c:	687b      	ldr	r3, [r7, #4]
   1d25e:	3304      	adds	r3, #4
   1d260:	4619      	mov	r1, r3
   1d262:	4610      	mov	r0, r2
   1d264:	f000 f9d0 	bl	1d608 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
   1d268:	687b      	ldr	r3, [r7, #4]
   1d26a:	2201      	movs	r2, #1
   1d26c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
   1d270:	2300      	movs	r3, #0
}
   1d272:	4618      	mov	r0, r3
   1d274:	3708      	adds	r7, #8
   1d276:	46bd      	mov	sp, r7
   1d278:	bd80      	pop	{r7, pc}
	...

0001d27c <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
   1d27c:	b480      	push	{r7}
   1d27e:	b085      	sub	sp, #20
   1d280:	af00      	add	r7, sp, #0
   1d282:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
   1d284:	687b      	ldr	r3, [r7, #4]
   1d286:	681b      	ldr	r3, [r3, #0]
   1d288:	68da      	ldr	r2, [r3, #12]
   1d28a:	687b      	ldr	r3, [r7, #4]
   1d28c:	681b      	ldr	r3, [r3, #0]
   1d28e:	f042 0201 	orr.w	r2, r2, #1
   1d292:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
   1d294:	687b      	ldr	r3, [r7, #4]
   1d296:	681b      	ldr	r3, [r3, #0]
   1d298:	689a      	ldr	r2, [r3, #8]
   1d29a:	4b0c      	ldr	r3, [pc, #48]	; (1d2cc <HAL_TIM_Base_Start_IT+0x50>)
   1d29c:	4013      	ands	r3, r2
   1d29e:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
   1d2a0:	68fb      	ldr	r3, [r7, #12]
   1d2a2:	2b06      	cmp	r3, #6
   1d2a4:	d00b      	beq.n	1d2be <HAL_TIM_Base_Start_IT+0x42>
   1d2a6:	68fb      	ldr	r3, [r7, #12]
   1d2a8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   1d2ac:	d007      	beq.n	1d2be <HAL_TIM_Base_Start_IT+0x42>
  {
    __HAL_TIM_ENABLE(htim);
   1d2ae:	687b      	ldr	r3, [r7, #4]
   1d2b0:	681b      	ldr	r3, [r3, #0]
   1d2b2:	681a      	ldr	r2, [r3, #0]
   1d2b4:	687b      	ldr	r3, [r7, #4]
   1d2b6:	681b      	ldr	r3, [r3, #0]
   1d2b8:	f042 0201 	orr.w	r2, r2, #1
   1d2bc:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
   1d2be:	2300      	movs	r3, #0
}
   1d2c0:	4618      	mov	r0, r3
   1d2c2:	3714      	adds	r7, #20
   1d2c4:	46bd      	mov	sp, r7
   1d2c6:	f85d 7b04 	ldr.w	r7, [sp], #4
   1d2ca:	4770      	bx	lr
   1d2cc:	00010007 	.word	0x00010007

0001d2d0 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
   1d2d0:	b580      	push	{r7, lr}
   1d2d2:	b082      	sub	sp, #8
   1d2d4:	af00      	add	r7, sp, #0
   1d2d6:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
   1d2d8:	687b      	ldr	r3, [r7, #4]
   1d2da:	2b00      	cmp	r3, #0
   1d2dc:	d101      	bne.n	1d2e2 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
   1d2de:	2301      	movs	r3, #1
   1d2e0:	e01d      	b.n	1d31e <HAL_TIM_PWM_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
   1d2e2:	687b      	ldr	r3, [r7, #4]
   1d2e4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
   1d2e8:	b2db      	uxtb	r3, r3
   1d2ea:	2b00      	cmp	r3, #0
   1d2ec:	d106      	bne.n	1d2fc <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
   1d2ee:	687b      	ldr	r3, [r7, #4]
   1d2f0:	2200      	movs	r2, #0
   1d2f2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
   1d2f6:	6878      	ldr	r0, [r7, #4]
   1d2f8:	f7fc fb88 	bl	19a0c <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
   1d2fc:	687b      	ldr	r3, [r7, #4]
   1d2fe:	2202      	movs	r2, #2
   1d300:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
   1d304:	687b      	ldr	r3, [r7, #4]
   1d306:	681a      	ldr	r2, [r3, #0]
   1d308:	687b      	ldr	r3, [r7, #4]
   1d30a:	3304      	adds	r3, #4
   1d30c:	4619      	mov	r1, r3
   1d30e:	4610      	mov	r0, r2
   1d310:	f000 f97a 	bl	1d608 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
   1d314:	687b      	ldr	r3, [r7, #4]
   1d316:	2201      	movs	r2, #1
   1d318:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
   1d31c:	2300      	movs	r3, #0
}
   1d31e:	4618      	mov	r0, r3
   1d320:	3708      	adds	r7, #8
   1d322:	46bd      	mov	sp, r7
   1d324:	bd80      	pop	{r7, pc}
	...

0001d328 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_5: TIM Channel 5 selected
  *            @arg TIM_CHANNEL_6: TIM Channel 6 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
   1d328:	b580      	push	{r7, lr}
   1d32a:	b084      	sub	sp, #16
   1d32c:	af00      	add	r7, sp, #0
   1d32e:	6078      	str	r0, [r7, #4]
   1d330:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
   1d332:	687b      	ldr	r3, [r7, #4]
   1d334:	681b      	ldr	r3, [r3, #0]
   1d336:	2201      	movs	r2, #1
   1d338:	6839      	ldr	r1, [r7, #0]
   1d33a:	4618      	mov	r0, r3
   1d33c:	f000 fccc 	bl	1dcd8 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
   1d340:	687b      	ldr	r3, [r7, #4]
   1d342:	681b      	ldr	r3, [r3, #0]
   1d344:	4a1e      	ldr	r2, [pc, #120]	; (1d3c0 <HAL_TIM_PWM_Start+0x98>)
   1d346:	4293      	cmp	r3, r2
   1d348:	d013      	beq.n	1d372 <HAL_TIM_PWM_Start+0x4a>
   1d34a:	687b      	ldr	r3, [r7, #4]
   1d34c:	681b      	ldr	r3, [r3, #0]
   1d34e:	4a1d      	ldr	r2, [pc, #116]	; (1d3c4 <HAL_TIM_PWM_Start+0x9c>)
   1d350:	4293      	cmp	r3, r2
   1d352:	d00e      	beq.n	1d372 <HAL_TIM_PWM_Start+0x4a>
   1d354:	687b      	ldr	r3, [r7, #4]
   1d356:	681b      	ldr	r3, [r3, #0]
   1d358:	4a1b      	ldr	r2, [pc, #108]	; (1d3c8 <HAL_TIM_PWM_Start+0xa0>)
   1d35a:	4293      	cmp	r3, r2
   1d35c:	d009      	beq.n	1d372 <HAL_TIM_PWM_Start+0x4a>
   1d35e:	687b      	ldr	r3, [r7, #4]
   1d360:	681b      	ldr	r3, [r3, #0]
   1d362:	4a1a      	ldr	r2, [pc, #104]	; (1d3cc <HAL_TIM_PWM_Start+0xa4>)
   1d364:	4293      	cmp	r3, r2
   1d366:	d004      	beq.n	1d372 <HAL_TIM_PWM_Start+0x4a>
   1d368:	687b      	ldr	r3, [r7, #4]
   1d36a:	681b      	ldr	r3, [r3, #0]
   1d36c:	4a18      	ldr	r2, [pc, #96]	; (1d3d0 <HAL_TIM_PWM_Start+0xa8>)
   1d36e:	4293      	cmp	r3, r2
   1d370:	d101      	bne.n	1d376 <HAL_TIM_PWM_Start+0x4e>
   1d372:	2301      	movs	r3, #1
   1d374:	e000      	b.n	1d378 <HAL_TIM_PWM_Start+0x50>
   1d376:	2300      	movs	r3, #0
   1d378:	2b00      	cmp	r3, #0
   1d37a:	d007      	beq.n	1d38c <HAL_TIM_PWM_Start+0x64>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
   1d37c:	687b      	ldr	r3, [r7, #4]
   1d37e:	681b      	ldr	r3, [r3, #0]
   1d380:	6c5a      	ldr	r2, [r3, #68]	; 0x44
   1d382:	687b      	ldr	r3, [r7, #4]
   1d384:	681b      	ldr	r3, [r3, #0]
   1d386:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
   1d38a:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
   1d38c:	687b      	ldr	r3, [r7, #4]
   1d38e:	681b      	ldr	r3, [r3, #0]
   1d390:	689a      	ldr	r2, [r3, #8]
   1d392:	4b10      	ldr	r3, [pc, #64]	; (1d3d4 <HAL_TIM_PWM_Start+0xac>)
   1d394:	4013      	ands	r3, r2
   1d396:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
   1d398:	68fb      	ldr	r3, [r7, #12]
   1d39a:	2b06      	cmp	r3, #6
   1d39c:	d00b      	beq.n	1d3b6 <HAL_TIM_PWM_Start+0x8e>
   1d39e:	68fb      	ldr	r3, [r7, #12]
   1d3a0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   1d3a4:	d007      	beq.n	1d3b6 <HAL_TIM_PWM_Start+0x8e>
  {
    __HAL_TIM_ENABLE(htim);
   1d3a6:	687b      	ldr	r3, [r7, #4]
   1d3a8:	681b      	ldr	r3, [r3, #0]
   1d3aa:	681a      	ldr	r2, [r3, #0]
   1d3ac:	687b      	ldr	r3, [r7, #4]
   1d3ae:	681b      	ldr	r3, [r3, #0]
   1d3b0:	f042 0201 	orr.w	r2, r2, #1
   1d3b4:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
   1d3b6:	2300      	movs	r3, #0
}
   1d3b8:	4618      	mov	r0, r3
   1d3ba:	3710      	adds	r7, #16
   1d3bc:	46bd      	mov	sp, r7
   1d3be:	bd80      	pop	{r7, pc}
   1d3c0:	40010000 	.word	0x40010000
   1d3c4:	40010400 	.word	0x40010400
   1d3c8:	40014000 	.word	0x40014000
   1d3cc:	40014400 	.word	0x40014400
   1d3d0:	40014800 	.word	0x40014800
   1d3d4:	00010007 	.word	0x00010007

0001d3d8 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
   1d3d8:	b580      	push	{r7, lr}
   1d3da:	b084      	sub	sp, #16
   1d3dc:	af00      	add	r7, sp, #0
   1d3de:	60f8      	str	r0, [r7, #12]
   1d3e0:	60b9      	str	r1, [r7, #8]
   1d3e2:	607a      	str	r2, [r7, #4]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
   1d3e4:	68fb      	ldr	r3, [r7, #12]
   1d3e6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
   1d3ea:	2b01      	cmp	r3, #1
   1d3ec:	d101      	bne.n	1d3f2 <HAL_TIM_PWM_ConfigChannel+0x1a>
   1d3ee:	2302      	movs	r3, #2
   1d3f0:	e105      	b.n	1d5fe <HAL_TIM_PWM_ConfigChannel+0x226>
   1d3f2:	68fb      	ldr	r3, [r7, #12]
   1d3f4:	2201      	movs	r2, #1
   1d3f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
   1d3fa:	68fb      	ldr	r3, [r7, #12]
   1d3fc:	2202      	movs	r2, #2
   1d3fe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  switch (Channel)
   1d402:	687b      	ldr	r3, [r7, #4]
   1d404:	2b14      	cmp	r3, #20
   1d406:	f200 80f0 	bhi.w	1d5ea <HAL_TIM_PWM_ConfigChannel+0x212>
   1d40a:	a201      	add	r2, pc, #4	; (adr r2, 1d410 <HAL_TIM_PWM_ConfigChannel+0x38>)
   1d40c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1d410:	0001d465 	.word	0x0001d465
   1d414:	0001d5eb 	.word	0x0001d5eb
   1d418:	0001d5eb 	.word	0x0001d5eb
   1d41c:	0001d5eb 	.word	0x0001d5eb
   1d420:	0001d4a5 	.word	0x0001d4a5
   1d424:	0001d5eb 	.word	0x0001d5eb
   1d428:	0001d5eb 	.word	0x0001d5eb
   1d42c:	0001d5eb 	.word	0x0001d5eb
   1d430:	0001d4e7 	.word	0x0001d4e7
   1d434:	0001d5eb 	.word	0x0001d5eb
   1d438:	0001d5eb 	.word	0x0001d5eb
   1d43c:	0001d5eb 	.word	0x0001d5eb
   1d440:	0001d527 	.word	0x0001d527
   1d444:	0001d5eb 	.word	0x0001d5eb
   1d448:	0001d5eb 	.word	0x0001d5eb
   1d44c:	0001d5eb 	.word	0x0001d5eb
   1d450:	0001d569 	.word	0x0001d569
   1d454:	0001d5eb 	.word	0x0001d5eb
   1d458:	0001d5eb 	.word	0x0001d5eb
   1d45c:	0001d5eb 	.word	0x0001d5eb
   1d460:	0001d5a9 	.word	0x0001d5a9
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
   1d464:	68fb      	ldr	r3, [r7, #12]
   1d466:	681b      	ldr	r3, [r3, #0]
   1d468:	68b9      	ldr	r1, [r7, #8]
   1d46a:	4618      	mov	r0, r3
   1d46c:	f000 f966 	bl	1d73c <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
   1d470:	68fb      	ldr	r3, [r7, #12]
   1d472:	681b      	ldr	r3, [r3, #0]
   1d474:	699a      	ldr	r2, [r3, #24]
   1d476:	68fb      	ldr	r3, [r7, #12]
   1d478:	681b      	ldr	r3, [r3, #0]
   1d47a:	f042 0208 	orr.w	r2, r2, #8
   1d47e:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
   1d480:	68fb      	ldr	r3, [r7, #12]
   1d482:	681b      	ldr	r3, [r3, #0]
   1d484:	699a      	ldr	r2, [r3, #24]
   1d486:	68fb      	ldr	r3, [r7, #12]
   1d488:	681b      	ldr	r3, [r3, #0]
   1d48a:	f022 0204 	bic.w	r2, r2, #4
   1d48e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
   1d490:	68fb      	ldr	r3, [r7, #12]
   1d492:	681b      	ldr	r3, [r3, #0]
   1d494:	6999      	ldr	r1, [r3, #24]
   1d496:	68bb      	ldr	r3, [r7, #8]
   1d498:	691a      	ldr	r2, [r3, #16]
   1d49a:	68fb      	ldr	r3, [r7, #12]
   1d49c:	681b      	ldr	r3, [r3, #0]
   1d49e:	430a      	orrs	r2, r1
   1d4a0:	619a      	str	r2, [r3, #24]
      break;
   1d4a2:	e0a3      	b.n	1d5ec <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
   1d4a4:	68fb      	ldr	r3, [r7, #12]
   1d4a6:	681b      	ldr	r3, [r3, #0]
   1d4a8:	68b9      	ldr	r1, [r7, #8]
   1d4aa:	4618      	mov	r0, r3
   1d4ac:	f000 f9d6 	bl	1d85c <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
   1d4b0:	68fb      	ldr	r3, [r7, #12]
   1d4b2:	681b      	ldr	r3, [r3, #0]
   1d4b4:	699a      	ldr	r2, [r3, #24]
   1d4b6:	68fb      	ldr	r3, [r7, #12]
   1d4b8:	681b      	ldr	r3, [r3, #0]
   1d4ba:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
   1d4be:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
   1d4c0:	68fb      	ldr	r3, [r7, #12]
   1d4c2:	681b      	ldr	r3, [r3, #0]
   1d4c4:	699a      	ldr	r2, [r3, #24]
   1d4c6:	68fb      	ldr	r3, [r7, #12]
   1d4c8:	681b      	ldr	r3, [r3, #0]
   1d4ca:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
   1d4ce:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
   1d4d0:	68fb      	ldr	r3, [r7, #12]
   1d4d2:	681b      	ldr	r3, [r3, #0]
   1d4d4:	6999      	ldr	r1, [r3, #24]
   1d4d6:	68bb      	ldr	r3, [r7, #8]
   1d4d8:	691b      	ldr	r3, [r3, #16]
   1d4da:	021a      	lsls	r2, r3, #8
   1d4dc:	68fb      	ldr	r3, [r7, #12]
   1d4de:	681b      	ldr	r3, [r3, #0]
   1d4e0:	430a      	orrs	r2, r1
   1d4e2:	619a      	str	r2, [r3, #24]
      break;
   1d4e4:	e082      	b.n	1d5ec <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
   1d4e6:	68fb      	ldr	r3, [r7, #12]
   1d4e8:	681b      	ldr	r3, [r3, #0]
   1d4ea:	68b9      	ldr	r1, [r7, #8]
   1d4ec:	4618      	mov	r0, r3
   1d4ee:	f000 fa3f 	bl	1d970 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
   1d4f2:	68fb      	ldr	r3, [r7, #12]
   1d4f4:	681b      	ldr	r3, [r3, #0]
   1d4f6:	69da      	ldr	r2, [r3, #28]
   1d4f8:	68fb      	ldr	r3, [r7, #12]
   1d4fa:	681b      	ldr	r3, [r3, #0]
   1d4fc:	f042 0208 	orr.w	r2, r2, #8
   1d500:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
   1d502:	68fb      	ldr	r3, [r7, #12]
   1d504:	681b      	ldr	r3, [r3, #0]
   1d506:	69da      	ldr	r2, [r3, #28]
   1d508:	68fb      	ldr	r3, [r7, #12]
   1d50a:	681b      	ldr	r3, [r3, #0]
   1d50c:	f022 0204 	bic.w	r2, r2, #4
   1d510:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
   1d512:	68fb      	ldr	r3, [r7, #12]
   1d514:	681b      	ldr	r3, [r3, #0]
   1d516:	69d9      	ldr	r1, [r3, #28]
   1d518:	68bb      	ldr	r3, [r7, #8]
   1d51a:	691a      	ldr	r2, [r3, #16]
   1d51c:	68fb      	ldr	r3, [r7, #12]
   1d51e:	681b      	ldr	r3, [r3, #0]
   1d520:	430a      	orrs	r2, r1
   1d522:	61da      	str	r2, [r3, #28]
      break;
   1d524:	e062      	b.n	1d5ec <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
   1d526:	68fb      	ldr	r3, [r7, #12]
   1d528:	681b      	ldr	r3, [r3, #0]
   1d52a:	68b9      	ldr	r1, [r7, #8]
   1d52c:	4618      	mov	r0, r3
   1d52e:	f000 faa5 	bl	1da7c <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
   1d532:	68fb      	ldr	r3, [r7, #12]
   1d534:	681b      	ldr	r3, [r3, #0]
   1d536:	69da      	ldr	r2, [r3, #28]
   1d538:	68fb      	ldr	r3, [r7, #12]
   1d53a:	681b      	ldr	r3, [r3, #0]
   1d53c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
   1d540:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
   1d542:	68fb      	ldr	r3, [r7, #12]
   1d544:	681b      	ldr	r3, [r3, #0]
   1d546:	69da      	ldr	r2, [r3, #28]
   1d548:	68fb      	ldr	r3, [r7, #12]
   1d54a:	681b      	ldr	r3, [r3, #0]
   1d54c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
   1d550:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
   1d552:	68fb      	ldr	r3, [r7, #12]
   1d554:	681b      	ldr	r3, [r3, #0]
   1d556:	69d9      	ldr	r1, [r3, #28]
   1d558:	68bb      	ldr	r3, [r7, #8]
   1d55a:	691b      	ldr	r3, [r3, #16]
   1d55c:	021a      	lsls	r2, r3, #8
   1d55e:	68fb      	ldr	r3, [r7, #12]
   1d560:	681b      	ldr	r3, [r3, #0]
   1d562:	430a      	orrs	r2, r1
   1d564:	61da      	str	r2, [r3, #28]
      break;
   1d566:	e041      	b.n	1d5ec <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC5_INSTANCE(htim->Instance));

      /* Configure the Channel 5 in PWM mode */
      TIM_OC5_SetConfig(htim->Instance, sConfig);
   1d568:	68fb      	ldr	r3, [r7, #12]
   1d56a:	681b      	ldr	r3, [r3, #0]
   1d56c:	68b9      	ldr	r1, [r7, #8]
   1d56e:	4618      	mov	r0, r3
   1d570:	f000 faec 	bl	1db4c <TIM_OC5_SetConfig>

      /* Set the Preload enable bit for channel5*/
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
   1d574:	68fb      	ldr	r3, [r7, #12]
   1d576:	681b      	ldr	r3, [r3, #0]
   1d578:	6d5a      	ldr	r2, [r3, #84]	; 0x54
   1d57a:	68fb      	ldr	r3, [r7, #12]
   1d57c:	681b      	ldr	r3, [r3, #0]
   1d57e:	f042 0208 	orr.w	r2, r2, #8
   1d582:	655a      	str	r2, [r3, #84]	; 0x54

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
   1d584:	68fb      	ldr	r3, [r7, #12]
   1d586:	681b      	ldr	r3, [r3, #0]
   1d588:	6d5a      	ldr	r2, [r3, #84]	; 0x54
   1d58a:	68fb      	ldr	r3, [r7, #12]
   1d58c:	681b      	ldr	r3, [r3, #0]
   1d58e:	f022 0204 	bic.w	r2, r2, #4
   1d592:	655a      	str	r2, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
   1d594:	68fb      	ldr	r3, [r7, #12]
   1d596:	681b      	ldr	r3, [r3, #0]
   1d598:	6d59      	ldr	r1, [r3, #84]	; 0x54
   1d59a:	68bb      	ldr	r3, [r7, #8]
   1d59c:	691a      	ldr	r2, [r3, #16]
   1d59e:	68fb      	ldr	r3, [r7, #12]
   1d5a0:	681b      	ldr	r3, [r3, #0]
   1d5a2:	430a      	orrs	r2, r1
   1d5a4:	655a      	str	r2, [r3, #84]	; 0x54
      break;
   1d5a6:	e021      	b.n	1d5ec <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC6_INSTANCE(htim->Instance));

      /* Configure the Channel 6 in PWM mode */
      TIM_OC6_SetConfig(htim->Instance, sConfig);
   1d5a8:	68fb      	ldr	r3, [r7, #12]
   1d5aa:	681b      	ldr	r3, [r3, #0]
   1d5ac:	68b9      	ldr	r1, [r7, #8]
   1d5ae:	4618      	mov	r0, r3
   1d5b0:	f000 fb2e 	bl	1dc10 <TIM_OC6_SetConfig>

      /* Set the Preload enable bit for channel6 */
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
   1d5b4:	68fb      	ldr	r3, [r7, #12]
   1d5b6:	681b      	ldr	r3, [r3, #0]
   1d5b8:	6d5a      	ldr	r2, [r3, #84]	; 0x54
   1d5ba:	68fb      	ldr	r3, [r7, #12]
   1d5bc:	681b      	ldr	r3, [r3, #0]
   1d5be:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
   1d5c2:	655a      	str	r2, [r3, #84]	; 0x54

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
   1d5c4:	68fb      	ldr	r3, [r7, #12]
   1d5c6:	681b      	ldr	r3, [r3, #0]
   1d5c8:	6d5a      	ldr	r2, [r3, #84]	; 0x54
   1d5ca:	68fb      	ldr	r3, [r7, #12]
   1d5cc:	681b      	ldr	r3, [r3, #0]
   1d5ce:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
   1d5d2:	655a      	str	r2, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
   1d5d4:	68fb      	ldr	r3, [r7, #12]
   1d5d6:	681b      	ldr	r3, [r3, #0]
   1d5d8:	6d59      	ldr	r1, [r3, #84]	; 0x54
   1d5da:	68bb      	ldr	r3, [r7, #8]
   1d5dc:	691b      	ldr	r3, [r3, #16]
   1d5de:	021a      	lsls	r2, r3, #8
   1d5e0:	68fb      	ldr	r3, [r7, #12]
   1d5e2:	681b      	ldr	r3, [r3, #0]
   1d5e4:	430a      	orrs	r2, r1
   1d5e6:	655a      	str	r2, [r3, #84]	; 0x54
      break;
   1d5e8:	e000      	b.n	1d5ec <HAL_TIM_PWM_ConfigChannel+0x214>
    }

    default:
      break;
   1d5ea:	bf00      	nop
  }

  htim->State = HAL_TIM_STATE_READY;
   1d5ec:	68fb      	ldr	r3, [r7, #12]
   1d5ee:	2201      	movs	r2, #1
   1d5f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
   1d5f4:	68fb      	ldr	r3, [r7, #12]
   1d5f6:	2200      	movs	r2, #0
   1d5f8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
   1d5fc:	2300      	movs	r3, #0
}
   1d5fe:	4618      	mov	r0, r3
   1d600:	3710      	adds	r7, #16
   1d602:	46bd      	mov	sp, r7
   1d604:	bd80      	pop	{r7, pc}
   1d606:	bf00      	nop

0001d608 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
   1d608:	b480      	push	{r7}
   1d60a:	b085      	sub	sp, #20
   1d60c:	af00      	add	r7, sp, #0
   1d60e:	6078      	str	r0, [r7, #4]
   1d610:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
   1d612:	687b      	ldr	r3, [r7, #4]
   1d614:	681b      	ldr	r3, [r3, #0]
   1d616:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
   1d618:	687b      	ldr	r3, [r7, #4]
   1d61a:	4a40      	ldr	r2, [pc, #256]	; (1d71c <TIM_Base_SetConfig+0x114>)
   1d61c:	4293      	cmp	r3, r2
   1d61e:	d013      	beq.n	1d648 <TIM_Base_SetConfig+0x40>
   1d620:	687b      	ldr	r3, [r7, #4]
   1d622:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
   1d626:	d00f      	beq.n	1d648 <TIM_Base_SetConfig+0x40>
   1d628:	687b      	ldr	r3, [r7, #4]
   1d62a:	4a3d      	ldr	r2, [pc, #244]	; (1d720 <TIM_Base_SetConfig+0x118>)
   1d62c:	4293      	cmp	r3, r2
   1d62e:	d00b      	beq.n	1d648 <TIM_Base_SetConfig+0x40>
   1d630:	687b      	ldr	r3, [r7, #4]
   1d632:	4a3c      	ldr	r2, [pc, #240]	; (1d724 <TIM_Base_SetConfig+0x11c>)
   1d634:	4293      	cmp	r3, r2
   1d636:	d007      	beq.n	1d648 <TIM_Base_SetConfig+0x40>
   1d638:	687b      	ldr	r3, [r7, #4]
   1d63a:	4a3b      	ldr	r2, [pc, #236]	; (1d728 <TIM_Base_SetConfig+0x120>)
   1d63c:	4293      	cmp	r3, r2
   1d63e:	d003      	beq.n	1d648 <TIM_Base_SetConfig+0x40>
   1d640:	687b      	ldr	r3, [r7, #4]
   1d642:	4a3a      	ldr	r2, [pc, #232]	; (1d72c <TIM_Base_SetConfig+0x124>)
   1d644:	4293      	cmp	r3, r2
   1d646:	d108      	bne.n	1d65a <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
   1d648:	68fb      	ldr	r3, [r7, #12]
   1d64a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   1d64e:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
   1d650:	683b      	ldr	r3, [r7, #0]
   1d652:	685b      	ldr	r3, [r3, #4]
   1d654:	68fa      	ldr	r2, [r7, #12]
   1d656:	4313      	orrs	r3, r2
   1d658:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
   1d65a:	687b      	ldr	r3, [r7, #4]
   1d65c:	4a2f      	ldr	r2, [pc, #188]	; (1d71c <TIM_Base_SetConfig+0x114>)
   1d65e:	4293      	cmp	r3, r2
   1d660:	d01f      	beq.n	1d6a2 <TIM_Base_SetConfig+0x9a>
   1d662:	687b      	ldr	r3, [r7, #4]
   1d664:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
   1d668:	d01b      	beq.n	1d6a2 <TIM_Base_SetConfig+0x9a>
   1d66a:	687b      	ldr	r3, [r7, #4]
   1d66c:	4a2c      	ldr	r2, [pc, #176]	; (1d720 <TIM_Base_SetConfig+0x118>)
   1d66e:	4293      	cmp	r3, r2
   1d670:	d017      	beq.n	1d6a2 <TIM_Base_SetConfig+0x9a>
   1d672:	687b      	ldr	r3, [r7, #4]
   1d674:	4a2b      	ldr	r2, [pc, #172]	; (1d724 <TIM_Base_SetConfig+0x11c>)
   1d676:	4293      	cmp	r3, r2
   1d678:	d013      	beq.n	1d6a2 <TIM_Base_SetConfig+0x9a>
   1d67a:	687b      	ldr	r3, [r7, #4]
   1d67c:	4a2a      	ldr	r2, [pc, #168]	; (1d728 <TIM_Base_SetConfig+0x120>)
   1d67e:	4293      	cmp	r3, r2
   1d680:	d00f      	beq.n	1d6a2 <TIM_Base_SetConfig+0x9a>
   1d682:	687b      	ldr	r3, [r7, #4]
   1d684:	4a29      	ldr	r2, [pc, #164]	; (1d72c <TIM_Base_SetConfig+0x124>)
   1d686:	4293      	cmp	r3, r2
   1d688:	d00b      	beq.n	1d6a2 <TIM_Base_SetConfig+0x9a>
   1d68a:	687b      	ldr	r3, [r7, #4]
   1d68c:	4a28      	ldr	r2, [pc, #160]	; (1d730 <TIM_Base_SetConfig+0x128>)
   1d68e:	4293      	cmp	r3, r2
   1d690:	d007      	beq.n	1d6a2 <TIM_Base_SetConfig+0x9a>
   1d692:	687b      	ldr	r3, [r7, #4]
   1d694:	4a27      	ldr	r2, [pc, #156]	; (1d734 <TIM_Base_SetConfig+0x12c>)
   1d696:	4293      	cmp	r3, r2
   1d698:	d003      	beq.n	1d6a2 <TIM_Base_SetConfig+0x9a>
   1d69a:	687b      	ldr	r3, [r7, #4]
   1d69c:	4a26      	ldr	r2, [pc, #152]	; (1d738 <TIM_Base_SetConfig+0x130>)
   1d69e:	4293      	cmp	r3, r2
   1d6a0:	d108      	bne.n	1d6b4 <TIM_Base_SetConfig+0xac>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
   1d6a2:	68fb      	ldr	r3, [r7, #12]
   1d6a4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
   1d6a8:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
   1d6aa:	683b      	ldr	r3, [r7, #0]
   1d6ac:	68db      	ldr	r3, [r3, #12]
   1d6ae:	68fa      	ldr	r2, [r7, #12]
   1d6b0:	4313      	orrs	r3, r2
   1d6b2:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
   1d6b4:	68fb      	ldr	r3, [r7, #12]
   1d6b6:	f023 0280 	bic.w	r2, r3, #128	; 0x80
   1d6ba:	683b      	ldr	r3, [r7, #0]
   1d6bc:	695b      	ldr	r3, [r3, #20]
   1d6be:	4313      	orrs	r3, r2
   1d6c0:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
   1d6c2:	687b      	ldr	r3, [r7, #4]
   1d6c4:	68fa      	ldr	r2, [r7, #12]
   1d6c6:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
   1d6c8:	683b      	ldr	r3, [r7, #0]
   1d6ca:	689a      	ldr	r2, [r3, #8]
   1d6cc:	687b      	ldr	r3, [r7, #4]
   1d6ce:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
   1d6d0:	683b      	ldr	r3, [r7, #0]
   1d6d2:	681a      	ldr	r2, [r3, #0]
   1d6d4:	687b      	ldr	r3, [r7, #4]
   1d6d6:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
   1d6d8:	687b      	ldr	r3, [r7, #4]
   1d6da:	4a10      	ldr	r2, [pc, #64]	; (1d71c <TIM_Base_SetConfig+0x114>)
   1d6dc:	4293      	cmp	r3, r2
   1d6de:	d00f      	beq.n	1d700 <TIM_Base_SetConfig+0xf8>
   1d6e0:	687b      	ldr	r3, [r7, #4]
   1d6e2:	4a12      	ldr	r2, [pc, #72]	; (1d72c <TIM_Base_SetConfig+0x124>)
   1d6e4:	4293      	cmp	r3, r2
   1d6e6:	d00b      	beq.n	1d700 <TIM_Base_SetConfig+0xf8>
   1d6e8:	687b      	ldr	r3, [r7, #4]
   1d6ea:	4a11      	ldr	r2, [pc, #68]	; (1d730 <TIM_Base_SetConfig+0x128>)
   1d6ec:	4293      	cmp	r3, r2
   1d6ee:	d007      	beq.n	1d700 <TIM_Base_SetConfig+0xf8>
   1d6f0:	687b      	ldr	r3, [r7, #4]
   1d6f2:	4a10      	ldr	r2, [pc, #64]	; (1d734 <TIM_Base_SetConfig+0x12c>)
   1d6f4:	4293      	cmp	r3, r2
   1d6f6:	d003      	beq.n	1d700 <TIM_Base_SetConfig+0xf8>
   1d6f8:	687b      	ldr	r3, [r7, #4]
   1d6fa:	4a0f      	ldr	r2, [pc, #60]	; (1d738 <TIM_Base_SetConfig+0x130>)
   1d6fc:	4293      	cmp	r3, r2
   1d6fe:	d103      	bne.n	1d708 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
   1d700:	683b      	ldr	r3, [r7, #0]
   1d702:	691a      	ldr	r2, [r3, #16]
   1d704:	687b      	ldr	r3, [r7, #4]
   1d706:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
   1d708:	687b      	ldr	r3, [r7, #4]
   1d70a:	2201      	movs	r2, #1
   1d70c:	615a      	str	r2, [r3, #20]
}
   1d70e:	bf00      	nop
   1d710:	3714      	adds	r7, #20
   1d712:	46bd      	mov	sp, r7
   1d714:	f85d 7b04 	ldr.w	r7, [sp], #4
   1d718:	4770      	bx	lr
   1d71a:	bf00      	nop
   1d71c:	40010000 	.word	0x40010000
   1d720:	40000400 	.word	0x40000400
   1d724:	40000800 	.word	0x40000800
   1d728:	40000c00 	.word	0x40000c00
   1d72c:	40010400 	.word	0x40010400
   1d730:	40014000 	.word	0x40014000
   1d734:	40014400 	.word	0x40014400
   1d738:	40014800 	.word	0x40014800

0001d73c <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
   1d73c:	b480      	push	{r7}
   1d73e:	b087      	sub	sp, #28
   1d740:	af00      	add	r7, sp, #0
   1d742:	6078      	str	r0, [r7, #4]
   1d744:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
   1d746:	687b      	ldr	r3, [r7, #4]
   1d748:	6a1b      	ldr	r3, [r3, #32]
   1d74a:	f023 0201 	bic.w	r2, r3, #1
   1d74e:	687b      	ldr	r3, [r7, #4]
   1d750:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
   1d752:	687b      	ldr	r3, [r7, #4]
   1d754:	6a1b      	ldr	r3, [r3, #32]
   1d756:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
   1d758:	687b      	ldr	r3, [r7, #4]
   1d75a:	685b      	ldr	r3, [r3, #4]
   1d75c:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
   1d75e:	687b      	ldr	r3, [r7, #4]
   1d760:	699b      	ldr	r3, [r3, #24]
   1d762:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
   1d764:	68fa      	ldr	r2, [r7, #12]
   1d766:	4b37      	ldr	r3, [pc, #220]	; (1d844 <TIM_OC1_SetConfig+0x108>)
   1d768:	4013      	ands	r3, r2
   1d76a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
   1d76c:	68fb      	ldr	r3, [r7, #12]
   1d76e:	f023 0303 	bic.w	r3, r3, #3
   1d772:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
   1d774:	683b      	ldr	r3, [r7, #0]
   1d776:	681b      	ldr	r3, [r3, #0]
   1d778:	68fa      	ldr	r2, [r7, #12]
   1d77a:	4313      	orrs	r3, r2
   1d77c:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
   1d77e:	697b      	ldr	r3, [r7, #20]
   1d780:	f023 0302 	bic.w	r3, r3, #2
   1d784:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
   1d786:	683b      	ldr	r3, [r7, #0]
   1d788:	689b      	ldr	r3, [r3, #8]
   1d78a:	697a      	ldr	r2, [r7, #20]
   1d78c:	4313      	orrs	r3, r2
   1d78e:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
   1d790:	687b      	ldr	r3, [r7, #4]
   1d792:	4a2d      	ldr	r2, [pc, #180]	; (1d848 <TIM_OC1_SetConfig+0x10c>)
   1d794:	4293      	cmp	r3, r2
   1d796:	d00f      	beq.n	1d7b8 <TIM_OC1_SetConfig+0x7c>
   1d798:	687b      	ldr	r3, [r7, #4]
   1d79a:	4a2c      	ldr	r2, [pc, #176]	; (1d84c <TIM_OC1_SetConfig+0x110>)
   1d79c:	4293      	cmp	r3, r2
   1d79e:	d00b      	beq.n	1d7b8 <TIM_OC1_SetConfig+0x7c>
   1d7a0:	687b      	ldr	r3, [r7, #4]
   1d7a2:	4a2b      	ldr	r2, [pc, #172]	; (1d850 <TIM_OC1_SetConfig+0x114>)
   1d7a4:	4293      	cmp	r3, r2
   1d7a6:	d007      	beq.n	1d7b8 <TIM_OC1_SetConfig+0x7c>
   1d7a8:	687b      	ldr	r3, [r7, #4]
   1d7aa:	4a2a      	ldr	r2, [pc, #168]	; (1d854 <TIM_OC1_SetConfig+0x118>)
   1d7ac:	4293      	cmp	r3, r2
   1d7ae:	d003      	beq.n	1d7b8 <TIM_OC1_SetConfig+0x7c>
   1d7b0:	687b      	ldr	r3, [r7, #4]
   1d7b2:	4a29      	ldr	r2, [pc, #164]	; (1d858 <TIM_OC1_SetConfig+0x11c>)
   1d7b4:	4293      	cmp	r3, r2
   1d7b6:	d10c      	bne.n	1d7d2 <TIM_OC1_SetConfig+0x96>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
   1d7b8:	697b      	ldr	r3, [r7, #20]
   1d7ba:	f023 0308 	bic.w	r3, r3, #8
   1d7be:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
   1d7c0:	683b      	ldr	r3, [r7, #0]
   1d7c2:	68db      	ldr	r3, [r3, #12]
   1d7c4:	697a      	ldr	r2, [r7, #20]
   1d7c6:	4313      	orrs	r3, r2
   1d7c8:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
   1d7ca:	697b      	ldr	r3, [r7, #20]
   1d7cc:	f023 0304 	bic.w	r3, r3, #4
   1d7d0:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
   1d7d2:	687b      	ldr	r3, [r7, #4]
   1d7d4:	4a1c      	ldr	r2, [pc, #112]	; (1d848 <TIM_OC1_SetConfig+0x10c>)
   1d7d6:	4293      	cmp	r3, r2
   1d7d8:	d00f      	beq.n	1d7fa <TIM_OC1_SetConfig+0xbe>
   1d7da:	687b      	ldr	r3, [r7, #4]
   1d7dc:	4a1b      	ldr	r2, [pc, #108]	; (1d84c <TIM_OC1_SetConfig+0x110>)
   1d7de:	4293      	cmp	r3, r2
   1d7e0:	d00b      	beq.n	1d7fa <TIM_OC1_SetConfig+0xbe>
   1d7e2:	687b      	ldr	r3, [r7, #4]
   1d7e4:	4a1a      	ldr	r2, [pc, #104]	; (1d850 <TIM_OC1_SetConfig+0x114>)
   1d7e6:	4293      	cmp	r3, r2
   1d7e8:	d007      	beq.n	1d7fa <TIM_OC1_SetConfig+0xbe>
   1d7ea:	687b      	ldr	r3, [r7, #4]
   1d7ec:	4a19      	ldr	r2, [pc, #100]	; (1d854 <TIM_OC1_SetConfig+0x118>)
   1d7ee:	4293      	cmp	r3, r2
   1d7f0:	d003      	beq.n	1d7fa <TIM_OC1_SetConfig+0xbe>
   1d7f2:	687b      	ldr	r3, [r7, #4]
   1d7f4:	4a18      	ldr	r2, [pc, #96]	; (1d858 <TIM_OC1_SetConfig+0x11c>)
   1d7f6:	4293      	cmp	r3, r2
   1d7f8:	d111      	bne.n	1d81e <TIM_OC1_SetConfig+0xe2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
   1d7fa:	693b      	ldr	r3, [r7, #16]
   1d7fc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   1d800:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
   1d802:	693b      	ldr	r3, [r7, #16]
   1d804:	f423 7300 	bic.w	r3, r3, #512	; 0x200
   1d808:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
   1d80a:	683b      	ldr	r3, [r7, #0]
   1d80c:	695b      	ldr	r3, [r3, #20]
   1d80e:	693a      	ldr	r2, [r7, #16]
   1d810:	4313      	orrs	r3, r2
   1d812:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
   1d814:	683b      	ldr	r3, [r7, #0]
   1d816:	699b      	ldr	r3, [r3, #24]
   1d818:	693a      	ldr	r2, [r7, #16]
   1d81a:	4313      	orrs	r3, r2
   1d81c:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
   1d81e:	687b      	ldr	r3, [r7, #4]
   1d820:	693a      	ldr	r2, [r7, #16]
   1d822:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
   1d824:	687b      	ldr	r3, [r7, #4]
   1d826:	68fa      	ldr	r2, [r7, #12]
   1d828:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
   1d82a:	683b      	ldr	r3, [r7, #0]
   1d82c:	685a      	ldr	r2, [r3, #4]
   1d82e:	687b      	ldr	r3, [r7, #4]
   1d830:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
   1d832:	687b      	ldr	r3, [r7, #4]
   1d834:	697a      	ldr	r2, [r7, #20]
   1d836:	621a      	str	r2, [r3, #32]
}
   1d838:	bf00      	nop
   1d83a:	371c      	adds	r7, #28
   1d83c:	46bd      	mov	sp, r7
   1d83e:	f85d 7b04 	ldr.w	r7, [sp], #4
   1d842:	4770      	bx	lr
   1d844:	fffeff8f 	.word	0xfffeff8f
   1d848:	40010000 	.word	0x40010000
   1d84c:	40010400 	.word	0x40010400
   1d850:	40014000 	.word	0x40014000
   1d854:	40014400 	.word	0x40014400
   1d858:	40014800 	.word	0x40014800

0001d85c <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
   1d85c:	b480      	push	{r7}
   1d85e:	b087      	sub	sp, #28
   1d860:	af00      	add	r7, sp, #0
   1d862:	6078      	str	r0, [r7, #4]
   1d864:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
   1d866:	687b      	ldr	r3, [r7, #4]
   1d868:	6a1b      	ldr	r3, [r3, #32]
   1d86a:	f023 0210 	bic.w	r2, r3, #16
   1d86e:	687b      	ldr	r3, [r7, #4]
   1d870:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
   1d872:	687b      	ldr	r3, [r7, #4]
   1d874:	6a1b      	ldr	r3, [r3, #32]
   1d876:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
   1d878:	687b      	ldr	r3, [r7, #4]
   1d87a:	685b      	ldr	r3, [r3, #4]
   1d87c:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
   1d87e:	687b      	ldr	r3, [r7, #4]
   1d880:	699b      	ldr	r3, [r3, #24]
   1d882:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
   1d884:	68fa      	ldr	r2, [r7, #12]
   1d886:	4b34      	ldr	r3, [pc, #208]	; (1d958 <TIM_OC2_SetConfig+0xfc>)
   1d888:	4013      	ands	r3, r2
   1d88a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
   1d88c:	68fb      	ldr	r3, [r7, #12]
   1d88e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
   1d892:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
   1d894:	683b      	ldr	r3, [r7, #0]
   1d896:	681b      	ldr	r3, [r3, #0]
   1d898:	021b      	lsls	r3, r3, #8
   1d89a:	68fa      	ldr	r2, [r7, #12]
   1d89c:	4313      	orrs	r3, r2
   1d89e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
   1d8a0:	697b      	ldr	r3, [r7, #20]
   1d8a2:	f023 0320 	bic.w	r3, r3, #32
   1d8a6:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
   1d8a8:	683b      	ldr	r3, [r7, #0]
   1d8aa:	689b      	ldr	r3, [r3, #8]
   1d8ac:	011b      	lsls	r3, r3, #4
   1d8ae:	697a      	ldr	r2, [r7, #20]
   1d8b0:	4313      	orrs	r3, r2
   1d8b2:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
   1d8b4:	687b      	ldr	r3, [r7, #4]
   1d8b6:	4a29      	ldr	r2, [pc, #164]	; (1d95c <TIM_OC2_SetConfig+0x100>)
   1d8b8:	4293      	cmp	r3, r2
   1d8ba:	d003      	beq.n	1d8c4 <TIM_OC2_SetConfig+0x68>
   1d8bc:	687b      	ldr	r3, [r7, #4]
   1d8be:	4a28      	ldr	r2, [pc, #160]	; (1d960 <TIM_OC2_SetConfig+0x104>)
   1d8c0:	4293      	cmp	r3, r2
   1d8c2:	d10d      	bne.n	1d8e0 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
   1d8c4:	697b      	ldr	r3, [r7, #20]
   1d8c6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   1d8ca:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
   1d8cc:	683b      	ldr	r3, [r7, #0]
   1d8ce:	68db      	ldr	r3, [r3, #12]
   1d8d0:	011b      	lsls	r3, r3, #4
   1d8d2:	697a      	ldr	r2, [r7, #20]
   1d8d4:	4313      	orrs	r3, r2
   1d8d6:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
   1d8d8:	697b      	ldr	r3, [r7, #20]
   1d8da:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   1d8de:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
   1d8e0:	687b      	ldr	r3, [r7, #4]
   1d8e2:	4a1e      	ldr	r2, [pc, #120]	; (1d95c <TIM_OC2_SetConfig+0x100>)
   1d8e4:	4293      	cmp	r3, r2
   1d8e6:	d00f      	beq.n	1d908 <TIM_OC2_SetConfig+0xac>
   1d8e8:	687b      	ldr	r3, [r7, #4]
   1d8ea:	4a1d      	ldr	r2, [pc, #116]	; (1d960 <TIM_OC2_SetConfig+0x104>)
   1d8ec:	4293      	cmp	r3, r2
   1d8ee:	d00b      	beq.n	1d908 <TIM_OC2_SetConfig+0xac>
   1d8f0:	687b      	ldr	r3, [r7, #4]
   1d8f2:	4a1c      	ldr	r2, [pc, #112]	; (1d964 <TIM_OC2_SetConfig+0x108>)
   1d8f4:	4293      	cmp	r3, r2
   1d8f6:	d007      	beq.n	1d908 <TIM_OC2_SetConfig+0xac>
   1d8f8:	687b      	ldr	r3, [r7, #4]
   1d8fa:	4a1b      	ldr	r2, [pc, #108]	; (1d968 <TIM_OC2_SetConfig+0x10c>)
   1d8fc:	4293      	cmp	r3, r2
   1d8fe:	d003      	beq.n	1d908 <TIM_OC2_SetConfig+0xac>
   1d900:	687b      	ldr	r3, [r7, #4]
   1d902:	4a1a      	ldr	r2, [pc, #104]	; (1d96c <TIM_OC2_SetConfig+0x110>)
   1d904:	4293      	cmp	r3, r2
   1d906:	d113      	bne.n	1d930 <TIM_OC2_SetConfig+0xd4>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
   1d908:	693b      	ldr	r3, [r7, #16]
   1d90a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
   1d90e:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
   1d910:	693b      	ldr	r3, [r7, #16]
   1d912:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   1d916:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
   1d918:	683b      	ldr	r3, [r7, #0]
   1d91a:	695b      	ldr	r3, [r3, #20]
   1d91c:	009b      	lsls	r3, r3, #2
   1d91e:	693a      	ldr	r2, [r7, #16]
   1d920:	4313      	orrs	r3, r2
   1d922:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
   1d924:	683b      	ldr	r3, [r7, #0]
   1d926:	699b      	ldr	r3, [r3, #24]
   1d928:	009b      	lsls	r3, r3, #2
   1d92a:	693a      	ldr	r2, [r7, #16]
   1d92c:	4313      	orrs	r3, r2
   1d92e:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
   1d930:	687b      	ldr	r3, [r7, #4]
   1d932:	693a      	ldr	r2, [r7, #16]
   1d934:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
   1d936:	687b      	ldr	r3, [r7, #4]
   1d938:	68fa      	ldr	r2, [r7, #12]
   1d93a:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
   1d93c:	683b      	ldr	r3, [r7, #0]
   1d93e:	685a      	ldr	r2, [r3, #4]
   1d940:	687b      	ldr	r3, [r7, #4]
   1d942:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
   1d944:	687b      	ldr	r3, [r7, #4]
   1d946:	697a      	ldr	r2, [r7, #20]
   1d948:	621a      	str	r2, [r3, #32]
}
   1d94a:	bf00      	nop
   1d94c:	371c      	adds	r7, #28
   1d94e:	46bd      	mov	sp, r7
   1d950:	f85d 7b04 	ldr.w	r7, [sp], #4
   1d954:	4770      	bx	lr
   1d956:	bf00      	nop
   1d958:	feff8fff 	.word	0xfeff8fff
   1d95c:	40010000 	.word	0x40010000
   1d960:	40010400 	.word	0x40010400
   1d964:	40014000 	.word	0x40014000
   1d968:	40014400 	.word	0x40014400
   1d96c:	40014800 	.word	0x40014800

0001d970 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
   1d970:	b480      	push	{r7}
   1d972:	b087      	sub	sp, #28
   1d974:	af00      	add	r7, sp, #0
   1d976:	6078      	str	r0, [r7, #4]
   1d978:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
   1d97a:	687b      	ldr	r3, [r7, #4]
   1d97c:	6a1b      	ldr	r3, [r3, #32]
   1d97e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
   1d982:	687b      	ldr	r3, [r7, #4]
   1d984:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
   1d986:	687b      	ldr	r3, [r7, #4]
   1d988:	6a1b      	ldr	r3, [r3, #32]
   1d98a:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
   1d98c:	687b      	ldr	r3, [r7, #4]
   1d98e:	685b      	ldr	r3, [r3, #4]
   1d990:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
   1d992:	687b      	ldr	r3, [r7, #4]
   1d994:	69db      	ldr	r3, [r3, #28]
   1d996:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
   1d998:	68fb      	ldr	r3, [r7, #12]
   1d99a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   1d99e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
   1d9a0:	68fb      	ldr	r3, [r7, #12]
   1d9a2:	f023 0303 	bic.w	r3, r3, #3
   1d9a6:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
   1d9a8:	683b      	ldr	r3, [r7, #0]
   1d9aa:	681b      	ldr	r3, [r3, #0]
   1d9ac:	68fa      	ldr	r2, [r7, #12]
   1d9ae:	4313      	orrs	r3, r2
   1d9b0:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
   1d9b2:	697b      	ldr	r3, [r7, #20]
   1d9b4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
   1d9b8:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
   1d9ba:	683b      	ldr	r3, [r7, #0]
   1d9bc:	689b      	ldr	r3, [r3, #8]
   1d9be:	021b      	lsls	r3, r3, #8
   1d9c0:	697a      	ldr	r2, [r7, #20]
   1d9c2:	4313      	orrs	r3, r2
   1d9c4:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
   1d9c6:	687b      	ldr	r3, [r7, #4]
   1d9c8:	4a27      	ldr	r2, [pc, #156]	; (1da68 <TIM_OC3_SetConfig+0xf8>)
   1d9ca:	4293      	cmp	r3, r2
   1d9cc:	d003      	beq.n	1d9d6 <TIM_OC3_SetConfig+0x66>
   1d9ce:	687b      	ldr	r3, [r7, #4]
   1d9d0:	4a26      	ldr	r2, [pc, #152]	; (1da6c <TIM_OC3_SetConfig+0xfc>)
   1d9d2:	4293      	cmp	r3, r2
   1d9d4:	d10d      	bne.n	1d9f2 <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
   1d9d6:	697b      	ldr	r3, [r7, #20]
   1d9d8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   1d9dc:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
   1d9de:	683b      	ldr	r3, [r7, #0]
   1d9e0:	68db      	ldr	r3, [r3, #12]
   1d9e2:	021b      	lsls	r3, r3, #8
   1d9e4:	697a      	ldr	r2, [r7, #20]
   1d9e6:	4313      	orrs	r3, r2
   1d9e8:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
   1d9ea:	697b      	ldr	r3, [r7, #20]
   1d9ec:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
   1d9f0:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
   1d9f2:	687b      	ldr	r3, [r7, #4]
   1d9f4:	4a1c      	ldr	r2, [pc, #112]	; (1da68 <TIM_OC3_SetConfig+0xf8>)
   1d9f6:	4293      	cmp	r3, r2
   1d9f8:	d00f      	beq.n	1da1a <TIM_OC3_SetConfig+0xaa>
   1d9fa:	687b      	ldr	r3, [r7, #4]
   1d9fc:	4a1b      	ldr	r2, [pc, #108]	; (1da6c <TIM_OC3_SetConfig+0xfc>)
   1d9fe:	4293      	cmp	r3, r2
   1da00:	d00b      	beq.n	1da1a <TIM_OC3_SetConfig+0xaa>
   1da02:	687b      	ldr	r3, [r7, #4]
   1da04:	4a1a      	ldr	r2, [pc, #104]	; (1da70 <TIM_OC3_SetConfig+0x100>)
   1da06:	4293      	cmp	r3, r2
   1da08:	d007      	beq.n	1da1a <TIM_OC3_SetConfig+0xaa>
   1da0a:	687b      	ldr	r3, [r7, #4]
   1da0c:	4a19      	ldr	r2, [pc, #100]	; (1da74 <TIM_OC3_SetConfig+0x104>)
   1da0e:	4293      	cmp	r3, r2
   1da10:	d003      	beq.n	1da1a <TIM_OC3_SetConfig+0xaa>
   1da12:	687b      	ldr	r3, [r7, #4]
   1da14:	4a18      	ldr	r2, [pc, #96]	; (1da78 <TIM_OC3_SetConfig+0x108>)
   1da16:	4293      	cmp	r3, r2
   1da18:	d113      	bne.n	1da42 <TIM_OC3_SetConfig+0xd2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
   1da1a:	693b      	ldr	r3, [r7, #16]
   1da1c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1da20:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
   1da22:	693b      	ldr	r3, [r7, #16]
   1da24:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   1da28:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
   1da2a:	683b      	ldr	r3, [r7, #0]
   1da2c:	695b      	ldr	r3, [r3, #20]
   1da2e:	011b      	lsls	r3, r3, #4
   1da30:	693a      	ldr	r2, [r7, #16]
   1da32:	4313      	orrs	r3, r2
   1da34:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
   1da36:	683b      	ldr	r3, [r7, #0]
   1da38:	699b      	ldr	r3, [r3, #24]
   1da3a:	011b      	lsls	r3, r3, #4
   1da3c:	693a      	ldr	r2, [r7, #16]
   1da3e:	4313      	orrs	r3, r2
   1da40:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
   1da42:	687b      	ldr	r3, [r7, #4]
   1da44:	693a      	ldr	r2, [r7, #16]
   1da46:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
   1da48:	687b      	ldr	r3, [r7, #4]
   1da4a:	68fa      	ldr	r2, [r7, #12]
   1da4c:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
   1da4e:	683b      	ldr	r3, [r7, #0]
   1da50:	685a      	ldr	r2, [r3, #4]
   1da52:	687b      	ldr	r3, [r7, #4]
   1da54:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
   1da56:	687b      	ldr	r3, [r7, #4]
   1da58:	697a      	ldr	r2, [r7, #20]
   1da5a:	621a      	str	r2, [r3, #32]
}
   1da5c:	bf00      	nop
   1da5e:	371c      	adds	r7, #28
   1da60:	46bd      	mov	sp, r7
   1da62:	f85d 7b04 	ldr.w	r7, [sp], #4
   1da66:	4770      	bx	lr
   1da68:	40010000 	.word	0x40010000
   1da6c:	40010400 	.word	0x40010400
   1da70:	40014000 	.word	0x40014000
   1da74:	40014400 	.word	0x40014400
   1da78:	40014800 	.word	0x40014800

0001da7c <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
   1da7c:	b480      	push	{r7}
   1da7e:	b087      	sub	sp, #28
   1da80:	af00      	add	r7, sp, #0
   1da82:	6078      	str	r0, [r7, #4]
   1da84:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
   1da86:	687b      	ldr	r3, [r7, #4]
   1da88:	6a1b      	ldr	r3, [r3, #32]
   1da8a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
   1da8e:	687b      	ldr	r3, [r7, #4]
   1da90:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
   1da92:	687b      	ldr	r3, [r7, #4]
   1da94:	6a1b      	ldr	r3, [r3, #32]
   1da96:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
   1da98:	687b      	ldr	r3, [r7, #4]
   1da9a:	685b      	ldr	r3, [r3, #4]
   1da9c:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
   1da9e:	687b      	ldr	r3, [r7, #4]
   1daa0:	69db      	ldr	r3, [r3, #28]
   1daa2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
   1daa4:	68fb      	ldr	r3, [r7, #12]
   1daa6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
   1daaa:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
   1daac:	68fb      	ldr	r3, [r7, #12]
   1daae:	f423 7340 	bic.w	r3, r3, #768	; 0x300
   1dab2:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
   1dab4:	683b      	ldr	r3, [r7, #0]
   1dab6:	681b      	ldr	r3, [r3, #0]
   1dab8:	021b      	lsls	r3, r3, #8
   1daba:	68fa      	ldr	r2, [r7, #12]
   1dabc:	4313      	orrs	r3, r2
   1dabe:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
   1dac0:	693b      	ldr	r3, [r7, #16]
   1dac2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   1dac6:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
   1dac8:	683b      	ldr	r3, [r7, #0]
   1daca:	689b      	ldr	r3, [r3, #8]
   1dacc:	031b      	lsls	r3, r3, #12
   1dace:	693a      	ldr	r2, [r7, #16]
   1dad0:	4313      	orrs	r3, r2
   1dad2:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
   1dad4:	687b      	ldr	r3, [r7, #4]
   1dad6:	4a18      	ldr	r2, [pc, #96]	; (1db38 <TIM_OC4_SetConfig+0xbc>)
   1dad8:	4293      	cmp	r3, r2
   1dada:	d00f      	beq.n	1dafc <TIM_OC4_SetConfig+0x80>
   1dadc:	687b      	ldr	r3, [r7, #4]
   1dade:	4a17      	ldr	r2, [pc, #92]	; (1db3c <TIM_OC4_SetConfig+0xc0>)
   1dae0:	4293      	cmp	r3, r2
   1dae2:	d00b      	beq.n	1dafc <TIM_OC4_SetConfig+0x80>
   1dae4:	687b      	ldr	r3, [r7, #4]
   1dae6:	4a16      	ldr	r2, [pc, #88]	; (1db40 <TIM_OC4_SetConfig+0xc4>)
   1dae8:	4293      	cmp	r3, r2
   1daea:	d007      	beq.n	1dafc <TIM_OC4_SetConfig+0x80>
   1daec:	687b      	ldr	r3, [r7, #4]
   1daee:	4a15      	ldr	r2, [pc, #84]	; (1db44 <TIM_OC4_SetConfig+0xc8>)
   1daf0:	4293      	cmp	r3, r2
   1daf2:	d003      	beq.n	1dafc <TIM_OC4_SetConfig+0x80>
   1daf4:	687b      	ldr	r3, [r7, #4]
   1daf6:	4a14      	ldr	r2, [pc, #80]	; (1db48 <TIM_OC4_SetConfig+0xcc>)
   1daf8:	4293      	cmp	r3, r2
   1dafa:	d109      	bne.n	1db10 <TIM_OC4_SetConfig+0x94>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
   1dafc:	697b      	ldr	r3, [r7, #20]
   1dafe:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
   1db02:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
   1db04:	683b      	ldr	r3, [r7, #0]
   1db06:	695b      	ldr	r3, [r3, #20]
   1db08:	019b      	lsls	r3, r3, #6
   1db0a:	697a      	ldr	r2, [r7, #20]
   1db0c:	4313      	orrs	r3, r2
   1db0e:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
   1db10:	687b      	ldr	r3, [r7, #4]
   1db12:	697a      	ldr	r2, [r7, #20]
   1db14:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
   1db16:	687b      	ldr	r3, [r7, #4]
   1db18:	68fa      	ldr	r2, [r7, #12]
   1db1a:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
   1db1c:	683b      	ldr	r3, [r7, #0]
   1db1e:	685a      	ldr	r2, [r3, #4]
   1db20:	687b      	ldr	r3, [r7, #4]
   1db22:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
   1db24:	687b      	ldr	r3, [r7, #4]
   1db26:	693a      	ldr	r2, [r7, #16]
   1db28:	621a      	str	r2, [r3, #32]
}
   1db2a:	bf00      	nop
   1db2c:	371c      	adds	r7, #28
   1db2e:	46bd      	mov	sp, r7
   1db30:	f85d 7b04 	ldr.w	r7, [sp], #4
   1db34:	4770      	bx	lr
   1db36:	bf00      	nop
   1db38:	40010000 	.word	0x40010000
   1db3c:	40010400 	.word	0x40010400
   1db40:	40014000 	.word	0x40014000
   1db44:	40014400 	.word	0x40014400
   1db48:	40014800 	.word	0x40014800

0001db4c <TIM_OC5_SetConfig>:
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC5_SetConfig(TIM_TypeDef *TIMx,
                              TIM_OC_InitTypeDef *OC_Config)
{
   1db4c:	b480      	push	{r7}
   1db4e:	b087      	sub	sp, #28
   1db50:	af00      	add	r7, sp, #0
   1db52:	6078      	str	r0, [r7, #4]
   1db54:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC5E;
   1db56:	687b      	ldr	r3, [r7, #4]
   1db58:	6a1b      	ldr	r3, [r3, #32]
   1db5a:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
   1db5e:	687b      	ldr	r3, [r7, #4]
   1db60:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
   1db62:	687b      	ldr	r3, [r7, #4]
   1db64:	6a1b      	ldr	r3, [r3, #32]
   1db66:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
   1db68:	687b      	ldr	r3, [r7, #4]
   1db6a:	685b      	ldr	r3, [r3, #4]
   1db6c:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
   1db6e:	687b      	ldr	r3, [r7, #4]
   1db70:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1db72:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
   1db74:	68fb      	ldr	r3, [r7, #12]
   1db76:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   1db7a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
   1db7c:	683b      	ldr	r3, [r7, #0]
   1db7e:	681b      	ldr	r3, [r3, #0]
   1db80:	68fa      	ldr	r2, [r7, #12]
   1db82:	4313      	orrs	r3, r2
   1db84:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC5P;
   1db86:	693b      	ldr	r3, [r7, #16]
   1db88:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
   1db8c:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 16U);
   1db8e:	683b      	ldr	r3, [r7, #0]
   1db90:	689b      	ldr	r3, [r3, #8]
   1db92:	041b      	lsls	r3, r3, #16
   1db94:	693a      	ldr	r2, [r7, #16]
   1db96:	4313      	orrs	r3, r2
   1db98:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
   1db9a:	687b      	ldr	r3, [r7, #4]
   1db9c:	4a17      	ldr	r2, [pc, #92]	; (1dbfc <TIM_OC5_SetConfig+0xb0>)
   1db9e:	4293      	cmp	r3, r2
   1dba0:	d00f      	beq.n	1dbc2 <TIM_OC5_SetConfig+0x76>
   1dba2:	687b      	ldr	r3, [r7, #4]
   1dba4:	4a16      	ldr	r2, [pc, #88]	; (1dc00 <TIM_OC5_SetConfig+0xb4>)
   1dba6:	4293      	cmp	r3, r2
   1dba8:	d00b      	beq.n	1dbc2 <TIM_OC5_SetConfig+0x76>
   1dbaa:	687b      	ldr	r3, [r7, #4]
   1dbac:	4a15      	ldr	r2, [pc, #84]	; (1dc04 <TIM_OC5_SetConfig+0xb8>)
   1dbae:	4293      	cmp	r3, r2
   1dbb0:	d007      	beq.n	1dbc2 <TIM_OC5_SetConfig+0x76>
   1dbb2:	687b      	ldr	r3, [r7, #4]
   1dbb4:	4a14      	ldr	r2, [pc, #80]	; (1dc08 <TIM_OC5_SetConfig+0xbc>)
   1dbb6:	4293      	cmp	r3, r2
   1dbb8:	d003      	beq.n	1dbc2 <TIM_OC5_SetConfig+0x76>
   1dbba:	687b      	ldr	r3, [r7, #4]
   1dbbc:	4a13      	ldr	r2, [pc, #76]	; (1dc0c <TIM_OC5_SetConfig+0xc0>)
   1dbbe:	4293      	cmp	r3, r2
   1dbc0:	d109      	bne.n	1dbd6 <TIM_OC5_SetConfig+0x8a>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS5;
   1dbc2:	697b      	ldr	r3, [r7, #20]
   1dbc4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
   1dbc8:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
   1dbca:	683b      	ldr	r3, [r7, #0]
   1dbcc:	695b      	ldr	r3, [r3, #20]
   1dbce:	021b      	lsls	r3, r3, #8
   1dbd0:	697a      	ldr	r2, [r7, #20]
   1dbd2:	4313      	orrs	r3, r2
   1dbd4:	617b      	str	r3, [r7, #20]
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
   1dbd6:	687b      	ldr	r3, [r7, #4]
   1dbd8:	697a      	ldr	r2, [r7, #20]
   1dbda:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
   1dbdc:	687b      	ldr	r3, [r7, #4]
   1dbde:	68fa      	ldr	r2, [r7, #12]
   1dbe0:	655a      	str	r2, [r3, #84]	; 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR5 = OC_Config->Pulse;
   1dbe2:	683b      	ldr	r3, [r7, #0]
   1dbe4:	685a      	ldr	r2, [r3, #4]
   1dbe6:	687b      	ldr	r3, [r7, #4]
   1dbe8:	659a      	str	r2, [r3, #88]	; 0x58

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
   1dbea:	687b      	ldr	r3, [r7, #4]
   1dbec:	693a      	ldr	r2, [r7, #16]
   1dbee:	621a      	str	r2, [r3, #32]
}
   1dbf0:	bf00      	nop
   1dbf2:	371c      	adds	r7, #28
   1dbf4:	46bd      	mov	sp, r7
   1dbf6:	f85d 7b04 	ldr.w	r7, [sp], #4
   1dbfa:	4770      	bx	lr
   1dbfc:	40010000 	.word	0x40010000
   1dc00:	40010400 	.word	0x40010400
   1dc04:	40014000 	.word	0x40014000
   1dc08:	40014400 	.word	0x40014400
   1dc0c:	40014800 	.word	0x40014800

0001dc10 <TIM_OC6_SetConfig>:
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC6_SetConfig(TIM_TypeDef *TIMx,
                              TIM_OC_InitTypeDef *OC_Config)
{
   1dc10:	b480      	push	{r7}
   1dc12:	b087      	sub	sp, #28
   1dc14:	af00      	add	r7, sp, #0
   1dc16:	6078      	str	r0, [r7, #4]
   1dc18:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC6E;
   1dc1a:	687b      	ldr	r3, [r7, #4]
   1dc1c:	6a1b      	ldr	r3, [r3, #32]
   1dc1e:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
   1dc22:	687b      	ldr	r3, [r7, #4]
   1dc24:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
   1dc26:	687b      	ldr	r3, [r7, #4]
   1dc28:	6a1b      	ldr	r3, [r3, #32]
   1dc2a:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
   1dc2c:	687b      	ldr	r3, [r7, #4]
   1dc2e:	685b      	ldr	r3, [r3, #4]
   1dc30:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
   1dc32:	687b      	ldr	r3, [r7, #4]
   1dc34:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1dc36:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
   1dc38:	68fb      	ldr	r3, [r7, #12]
   1dc3a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
   1dc3e:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
   1dc40:	683b      	ldr	r3, [r7, #0]
   1dc42:	681b      	ldr	r3, [r3, #0]
   1dc44:	021b      	lsls	r3, r3, #8
   1dc46:	68fa      	ldr	r2, [r7, #12]
   1dc48:	4313      	orrs	r3, r2
   1dc4a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
   1dc4c:	693b      	ldr	r3, [r7, #16]
   1dc4e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
   1dc52:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 20U);
   1dc54:	683b      	ldr	r3, [r7, #0]
   1dc56:	689b      	ldr	r3, [r3, #8]
   1dc58:	051b      	lsls	r3, r3, #20
   1dc5a:	693a      	ldr	r2, [r7, #16]
   1dc5c:	4313      	orrs	r3, r2
   1dc5e:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
   1dc60:	687b      	ldr	r3, [r7, #4]
   1dc62:	4a18      	ldr	r2, [pc, #96]	; (1dcc4 <TIM_OC6_SetConfig+0xb4>)
   1dc64:	4293      	cmp	r3, r2
   1dc66:	d00f      	beq.n	1dc88 <TIM_OC6_SetConfig+0x78>
   1dc68:	687b      	ldr	r3, [r7, #4]
   1dc6a:	4a17      	ldr	r2, [pc, #92]	; (1dcc8 <TIM_OC6_SetConfig+0xb8>)
   1dc6c:	4293      	cmp	r3, r2
   1dc6e:	d00b      	beq.n	1dc88 <TIM_OC6_SetConfig+0x78>
   1dc70:	687b      	ldr	r3, [r7, #4]
   1dc72:	4a16      	ldr	r2, [pc, #88]	; (1dccc <TIM_OC6_SetConfig+0xbc>)
   1dc74:	4293      	cmp	r3, r2
   1dc76:	d007      	beq.n	1dc88 <TIM_OC6_SetConfig+0x78>
   1dc78:	687b      	ldr	r3, [r7, #4]
   1dc7a:	4a15      	ldr	r2, [pc, #84]	; (1dcd0 <TIM_OC6_SetConfig+0xc0>)
   1dc7c:	4293      	cmp	r3, r2
   1dc7e:	d003      	beq.n	1dc88 <TIM_OC6_SetConfig+0x78>
   1dc80:	687b      	ldr	r3, [r7, #4]
   1dc82:	4a14      	ldr	r2, [pc, #80]	; (1dcd4 <TIM_OC6_SetConfig+0xc4>)
   1dc84:	4293      	cmp	r3, r2
   1dc86:	d109      	bne.n	1dc9c <TIM_OC6_SetConfig+0x8c>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS6;
   1dc88:	697b      	ldr	r3, [r7, #20]
   1dc8a:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
   1dc8e:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
   1dc90:	683b      	ldr	r3, [r7, #0]
   1dc92:	695b      	ldr	r3, [r3, #20]
   1dc94:	029b      	lsls	r3, r3, #10
   1dc96:	697a      	ldr	r2, [r7, #20]
   1dc98:	4313      	orrs	r3, r2
   1dc9a:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
   1dc9c:	687b      	ldr	r3, [r7, #4]
   1dc9e:	697a      	ldr	r2, [r7, #20]
   1dca0:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
   1dca2:	687b      	ldr	r3, [r7, #4]
   1dca4:	68fa      	ldr	r2, [r7, #12]
   1dca6:	655a      	str	r2, [r3, #84]	; 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR6 = OC_Config->Pulse;
   1dca8:	683b      	ldr	r3, [r7, #0]
   1dcaa:	685a      	ldr	r2, [r3, #4]
   1dcac:	687b      	ldr	r3, [r7, #4]
   1dcae:	65da      	str	r2, [r3, #92]	; 0x5c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
   1dcb0:	687b      	ldr	r3, [r7, #4]
   1dcb2:	693a      	ldr	r2, [r7, #16]
   1dcb4:	621a      	str	r2, [r3, #32]
}
   1dcb6:	bf00      	nop
   1dcb8:	371c      	adds	r7, #28
   1dcba:	46bd      	mov	sp, r7
   1dcbc:	f85d 7b04 	ldr.w	r7, [sp], #4
   1dcc0:	4770      	bx	lr
   1dcc2:	bf00      	nop
   1dcc4:	40010000 	.word	0x40010000
   1dcc8:	40010400 	.word	0x40010400
   1dccc:	40014000 	.word	0x40014000
   1dcd0:	40014400 	.word	0x40014400
   1dcd4:	40014800 	.word	0x40014800

0001dcd8 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
   1dcd8:	b480      	push	{r7}
   1dcda:	b087      	sub	sp, #28
   1dcdc:	af00      	add	r7, sp, #0
   1dcde:	60f8      	str	r0, [r7, #12]
   1dce0:	60b9      	str	r1, [r7, #8]
   1dce2:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
   1dce4:	68bb      	ldr	r3, [r7, #8]
   1dce6:	f003 031f 	and.w	r3, r3, #31
   1dcea:	2201      	movs	r2, #1
   1dcec:	fa02 f303 	lsl.w	r3, r2, r3
   1dcf0:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
   1dcf2:	68fb      	ldr	r3, [r7, #12]
   1dcf4:	6a1a      	ldr	r2, [r3, #32]
   1dcf6:	697b      	ldr	r3, [r7, #20]
   1dcf8:	43db      	mvns	r3, r3
   1dcfa:	401a      	ands	r2, r3
   1dcfc:	68fb      	ldr	r3, [r7, #12]
   1dcfe:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
   1dd00:	68fb      	ldr	r3, [r7, #12]
   1dd02:	6a1a      	ldr	r2, [r3, #32]
   1dd04:	68bb      	ldr	r3, [r7, #8]
   1dd06:	f003 031f 	and.w	r3, r3, #31
   1dd0a:	6879      	ldr	r1, [r7, #4]
   1dd0c:	fa01 f303 	lsl.w	r3, r1, r3
   1dd10:	431a      	orrs	r2, r3
   1dd12:	68fb      	ldr	r3, [r7, #12]
   1dd14:	621a      	str	r2, [r3, #32]
}
   1dd16:	bf00      	nop
   1dd18:	371c      	adds	r7, #28
   1dd1a:	46bd      	mov	sp, r7
   1dd1c:	f85d 7b04 	ldr.w	r7, [sp], #4
   1dd20:	4770      	bx	lr
	...

0001dd24 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
   1dd24:	b480      	push	{r7}
   1dd26:	b085      	sub	sp, #20
   1dd28:	af00      	add	r7, sp, #0
   1dd2a:	6078      	str	r0, [r7, #4]
   1dd2c:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
   1dd2e:	687b      	ldr	r3, [r7, #4]
   1dd30:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
   1dd34:	2b01      	cmp	r3, #1
   1dd36:	d101      	bne.n	1dd3c <HAL_TIMEx_MasterConfigSynchronization+0x18>
   1dd38:	2302      	movs	r3, #2
   1dd3a:	e068      	b.n	1de0e <HAL_TIMEx_MasterConfigSynchronization+0xea>
   1dd3c:	687b      	ldr	r3, [r7, #4]
   1dd3e:	2201      	movs	r2, #1
   1dd40:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
   1dd44:	687b      	ldr	r3, [r7, #4]
   1dd46:	2202      	movs	r2, #2
   1dd48:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
   1dd4c:	687b      	ldr	r3, [r7, #4]
   1dd4e:	681b      	ldr	r3, [r3, #0]
   1dd50:	685b      	ldr	r3, [r3, #4]
   1dd52:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
   1dd54:	687b      	ldr	r3, [r7, #4]
   1dd56:	681b      	ldr	r3, [r3, #0]
   1dd58:	689b      	ldr	r3, [r3, #8]
   1dd5a:	60bb      	str	r3, [r7, #8]

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
   1dd5c:	687b      	ldr	r3, [r7, #4]
   1dd5e:	681b      	ldr	r3, [r3, #0]
   1dd60:	4a2e      	ldr	r2, [pc, #184]	; (1de1c <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
   1dd62:	4293      	cmp	r3, r2
   1dd64:	d004      	beq.n	1dd70 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
   1dd66:	687b      	ldr	r3, [r7, #4]
   1dd68:	681b      	ldr	r3, [r3, #0]
   1dd6a:	4a2d      	ldr	r2, [pc, #180]	; (1de20 <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
   1dd6c:	4293      	cmp	r3, r2
   1dd6e:	d108      	bne.n	1dd82 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
   1dd70:	68fb      	ldr	r3, [r7, #12]
   1dd72:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
   1dd76:	60fb      	str	r3, [r7, #12]
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
   1dd78:	683b      	ldr	r3, [r7, #0]
   1dd7a:	685b      	ldr	r3, [r3, #4]
   1dd7c:	68fa      	ldr	r2, [r7, #12]
   1dd7e:	4313      	orrs	r3, r2
   1dd80:	60fb      	str	r3, [r7, #12]
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
   1dd82:	68fb      	ldr	r3, [r7, #12]
   1dd84:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   1dd88:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
   1dd8a:	683b      	ldr	r3, [r7, #0]
   1dd8c:	681b      	ldr	r3, [r3, #0]
   1dd8e:	68fa      	ldr	r2, [r7, #12]
   1dd90:	4313      	orrs	r3, r2
   1dd92:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
   1dd94:	687b      	ldr	r3, [r7, #4]
   1dd96:	681b      	ldr	r3, [r3, #0]
   1dd98:	68fa      	ldr	r2, [r7, #12]
   1dd9a:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
   1dd9c:	687b      	ldr	r3, [r7, #4]
   1dd9e:	681b      	ldr	r3, [r3, #0]
   1dda0:	4a1e      	ldr	r2, [pc, #120]	; (1de1c <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
   1dda2:	4293      	cmp	r3, r2
   1dda4:	d01d      	beq.n	1dde2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
   1dda6:	687b      	ldr	r3, [r7, #4]
   1dda8:	681b      	ldr	r3, [r3, #0]
   1ddaa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
   1ddae:	d018      	beq.n	1dde2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
   1ddb0:	687b      	ldr	r3, [r7, #4]
   1ddb2:	681b      	ldr	r3, [r3, #0]
   1ddb4:	4a1b      	ldr	r2, [pc, #108]	; (1de24 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
   1ddb6:	4293      	cmp	r3, r2
   1ddb8:	d013      	beq.n	1dde2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
   1ddba:	687b      	ldr	r3, [r7, #4]
   1ddbc:	681b      	ldr	r3, [r3, #0]
   1ddbe:	4a1a      	ldr	r2, [pc, #104]	; (1de28 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
   1ddc0:	4293      	cmp	r3, r2
   1ddc2:	d00e      	beq.n	1dde2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
   1ddc4:	687b      	ldr	r3, [r7, #4]
   1ddc6:	681b      	ldr	r3, [r3, #0]
   1ddc8:	4a18      	ldr	r2, [pc, #96]	; (1de2c <HAL_TIMEx_MasterConfigSynchronization+0x108>)
   1ddca:	4293      	cmp	r3, r2
   1ddcc:	d009      	beq.n	1dde2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
   1ddce:	687b      	ldr	r3, [r7, #4]
   1ddd0:	681b      	ldr	r3, [r3, #0]
   1ddd2:	4a13      	ldr	r2, [pc, #76]	; (1de20 <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
   1ddd4:	4293      	cmp	r3, r2
   1ddd6:	d004      	beq.n	1dde2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
   1ddd8:	687b      	ldr	r3, [r7, #4]
   1ddda:	681b      	ldr	r3, [r3, #0]
   1dddc:	4a14      	ldr	r2, [pc, #80]	; (1de30 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
   1ddde:	4293      	cmp	r3, r2
   1dde0:	d10c      	bne.n	1ddfc <HAL_TIMEx_MasterConfigSynchronization+0xd8>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
   1dde2:	68bb      	ldr	r3, [r7, #8]
   1dde4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   1dde8:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
   1ddea:	683b      	ldr	r3, [r7, #0]
   1ddec:	689b      	ldr	r3, [r3, #8]
   1ddee:	68ba      	ldr	r2, [r7, #8]
   1ddf0:	4313      	orrs	r3, r2
   1ddf2:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
   1ddf4:	687b      	ldr	r3, [r7, #4]
   1ddf6:	681b      	ldr	r3, [r3, #0]
   1ddf8:	68ba      	ldr	r2, [r7, #8]
   1ddfa:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
   1ddfc:	687b      	ldr	r3, [r7, #4]
   1ddfe:	2201      	movs	r2, #1
   1de00:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
   1de04:	687b      	ldr	r3, [r7, #4]
   1de06:	2200      	movs	r2, #0
   1de08:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
   1de0c:	2300      	movs	r3, #0
}
   1de0e:	4618      	mov	r0, r3
   1de10:	3714      	adds	r7, #20
   1de12:	46bd      	mov	sp, r7
   1de14:	f85d 7b04 	ldr.w	r7, [sp], #4
   1de18:	4770      	bx	lr
   1de1a:	bf00      	nop
   1de1c:	40010000 	.word	0x40010000
   1de20:	40010400 	.word	0x40010400
   1de24:	40000400 	.word	0x40000400
   1de28:	40000800 	.word	0x40000800
   1de2c:	40000c00 	.word	0x40000c00
   1de30:	40001800 	.word	0x40001800

0001de34 <HAL_TIMEx_ConfigBreakDeadTime>:
  *         interrupt can be enabled by calling the @ref __HAL_TIM_ENABLE_IT macro.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_ConfigBreakDeadTime(TIM_HandleTypeDef *htim,
                                                TIM_BreakDeadTimeConfigTypeDef *sBreakDeadTimeConfig)
{
   1de34:	b480      	push	{r7}
   1de36:	b085      	sub	sp, #20
   1de38:	af00      	add	r7, sp, #0
   1de3a:	6078      	str	r0, [r7, #4]
   1de3c:	6039      	str	r1, [r7, #0]
  /* Keep this variable initialized to 0 as it is used to configure BDTR register */
  uint32_t tmpbdtr = 0U;
   1de3e:	2300      	movs	r3, #0
   1de40:	60fb      	str	r3, [r7, #12]
  assert_param(IS_TIM_BREAK_POLARITY(sBreakDeadTimeConfig->BreakPolarity));
  assert_param(IS_TIM_BREAK_FILTER(sBreakDeadTimeConfig->BreakFilter));
  assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(sBreakDeadTimeConfig->AutomaticOutput));

  /* Check input state */
  __HAL_LOCK(htim);
   1de42:	687b      	ldr	r3, [r7, #4]
   1de44:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
   1de48:	2b01      	cmp	r3, #1
   1de4a:	d101      	bne.n	1de50 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
   1de4c:	2302      	movs	r3, #2
   1de4e:	e065      	b.n	1df1c <HAL_TIMEx_ConfigBreakDeadTime+0xe8>
   1de50:	687b      	ldr	r3, [r7, #4]
   1de52:	2201      	movs	r2, #1
   1de54:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
     the OSSI State, the dead time value and the Automatic Output Enable Bit */

  /* Set the BDTR bits */
  MODIFY_REG(tmpbdtr, TIM_BDTR_DTG, sBreakDeadTimeConfig->DeadTime);
   1de58:	68fb      	ldr	r3, [r7, #12]
   1de5a:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
   1de5e:	683b      	ldr	r3, [r7, #0]
   1de60:	68db      	ldr	r3, [r3, #12]
   1de62:	4313      	orrs	r3, r2
   1de64:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_LOCK, sBreakDeadTimeConfig->LockLevel);
   1de66:	68fb      	ldr	r3, [r7, #12]
   1de68:	f423 7240 	bic.w	r2, r3, #768	; 0x300
   1de6c:	683b      	ldr	r3, [r7, #0]
   1de6e:	689b      	ldr	r3, [r3, #8]
   1de70:	4313      	orrs	r3, r2
   1de72:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSI, sBreakDeadTimeConfig->OffStateIDLEMode);
   1de74:	68fb      	ldr	r3, [r7, #12]
   1de76:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
   1de7a:	683b      	ldr	r3, [r7, #0]
   1de7c:	685b      	ldr	r3, [r3, #4]
   1de7e:	4313      	orrs	r3, r2
   1de80:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSR, sBreakDeadTimeConfig->OffStateRunMode);
   1de82:	68fb      	ldr	r3, [r7, #12]
   1de84:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
   1de88:	683b      	ldr	r3, [r7, #0]
   1de8a:	681b      	ldr	r3, [r3, #0]
   1de8c:	4313      	orrs	r3, r2
   1de8e:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKE, sBreakDeadTimeConfig->BreakState);
   1de90:	68fb      	ldr	r3, [r7, #12]
   1de92:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
   1de96:	683b      	ldr	r3, [r7, #0]
   1de98:	691b      	ldr	r3, [r3, #16]
   1de9a:	4313      	orrs	r3, r2
   1de9c:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKP, sBreakDeadTimeConfig->BreakPolarity);
   1de9e:	68fb      	ldr	r3, [r7, #12]
   1dea0:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
   1dea4:	683b      	ldr	r3, [r7, #0]
   1dea6:	695b      	ldr	r3, [r3, #20]
   1dea8:	4313      	orrs	r3, r2
   1deaa:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_AOE, sBreakDeadTimeConfig->AutomaticOutput);
   1deac:	68fb      	ldr	r3, [r7, #12]
   1deae:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
   1deb2:	683b      	ldr	r3, [r7, #0]
   1deb4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1deb6:	4313      	orrs	r3, r2
   1deb8:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKF, (sBreakDeadTimeConfig->BreakFilter << TIM_BDTR_BKF_Pos));
   1deba:	68fb      	ldr	r3, [r7, #12]
   1debc:	f423 2270 	bic.w	r2, r3, #983040	; 0xf0000
   1dec0:	683b      	ldr	r3, [r7, #0]
   1dec2:	699b      	ldr	r3, [r3, #24]
   1dec4:	041b      	lsls	r3, r3, #16
   1dec6:	4313      	orrs	r3, r2
   1dec8:	60fb      	str	r3, [r7, #12]

  if (IS_TIM_BKIN2_INSTANCE(htim->Instance))
   1deca:	687b      	ldr	r3, [r7, #4]
   1decc:	681b      	ldr	r3, [r3, #0]
   1dece:	4a16      	ldr	r2, [pc, #88]	; (1df28 <HAL_TIMEx_ConfigBreakDeadTime+0xf4>)
   1ded0:	4293      	cmp	r3, r2
   1ded2:	d004      	beq.n	1dede <HAL_TIMEx_ConfigBreakDeadTime+0xaa>
   1ded4:	687b      	ldr	r3, [r7, #4]
   1ded6:	681b      	ldr	r3, [r3, #0]
   1ded8:	4a14      	ldr	r2, [pc, #80]	; (1df2c <HAL_TIMEx_ConfigBreakDeadTime+0xf8>)
   1deda:	4293      	cmp	r3, r2
   1dedc:	d115      	bne.n	1df0a <HAL_TIMEx_ConfigBreakDeadTime+0xd6>
    assert_param(IS_TIM_BREAK2_STATE(sBreakDeadTimeConfig->Break2State));
    assert_param(IS_TIM_BREAK2_POLARITY(sBreakDeadTimeConfig->Break2Polarity));
    assert_param(IS_TIM_BREAK_FILTER(sBreakDeadTimeConfig->Break2Filter));

    /* Set the BREAK2 input related BDTR bits */
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2F, (sBreakDeadTimeConfig->Break2Filter << TIM_BDTR_BK2F_Pos));
   1dede:	68fb      	ldr	r3, [r7, #12]
   1dee0:	f423 0270 	bic.w	r2, r3, #15728640	; 0xf00000
   1dee4:	683b      	ldr	r3, [r7, #0]
   1dee6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1dee8:	051b      	lsls	r3, r3, #20
   1deea:	4313      	orrs	r3, r2
   1deec:	60fb      	str	r3, [r7, #12]
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2E, sBreakDeadTimeConfig->Break2State);
   1deee:	68fb      	ldr	r3, [r7, #12]
   1def0:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
   1def4:	683b      	ldr	r3, [r7, #0]
   1def6:	69db      	ldr	r3, [r3, #28]
   1def8:	4313      	orrs	r3, r2
   1defa:	60fb      	str	r3, [r7, #12]
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2P, sBreakDeadTimeConfig->Break2Polarity);
   1defc:	68fb      	ldr	r3, [r7, #12]
   1defe:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
   1df02:	683b      	ldr	r3, [r7, #0]
   1df04:	6a1b      	ldr	r3, [r3, #32]
   1df06:	4313      	orrs	r3, r2
   1df08:	60fb      	str	r3, [r7, #12]
  }

  /* Set TIMx_BDTR */
  htim->Instance->BDTR = tmpbdtr;
   1df0a:	687b      	ldr	r3, [r7, #4]
   1df0c:	681b      	ldr	r3, [r3, #0]
   1df0e:	68fa      	ldr	r2, [r7, #12]
   1df10:	645a      	str	r2, [r3, #68]	; 0x44

  __HAL_UNLOCK(htim);
   1df12:	687b      	ldr	r3, [r7, #4]
   1df14:	2200      	movs	r2, #0
   1df16:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
   1df1a:	2300      	movs	r3, #0
}
   1df1c:	4618      	mov	r0, r3
   1df1e:	3714      	adds	r7, #20
   1df20:	46bd      	mov	sp, r7
   1df22:	f85d 7b04 	ldr.w	r7, [sp], #4
   1df26:	4770      	bx	lr
   1df28:	40010000 	.word	0x40010000
   1df2c:	40010400 	.word	0x40010400

0001df30 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
   1df30:	b580      	push	{r7, lr}
   1df32:	b082      	sub	sp, #8
   1df34:	af00      	add	r7, sp, #0
   1df36:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
   1df38:	687b      	ldr	r3, [r7, #4]
   1df3a:	2b00      	cmp	r3, #0
   1df3c:	d101      	bne.n	1df42 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
   1df3e:	2301      	movs	r3, #1
   1df40:	e042      	b.n	1dfc8 <HAL_UART_Init+0x98>
  {
    /* Check the parameters */
    assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
   1df42:	687b      	ldr	r3, [r7, #4]
   1df44:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
   1df48:	2b00      	cmp	r3, #0
   1df4a:	d106      	bne.n	1df5a <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
   1df4c:	687b      	ldr	r3, [r7, #4]
   1df4e:	2200      	movs	r2, #0
   1df50:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
   1df54:	6878      	ldr	r0, [r7, #4]
   1df56:	f7fb feb9 	bl	19ccc <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
   1df5a:	687b      	ldr	r3, [r7, #4]
   1df5c:	2224      	movs	r2, #36	; 0x24
   1df5e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  __HAL_UART_DISABLE(huart);
   1df62:	687b      	ldr	r3, [r7, #4]
   1df64:	681b      	ldr	r3, [r3, #0]
   1df66:	681a      	ldr	r2, [r3, #0]
   1df68:	687b      	ldr	r3, [r7, #4]
   1df6a:	681b      	ldr	r3, [r3, #0]
   1df6c:	f022 0201 	bic.w	r2, r2, #1
   1df70:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
   1df72:	6878      	ldr	r0, [r7, #4]
   1df74:	f000 f82c 	bl	1dfd0 <UART_SetConfig>
   1df78:	4603      	mov	r3, r0
   1df7a:	2b01      	cmp	r3, #1
   1df7c:	d101      	bne.n	1df82 <HAL_UART_Init+0x52>
  {
    return HAL_ERROR;
   1df7e:	2301      	movs	r3, #1
   1df80:	e022      	b.n	1dfc8 <HAL_UART_Init+0x98>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
   1df82:	687b      	ldr	r3, [r7, #4]
   1df84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1df86:	2b00      	cmp	r3, #0
   1df88:	d002      	beq.n	1df90 <HAL_UART_Init+0x60>
  {
    UART_AdvFeatureConfig(huart);
   1df8a:	6878      	ldr	r0, [r7, #4]
   1df8c:	f002 f99e 	bl	202cc <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
   1df90:	687b      	ldr	r3, [r7, #4]
   1df92:	681b      	ldr	r3, [r3, #0]
   1df94:	685a      	ldr	r2, [r3, #4]
   1df96:	687b      	ldr	r3, [r7, #4]
   1df98:	681b      	ldr	r3, [r3, #0]
   1df9a:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
   1df9e:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
   1dfa0:	687b      	ldr	r3, [r7, #4]
   1dfa2:	681b      	ldr	r3, [r3, #0]
   1dfa4:	689a      	ldr	r2, [r3, #8]
   1dfa6:	687b      	ldr	r3, [r7, #4]
   1dfa8:	681b      	ldr	r3, [r3, #0]
   1dfaa:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
   1dfae:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
   1dfb0:	687b      	ldr	r3, [r7, #4]
   1dfb2:	681b      	ldr	r3, [r3, #0]
   1dfb4:	681a      	ldr	r2, [r3, #0]
   1dfb6:	687b      	ldr	r3, [r7, #4]
   1dfb8:	681b      	ldr	r3, [r3, #0]
   1dfba:	f042 0201 	orr.w	r2, r2, #1
   1dfbe:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
   1dfc0:	6878      	ldr	r0, [r7, #4]
   1dfc2:	f002 fa25 	bl	20410 <UART_CheckIdleState>
   1dfc6:	4603      	mov	r3, r0
}
   1dfc8:	4618      	mov	r0, r3
   1dfca:	3708      	adds	r7, #8
   1dfcc:	46bd      	mov	sp, r7
   1dfce:	bd80      	pop	{r7, pc}

0001dfd0 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
   1dfd0:	e92d 4890 	stmdb	sp!, {r4, r7, fp, lr}
   1dfd4:	b090      	sub	sp, #64	; 0x40
   1dfd6:	af00      	add	r7, sp, #0
   1dfd8:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv                   = 0x00000000U;
   1dfda:	2300      	movs	r3, #0
   1dfdc:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_StatusTypeDef ret               = HAL_OK;
   1dfde:	2300      	movs	r3, #0
   1dfe0:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
  uint32_t lpuart_ker_ck_pres         = 0x00000000U;
   1dfe4:	2300      	movs	r3, #0
   1dfe6:	62fb      	str	r3, [r7, #44]	; 0x2c
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
   1dfe8:	687b      	ldr	r3, [r7, #4]
   1dfea:	689a      	ldr	r2, [r3, #8]
   1dfec:	687b      	ldr	r3, [r7, #4]
   1dfee:	691b      	ldr	r3, [r3, #16]
   1dff0:	431a      	orrs	r2, r3
   1dff2:	687b      	ldr	r3, [r7, #4]
   1dff4:	695b      	ldr	r3, [r3, #20]
   1dff6:	431a      	orrs	r2, r3
   1dff8:	687b      	ldr	r3, [r7, #4]
   1dffa:	69db      	ldr	r3, [r3, #28]
   1dffc:	4313      	orrs	r3, r2
   1dffe:	63fb      	str	r3, [r7, #60]	; 0x3c
  tmpreg |= (uint32_t)huart->FifoMode;
   1e000:	687b      	ldr	r3, [r7, #4]
   1e002:	6e5b      	ldr	r3, [r3, #100]	; 0x64
   1e004:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
   1e006:	4313      	orrs	r3, r2
   1e008:	63fb      	str	r3, [r7, #60]	; 0x3c
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
   1e00a:	687b      	ldr	r3, [r7, #4]
   1e00c:	681b      	ldr	r3, [r3, #0]
   1e00e:	681a      	ldr	r2, [r3, #0]
   1e010:	4bc1      	ldr	r3, [pc, #772]	; (1e318 <UART_SetConfig+0x348>)
   1e012:	4013      	ands	r3, r2
   1e014:	687a      	ldr	r2, [r7, #4]
   1e016:	6812      	ldr	r2, [r2, #0]
   1e018:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
   1e01a:	430b      	orrs	r3, r1
   1e01c:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
   1e01e:	687b      	ldr	r3, [r7, #4]
   1e020:	681b      	ldr	r3, [r3, #0]
   1e022:	685b      	ldr	r3, [r3, #4]
   1e024:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
   1e028:	687b      	ldr	r3, [r7, #4]
   1e02a:	68da      	ldr	r2, [r3, #12]
   1e02c:	687b      	ldr	r3, [r7, #4]
   1e02e:	681b      	ldr	r3, [r3, #0]
   1e030:	430a      	orrs	r2, r1
   1e032:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
   1e034:	687b      	ldr	r3, [r7, #4]
   1e036:	699b      	ldr	r3, [r3, #24]
   1e038:	63fb      	str	r3, [r7, #60]	; 0x3c

  if (!(UART_INSTANCE_LOWPOWER(huart)))
   1e03a:	687b      	ldr	r3, [r7, #4]
   1e03c:	681b      	ldr	r3, [r3, #0]
   1e03e:	4ab7      	ldr	r2, [pc, #732]	; (1e31c <UART_SetConfig+0x34c>)
   1e040:	4293      	cmp	r3, r2
   1e042:	d004      	beq.n	1e04e <UART_SetConfig+0x7e>
  {
    tmpreg |= huart->Init.OneBitSampling;
   1e044:	687b      	ldr	r3, [r7, #4]
   1e046:	6a1b      	ldr	r3, [r3, #32]
   1e048:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
   1e04a:	4313      	orrs	r3, r2
   1e04c:	63fb      	str	r3, [r7, #60]	; 0x3c
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
   1e04e:	687b      	ldr	r3, [r7, #4]
   1e050:	681b      	ldr	r3, [r3, #0]
   1e052:	689a      	ldr	r2, [r3, #8]
   1e054:	4bb2      	ldr	r3, [pc, #712]	; (1e320 <UART_SetConfig+0x350>)
   1e056:	4013      	ands	r3, r2
   1e058:	687a      	ldr	r2, [r7, #4]
   1e05a:	6812      	ldr	r2, [r2, #0]
   1e05c:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
   1e05e:	430b      	orrs	r3, r1
   1e060:	6093      	str	r3, [r2, #8]

  /*-------------------------- USART PRESC Configuration -----------------------*/
  /* Configure
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
   1e062:	687b      	ldr	r3, [r7, #4]
   1e064:	681b      	ldr	r3, [r3, #0]
   1e066:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1e068:	f023 010f 	bic.w	r1, r3, #15
   1e06c:	687b      	ldr	r3, [r7, #4]
   1e06e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
   1e070:	687b      	ldr	r3, [r7, #4]
   1e072:	681b      	ldr	r3, [r3, #0]
   1e074:	430a      	orrs	r2, r1
   1e076:	62da      	str	r2, [r3, #44]	; 0x2c

  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
   1e078:	687b      	ldr	r3, [r7, #4]
   1e07a:	681b      	ldr	r3, [r3, #0]
   1e07c:	4aa9      	ldr	r2, [pc, #676]	; (1e324 <UART_SetConfig+0x354>)
   1e07e:	4293      	cmp	r3, r2
   1e080:	d177      	bne.n	1e172 <UART_SetConfig+0x1a2>
   1e082:	4ba9      	ldr	r3, [pc, #676]	; (1e328 <UART_SetConfig+0x358>)
   1e084:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1e086:	f003 0338 	and.w	r3, r3, #56	; 0x38
   1e08a:	2b28      	cmp	r3, #40	; 0x28
   1e08c:	d86c      	bhi.n	1e168 <UART_SetConfig+0x198>
   1e08e:	a201      	add	r2, pc, #4	; (adr r2, 1e094 <UART_SetConfig+0xc4>)
   1e090:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1e094:	0001e139 	.word	0x0001e139
   1e098:	0001e169 	.word	0x0001e169
   1e09c:	0001e169 	.word	0x0001e169
   1e0a0:	0001e169 	.word	0x0001e169
   1e0a4:	0001e169 	.word	0x0001e169
   1e0a8:	0001e169 	.word	0x0001e169
   1e0ac:	0001e169 	.word	0x0001e169
   1e0b0:	0001e169 	.word	0x0001e169
   1e0b4:	0001e141 	.word	0x0001e141
   1e0b8:	0001e169 	.word	0x0001e169
   1e0bc:	0001e169 	.word	0x0001e169
   1e0c0:	0001e169 	.word	0x0001e169
   1e0c4:	0001e169 	.word	0x0001e169
   1e0c8:	0001e169 	.word	0x0001e169
   1e0cc:	0001e169 	.word	0x0001e169
   1e0d0:	0001e169 	.word	0x0001e169
   1e0d4:	0001e149 	.word	0x0001e149
   1e0d8:	0001e169 	.word	0x0001e169
   1e0dc:	0001e169 	.word	0x0001e169
   1e0e0:	0001e169 	.word	0x0001e169
   1e0e4:	0001e169 	.word	0x0001e169
   1e0e8:	0001e169 	.word	0x0001e169
   1e0ec:	0001e169 	.word	0x0001e169
   1e0f0:	0001e169 	.word	0x0001e169
   1e0f4:	0001e151 	.word	0x0001e151
   1e0f8:	0001e169 	.word	0x0001e169
   1e0fc:	0001e169 	.word	0x0001e169
   1e100:	0001e169 	.word	0x0001e169
   1e104:	0001e169 	.word	0x0001e169
   1e108:	0001e169 	.word	0x0001e169
   1e10c:	0001e169 	.word	0x0001e169
   1e110:	0001e169 	.word	0x0001e169
   1e114:	0001e159 	.word	0x0001e159
   1e118:	0001e169 	.word	0x0001e169
   1e11c:	0001e169 	.word	0x0001e169
   1e120:	0001e169 	.word	0x0001e169
   1e124:	0001e169 	.word	0x0001e169
   1e128:	0001e169 	.word	0x0001e169
   1e12c:	0001e169 	.word	0x0001e169
   1e130:	0001e169 	.word	0x0001e169
   1e134:	0001e161 	.word	0x0001e161
   1e138:	2301      	movs	r3, #1
   1e13a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e13e:	e233      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e140:	2304      	movs	r3, #4
   1e142:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e146:	e22f      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e148:	2308      	movs	r3, #8
   1e14a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e14e:	e22b      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e150:	2310      	movs	r3, #16
   1e152:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e156:	e227      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e158:	2320      	movs	r3, #32
   1e15a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e15e:	e223      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e160:	2340      	movs	r3, #64	; 0x40
   1e162:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e166:	e21f      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e168:	2380      	movs	r3, #128	; 0x80
   1e16a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e16e:	bf00      	nop
   1e170:	e21a      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e172:	687b      	ldr	r3, [r7, #4]
   1e174:	681b      	ldr	r3, [r3, #0]
   1e176:	4a6d      	ldr	r2, [pc, #436]	; (1e32c <UART_SetConfig+0x35c>)
   1e178:	4293      	cmp	r3, r2
   1e17a:	d132      	bne.n	1e1e2 <UART_SetConfig+0x212>
   1e17c:	4b6a      	ldr	r3, [pc, #424]	; (1e328 <UART_SetConfig+0x358>)
   1e17e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1e180:	f003 0307 	and.w	r3, r3, #7
   1e184:	2b05      	cmp	r3, #5
   1e186:	d827      	bhi.n	1e1d8 <UART_SetConfig+0x208>
   1e188:	a201      	add	r2, pc, #4	; (adr r2, 1e190 <UART_SetConfig+0x1c0>)
   1e18a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1e18e:	bf00      	nop
   1e190:	0001e1a9 	.word	0x0001e1a9
   1e194:	0001e1b1 	.word	0x0001e1b1
   1e198:	0001e1b9 	.word	0x0001e1b9
   1e19c:	0001e1c1 	.word	0x0001e1c1
   1e1a0:	0001e1c9 	.word	0x0001e1c9
   1e1a4:	0001e1d1 	.word	0x0001e1d1
   1e1a8:	2300      	movs	r3, #0
   1e1aa:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e1ae:	e1fb      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e1b0:	2304      	movs	r3, #4
   1e1b2:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e1b6:	e1f7      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e1b8:	2308      	movs	r3, #8
   1e1ba:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e1be:	e1f3      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e1c0:	2310      	movs	r3, #16
   1e1c2:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e1c6:	e1ef      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e1c8:	2320      	movs	r3, #32
   1e1ca:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e1ce:	e1eb      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e1d0:	2340      	movs	r3, #64	; 0x40
   1e1d2:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e1d6:	e1e7      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e1d8:	2380      	movs	r3, #128	; 0x80
   1e1da:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e1de:	bf00      	nop
   1e1e0:	e1e2      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e1e2:	687b      	ldr	r3, [r7, #4]
   1e1e4:	681b      	ldr	r3, [r3, #0]
   1e1e6:	4a52      	ldr	r2, [pc, #328]	; (1e330 <UART_SetConfig+0x360>)
   1e1e8:	4293      	cmp	r3, r2
   1e1ea:	d132      	bne.n	1e252 <UART_SetConfig+0x282>
   1e1ec:	4b4e      	ldr	r3, [pc, #312]	; (1e328 <UART_SetConfig+0x358>)
   1e1ee:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1e1f0:	f003 0307 	and.w	r3, r3, #7
   1e1f4:	2b05      	cmp	r3, #5
   1e1f6:	d827      	bhi.n	1e248 <UART_SetConfig+0x278>
   1e1f8:	a201      	add	r2, pc, #4	; (adr r2, 1e200 <UART_SetConfig+0x230>)
   1e1fa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1e1fe:	bf00      	nop
   1e200:	0001e219 	.word	0x0001e219
   1e204:	0001e221 	.word	0x0001e221
   1e208:	0001e229 	.word	0x0001e229
   1e20c:	0001e231 	.word	0x0001e231
   1e210:	0001e239 	.word	0x0001e239
   1e214:	0001e241 	.word	0x0001e241
   1e218:	2300      	movs	r3, #0
   1e21a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e21e:	e1c3      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e220:	2304      	movs	r3, #4
   1e222:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e226:	e1bf      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e228:	2308      	movs	r3, #8
   1e22a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e22e:	e1bb      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e230:	2310      	movs	r3, #16
   1e232:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e236:	e1b7      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e238:	2320      	movs	r3, #32
   1e23a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e23e:	e1b3      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e240:	2340      	movs	r3, #64	; 0x40
   1e242:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e246:	e1af      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e248:	2380      	movs	r3, #128	; 0x80
   1e24a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e24e:	bf00      	nop
   1e250:	e1aa      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e252:	687b      	ldr	r3, [r7, #4]
   1e254:	681b      	ldr	r3, [r3, #0]
   1e256:	4a37      	ldr	r2, [pc, #220]	; (1e334 <UART_SetConfig+0x364>)
   1e258:	4293      	cmp	r3, r2
   1e25a:	d132      	bne.n	1e2c2 <UART_SetConfig+0x2f2>
   1e25c:	4b32      	ldr	r3, [pc, #200]	; (1e328 <UART_SetConfig+0x358>)
   1e25e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1e260:	f003 0307 	and.w	r3, r3, #7
   1e264:	2b05      	cmp	r3, #5
   1e266:	d827      	bhi.n	1e2b8 <UART_SetConfig+0x2e8>
   1e268:	a201      	add	r2, pc, #4	; (adr r2, 1e270 <UART_SetConfig+0x2a0>)
   1e26a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1e26e:	bf00      	nop
   1e270:	0001e289 	.word	0x0001e289
   1e274:	0001e291 	.word	0x0001e291
   1e278:	0001e299 	.word	0x0001e299
   1e27c:	0001e2a1 	.word	0x0001e2a1
   1e280:	0001e2a9 	.word	0x0001e2a9
   1e284:	0001e2b1 	.word	0x0001e2b1
   1e288:	2300      	movs	r3, #0
   1e28a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e28e:	e18b      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e290:	2304      	movs	r3, #4
   1e292:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e296:	e187      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e298:	2308      	movs	r3, #8
   1e29a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e29e:	e183      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e2a0:	2310      	movs	r3, #16
   1e2a2:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e2a6:	e17f      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e2a8:	2320      	movs	r3, #32
   1e2aa:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e2ae:	e17b      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e2b0:	2340      	movs	r3, #64	; 0x40
   1e2b2:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e2b6:	e177      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e2b8:	2380      	movs	r3, #128	; 0x80
   1e2ba:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e2be:	bf00      	nop
   1e2c0:	e172      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e2c2:	687b      	ldr	r3, [r7, #4]
   1e2c4:	681b      	ldr	r3, [r3, #0]
   1e2c6:	4a1c      	ldr	r2, [pc, #112]	; (1e338 <UART_SetConfig+0x368>)
   1e2c8:	4293      	cmp	r3, r2
   1e2ca:	d144      	bne.n	1e356 <UART_SetConfig+0x386>
   1e2cc:	4b16      	ldr	r3, [pc, #88]	; (1e328 <UART_SetConfig+0x358>)
   1e2ce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1e2d0:	f003 0307 	and.w	r3, r3, #7
   1e2d4:	2b05      	cmp	r3, #5
   1e2d6:	d839      	bhi.n	1e34c <UART_SetConfig+0x37c>
   1e2d8:	a201      	add	r2, pc, #4	; (adr r2, 1e2e0 <UART_SetConfig+0x310>)
   1e2da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1e2de:	bf00      	nop
   1e2e0:	0001e2f9 	.word	0x0001e2f9
   1e2e4:	0001e301 	.word	0x0001e301
   1e2e8:	0001e309 	.word	0x0001e309
   1e2ec:	0001e311 	.word	0x0001e311
   1e2f0:	0001e33d 	.word	0x0001e33d
   1e2f4:	0001e345 	.word	0x0001e345
   1e2f8:	2300      	movs	r3, #0
   1e2fa:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e2fe:	e153      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e300:	2304      	movs	r3, #4
   1e302:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e306:	e14f      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e308:	2308      	movs	r3, #8
   1e30a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e30e:	e14b      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e310:	2310      	movs	r3, #16
   1e312:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e316:	e147      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e318:	cfff69f3 	.word	0xcfff69f3
   1e31c:	58000c00 	.word	0x58000c00
   1e320:	11fff4ff 	.word	0x11fff4ff
   1e324:	40011000 	.word	0x40011000
   1e328:	58024400 	.word	0x58024400
   1e32c:	40004400 	.word	0x40004400
   1e330:	40004800 	.word	0x40004800
   1e334:	40004c00 	.word	0x40004c00
   1e338:	40005000 	.word	0x40005000
   1e33c:	2320      	movs	r3, #32
   1e33e:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e342:	e131      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e344:	2340      	movs	r3, #64	; 0x40
   1e346:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e34a:	e12d      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e34c:	2380      	movs	r3, #128	; 0x80
   1e34e:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e352:	bf00      	nop
   1e354:	e128      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e356:	687b      	ldr	r3, [r7, #4]
   1e358:	681b      	ldr	r3, [r3, #0]
   1e35a:	4ac3      	ldr	r2, [pc, #780]	; (1e668 <UART_SetConfig+0x698>)
   1e35c:	4293      	cmp	r3, r2
   1e35e:	d178      	bne.n	1e452 <UART_SetConfig+0x482>
   1e360:	4bc2      	ldr	r3, [pc, #776]	; (1e66c <UART_SetConfig+0x69c>)
   1e362:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1e364:	f003 0338 	and.w	r3, r3, #56	; 0x38
   1e368:	2b28      	cmp	r3, #40	; 0x28
   1e36a:	d86d      	bhi.n	1e448 <UART_SetConfig+0x478>
   1e36c:	a201      	add	r2, pc, #4	; (adr r2, 1e374 <UART_SetConfig+0x3a4>)
   1e36e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1e372:	bf00      	nop
   1e374:	0001e419 	.word	0x0001e419
   1e378:	0001e449 	.word	0x0001e449
   1e37c:	0001e449 	.word	0x0001e449
   1e380:	0001e449 	.word	0x0001e449
   1e384:	0001e449 	.word	0x0001e449
   1e388:	0001e449 	.word	0x0001e449
   1e38c:	0001e449 	.word	0x0001e449
   1e390:	0001e449 	.word	0x0001e449
   1e394:	0001e421 	.word	0x0001e421
   1e398:	0001e449 	.word	0x0001e449
   1e39c:	0001e449 	.word	0x0001e449
   1e3a0:	0001e449 	.word	0x0001e449
   1e3a4:	0001e449 	.word	0x0001e449
   1e3a8:	0001e449 	.word	0x0001e449
   1e3ac:	0001e449 	.word	0x0001e449
   1e3b0:	0001e449 	.word	0x0001e449
   1e3b4:	0001e429 	.word	0x0001e429
   1e3b8:	0001e449 	.word	0x0001e449
   1e3bc:	0001e449 	.word	0x0001e449
   1e3c0:	0001e449 	.word	0x0001e449
   1e3c4:	0001e449 	.word	0x0001e449
   1e3c8:	0001e449 	.word	0x0001e449
   1e3cc:	0001e449 	.word	0x0001e449
   1e3d0:	0001e449 	.word	0x0001e449
   1e3d4:	0001e431 	.word	0x0001e431
   1e3d8:	0001e449 	.word	0x0001e449
   1e3dc:	0001e449 	.word	0x0001e449
   1e3e0:	0001e449 	.word	0x0001e449
   1e3e4:	0001e449 	.word	0x0001e449
   1e3e8:	0001e449 	.word	0x0001e449
   1e3ec:	0001e449 	.word	0x0001e449
   1e3f0:	0001e449 	.word	0x0001e449
   1e3f4:	0001e439 	.word	0x0001e439
   1e3f8:	0001e449 	.word	0x0001e449
   1e3fc:	0001e449 	.word	0x0001e449
   1e400:	0001e449 	.word	0x0001e449
   1e404:	0001e449 	.word	0x0001e449
   1e408:	0001e449 	.word	0x0001e449
   1e40c:	0001e449 	.word	0x0001e449
   1e410:	0001e449 	.word	0x0001e449
   1e414:	0001e441 	.word	0x0001e441
   1e418:	2301      	movs	r3, #1
   1e41a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e41e:	e0c3      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e420:	2304      	movs	r3, #4
   1e422:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e426:	e0bf      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e428:	2308      	movs	r3, #8
   1e42a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e42e:	e0bb      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e430:	2310      	movs	r3, #16
   1e432:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e436:	e0b7      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e438:	2320      	movs	r3, #32
   1e43a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e43e:	e0b3      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e440:	2340      	movs	r3, #64	; 0x40
   1e442:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e446:	e0af      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e448:	2380      	movs	r3, #128	; 0x80
   1e44a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e44e:	bf00      	nop
   1e450:	e0aa      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e452:	687b      	ldr	r3, [r7, #4]
   1e454:	681b      	ldr	r3, [r3, #0]
   1e456:	4a86      	ldr	r2, [pc, #536]	; (1e670 <UART_SetConfig+0x6a0>)
   1e458:	4293      	cmp	r3, r2
   1e45a:	d132      	bne.n	1e4c2 <UART_SetConfig+0x4f2>
   1e45c:	4b83      	ldr	r3, [pc, #524]	; (1e66c <UART_SetConfig+0x69c>)
   1e45e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1e460:	f003 0307 	and.w	r3, r3, #7
   1e464:	2b05      	cmp	r3, #5
   1e466:	d827      	bhi.n	1e4b8 <UART_SetConfig+0x4e8>
   1e468:	a201      	add	r2, pc, #4	; (adr r2, 1e470 <UART_SetConfig+0x4a0>)
   1e46a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1e46e:	bf00      	nop
   1e470:	0001e489 	.word	0x0001e489
   1e474:	0001e491 	.word	0x0001e491
   1e478:	0001e499 	.word	0x0001e499
   1e47c:	0001e4a1 	.word	0x0001e4a1
   1e480:	0001e4a9 	.word	0x0001e4a9
   1e484:	0001e4b1 	.word	0x0001e4b1
   1e488:	2300      	movs	r3, #0
   1e48a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e48e:	e08b      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e490:	2304      	movs	r3, #4
   1e492:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e496:	e087      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e498:	2308      	movs	r3, #8
   1e49a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e49e:	e083      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e4a0:	2310      	movs	r3, #16
   1e4a2:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e4a6:	e07f      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e4a8:	2320      	movs	r3, #32
   1e4aa:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e4ae:	e07b      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e4b0:	2340      	movs	r3, #64	; 0x40
   1e4b2:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e4b6:	e077      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e4b8:	2380      	movs	r3, #128	; 0x80
   1e4ba:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e4be:	bf00      	nop
   1e4c0:	e072      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e4c2:	687b      	ldr	r3, [r7, #4]
   1e4c4:	681b      	ldr	r3, [r3, #0]
   1e4c6:	4a6b      	ldr	r2, [pc, #428]	; (1e674 <UART_SetConfig+0x6a4>)
   1e4c8:	4293      	cmp	r3, r2
   1e4ca:	d132      	bne.n	1e532 <UART_SetConfig+0x562>
   1e4cc:	4b67      	ldr	r3, [pc, #412]	; (1e66c <UART_SetConfig+0x69c>)
   1e4ce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   1e4d0:	f003 0307 	and.w	r3, r3, #7
   1e4d4:	2b05      	cmp	r3, #5
   1e4d6:	d827      	bhi.n	1e528 <UART_SetConfig+0x558>
   1e4d8:	a201      	add	r2, pc, #4	; (adr r2, 1e4e0 <UART_SetConfig+0x510>)
   1e4da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1e4de:	bf00      	nop
   1e4e0:	0001e4f9 	.word	0x0001e4f9
   1e4e4:	0001e501 	.word	0x0001e501
   1e4e8:	0001e509 	.word	0x0001e509
   1e4ec:	0001e511 	.word	0x0001e511
   1e4f0:	0001e519 	.word	0x0001e519
   1e4f4:	0001e521 	.word	0x0001e521
   1e4f8:	2300      	movs	r3, #0
   1e4fa:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e4fe:	e053      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e500:	2304      	movs	r3, #4
   1e502:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e506:	e04f      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e508:	2308      	movs	r3, #8
   1e50a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e50e:	e04b      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e510:	2310      	movs	r3, #16
   1e512:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e516:	e047      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e518:	2320      	movs	r3, #32
   1e51a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e51e:	e043      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e520:	2340      	movs	r3, #64	; 0x40
   1e522:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e526:	e03f      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e528:	2380      	movs	r3, #128	; 0x80
   1e52a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e52e:	bf00      	nop
   1e530:	e03a      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e532:	687b      	ldr	r3, [r7, #4]
   1e534:	681b      	ldr	r3, [r3, #0]
   1e536:	4a50      	ldr	r2, [pc, #320]	; (1e678 <UART_SetConfig+0x6a8>)
   1e538:	4293      	cmp	r3, r2
   1e53a:	d132      	bne.n	1e5a2 <UART_SetConfig+0x5d2>
   1e53c:	4b4b      	ldr	r3, [pc, #300]	; (1e66c <UART_SetConfig+0x69c>)
   1e53e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
   1e540:	f003 0307 	and.w	r3, r3, #7
   1e544:	2b05      	cmp	r3, #5
   1e546:	d827      	bhi.n	1e598 <UART_SetConfig+0x5c8>
   1e548:	a201      	add	r2, pc, #4	; (adr r2, 1e550 <UART_SetConfig+0x580>)
   1e54a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1e54e:	bf00      	nop
   1e550:	0001e569 	.word	0x0001e569
   1e554:	0001e571 	.word	0x0001e571
   1e558:	0001e579 	.word	0x0001e579
   1e55c:	0001e581 	.word	0x0001e581
   1e560:	0001e589 	.word	0x0001e589
   1e564:	0001e591 	.word	0x0001e591
   1e568:	2302      	movs	r3, #2
   1e56a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e56e:	e01b      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e570:	2304      	movs	r3, #4
   1e572:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e576:	e017      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e578:	2308      	movs	r3, #8
   1e57a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e57e:	e013      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e580:	2310      	movs	r3, #16
   1e582:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e586:	e00f      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e588:	2320      	movs	r3, #32
   1e58a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e58e:	e00b      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e590:	2340      	movs	r3, #64	; 0x40
   1e592:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e596:	e007      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e598:	2380      	movs	r3, #128	; 0x80
   1e59a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
   1e59e:	bf00      	nop
   1e5a0:	e002      	b.n	1e5a8 <UART_SetConfig+0x5d8>
   1e5a2:	2380      	movs	r3, #128	; 0x80
   1e5a4:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b

  /* Check LPUART instance */
  if (UART_INSTANCE_LOWPOWER(huart))
   1e5a8:	687b      	ldr	r3, [r7, #4]
   1e5aa:	681b      	ldr	r3, [r3, #0]
   1e5ac:	4a32      	ldr	r2, [pc, #200]	; (1e678 <UART_SetConfig+0x6a8>)
   1e5ae:	4293      	cmp	r3, r2
   1e5b0:	f040 86f7 	bne.w	1f3a2 <UART_SetConfig+0x13d2>
  {
    /* Retrieve frequency clock */
    switch (clocksource)
   1e5b4:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
   1e5b8:	2b08      	cmp	r3, #8
   1e5ba:	f000 80c0 	beq.w	1e73e <UART_SetConfig+0x76e>
   1e5be:	2b08      	cmp	r3, #8
   1e5c0:	dc04      	bgt.n	1e5cc <UART_SetConfig+0x5fc>
   1e5c2:	2b02      	cmp	r3, #2
   1e5c4:	d00c      	beq.n	1e5e0 <UART_SetConfig+0x610>
   1e5c6:	2b04      	cmp	r3, #4
   1e5c8:	d065      	beq.n	1e696 <UART_SetConfig+0x6c6>
   1e5ca:	e27a      	b.n	1eac2 <UART_SetConfig+0xaf2>
   1e5cc:	2b20      	cmp	r3, #32
   1e5ce:	f000 81b0 	beq.w	1e932 <UART_SetConfig+0x962>
   1e5d2:	2b40      	cmp	r3, #64	; 0x40
   1e5d4:	f000 821e 	beq.w	1ea14 <UART_SetConfig+0xa44>
   1e5d8:	2b10      	cmp	r3, #16
   1e5da:	f000 8104 	beq.w	1e7e6 <UART_SetConfig+0x816>
   1e5de:	e270      	b.n	1eac2 <UART_SetConfig+0xaf2>
    {
      case UART_CLOCKSOURCE_D3PCLK1:
        lpuart_ker_ck_pres = (HAL_RCCEx_GetD3PCLK1Freq() / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
   1e5e0:	f7fe fa0e 	bl	1ca00 <HAL_RCCEx_GetD3PCLK1Freq>
   1e5e4:	4602      	mov	r2, r0
   1e5e6:	687b      	ldr	r3, [r7, #4]
   1e5e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e5ea:	2b00      	cmp	r3, #0
   1e5ec:	d04e      	beq.n	1e68c <UART_SetConfig+0x6bc>
   1e5ee:	687b      	ldr	r3, [r7, #4]
   1e5f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e5f2:	2b01      	cmp	r3, #1
   1e5f4:	d048      	beq.n	1e688 <UART_SetConfig+0x6b8>
   1e5f6:	687b      	ldr	r3, [r7, #4]
   1e5f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e5fa:	2b02      	cmp	r3, #2
   1e5fc:	d042      	beq.n	1e684 <UART_SetConfig+0x6b4>
   1e5fe:	687b      	ldr	r3, [r7, #4]
   1e600:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e602:	2b03      	cmp	r3, #3
   1e604:	d03c      	beq.n	1e680 <UART_SetConfig+0x6b0>
   1e606:	687b      	ldr	r3, [r7, #4]
   1e608:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e60a:	2b04      	cmp	r3, #4
   1e60c:	d036      	beq.n	1e67c <UART_SetConfig+0x6ac>
   1e60e:	687b      	ldr	r3, [r7, #4]
   1e610:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e612:	2b05      	cmp	r3, #5
   1e614:	d026      	beq.n	1e664 <UART_SetConfig+0x694>
   1e616:	687b      	ldr	r3, [r7, #4]
   1e618:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e61a:	2b06      	cmp	r3, #6
   1e61c:	d020      	beq.n	1e660 <UART_SetConfig+0x690>
   1e61e:	687b      	ldr	r3, [r7, #4]
   1e620:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e622:	2b07      	cmp	r3, #7
   1e624:	d01a      	beq.n	1e65c <UART_SetConfig+0x68c>
   1e626:	687b      	ldr	r3, [r7, #4]
   1e628:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e62a:	2b08      	cmp	r3, #8
   1e62c:	d014      	beq.n	1e658 <UART_SetConfig+0x688>
   1e62e:	687b      	ldr	r3, [r7, #4]
   1e630:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e632:	2b09      	cmp	r3, #9
   1e634:	d00e      	beq.n	1e654 <UART_SetConfig+0x684>
   1e636:	687b      	ldr	r3, [r7, #4]
   1e638:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e63a:	2b0a      	cmp	r3, #10
   1e63c:	d008      	beq.n	1e650 <UART_SetConfig+0x680>
   1e63e:	687b      	ldr	r3, [r7, #4]
   1e640:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e642:	2b0b      	cmp	r3, #11
   1e644:	d102      	bne.n	1e64c <UART_SetConfig+0x67c>
   1e646:	f44f 7380 	mov.w	r3, #256	; 0x100
   1e64a:	e020      	b.n	1e68e <UART_SetConfig+0x6be>
   1e64c:	2301      	movs	r3, #1
   1e64e:	e01e      	b.n	1e68e <UART_SetConfig+0x6be>
   1e650:	2380      	movs	r3, #128	; 0x80
   1e652:	e01c      	b.n	1e68e <UART_SetConfig+0x6be>
   1e654:	2340      	movs	r3, #64	; 0x40
   1e656:	e01a      	b.n	1e68e <UART_SetConfig+0x6be>
   1e658:	2320      	movs	r3, #32
   1e65a:	e018      	b.n	1e68e <UART_SetConfig+0x6be>
   1e65c:	2310      	movs	r3, #16
   1e65e:	e016      	b.n	1e68e <UART_SetConfig+0x6be>
   1e660:	230c      	movs	r3, #12
   1e662:	e014      	b.n	1e68e <UART_SetConfig+0x6be>
   1e664:	230a      	movs	r3, #10
   1e666:	e012      	b.n	1e68e <UART_SetConfig+0x6be>
   1e668:	40011400 	.word	0x40011400
   1e66c:	58024400 	.word	0x58024400
   1e670:	40007800 	.word	0x40007800
   1e674:	40007c00 	.word	0x40007c00
   1e678:	58000c00 	.word	0x58000c00
   1e67c:	2308      	movs	r3, #8
   1e67e:	e006      	b.n	1e68e <UART_SetConfig+0x6be>
   1e680:	2306      	movs	r3, #6
   1e682:	e004      	b.n	1e68e <UART_SetConfig+0x6be>
   1e684:	2304      	movs	r3, #4
   1e686:	e002      	b.n	1e68e <UART_SetConfig+0x6be>
   1e688:	2302      	movs	r3, #2
   1e68a:	e000      	b.n	1e68e <UART_SetConfig+0x6be>
   1e68c:	2301      	movs	r3, #1
   1e68e:	fbb2 f3f3 	udiv	r3, r2, r3
   1e692:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
   1e694:	e219      	b.n	1eaca <UART_SetConfig+0xafa>
      case UART_CLOCKSOURCE_PLL2:
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
   1e696:	f107 0318 	add.w	r3, r7, #24
   1e69a:	4618      	mov	r0, r3
   1e69c:	f7fe f9c6 	bl	1ca2c <HAL_RCCEx_GetPLL2ClockFreq>
        lpuart_ker_ck_pres = (pll2_clocks.PLL2_Q_Frequency / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
   1e6a0:	69fa      	ldr	r2, [r7, #28]
   1e6a2:	687b      	ldr	r3, [r7, #4]
   1e6a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e6a6:	2b00      	cmp	r3, #0
   1e6a8:	d044      	beq.n	1e734 <UART_SetConfig+0x764>
   1e6aa:	687b      	ldr	r3, [r7, #4]
   1e6ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e6ae:	2b01      	cmp	r3, #1
   1e6b0:	d03e      	beq.n	1e730 <UART_SetConfig+0x760>
   1e6b2:	687b      	ldr	r3, [r7, #4]
   1e6b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e6b6:	2b02      	cmp	r3, #2
   1e6b8:	d038      	beq.n	1e72c <UART_SetConfig+0x75c>
   1e6ba:	687b      	ldr	r3, [r7, #4]
   1e6bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e6be:	2b03      	cmp	r3, #3
   1e6c0:	d032      	beq.n	1e728 <UART_SetConfig+0x758>
   1e6c2:	687b      	ldr	r3, [r7, #4]
   1e6c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e6c6:	2b04      	cmp	r3, #4
   1e6c8:	d02c      	beq.n	1e724 <UART_SetConfig+0x754>
   1e6ca:	687b      	ldr	r3, [r7, #4]
   1e6cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e6ce:	2b05      	cmp	r3, #5
   1e6d0:	d026      	beq.n	1e720 <UART_SetConfig+0x750>
   1e6d2:	687b      	ldr	r3, [r7, #4]
   1e6d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e6d6:	2b06      	cmp	r3, #6
   1e6d8:	d020      	beq.n	1e71c <UART_SetConfig+0x74c>
   1e6da:	687b      	ldr	r3, [r7, #4]
   1e6dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e6de:	2b07      	cmp	r3, #7
   1e6e0:	d01a      	beq.n	1e718 <UART_SetConfig+0x748>
   1e6e2:	687b      	ldr	r3, [r7, #4]
   1e6e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e6e6:	2b08      	cmp	r3, #8
   1e6e8:	d014      	beq.n	1e714 <UART_SetConfig+0x744>
   1e6ea:	687b      	ldr	r3, [r7, #4]
   1e6ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e6ee:	2b09      	cmp	r3, #9
   1e6f0:	d00e      	beq.n	1e710 <UART_SetConfig+0x740>
   1e6f2:	687b      	ldr	r3, [r7, #4]
   1e6f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e6f6:	2b0a      	cmp	r3, #10
   1e6f8:	d008      	beq.n	1e70c <UART_SetConfig+0x73c>
   1e6fa:	687b      	ldr	r3, [r7, #4]
   1e6fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e6fe:	2b0b      	cmp	r3, #11
   1e700:	d102      	bne.n	1e708 <UART_SetConfig+0x738>
   1e702:	f44f 7380 	mov.w	r3, #256	; 0x100
   1e706:	e016      	b.n	1e736 <UART_SetConfig+0x766>
   1e708:	2301      	movs	r3, #1
   1e70a:	e014      	b.n	1e736 <UART_SetConfig+0x766>
   1e70c:	2380      	movs	r3, #128	; 0x80
   1e70e:	e012      	b.n	1e736 <UART_SetConfig+0x766>
   1e710:	2340      	movs	r3, #64	; 0x40
   1e712:	e010      	b.n	1e736 <UART_SetConfig+0x766>
   1e714:	2320      	movs	r3, #32
   1e716:	e00e      	b.n	1e736 <UART_SetConfig+0x766>
   1e718:	2310      	movs	r3, #16
   1e71a:	e00c      	b.n	1e736 <UART_SetConfig+0x766>
   1e71c:	230c      	movs	r3, #12
   1e71e:	e00a      	b.n	1e736 <UART_SetConfig+0x766>
   1e720:	230a      	movs	r3, #10
   1e722:	e008      	b.n	1e736 <UART_SetConfig+0x766>
   1e724:	2308      	movs	r3, #8
   1e726:	e006      	b.n	1e736 <UART_SetConfig+0x766>
   1e728:	2306      	movs	r3, #6
   1e72a:	e004      	b.n	1e736 <UART_SetConfig+0x766>
   1e72c:	2304      	movs	r3, #4
   1e72e:	e002      	b.n	1e736 <UART_SetConfig+0x766>
   1e730:	2302      	movs	r3, #2
   1e732:	e000      	b.n	1e736 <UART_SetConfig+0x766>
   1e734:	2301      	movs	r3, #1
   1e736:	fbb2 f3f3 	udiv	r3, r2, r3
   1e73a:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
   1e73c:	e1c5      	b.n	1eaca <UART_SetConfig+0xafa>
      case UART_CLOCKSOURCE_PLL3:
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
   1e73e:	f107 030c 	add.w	r3, r7, #12
   1e742:	4618      	mov	r0, r3
   1e744:	f7fe fabe 	bl	1ccc4 <HAL_RCCEx_GetPLL3ClockFreq>
        lpuart_ker_ck_pres = (pll3_clocks.PLL3_Q_Frequency / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
   1e748:	693a      	ldr	r2, [r7, #16]
   1e74a:	687b      	ldr	r3, [r7, #4]
   1e74c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e74e:	2b00      	cmp	r3, #0
   1e750:	d044      	beq.n	1e7dc <UART_SetConfig+0x80c>
   1e752:	687b      	ldr	r3, [r7, #4]
   1e754:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e756:	2b01      	cmp	r3, #1
   1e758:	d03e      	beq.n	1e7d8 <UART_SetConfig+0x808>
   1e75a:	687b      	ldr	r3, [r7, #4]
   1e75c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e75e:	2b02      	cmp	r3, #2
   1e760:	d038      	beq.n	1e7d4 <UART_SetConfig+0x804>
   1e762:	687b      	ldr	r3, [r7, #4]
   1e764:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e766:	2b03      	cmp	r3, #3
   1e768:	d032      	beq.n	1e7d0 <UART_SetConfig+0x800>
   1e76a:	687b      	ldr	r3, [r7, #4]
   1e76c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e76e:	2b04      	cmp	r3, #4
   1e770:	d02c      	beq.n	1e7cc <UART_SetConfig+0x7fc>
   1e772:	687b      	ldr	r3, [r7, #4]
   1e774:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e776:	2b05      	cmp	r3, #5
   1e778:	d026      	beq.n	1e7c8 <UART_SetConfig+0x7f8>
   1e77a:	687b      	ldr	r3, [r7, #4]
   1e77c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e77e:	2b06      	cmp	r3, #6
   1e780:	d020      	beq.n	1e7c4 <UART_SetConfig+0x7f4>
   1e782:	687b      	ldr	r3, [r7, #4]
   1e784:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e786:	2b07      	cmp	r3, #7
   1e788:	d01a      	beq.n	1e7c0 <UART_SetConfig+0x7f0>
   1e78a:	687b      	ldr	r3, [r7, #4]
   1e78c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e78e:	2b08      	cmp	r3, #8
   1e790:	d014      	beq.n	1e7bc <UART_SetConfig+0x7ec>
   1e792:	687b      	ldr	r3, [r7, #4]
   1e794:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e796:	2b09      	cmp	r3, #9
   1e798:	d00e      	beq.n	1e7b8 <UART_SetConfig+0x7e8>
   1e79a:	687b      	ldr	r3, [r7, #4]
   1e79c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e79e:	2b0a      	cmp	r3, #10
   1e7a0:	d008      	beq.n	1e7b4 <UART_SetConfig+0x7e4>
   1e7a2:	687b      	ldr	r3, [r7, #4]
   1e7a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e7a6:	2b0b      	cmp	r3, #11
   1e7a8:	d102      	bne.n	1e7b0 <UART_SetConfig+0x7e0>
   1e7aa:	f44f 7380 	mov.w	r3, #256	; 0x100
   1e7ae:	e016      	b.n	1e7de <UART_SetConfig+0x80e>
   1e7b0:	2301      	movs	r3, #1
   1e7b2:	e014      	b.n	1e7de <UART_SetConfig+0x80e>
   1e7b4:	2380      	movs	r3, #128	; 0x80
   1e7b6:	e012      	b.n	1e7de <UART_SetConfig+0x80e>
   1e7b8:	2340      	movs	r3, #64	; 0x40
   1e7ba:	e010      	b.n	1e7de <UART_SetConfig+0x80e>
   1e7bc:	2320      	movs	r3, #32
   1e7be:	e00e      	b.n	1e7de <UART_SetConfig+0x80e>
   1e7c0:	2310      	movs	r3, #16
   1e7c2:	e00c      	b.n	1e7de <UART_SetConfig+0x80e>
   1e7c4:	230c      	movs	r3, #12
   1e7c6:	e00a      	b.n	1e7de <UART_SetConfig+0x80e>
   1e7c8:	230a      	movs	r3, #10
   1e7ca:	e008      	b.n	1e7de <UART_SetConfig+0x80e>
   1e7cc:	2308      	movs	r3, #8
   1e7ce:	e006      	b.n	1e7de <UART_SetConfig+0x80e>
   1e7d0:	2306      	movs	r3, #6
   1e7d2:	e004      	b.n	1e7de <UART_SetConfig+0x80e>
   1e7d4:	2304      	movs	r3, #4
   1e7d6:	e002      	b.n	1e7de <UART_SetConfig+0x80e>
   1e7d8:	2302      	movs	r3, #2
   1e7da:	e000      	b.n	1e7de <UART_SetConfig+0x80e>
   1e7dc:	2301      	movs	r3, #1
   1e7de:	fbb2 f3f3 	udiv	r3, r2, r3
   1e7e2:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
   1e7e4:	e171      	b.n	1eaca <UART_SetConfig+0xafa>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
   1e7e6:	4b7a      	ldr	r3, [pc, #488]	; (1e9d0 <UART_SetConfig+0xa00>)
   1e7e8:	681b      	ldr	r3, [r3, #0]
   1e7ea:	f003 0320 	and.w	r3, r3, #32
   1e7ee:	2b00      	cmp	r3, #0
   1e7f0:	d054      	beq.n	1e89c <UART_SetConfig+0x8cc>
        {
          lpuart_ker_ck_pres = ((uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U)) / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
   1e7f2:	4b77      	ldr	r3, [pc, #476]	; (1e9d0 <UART_SetConfig+0xa00>)
   1e7f4:	681b      	ldr	r3, [r3, #0]
   1e7f6:	08db      	lsrs	r3, r3, #3
   1e7f8:	f003 0303 	and.w	r3, r3, #3
   1e7fc:	4a75      	ldr	r2, [pc, #468]	; (1e9d4 <UART_SetConfig+0xa04>)
   1e7fe:	40da      	lsrs	r2, r3
   1e800:	687b      	ldr	r3, [r7, #4]
   1e802:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e804:	2b00      	cmp	r3, #0
   1e806:	d044      	beq.n	1e892 <UART_SetConfig+0x8c2>
   1e808:	687b      	ldr	r3, [r7, #4]
   1e80a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e80c:	2b01      	cmp	r3, #1
   1e80e:	d03e      	beq.n	1e88e <UART_SetConfig+0x8be>
   1e810:	687b      	ldr	r3, [r7, #4]
   1e812:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e814:	2b02      	cmp	r3, #2
   1e816:	d038      	beq.n	1e88a <UART_SetConfig+0x8ba>
   1e818:	687b      	ldr	r3, [r7, #4]
   1e81a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e81c:	2b03      	cmp	r3, #3
   1e81e:	d032      	beq.n	1e886 <UART_SetConfig+0x8b6>
   1e820:	687b      	ldr	r3, [r7, #4]
   1e822:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e824:	2b04      	cmp	r3, #4
   1e826:	d02c      	beq.n	1e882 <UART_SetConfig+0x8b2>
   1e828:	687b      	ldr	r3, [r7, #4]
   1e82a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e82c:	2b05      	cmp	r3, #5
   1e82e:	d026      	beq.n	1e87e <UART_SetConfig+0x8ae>
   1e830:	687b      	ldr	r3, [r7, #4]
   1e832:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e834:	2b06      	cmp	r3, #6
   1e836:	d020      	beq.n	1e87a <UART_SetConfig+0x8aa>
   1e838:	687b      	ldr	r3, [r7, #4]
   1e83a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e83c:	2b07      	cmp	r3, #7
   1e83e:	d01a      	beq.n	1e876 <UART_SetConfig+0x8a6>
   1e840:	687b      	ldr	r3, [r7, #4]
   1e842:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e844:	2b08      	cmp	r3, #8
   1e846:	d014      	beq.n	1e872 <UART_SetConfig+0x8a2>
   1e848:	687b      	ldr	r3, [r7, #4]
   1e84a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e84c:	2b09      	cmp	r3, #9
   1e84e:	d00e      	beq.n	1e86e <UART_SetConfig+0x89e>
   1e850:	687b      	ldr	r3, [r7, #4]
   1e852:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e854:	2b0a      	cmp	r3, #10
   1e856:	d008      	beq.n	1e86a <UART_SetConfig+0x89a>
   1e858:	687b      	ldr	r3, [r7, #4]
   1e85a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e85c:	2b0b      	cmp	r3, #11
   1e85e:	d102      	bne.n	1e866 <UART_SetConfig+0x896>
   1e860:	f44f 7380 	mov.w	r3, #256	; 0x100
   1e864:	e016      	b.n	1e894 <UART_SetConfig+0x8c4>
   1e866:	2301      	movs	r3, #1
   1e868:	e014      	b.n	1e894 <UART_SetConfig+0x8c4>
   1e86a:	2380      	movs	r3, #128	; 0x80
   1e86c:	e012      	b.n	1e894 <UART_SetConfig+0x8c4>
   1e86e:	2340      	movs	r3, #64	; 0x40
   1e870:	e010      	b.n	1e894 <UART_SetConfig+0x8c4>
   1e872:	2320      	movs	r3, #32
   1e874:	e00e      	b.n	1e894 <UART_SetConfig+0x8c4>
   1e876:	2310      	movs	r3, #16
   1e878:	e00c      	b.n	1e894 <UART_SetConfig+0x8c4>
   1e87a:	230c      	movs	r3, #12
   1e87c:	e00a      	b.n	1e894 <UART_SetConfig+0x8c4>
   1e87e:	230a      	movs	r3, #10
   1e880:	e008      	b.n	1e894 <UART_SetConfig+0x8c4>
   1e882:	2308      	movs	r3, #8
   1e884:	e006      	b.n	1e894 <UART_SetConfig+0x8c4>
   1e886:	2306      	movs	r3, #6
   1e888:	e004      	b.n	1e894 <UART_SetConfig+0x8c4>
   1e88a:	2304      	movs	r3, #4
   1e88c:	e002      	b.n	1e894 <UART_SetConfig+0x8c4>
   1e88e:	2302      	movs	r3, #2
   1e890:	e000      	b.n	1e894 <UART_SetConfig+0x8c4>
   1e892:	2301      	movs	r3, #1
   1e894:	fbb2 f3f3 	udiv	r3, r2, r3
   1e898:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
        else
        {
          lpuart_ker_ck_pres = ((uint32_t) HSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
        }
        break;
   1e89a:	e116      	b.n	1eaca <UART_SetConfig+0xafa>
          lpuart_ker_ck_pres = ((uint32_t) HSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
   1e89c:	687b      	ldr	r3, [r7, #4]
   1e89e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e8a0:	2b00      	cmp	r3, #0
   1e8a2:	d043      	beq.n	1e92c <UART_SetConfig+0x95c>
   1e8a4:	687b      	ldr	r3, [r7, #4]
   1e8a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e8a8:	2b01      	cmp	r3, #1
   1e8aa:	d03d      	beq.n	1e928 <UART_SetConfig+0x958>
   1e8ac:	687b      	ldr	r3, [r7, #4]
   1e8ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e8b0:	2b02      	cmp	r3, #2
   1e8b2:	d037      	beq.n	1e924 <UART_SetConfig+0x954>
   1e8b4:	687b      	ldr	r3, [r7, #4]
   1e8b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e8b8:	2b03      	cmp	r3, #3
   1e8ba:	d031      	beq.n	1e920 <UART_SetConfig+0x950>
   1e8bc:	687b      	ldr	r3, [r7, #4]
   1e8be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e8c0:	2b04      	cmp	r3, #4
   1e8c2:	d02b      	beq.n	1e91c <UART_SetConfig+0x94c>
   1e8c4:	687b      	ldr	r3, [r7, #4]
   1e8c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e8c8:	2b05      	cmp	r3, #5
   1e8ca:	d025      	beq.n	1e918 <UART_SetConfig+0x948>
   1e8cc:	687b      	ldr	r3, [r7, #4]
   1e8ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e8d0:	2b06      	cmp	r3, #6
   1e8d2:	d01f      	beq.n	1e914 <UART_SetConfig+0x944>
   1e8d4:	687b      	ldr	r3, [r7, #4]
   1e8d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e8d8:	2b07      	cmp	r3, #7
   1e8da:	d019      	beq.n	1e910 <UART_SetConfig+0x940>
   1e8dc:	687b      	ldr	r3, [r7, #4]
   1e8de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e8e0:	2b08      	cmp	r3, #8
   1e8e2:	d013      	beq.n	1e90c <UART_SetConfig+0x93c>
   1e8e4:	687b      	ldr	r3, [r7, #4]
   1e8e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e8e8:	2b09      	cmp	r3, #9
   1e8ea:	d00d      	beq.n	1e908 <UART_SetConfig+0x938>
   1e8ec:	687b      	ldr	r3, [r7, #4]
   1e8ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e8f0:	2b0a      	cmp	r3, #10
   1e8f2:	d007      	beq.n	1e904 <UART_SetConfig+0x934>
   1e8f4:	687b      	ldr	r3, [r7, #4]
   1e8f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e8f8:	2b0b      	cmp	r3, #11
   1e8fa:	d101      	bne.n	1e900 <UART_SetConfig+0x930>
   1e8fc:	4b36      	ldr	r3, [pc, #216]	; (1e9d8 <UART_SetConfig+0xa08>)
   1e8fe:	e016      	b.n	1e92e <UART_SetConfig+0x95e>
   1e900:	4b34      	ldr	r3, [pc, #208]	; (1e9d4 <UART_SetConfig+0xa04>)
   1e902:	e014      	b.n	1e92e <UART_SetConfig+0x95e>
   1e904:	4b35      	ldr	r3, [pc, #212]	; (1e9dc <UART_SetConfig+0xa0c>)
   1e906:	e012      	b.n	1e92e <UART_SetConfig+0x95e>
   1e908:	4b35      	ldr	r3, [pc, #212]	; (1e9e0 <UART_SetConfig+0xa10>)
   1e90a:	e010      	b.n	1e92e <UART_SetConfig+0x95e>
   1e90c:	4b35      	ldr	r3, [pc, #212]	; (1e9e4 <UART_SetConfig+0xa14>)
   1e90e:	e00e      	b.n	1e92e <UART_SetConfig+0x95e>
   1e910:	4b35      	ldr	r3, [pc, #212]	; (1e9e8 <UART_SetConfig+0xa18>)
   1e912:	e00c      	b.n	1e92e <UART_SetConfig+0x95e>
   1e914:	4b35      	ldr	r3, [pc, #212]	; (1e9ec <UART_SetConfig+0xa1c>)
   1e916:	e00a      	b.n	1e92e <UART_SetConfig+0x95e>
   1e918:	4b35      	ldr	r3, [pc, #212]	; (1e9f0 <UART_SetConfig+0xa20>)
   1e91a:	e008      	b.n	1e92e <UART_SetConfig+0x95e>
   1e91c:	4b35      	ldr	r3, [pc, #212]	; (1e9f4 <UART_SetConfig+0xa24>)
   1e91e:	e006      	b.n	1e92e <UART_SetConfig+0x95e>
   1e920:	4b35      	ldr	r3, [pc, #212]	; (1e9f8 <UART_SetConfig+0xa28>)
   1e922:	e004      	b.n	1e92e <UART_SetConfig+0x95e>
   1e924:	4b35      	ldr	r3, [pc, #212]	; (1e9fc <UART_SetConfig+0xa2c>)
   1e926:	e002      	b.n	1e92e <UART_SetConfig+0x95e>
   1e928:	4b35      	ldr	r3, [pc, #212]	; (1ea00 <UART_SetConfig+0xa30>)
   1e92a:	e000      	b.n	1e92e <UART_SetConfig+0x95e>
   1e92c:	4b29      	ldr	r3, [pc, #164]	; (1e9d4 <UART_SetConfig+0xa04>)
   1e92e:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
   1e930:	e0cb      	b.n	1eaca <UART_SetConfig+0xafa>
      case UART_CLOCKSOURCE_CSI:
        lpuart_ker_ck_pres = ((uint32_t)CSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
   1e932:	687b      	ldr	r3, [r7, #4]
   1e934:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e936:	2b00      	cmp	r3, #0
   1e938:	d046      	beq.n	1e9c8 <UART_SetConfig+0x9f8>
   1e93a:	687b      	ldr	r3, [r7, #4]
   1e93c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e93e:	2b01      	cmp	r3, #1
   1e940:	d040      	beq.n	1e9c4 <UART_SetConfig+0x9f4>
   1e942:	687b      	ldr	r3, [r7, #4]
   1e944:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e946:	2b02      	cmp	r3, #2
   1e948:	d03a      	beq.n	1e9c0 <UART_SetConfig+0x9f0>
   1e94a:	687b      	ldr	r3, [r7, #4]
   1e94c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e94e:	2b03      	cmp	r3, #3
   1e950:	d034      	beq.n	1e9bc <UART_SetConfig+0x9ec>
   1e952:	687b      	ldr	r3, [r7, #4]
   1e954:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e956:	2b04      	cmp	r3, #4
   1e958:	d02e      	beq.n	1e9b8 <UART_SetConfig+0x9e8>
   1e95a:	687b      	ldr	r3, [r7, #4]
   1e95c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e95e:	2b05      	cmp	r3, #5
   1e960:	d028      	beq.n	1e9b4 <UART_SetConfig+0x9e4>
   1e962:	687b      	ldr	r3, [r7, #4]
   1e964:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e966:	2b06      	cmp	r3, #6
   1e968:	d022      	beq.n	1e9b0 <UART_SetConfig+0x9e0>
   1e96a:	687b      	ldr	r3, [r7, #4]
   1e96c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e96e:	2b07      	cmp	r3, #7
   1e970:	d01c      	beq.n	1e9ac <UART_SetConfig+0x9dc>
   1e972:	687b      	ldr	r3, [r7, #4]
   1e974:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e976:	2b08      	cmp	r3, #8
   1e978:	d016      	beq.n	1e9a8 <UART_SetConfig+0x9d8>
   1e97a:	687b      	ldr	r3, [r7, #4]
   1e97c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e97e:	2b09      	cmp	r3, #9
   1e980:	d00f      	beq.n	1e9a2 <UART_SetConfig+0x9d2>
   1e982:	687b      	ldr	r3, [r7, #4]
   1e984:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e986:	2b0a      	cmp	r3, #10
   1e988:	d008      	beq.n	1e99c <UART_SetConfig+0x9cc>
   1e98a:	687b      	ldr	r3, [r7, #4]
   1e98c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1e98e:	2b0b      	cmp	r3, #11
   1e990:	d102      	bne.n	1e998 <UART_SetConfig+0x9c8>
   1e992:	f643 5309 	movw	r3, #15625	; 0x3d09
   1e996:	e018      	b.n	1e9ca <UART_SetConfig+0x9fa>
   1e998:	4b13      	ldr	r3, [pc, #76]	; (1e9e8 <UART_SetConfig+0xa18>)
   1e99a:	e016      	b.n	1e9ca <UART_SetConfig+0x9fa>
   1e99c:	f647 2312 	movw	r3, #31250	; 0x7a12
   1e9a0:	e013      	b.n	1e9ca <UART_SetConfig+0x9fa>
   1e9a2:	f24f 4324 	movw	r3, #62500	; 0xf424
   1e9a6:	e010      	b.n	1e9ca <UART_SetConfig+0x9fa>
   1e9a8:	4b16      	ldr	r3, [pc, #88]	; (1ea04 <UART_SetConfig+0xa34>)
   1e9aa:	e00e      	b.n	1e9ca <UART_SetConfig+0x9fa>
   1e9ac:	4b0a      	ldr	r3, [pc, #40]	; (1e9d8 <UART_SetConfig+0xa08>)
   1e9ae:	e00c      	b.n	1e9ca <UART_SetConfig+0x9fa>
   1e9b0:	4b15      	ldr	r3, [pc, #84]	; (1ea08 <UART_SetConfig+0xa38>)
   1e9b2:	e00a      	b.n	1e9ca <UART_SetConfig+0x9fa>
   1e9b4:	4b15      	ldr	r3, [pc, #84]	; (1ea0c <UART_SetConfig+0xa3c>)
   1e9b6:	e008      	b.n	1e9ca <UART_SetConfig+0x9fa>
   1e9b8:	4b08      	ldr	r3, [pc, #32]	; (1e9dc <UART_SetConfig+0xa0c>)
   1e9ba:	e006      	b.n	1e9ca <UART_SetConfig+0x9fa>
   1e9bc:	4b14      	ldr	r3, [pc, #80]	; (1ea10 <UART_SetConfig+0xa40>)
   1e9be:	e004      	b.n	1e9ca <UART_SetConfig+0x9fa>
   1e9c0:	4b07      	ldr	r3, [pc, #28]	; (1e9e0 <UART_SetConfig+0xa10>)
   1e9c2:	e002      	b.n	1e9ca <UART_SetConfig+0x9fa>
   1e9c4:	4b07      	ldr	r3, [pc, #28]	; (1e9e4 <UART_SetConfig+0xa14>)
   1e9c6:	e000      	b.n	1e9ca <UART_SetConfig+0x9fa>
   1e9c8:	4b07      	ldr	r3, [pc, #28]	; (1e9e8 <UART_SetConfig+0xa18>)
   1e9ca:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
   1e9cc:	e07d      	b.n	1eaca <UART_SetConfig+0xafa>
   1e9ce:	bf00      	nop
   1e9d0:	58024400 	.word	0x58024400
   1e9d4:	03d09000 	.word	0x03d09000
   1e9d8:	0003d090 	.word	0x0003d090
   1e9dc:	0007a120 	.word	0x0007a120
   1e9e0:	000f4240 	.word	0x000f4240
   1e9e4:	001e8480 	.word	0x001e8480
   1e9e8:	003d0900 	.word	0x003d0900
   1e9ec:	00516155 	.word	0x00516155
   1e9f0:	0061a800 	.word	0x0061a800
   1e9f4:	007a1200 	.word	0x007a1200
   1e9f8:	00a2c2aa 	.word	0x00a2c2aa
   1e9fc:	00f42400 	.word	0x00f42400
   1ea00:	01e84800 	.word	0x01e84800
   1ea04:	0001e848 	.word	0x0001e848
   1ea08:	00051615 	.word	0x00051615
   1ea0c:	00061a80 	.word	0x00061a80
   1ea10:	000a2c2a 	.word	0x000a2c2a
      case UART_CLOCKSOURCE_LSE:
        lpuart_ker_ck_pres = ((uint32_t)LSE_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
   1ea14:	687b      	ldr	r3, [r7, #4]
   1ea16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ea18:	2b00      	cmp	r3, #0
   1ea1a:	d04e      	beq.n	1eaba <UART_SetConfig+0xaea>
   1ea1c:	687b      	ldr	r3, [r7, #4]
   1ea1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ea20:	2b01      	cmp	r3, #1
   1ea22:	d047      	beq.n	1eab4 <UART_SetConfig+0xae4>
   1ea24:	687b      	ldr	r3, [r7, #4]
   1ea26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ea28:	2b02      	cmp	r3, #2
   1ea2a:	d040      	beq.n	1eaae <UART_SetConfig+0xade>
   1ea2c:	687b      	ldr	r3, [r7, #4]
   1ea2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ea30:	2b03      	cmp	r3, #3
   1ea32:	d039      	beq.n	1eaa8 <UART_SetConfig+0xad8>
   1ea34:	687b      	ldr	r3, [r7, #4]
   1ea36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ea38:	2b04      	cmp	r3, #4
   1ea3a:	d032      	beq.n	1eaa2 <UART_SetConfig+0xad2>
   1ea3c:	687b      	ldr	r3, [r7, #4]
   1ea3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ea40:	2b05      	cmp	r3, #5
   1ea42:	d02b      	beq.n	1ea9c <UART_SetConfig+0xacc>
   1ea44:	687b      	ldr	r3, [r7, #4]
   1ea46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ea48:	2b06      	cmp	r3, #6
   1ea4a:	d024      	beq.n	1ea96 <UART_SetConfig+0xac6>
   1ea4c:	687b      	ldr	r3, [r7, #4]
   1ea4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ea50:	2b07      	cmp	r3, #7
   1ea52:	d01d      	beq.n	1ea90 <UART_SetConfig+0xac0>
   1ea54:	687b      	ldr	r3, [r7, #4]
   1ea56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ea58:	2b08      	cmp	r3, #8
   1ea5a:	d016      	beq.n	1ea8a <UART_SetConfig+0xaba>
   1ea5c:	687b      	ldr	r3, [r7, #4]
   1ea5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ea60:	2b09      	cmp	r3, #9
   1ea62:	d00f      	beq.n	1ea84 <UART_SetConfig+0xab4>
   1ea64:	687b      	ldr	r3, [r7, #4]
   1ea66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ea68:	2b0a      	cmp	r3, #10
   1ea6a:	d008      	beq.n	1ea7e <UART_SetConfig+0xaae>
   1ea6c:	687b      	ldr	r3, [r7, #4]
   1ea6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ea70:	2b0b      	cmp	r3, #11
   1ea72:	d101      	bne.n	1ea78 <UART_SetConfig+0xaa8>
   1ea74:	2380      	movs	r3, #128	; 0x80
   1ea76:	e022      	b.n	1eabe <UART_SetConfig+0xaee>
   1ea78:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   1ea7c:	e01f      	b.n	1eabe <UART_SetConfig+0xaee>
   1ea7e:	f44f 7380 	mov.w	r3, #256	; 0x100
   1ea82:	e01c      	b.n	1eabe <UART_SetConfig+0xaee>
   1ea84:	f44f 7300 	mov.w	r3, #512	; 0x200
   1ea88:	e019      	b.n	1eabe <UART_SetConfig+0xaee>
   1ea8a:	f44f 6380 	mov.w	r3, #1024	; 0x400
   1ea8e:	e016      	b.n	1eabe <UART_SetConfig+0xaee>
   1ea90:	f44f 6300 	mov.w	r3, #2048	; 0x800
   1ea94:	e013      	b.n	1eabe <UART_SetConfig+0xaee>
   1ea96:	f640 23aa 	movw	r3, #2730	; 0xaaa
   1ea9a:	e010      	b.n	1eabe <UART_SetConfig+0xaee>
   1ea9c:	f640 43cc 	movw	r3, #3276	; 0xccc
   1eaa0:	e00d      	b.n	1eabe <UART_SetConfig+0xaee>
   1eaa2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   1eaa6:	e00a      	b.n	1eabe <UART_SetConfig+0xaee>
   1eaa8:	f241 5355 	movw	r3, #5461	; 0x1555
   1eaac:	e007      	b.n	1eabe <UART_SetConfig+0xaee>
   1eaae:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   1eab2:	e004      	b.n	1eabe <UART_SetConfig+0xaee>
   1eab4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
   1eab8:	e001      	b.n	1eabe <UART_SetConfig+0xaee>
   1eaba:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   1eabe:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
   1eac0:	e003      	b.n	1eaca <UART_SetConfig+0xafa>
      default:
        ret = HAL_ERROR;
   1eac2:	2301      	movs	r3, #1
   1eac4:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
        break;
   1eac8:	bf00      	nop
    }

    /* if proper clock source reported */
    if (lpuart_ker_ck_pres != 0U)
   1eaca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   1eacc:	2b00      	cmp	r3, #0
   1eace:	f001 83e8 	beq.w	202a2 <UART_SetConfig+0x22d2>
    {
      /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
   1ead2:	687b      	ldr	r3, [r7, #4]
   1ead4:	685a      	ldr	r2, [r3, #4]
   1ead6:	4613      	mov	r3, r2
   1ead8:	005b      	lsls	r3, r3, #1
   1eada:	4413      	add	r3, r2
   1eadc:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   1eade:	429a      	cmp	r2, r3
   1eae0:	d305      	bcc.n	1eaee <UART_SetConfig+0xb1e>
          (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
   1eae2:	687b      	ldr	r3, [r7, #4]
   1eae4:	685b      	ldr	r3, [r3, #4]
   1eae6:	031b      	lsls	r3, r3, #12
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
   1eae8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   1eaea:	429a      	cmp	r2, r3
   1eaec:	d904      	bls.n	1eaf8 <UART_SetConfig+0xb28>
      {
        ret = HAL_ERROR;
   1eaee:	2301      	movs	r3, #1
   1eaf0:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
   1eaf4:	f001 bbd5 	b.w	202a2 <UART_SetConfig+0x22d2>
      }
      else
      {
        switch (clocksource)
   1eaf8:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
   1eafc:	2b08      	cmp	r3, #8
   1eafe:	f000 8154 	beq.w	1edaa <UART_SetConfig+0xdda>
   1eb02:	2b08      	cmp	r3, #8
   1eb04:	dc06      	bgt.n	1eb14 <UART_SetConfig+0xb44>
   1eb06:	2b02      	cmp	r3, #2
   1eb08:	d00f      	beq.n	1eb2a <UART_SetConfig+0xb5a>
   1eb0a:	2b04      	cmp	r3, #4
   1eb0c:	f000 80ac 	beq.w	1ec68 <UART_SetConfig+0xc98>
   1eb10:	f000 bc30 	b.w	1f374 <UART_SetConfig+0x13a4>
   1eb14:	2b20      	cmp	r3, #32
   1eb16:	f000 832d 	beq.w	1f174 <UART_SetConfig+0x11a4>
   1eb1a:	2b40      	cmp	r3, #64	; 0x40
   1eb1c:	f000 83a5 	beq.w	1f26a <UART_SetConfig+0x129a>
   1eb20:	2b10      	cmp	r3, #16
   1eb22:	f000 81e3 	beq.w	1eeec <UART_SetConfig+0xf1c>
   1eb26:	f000 bc25 	b.w	1f374 <UART_SetConfig+0x13a4>
        {
          case UART_CLOCKSOURCE_D3PCLK1:
            pclk = HAL_RCCEx_GetD3PCLK1Freq();
   1eb2a:	f7fd ff69 	bl	1ca00 <HAL_RCCEx_GetD3PCLK1Freq>
   1eb2e:	62b8      	str	r0, [r7, #40]	; 0x28
            usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1eb30:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1eb32:	4618      	mov	r0, r3
   1eb34:	f04f 0100 	mov.w	r1, #0
   1eb38:	687b      	ldr	r3, [r7, #4]
   1eb3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1eb3c:	2b00      	cmp	r3, #0
   1eb3e:	d067      	beq.n	1ec10 <UART_SetConfig+0xc40>
   1eb40:	687b      	ldr	r3, [r7, #4]
   1eb42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1eb44:	2b01      	cmp	r3, #1
   1eb46:	d05e      	beq.n	1ec06 <UART_SetConfig+0xc36>
   1eb48:	687b      	ldr	r3, [r7, #4]
   1eb4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1eb4c:	2b02      	cmp	r3, #2
   1eb4e:	d055      	beq.n	1ebfc <UART_SetConfig+0xc2c>
   1eb50:	687b      	ldr	r3, [r7, #4]
   1eb52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1eb54:	2b03      	cmp	r3, #3
   1eb56:	d04c      	beq.n	1ebf2 <UART_SetConfig+0xc22>
   1eb58:	687b      	ldr	r3, [r7, #4]
   1eb5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1eb5c:	2b04      	cmp	r3, #4
   1eb5e:	d043      	beq.n	1ebe8 <UART_SetConfig+0xc18>
   1eb60:	687b      	ldr	r3, [r7, #4]
   1eb62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1eb64:	2b05      	cmp	r3, #5
   1eb66:	d03a      	beq.n	1ebde <UART_SetConfig+0xc0e>
   1eb68:	687b      	ldr	r3, [r7, #4]
   1eb6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1eb6c:	2b06      	cmp	r3, #6
   1eb6e:	d031      	beq.n	1ebd4 <UART_SetConfig+0xc04>
   1eb70:	687b      	ldr	r3, [r7, #4]
   1eb72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1eb74:	2b07      	cmp	r3, #7
   1eb76:	d028      	beq.n	1ebca <UART_SetConfig+0xbfa>
   1eb78:	687b      	ldr	r3, [r7, #4]
   1eb7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1eb7c:	2b08      	cmp	r3, #8
   1eb7e:	d01f      	beq.n	1ebc0 <UART_SetConfig+0xbf0>
   1eb80:	687b      	ldr	r3, [r7, #4]
   1eb82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1eb84:	2b09      	cmp	r3, #9
   1eb86:	d016      	beq.n	1ebb6 <UART_SetConfig+0xbe6>
   1eb88:	687b      	ldr	r3, [r7, #4]
   1eb8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1eb8c:	2b0a      	cmp	r3, #10
   1eb8e:	d00d      	beq.n	1ebac <UART_SetConfig+0xbdc>
   1eb90:	687b      	ldr	r3, [r7, #4]
   1eb92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1eb94:	2b0b      	cmp	r3, #11
   1eb96:	d104      	bne.n	1eba2 <UART_SetConfig+0xbd2>
   1eb98:	f44f 7380 	mov.w	r3, #256	; 0x100
   1eb9c:	f04f 0400 	mov.w	r4, #0
   1eba0:	e03a      	b.n	1ec18 <UART_SetConfig+0xc48>
   1eba2:	f04f 0301 	mov.w	r3, #1
   1eba6:	f04f 0400 	mov.w	r4, #0
   1ebaa:	e035      	b.n	1ec18 <UART_SetConfig+0xc48>
   1ebac:	f04f 0380 	mov.w	r3, #128	; 0x80
   1ebb0:	f04f 0400 	mov.w	r4, #0
   1ebb4:	e030      	b.n	1ec18 <UART_SetConfig+0xc48>
   1ebb6:	f04f 0340 	mov.w	r3, #64	; 0x40
   1ebba:	f04f 0400 	mov.w	r4, #0
   1ebbe:	e02b      	b.n	1ec18 <UART_SetConfig+0xc48>
   1ebc0:	f04f 0320 	mov.w	r3, #32
   1ebc4:	f04f 0400 	mov.w	r4, #0
   1ebc8:	e026      	b.n	1ec18 <UART_SetConfig+0xc48>
   1ebca:	f04f 0310 	mov.w	r3, #16
   1ebce:	f04f 0400 	mov.w	r4, #0
   1ebd2:	e021      	b.n	1ec18 <UART_SetConfig+0xc48>
   1ebd4:	f04f 030c 	mov.w	r3, #12
   1ebd8:	f04f 0400 	mov.w	r4, #0
   1ebdc:	e01c      	b.n	1ec18 <UART_SetConfig+0xc48>
   1ebde:	f04f 030a 	mov.w	r3, #10
   1ebe2:	f04f 0400 	mov.w	r4, #0
   1ebe6:	e017      	b.n	1ec18 <UART_SetConfig+0xc48>
   1ebe8:	f04f 0308 	mov.w	r3, #8
   1ebec:	f04f 0400 	mov.w	r4, #0
   1ebf0:	e012      	b.n	1ec18 <UART_SetConfig+0xc48>
   1ebf2:	f04f 0306 	mov.w	r3, #6
   1ebf6:	f04f 0400 	mov.w	r4, #0
   1ebfa:	e00d      	b.n	1ec18 <UART_SetConfig+0xc48>
   1ebfc:	f04f 0304 	mov.w	r3, #4
   1ec00:	f04f 0400 	mov.w	r4, #0
   1ec04:	e008      	b.n	1ec18 <UART_SetConfig+0xc48>
   1ec06:	f04f 0302 	mov.w	r3, #2
   1ec0a:	f04f 0400 	mov.w	r4, #0
   1ec0e:	e003      	b.n	1ec18 <UART_SetConfig+0xc48>
   1ec10:	f04f 0301 	mov.w	r3, #1
   1ec14:	f04f 0400 	mov.w	r4, #0
   1ec18:	461a      	mov	r2, r3
   1ec1a:	4623      	mov	r3, r4
   1ec1c:	f004 ff22 	bl	23a64 <__aeabi_uldivmod>
   1ec20:	4603      	mov	r3, r0
   1ec22:	460c      	mov	r4, r1
   1ec24:	4619      	mov	r1, r3
   1ec26:	4622      	mov	r2, r4
   1ec28:	f04f 0300 	mov.w	r3, #0
   1ec2c:	f04f 0400 	mov.w	r4, #0
   1ec30:	0214      	lsls	r4, r2, #8
   1ec32:	ea44 6411 	orr.w	r4, r4, r1, lsr #24
   1ec36:	020b      	lsls	r3, r1, #8
   1ec38:	687a      	ldr	r2, [r7, #4]
   1ec3a:	6852      	ldr	r2, [r2, #4]
   1ec3c:	0852      	lsrs	r2, r2, #1
   1ec3e:	4611      	mov	r1, r2
   1ec40:	f04f 0200 	mov.w	r2, #0
   1ec44:	eb13 0b01 	adds.w	fp, r3, r1
   1ec48:	eb44 0c02 	adc.w	ip, r4, r2
   1ec4c:	4658      	mov	r0, fp
   1ec4e:	4661      	mov	r1, ip
   1ec50:	687b      	ldr	r3, [r7, #4]
   1ec52:	685b      	ldr	r3, [r3, #4]
   1ec54:	f04f 0400 	mov.w	r4, #0
   1ec58:	461a      	mov	r2, r3
   1ec5a:	4623      	mov	r3, r4
   1ec5c:	f004 ff02 	bl	23a64 <__aeabi_uldivmod>
   1ec60:	4603      	mov	r3, r0
   1ec62:	460c      	mov	r4, r1
   1ec64:	637b      	str	r3, [r7, #52]	; 0x34
            break;
   1ec66:	e389      	b.n	1f37c <UART_SetConfig+0x13ac>
          case UART_CLOCKSOURCE_PLL2:
            HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
   1ec68:	f107 0318 	add.w	r3, r7, #24
   1ec6c:	4618      	mov	r0, r3
   1ec6e:	f7fd fedd 	bl	1ca2c <HAL_RCCEx_GetPLL2ClockFreq>
            usartdiv = (uint32_t)(UART_DIV_LPUART(pll2_clocks.PLL2_Q_Frequency, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1ec72:	69fb      	ldr	r3, [r7, #28]
   1ec74:	4618      	mov	r0, r3
   1ec76:	f04f 0100 	mov.w	r1, #0
   1ec7a:	687b      	ldr	r3, [r7, #4]
   1ec7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ec7e:	2b00      	cmp	r3, #0
   1ec80:	d067      	beq.n	1ed52 <UART_SetConfig+0xd82>
   1ec82:	687b      	ldr	r3, [r7, #4]
   1ec84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ec86:	2b01      	cmp	r3, #1
   1ec88:	d05e      	beq.n	1ed48 <UART_SetConfig+0xd78>
   1ec8a:	687b      	ldr	r3, [r7, #4]
   1ec8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ec8e:	2b02      	cmp	r3, #2
   1ec90:	d055      	beq.n	1ed3e <UART_SetConfig+0xd6e>
   1ec92:	687b      	ldr	r3, [r7, #4]
   1ec94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ec96:	2b03      	cmp	r3, #3
   1ec98:	d04c      	beq.n	1ed34 <UART_SetConfig+0xd64>
   1ec9a:	687b      	ldr	r3, [r7, #4]
   1ec9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ec9e:	2b04      	cmp	r3, #4
   1eca0:	d043      	beq.n	1ed2a <UART_SetConfig+0xd5a>
   1eca2:	687b      	ldr	r3, [r7, #4]
   1eca4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1eca6:	2b05      	cmp	r3, #5
   1eca8:	d03a      	beq.n	1ed20 <UART_SetConfig+0xd50>
   1ecaa:	687b      	ldr	r3, [r7, #4]
   1ecac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ecae:	2b06      	cmp	r3, #6
   1ecb0:	d031      	beq.n	1ed16 <UART_SetConfig+0xd46>
   1ecb2:	687b      	ldr	r3, [r7, #4]
   1ecb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ecb6:	2b07      	cmp	r3, #7
   1ecb8:	d028      	beq.n	1ed0c <UART_SetConfig+0xd3c>
   1ecba:	687b      	ldr	r3, [r7, #4]
   1ecbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ecbe:	2b08      	cmp	r3, #8
   1ecc0:	d01f      	beq.n	1ed02 <UART_SetConfig+0xd32>
   1ecc2:	687b      	ldr	r3, [r7, #4]
   1ecc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ecc6:	2b09      	cmp	r3, #9
   1ecc8:	d016      	beq.n	1ecf8 <UART_SetConfig+0xd28>
   1ecca:	687b      	ldr	r3, [r7, #4]
   1eccc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ecce:	2b0a      	cmp	r3, #10
   1ecd0:	d00d      	beq.n	1ecee <UART_SetConfig+0xd1e>
   1ecd2:	687b      	ldr	r3, [r7, #4]
   1ecd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ecd6:	2b0b      	cmp	r3, #11
   1ecd8:	d104      	bne.n	1ece4 <UART_SetConfig+0xd14>
   1ecda:	f44f 7380 	mov.w	r3, #256	; 0x100
   1ecde:	f04f 0400 	mov.w	r4, #0
   1ece2:	e03a      	b.n	1ed5a <UART_SetConfig+0xd8a>
   1ece4:	f04f 0301 	mov.w	r3, #1
   1ece8:	f04f 0400 	mov.w	r4, #0
   1ecec:	e035      	b.n	1ed5a <UART_SetConfig+0xd8a>
   1ecee:	f04f 0380 	mov.w	r3, #128	; 0x80
   1ecf2:	f04f 0400 	mov.w	r4, #0
   1ecf6:	e030      	b.n	1ed5a <UART_SetConfig+0xd8a>
   1ecf8:	f04f 0340 	mov.w	r3, #64	; 0x40
   1ecfc:	f04f 0400 	mov.w	r4, #0
   1ed00:	e02b      	b.n	1ed5a <UART_SetConfig+0xd8a>
   1ed02:	f04f 0320 	mov.w	r3, #32
   1ed06:	f04f 0400 	mov.w	r4, #0
   1ed0a:	e026      	b.n	1ed5a <UART_SetConfig+0xd8a>
   1ed0c:	f04f 0310 	mov.w	r3, #16
   1ed10:	f04f 0400 	mov.w	r4, #0
   1ed14:	e021      	b.n	1ed5a <UART_SetConfig+0xd8a>
   1ed16:	f04f 030c 	mov.w	r3, #12
   1ed1a:	f04f 0400 	mov.w	r4, #0
   1ed1e:	e01c      	b.n	1ed5a <UART_SetConfig+0xd8a>
   1ed20:	f04f 030a 	mov.w	r3, #10
   1ed24:	f04f 0400 	mov.w	r4, #0
   1ed28:	e017      	b.n	1ed5a <UART_SetConfig+0xd8a>
   1ed2a:	f04f 0308 	mov.w	r3, #8
   1ed2e:	f04f 0400 	mov.w	r4, #0
   1ed32:	e012      	b.n	1ed5a <UART_SetConfig+0xd8a>
   1ed34:	f04f 0306 	mov.w	r3, #6
   1ed38:	f04f 0400 	mov.w	r4, #0
   1ed3c:	e00d      	b.n	1ed5a <UART_SetConfig+0xd8a>
   1ed3e:	f04f 0304 	mov.w	r3, #4
   1ed42:	f04f 0400 	mov.w	r4, #0
   1ed46:	e008      	b.n	1ed5a <UART_SetConfig+0xd8a>
   1ed48:	f04f 0302 	mov.w	r3, #2
   1ed4c:	f04f 0400 	mov.w	r4, #0
   1ed50:	e003      	b.n	1ed5a <UART_SetConfig+0xd8a>
   1ed52:	f04f 0301 	mov.w	r3, #1
   1ed56:	f04f 0400 	mov.w	r4, #0
   1ed5a:	461a      	mov	r2, r3
   1ed5c:	4623      	mov	r3, r4
   1ed5e:	f004 fe81 	bl	23a64 <__aeabi_uldivmod>
   1ed62:	4603      	mov	r3, r0
   1ed64:	460c      	mov	r4, r1
   1ed66:	4619      	mov	r1, r3
   1ed68:	4622      	mov	r2, r4
   1ed6a:	f04f 0300 	mov.w	r3, #0
   1ed6e:	f04f 0400 	mov.w	r4, #0
   1ed72:	0214      	lsls	r4, r2, #8
   1ed74:	ea44 6411 	orr.w	r4, r4, r1, lsr #24
   1ed78:	020b      	lsls	r3, r1, #8
   1ed7a:	687a      	ldr	r2, [r7, #4]
   1ed7c:	6852      	ldr	r2, [r2, #4]
   1ed7e:	0852      	lsrs	r2, r2, #1
   1ed80:	4611      	mov	r1, r2
   1ed82:	f04f 0200 	mov.w	r2, #0
   1ed86:	eb13 0b01 	adds.w	fp, r3, r1
   1ed8a:	eb44 0c02 	adc.w	ip, r4, r2
   1ed8e:	4658      	mov	r0, fp
   1ed90:	4661      	mov	r1, ip
   1ed92:	687b      	ldr	r3, [r7, #4]
   1ed94:	685b      	ldr	r3, [r3, #4]
   1ed96:	f04f 0400 	mov.w	r4, #0
   1ed9a:	461a      	mov	r2, r3
   1ed9c:	4623      	mov	r3, r4
   1ed9e:	f004 fe61 	bl	23a64 <__aeabi_uldivmod>
   1eda2:	4603      	mov	r3, r0
   1eda4:	460c      	mov	r4, r1
   1eda6:	637b      	str	r3, [r7, #52]	; 0x34
            break;
   1eda8:	e2e8      	b.n	1f37c <UART_SetConfig+0x13ac>
          case UART_CLOCKSOURCE_PLL3:
            HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
   1edaa:	f107 030c 	add.w	r3, r7, #12
   1edae:	4618      	mov	r0, r3
   1edb0:	f7fd ff88 	bl	1ccc4 <HAL_RCCEx_GetPLL3ClockFreq>
            usartdiv = (uint32_t)(UART_DIV_LPUART(pll3_clocks.PLL3_Q_Frequency, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1edb4:	693b      	ldr	r3, [r7, #16]
   1edb6:	4618      	mov	r0, r3
   1edb8:	f04f 0100 	mov.w	r1, #0
   1edbc:	687b      	ldr	r3, [r7, #4]
   1edbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1edc0:	2b00      	cmp	r3, #0
   1edc2:	d067      	beq.n	1ee94 <UART_SetConfig+0xec4>
   1edc4:	687b      	ldr	r3, [r7, #4]
   1edc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1edc8:	2b01      	cmp	r3, #1
   1edca:	d05e      	beq.n	1ee8a <UART_SetConfig+0xeba>
   1edcc:	687b      	ldr	r3, [r7, #4]
   1edce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1edd0:	2b02      	cmp	r3, #2
   1edd2:	d055      	beq.n	1ee80 <UART_SetConfig+0xeb0>
   1edd4:	687b      	ldr	r3, [r7, #4]
   1edd6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1edd8:	2b03      	cmp	r3, #3
   1edda:	d04c      	beq.n	1ee76 <UART_SetConfig+0xea6>
   1eddc:	687b      	ldr	r3, [r7, #4]
   1edde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ede0:	2b04      	cmp	r3, #4
   1ede2:	d043      	beq.n	1ee6c <UART_SetConfig+0xe9c>
   1ede4:	687b      	ldr	r3, [r7, #4]
   1ede6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ede8:	2b05      	cmp	r3, #5
   1edea:	d03a      	beq.n	1ee62 <UART_SetConfig+0xe92>
   1edec:	687b      	ldr	r3, [r7, #4]
   1edee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1edf0:	2b06      	cmp	r3, #6
   1edf2:	d031      	beq.n	1ee58 <UART_SetConfig+0xe88>
   1edf4:	687b      	ldr	r3, [r7, #4]
   1edf6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1edf8:	2b07      	cmp	r3, #7
   1edfa:	d028      	beq.n	1ee4e <UART_SetConfig+0xe7e>
   1edfc:	687b      	ldr	r3, [r7, #4]
   1edfe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ee00:	2b08      	cmp	r3, #8
   1ee02:	d01f      	beq.n	1ee44 <UART_SetConfig+0xe74>
   1ee04:	687b      	ldr	r3, [r7, #4]
   1ee06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ee08:	2b09      	cmp	r3, #9
   1ee0a:	d016      	beq.n	1ee3a <UART_SetConfig+0xe6a>
   1ee0c:	687b      	ldr	r3, [r7, #4]
   1ee0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ee10:	2b0a      	cmp	r3, #10
   1ee12:	d00d      	beq.n	1ee30 <UART_SetConfig+0xe60>
   1ee14:	687b      	ldr	r3, [r7, #4]
   1ee16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ee18:	2b0b      	cmp	r3, #11
   1ee1a:	d104      	bne.n	1ee26 <UART_SetConfig+0xe56>
   1ee1c:	f44f 7380 	mov.w	r3, #256	; 0x100
   1ee20:	f04f 0400 	mov.w	r4, #0
   1ee24:	e03a      	b.n	1ee9c <UART_SetConfig+0xecc>
   1ee26:	f04f 0301 	mov.w	r3, #1
   1ee2a:	f04f 0400 	mov.w	r4, #0
   1ee2e:	e035      	b.n	1ee9c <UART_SetConfig+0xecc>
   1ee30:	f04f 0380 	mov.w	r3, #128	; 0x80
   1ee34:	f04f 0400 	mov.w	r4, #0
   1ee38:	e030      	b.n	1ee9c <UART_SetConfig+0xecc>
   1ee3a:	f04f 0340 	mov.w	r3, #64	; 0x40
   1ee3e:	f04f 0400 	mov.w	r4, #0
   1ee42:	e02b      	b.n	1ee9c <UART_SetConfig+0xecc>
   1ee44:	f04f 0320 	mov.w	r3, #32
   1ee48:	f04f 0400 	mov.w	r4, #0
   1ee4c:	e026      	b.n	1ee9c <UART_SetConfig+0xecc>
   1ee4e:	f04f 0310 	mov.w	r3, #16
   1ee52:	f04f 0400 	mov.w	r4, #0
   1ee56:	e021      	b.n	1ee9c <UART_SetConfig+0xecc>
   1ee58:	f04f 030c 	mov.w	r3, #12
   1ee5c:	f04f 0400 	mov.w	r4, #0
   1ee60:	e01c      	b.n	1ee9c <UART_SetConfig+0xecc>
   1ee62:	f04f 030a 	mov.w	r3, #10
   1ee66:	f04f 0400 	mov.w	r4, #0
   1ee6a:	e017      	b.n	1ee9c <UART_SetConfig+0xecc>
   1ee6c:	f04f 0308 	mov.w	r3, #8
   1ee70:	f04f 0400 	mov.w	r4, #0
   1ee74:	e012      	b.n	1ee9c <UART_SetConfig+0xecc>
   1ee76:	f04f 0306 	mov.w	r3, #6
   1ee7a:	f04f 0400 	mov.w	r4, #0
   1ee7e:	e00d      	b.n	1ee9c <UART_SetConfig+0xecc>
   1ee80:	f04f 0304 	mov.w	r3, #4
   1ee84:	f04f 0400 	mov.w	r4, #0
   1ee88:	e008      	b.n	1ee9c <UART_SetConfig+0xecc>
   1ee8a:	f04f 0302 	mov.w	r3, #2
   1ee8e:	f04f 0400 	mov.w	r4, #0
   1ee92:	e003      	b.n	1ee9c <UART_SetConfig+0xecc>
   1ee94:	f04f 0301 	mov.w	r3, #1
   1ee98:	f04f 0400 	mov.w	r4, #0
   1ee9c:	461a      	mov	r2, r3
   1ee9e:	4623      	mov	r3, r4
   1eea0:	f004 fde0 	bl	23a64 <__aeabi_uldivmod>
   1eea4:	4603      	mov	r3, r0
   1eea6:	460c      	mov	r4, r1
   1eea8:	4619      	mov	r1, r3
   1eeaa:	4622      	mov	r2, r4
   1eeac:	f04f 0300 	mov.w	r3, #0
   1eeb0:	f04f 0400 	mov.w	r4, #0
   1eeb4:	0214      	lsls	r4, r2, #8
   1eeb6:	ea44 6411 	orr.w	r4, r4, r1, lsr #24
   1eeba:	020b      	lsls	r3, r1, #8
   1eebc:	687a      	ldr	r2, [r7, #4]
   1eebe:	6852      	ldr	r2, [r2, #4]
   1eec0:	0852      	lsrs	r2, r2, #1
   1eec2:	4611      	mov	r1, r2
   1eec4:	f04f 0200 	mov.w	r2, #0
   1eec8:	eb13 0b01 	adds.w	fp, r3, r1
   1eecc:	eb44 0c02 	adc.w	ip, r4, r2
   1eed0:	4658      	mov	r0, fp
   1eed2:	4661      	mov	r1, ip
   1eed4:	687b      	ldr	r3, [r7, #4]
   1eed6:	685b      	ldr	r3, [r3, #4]
   1eed8:	f04f 0400 	mov.w	r4, #0
   1eedc:	461a      	mov	r2, r3
   1eede:	4623      	mov	r3, r4
   1eee0:	f004 fdc0 	bl	23a64 <__aeabi_uldivmod>
   1eee4:	4603      	mov	r3, r0
   1eee6:	460c      	mov	r4, r1
   1eee8:	637b      	str	r3, [r7, #52]	; 0x34
            break;
   1eeea:	e247      	b.n	1f37c <UART_SetConfig+0x13ac>
          case UART_CLOCKSOURCE_HSI:
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
   1eeec:	4b96      	ldr	r3, [pc, #600]	; (1f148 <UART_SetConfig+0x1178>)
   1eeee:	681b      	ldr	r3, [r3, #0]
   1eef0:	f003 0320 	and.w	r3, r3, #32
   1eef4:	2b00      	cmp	r3, #0
   1eef6:	f000 80a3 	beq.w	1f040 <UART_SetConfig+0x1070>
            {
              usartdiv = (uint32_t)(UART_DIV_LPUART((uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U)), huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1eefa:	4b93      	ldr	r3, [pc, #588]	; (1f148 <UART_SetConfig+0x1178>)
   1eefc:	681b      	ldr	r3, [r3, #0]
   1eefe:	08db      	lsrs	r3, r3, #3
   1ef00:	f003 0303 	and.w	r3, r3, #3
   1ef04:	4a91      	ldr	r2, [pc, #580]	; (1f14c <UART_SetConfig+0x117c>)
   1ef06:	fa22 f303 	lsr.w	r3, r2, r3
   1ef0a:	4618      	mov	r0, r3
   1ef0c:	f04f 0100 	mov.w	r1, #0
   1ef10:	687b      	ldr	r3, [r7, #4]
   1ef12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ef14:	2b00      	cmp	r3, #0
   1ef16:	d067      	beq.n	1efe8 <UART_SetConfig+0x1018>
   1ef18:	687b      	ldr	r3, [r7, #4]
   1ef1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ef1c:	2b01      	cmp	r3, #1
   1ef1e:	d05e      	beq.n	1efde <UART_SetConfig+0x100e>
   1ef20:	687b      	ldr	r3, [r7, #4]
   1ef22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ef24:	2b02      	cmp	r3, #2
   1ef26:	d055      	beq.n	1efd4 <UART_SetConfig+0x1004>
   1ef28:	687b      	ldr	r3, [r7, #4]
   1ef2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ef2c:	2b03      	cmp	r3, #3
   1ef2e:	d04c      	beq.n	1efca <UART_SetConfig+0xffa>
   1ef30:	687b      	ldr	r3, [r7, #4]
   1ef32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ef34:	2b04      	cmp	r3, #4
   1ef36:	d043      	beq.n	1efc0 <UART_SetConfig+0xff0>
   1ef38:	687b      	ldr	r3, [r7, #4]
   1ef3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ef3c:	2b05      	cmp	r3, #5
   1ef3e:	d03a      	beq.n	1efb6 <UART_SetConfig+0xfe6>
   1ef40:	687b      	ldr	r3, [r7, #4]
   1ef42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ef44:	2b06      	cmp	r3, #6
   1ef46:	d031      	beq.n	1efac <UART_SetConfig+0xfdc>
   1ef48:	687b      	ldr	r3, [r7, #4]
   1ef4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ef4c:	2b07      	cmp	r3, #7
   1ef4e:	d028      	beq.n	1efa2 <UART_SetConfig+0xfd2>
   1ef50:	687b      	ldr	r3, [r7, #4]
   1ef52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ef54:	2b08      	cmp	r3, #8
   1ef56:	d01f      	beq.n	1ef98 <UART_SetConfig+0xfc8>
   1ef58:	687b      	ldr	r3, [r7, #4]
   1ef5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ef5c:	2b09      	cmp	r3, #9
   1ef5e:	d016      	beq.n	1ef8e <UART_SetConfig+0xfbe>
   1ef60:	687b      	ldr	r3, [r7, #4]
   1ef62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ef64:	2b0a      	cmp	r3, #10
   1ef66:	d00d      	beq.n	1ef84 <UART_SetConfig+0xfb4>
   1ef68:	687b      	ldr	r3, [r7, #4]
   1ef6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ef6c:	2b0b      	cmp	r3, #11
   1ef6e:	d104      	bne.n	1ef7a <UART_SetConfig+0xfaa>
   1ef70:	f44f 7380 	mov.w	r3, #256	; 0x100
   1ef74:	f04f 0400 	mov.w	r4, #0
   1ef78:	e03a      	b.n	1eff0 <UART_SetConfig+0x1020>
   1ef7a:	f04f 0301 	mov.w	r3, #1
   1ef7e:	f04f 0400 	mov.w	r4, #0
   1ef82:	e035      	b.n	1eff0 <UART_SetConfig+0x1020>
   1ef84:	f04f 0380 	mov.w	r3, #128	; 0x80
   1ef88:	f04f 0400 	mov.w	r4, #0
   1ef8c:	e030      	b.n	1eff0 <UART_SetConfig+0x1020>
   1ef8e:	f04f 0340 	mov.w	r3, #64	; 0x40
   1ef92:	f04f 0400 	mov.w	r4, #0
   1ef96:	e02b      	b.n	1eff0 <UART_SetConfig+0x1020>
   1ef98:	f04f 0320 	mov.w	r3, #32
   1ef9c:	f04f 0400 	mov.w	r4, #0
   1efa0:	e026      	b.n	1eff0 <UART_SetConfig+0x1020>
   1efa2:	f04f 0310 	mov.w	r3, #16
   1efa6:	f04f 0400 	mov.w	r4, #0
   1efaa:	e021      	b.n	1eff0 <UART_SetConfig+0x1020>
   1efac:	f04f 030c 	mov.w	r3, #12
   1efb0:	f04f 0400 	mov.w	r4, #0
   1efb4:	e01c      	b.n	1eff0 <UART_SetConfig+0x1020>
   1efb6:	f04f 030a 	mov.w	r3, #10
   1efba:	f04f 0400 	mov.w	r4, #0
   1efbe:	e017      	b.n	1eff0 <UART_SetConfig+0x1020>
   1efc0:	f04f 0308 	mov.w	r3, #8
   1efc4:	f04f 0400 	mov.w	r4, #0
   1efc8:	e012      	b.n	1eff0 <UART_SetConfig+0x1020>
   1efca:	f04f 0306 	mov.w	r3, #6
   1efce:	f04f 0400 	mov.w	r4, #0
   1efd2:	e00d      	b.n	1eff0 <UART_SetConfig+0x1020>
   1efd4:	f04f 0304 	mov.w	r3, #4
   1efd8:	f04f 0400 	mov.w	r4, #0
   1efdc:	e008      	b.n	1eff0 <UART_SetConfig+0x1020>
   1efde:	f04f 0302 	mov.w	r3, #2
   1efe2:	f04f 0400 	mov.w	r4, #0
   1efe6:	e003      	b.n	1eff0 <UART_SetConfig+0x1020>
   1efe8:	f04f 0301 	mov.w	r3, #1
   1efec:	f04f 0400 	mov.w	r4, #0
   1eff0:	461a      	mov	r2, r3
   1eff2:	4623      	mov	r3, r4
   1eff4:	f004 fd36 	bl	23a64 <__aeabi_uldivmod>
   1eff8:	4603      	mov	r3, r0
   1effa:	460c      	mov	r4, r1
   1effc:	4619      	mov	r1, r3
   1effe:	4622      	mov	r2, r4
   1f000:	f04f 0300 	mov.w	r3, #0
   1f004:	f04f 0400 	mov.w	r4, #0
   1f008:	0214      	lsls	r4, r2, #8
   1f00a:	ea44 6411 	orr.w	r4, r4, r1, lsr #24
   1f00e:	020b      	lsls	r3, r1, #8
   1f010:	687a      	ldr	r2, [r7, #4]
   1f012:	6852      	ldr	r2, [r2, #4]
   1f014:	0852      	lsrs	r2, r2, #1
   1f016:	4611      	mov	r1, r2
   1f018:	f04f 0200 	mov.w	r2, #0
   1f01c:	eb13 0b01 	adds.w	fp, r3, r1
   1f020:	eb44 0c02 	adc.w	ip, r4, r2
   1f024:	4658      	mov	r0, fp
   1f026:	4661      	mov	r1, ip
   1f028:	687b      	ldr	r3, [r7, #4]
   1f02a:	685b      	ldr	r3, [r3, #4]
   1f02c:	f04f 0400 	mov.w	r4, #0
   1f030:	461a      	mov	r2, r3
   1f032:	4623      	mov	r3, r4
   1f034:	f004 fd16 	bl	23a64 <__aeabi_uldivmod>
   1f038:	4603      	mov	r3, r0
   1f03a:	460c      	mov	r4, r1
   1f03c:	637b      	str	r3, [r7, #52]	; 0x34
            }
            else
            {
              usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
            }
            break;
   1f03e:	e19d      	b.n	1f37c <UART_SetConfig+0x13ac>
              usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1f040:	687b      	ldr	r3, [r7, #4]
   1f042:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f044:	2b00      	cmp	r3, #0
   1f046:	d05b      	beq.n	1f100 <UART_SetConfig+0x1130>
   1f048:	687b      	ldr	r3, [r7, #4]
   1f04a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f04c:	2b01      	cmp	r3, #1
   1f04e:	d053      	beq.n	1f0f8 <UART_SetConfig+0x1128>
   1f050:	687b      	ldr	r3, [r7, #4]
   1f052:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f054:	2b02      	cmp	r3, #2
   1f056:	d04b      	beq.n	1f0f0 <UART_SetConfig+0x1120>
   1f058:	687b      	ldr	r3, [r7, #4]
   1f05a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f05c:	2b03      	cmp	r3, #3
   1f05e:	d043      	beq.n	1f0e8 <UART_SetConfig+0x1118>
   1f060:	687b      	ldr	r3, [r7, #4]
   1f062:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f064:	2b04      	cmp	r3, #4
   1f066:	d03b      	beq.n	1f0e0 <UART_SetConfig+0x1110>
   1f068:	687b      	ldr	r3, [r7, #4]
   1f06a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f06c:	2b05      	cmp	r3, #5
   1f06e:	d033      	beq.n	1f0d8 <UART_SetConfig+0x1108>
   1f070:	687b      	ldr	r3, [r7, #4]
   1f072:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f074:	2b06      	cmp	r3, #6
   1f076:	d02b      	beq.n	1f0d0 <UART_SetConfig+0x1100>
   1f078:	687b      	ldr	r3, [r7, #4]
   1f07a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f07c:	2b07      	cmp	r3, #7
   1f07e:	d023      	beq.n	1f0c8 <UART_SetConfig+0x10f8>
   1f080:	687b      	ldr	r3, [r7, #4]
   1f082:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f084:	2b08      	cmp	r3, #8
   1f086:	d01b      	beq.n	1f0c0 <UART_SetConfig+0x10f0>
   1f088:	687b      	ldr	r3, [r7, #4]
   1f08a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f08c:	2b09      	cmp	r3, #9
   1f08e:	d013      	beq.n	1f0b8 <UART_SetConfig+0x10e8>
   1f090:	687b      	ldr	r3, [r7, #4]
   1f092:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f094:	2b0a      	cmp	r3, #10
   1f096:	d00b      	beq.n	1f0b0 <UART_SetConfig+0x10e0>
   1f098:	687b      	ldr	r3, [r7, #4]
   1f09a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f09c:	2b0b      	cmp	r3, #11
   1f09e:	d103      	bne.n	1f0a8 <UART_SetConfig+0x10d8>
   1f0a0:	4b2a      	ldr	r3, [pc, #168]	; (1f14c <UART_SetConfig+0x117c>)
   1f0a2:	f04f 0400 	mov.w	r4, #0
   1f0a6:	e02e      	b.n	1f106 <UART_SetConfig+0x1136>
   1f0a8:	4b29      	ldr	r3, [pc, #164]	; (1f150 <UART_SetConfig+0x1180>)
   1f0aa:	f04f 0403 	mov.w	r4, #3
   1f0ae:	e02a      	b.n	1f106 <UART_SetConfig+0x1136>
   1f0b0:	4b28      	ldr	r3, [pc, #160]	; (1f154 <UART_SetConfig+0x1184>)
   1f0b2:	f04f 0400 	mov.w	r4, #0
   1f0b6:	e026      	b.n	1f106 <UART_SetConfig+0x1136>
   1f0b8:	4b27      	ldr	r3, [pc, #156]	; (1f158 <UART_SetConfig+0x1188>)
   1f0ba:	f04f 0400 	mov.w	r4, #0
   1f0be:	e022      	b.n	1f106 <UART_SetConfig+0x1136>
   1f0c0:	4b26      	ldr	r3, [pc, #152]	; (1f15c <UART_SetConfig+0x118c>)
   1f0c2:	f04f 0400 	mov.w	r4, #0
   1f0c6:	e01e      	b.n	1f106 <UART_SetConfig+0x1136>
   1f0c8:	4b25      	ldr	r3, [pc, #148]	; (1f160 <UART_SetConfig+0x1190>)
   1f0ca:	f04f 0400 	mov.w	r4, #0
   1f0ce:	e01a      	b.n	1f106 <UART_SetConfig+0x1136>
   1f0d0:	a419      	add	r4, pc, #100	; (adr r4, 1f138 <UART_SetConfig+0x1168>)
   1f0d2:	e9d4 3400 	ldrd	r3, r4, [r4]
   1f0d6:	e016      	b.n	1f106 <UART_SetConfig+0x1136>
   1f0d8:	4b22      	ldr	r3, [pc, #136]	; (1f164 <UART_SetConfig+0x1194>)
   1f0da:	f04f 0400 	mov.w	r4, #0
   1f0de:	e012      	b.n	1f106 <UART_SetConfig+0x1136>
   1f0e0:	4b21      	ldr	r3, [pc, #132]	; (1f168 <UART_SetConfig+0x1198>)
   1f0e2:	f04f 0400 	mov.w	r4, #0
   1f0e6:	e00e      	b.n	1f106 <UART_SetConfig+0x1136>
   1f0e8:	a415      	add	r4, pc, #84	; (adr r4, 1f140 <UART_SetConfig+0x1170>)
   1f0ea:	e9d4 3400 	ldrd	r3, r4, [r4]
   1f0ee:	e00a      	b.n	1f106 <UART_SetConfig+0x1136>
   1f0f0:	4b1e      	ldr	r3, [pc, #120]	; (1f16c <UART_SetConfig+0x119c>)
   1f0f2:	f04f 0400 	mov.w	r4, #0
   1f0f6:	e006      	b.n	1f106 <UART_SetConfig+0x1136>
   1f0f8:	4b1d      	ldr	r3, [pc, #116]	; (1f170 <UART_SetConfig+0x11a0>)
   1f0fa:	f04f 0401 	mov.w	r4, #1
   1f0fe:	e002      	b.n	1f106 <UART_SetConfig+0x1136>
   1f100:	4b13      	ldr	r3, [pc, #76]	; (1f150 <UART_SetConfig+0x1180>)
   1f102:	f04f 0403 	mov.w	r4, #3
   1f106:	687a      	ldr	r2, [r7, #4]
   1f108:	6852      	ldr	r2, [r2, #4]
   1f10a:	0852      	lsrs	r2, r2, #1
   1f10c:	4611      	mov	r1, r2
   1f10e:	f04f 0200 	mov.w	r2, #0
   1f112:	eb13 0b01 	adds.w	fp, r3, r1
   1f116:	eb44 0c02 	adc.w	ip, r4, r2
   1f11a:	4658      	mov	r0, fp
   1f11c:	4661      	mov	r1, ip
   1f11e:	687b      	ldr	r3, [r7, #4]
   1f120:	685b      	ldr	r3, [r3, #4]
   1f122:	f04f 0400 	mov.w	r4, #0
   1f126:	461a      	mov	r2, r3
   1f128:	4623      	mov	r3, r4
   1f12a:	f004 fc9b 	bl	23a64 <__aeabi_uldivmod>
   1f12e:	4603      	mov	r3, r0
   1f130:	460c      	mov	r4, r1
   1f132:	637b      	str	r3, [r7, #52]	; 0x34
            break;
   1f134:	e122      	b.n	1f37c <UART_SetConfig+0x13ac>
   1f136:	bf00      	nop
   1f138:	51615500 	.word	0x51615500
   1f13c:	00000000 	.word	0x00000000
   1f140:	a2c2aa00 	.word	0xa2c2aa00
   1f144:	00000000 	.word	0x00000000
   1f148:	58024400 	.word	0x58024400
   1f14c:	03d09000 	.word	0x03d09000
   1f150:	d0900000 	.word	0xd0900000
   1f154:	07a12000 	.word	0x07a12000
   1f158:	0f424000 	.word	0x0f424000
   1f15c:	1e848000 	.word	0x1e848000
   1f160:	3d090000 	.word	0x3d090000
   1f164:	61a80000 	.word	0x61a80000
   1f168:	7a120000 	.word	0x7a120000
   1f16c:	f4240000 	.word	0xf4240000
   1f170:	e8480000 	.word	0xe8480000
          case UART_CLOCKSOURCE_CSI:
            usartdiv = (uint32_t)(UART_DIV_LPUART(CSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1f174:	687b      	ldr	r3, [r7, #4]
   1f176:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f178:	2b00      	cmp	r3, #0
   1f17a:	d05b      	beq.n	1f234 <UART_SetConfig+0x1264>
   1f17c:	687b      	ldr	r3, [r7, #4]
   1f17e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f180:	2b01      	cmp	r3, #1
   1f182:	d053      	beq.n	1f22c <UART_SetConfig+0x125c>
   1f184:	687b      	ldr	r3, [r7, #4]
   1f186:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f188:	2b02      	cmp	r3, #2
   1f18a:	d04b      	beq.n	1f224 <UART_SetConfig+0x1254>
   1f18c:	687b      	ldr	r3, [r7, #4]
   1f18e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f190:	2b03      	cmp	r3, #3
   1f192:	d043      	beq.n	1f21c <UART_SetConfig+0x124c>
   1f194:	687b      	ldr	r3, [r7, #4]
   1f196:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f198:	2b04      	cmp	r3, #4
   1f19a:	d03b      	beq.n	1f214 <UART_SetConfig+0x1244>
   1f19c:	687b      	ldr	r3, [r7, #4]
   1f19e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f1a0:	2b05      	cmp	r3, #5
   1f1a2:	d033      	beq.n	1f20c <UART_SetConfig+0x123c>
   1f1a4:	687b      	ldr	r3, [r7, #4]
   1f1a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f1a8:	2b06      	cmp	r3, #6
   1f1aa:	d02b      	beq.n	1f204 <UART_SetConfig+0x1234>
   1f1ac:	687b      	ldr	r3, [r7, #4]
   1f1ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f1b0:	2b07      	cmp	r3, #7
   1f1b2:	d023      	beq.n	1f1fc <UART_SetConfig+0x122c>
   1f1b4:	687b      	ldr	r3, [r7, #4]
   1f1b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f1b8:	2b08      	cmp	r3, #8
   1f1ba:	d01b      	beq.n	1f1f4 <UART_SetConfig+0x1224>
   1f1bc:	687b      	ldr	r3, [r7, #4]
   1f1be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f1c0:	2b09      	cmp	r3, #9
   1f1c2:	d013      	beq.n	1f1ec <UART_SetConfig+0x121c>
   1f1c4:	687b      	ldr	r3, [r7, #4]
   1f1c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f1c8:	2b0a      	cmp	r3, #10
   1f1ca:	d00b      	beq.n	1f1e4 <UART_SetConfig+0x1214>
   1f1cc:	687b      	ldr	r3, [r7, #4]
   1f1ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f1d0:	2b0b      	cmp	r3, #11
   1f1d2:	d103      	bne.n	1f1dc <UART_SetConfig+0x120c>
   1f1d4:	4bc0      	ldr	r3, [pc, #768]	; (1f4d8 <UART_SetConfig+0x1508>)
   1f1d6:	f04f 0400 	mov.w	r4, #0
   1f1da:	e02e      	b.n	1f23a <UART_SetConfig+0x126a>
   1f1dc:	4bbf      	ldr	r3, [pc, #764]	; (1f4dc <UART_SetConfig+0x150c>)
   1f1de:	f04f 0400 	mov.w	r4, #0
   1f1e2:	e02a      	b.n	1f23a <UART_SetConfig+0x126a>
   1f1e4:	4bbe      	ldr	r3, [pc, #760]	; (1f4e0 <UART_SetConfig+0x1510>)
   1f1e6:	f04f 0400 	mov.w	r4, #0
   1f1ea:	e026      	b.n	1f23a <UART_SetConfig+0x126a>
   1f1ec:	4bbd      	ldr	r3, [pc, #756]	; (1f4e4 <UART_SetConfig+0x1514>)
   1f1ee:	f04f 0400 	mov.w	r4, #0
   1f1f2:	e022      	b.n	1f23a <UART_SetConfig+0x126a>
   1f1f4:	4bbc      	ldr	r3, [pc, #752]	; (1f4e8 <UART_SetConfig+0x1518>)
   1f1f6:	f04f 0400 	mov.w	r4, #0
   1f1fa:	e01e      	b.n	1f23a <UART_SetConfig+0x126a>
   1f1fc:	4bbb      	ldr	r3, [pc, #748]	; (1f4ec <UART_SetConfig+0x151c>)
   1f1fe:	f04f 0400 	mov.w	r4, #0
   1f202:	e01a      	b.n	1f23a <UART_SetConfig+0x126a>
   1f204:	a4b0      	add	r4, pc, #704	; (adr r4, 1f4c8 <UART_SetConfig+0x14f8>)
   1f206:	e9d4 3400 	ldrd	r3, r4, [r4]
   1f20a:	e016      	b.n	1f23a <UART_SetConfig+0x126a>
   1f20c:	4bb8      	ldr	r3, [pc, #736]	; (1f4f0 <UART_SetConfig+0x1520>)
   1f20e:	f04f 0400 	mov.w	r4, #0
   1f212:	e012      	b.n	1f23a <UART_SetConfig+0x126a>
   1f214:	4bb7      	ldr	r3, [pc, #732]	; (1f4f4 <UART_SetConfig+0x1524>)
   1f216:	f04f 0400 	mov.w	r4, #0
   1f21a:	e00e      	b.n	1f23a <UART_SetConfig+0x126a>
   1f21c:	a4ac      	add	r4, pc, #688	; (adr r4, 1f4d0 <UART_SetConfig+0x1500>)
   1f21e:	e9d4 3400 	ldrd	r3, r4, [r4]
   1f222:	e00a      	b.n	1f23a <UART_SetConfig+0x126a>
   1f224:	4bb4      	ldr	r3, [pc, #720]	; (1f4f8 <UART_SetConfig+0x1528>)
   1f226:	f04f 0400 	mov.w	r4, #0
   1f22a:	e006      	b.n	1f23a <UART_SetConfig+0x126a>
   1f22c:	4bb3      	ldr	r3, [pc, #716]	; (1f4fc <UART_SetConfig+0x152c>)
   1f22e:	f04f 0400 	mov.w	r4, #0
   1f232:	e002      	b.n	1f23a <UART_SetConfig+0x126a>
   1f234:	4ba9      	ldr	r3, [pc, #676]	; (1f4dc <UART_SetConfig+0x150c>)
   1f236:	f04f 0400 	mov.w	r4, #0
   1f23a:	687a      	ldr	r2, [r7, #4]
   1f23c:	6852      	ldr	r2, [r2, #4]
   1f23e:	0852      	lsrs	r2, r2, #1
   1f240:	4611      	mov	r1, r2
   1f242:	f04f 0200 	mov.w	r2, #0
   1f246:	eb13 0b01 	adds.w	fp, r3, r1
   1f24a:	eb44 0c02 	adc.w	ip, r4, r2
   1f24e:	4658      	mov	r0, fp
   1f250:	4661      	mov	r1, ip
   1f252:	687b      	ldr	r3, [r7, #4]
   1f254:	685b      	ldr	r3, [r3, #4]
   1f256:	f04f 0400 	mov.w	r4, #0
   1f25a:	461a      	mov	r2, r3
   1f25c:	4623      	mov	r3, r4
   1f25e:	f004 fc01 	bl	23a64 <__aeabi_uldivmod>
   1f262:	4603      	mov	r3, r0
   1f264:	460c      	mov	r4, r1
   1f266:	637b      	str	r3, [r7, #52]	; 0x34
            break;
   1f268:	e088      	b.n	1f37c <UART_SetConfig+0x13ac>
          case UART_CLOCKSOURCE_LSE:
            usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1f26a:	687b      	ldr	r3, [r7, #4]
   1f26c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f26e:	2b00      	cmp	r3, #0
   1f270:	d064      	beq.n	1f33c <UART_SetConfig+0x136c>
   1f272:	687b      	ldr	r3, [r7, #4]
   1f274:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f276:	2b01      	cmp	r3, #1
   1f278:	d05b      	beq.n	1f332 <UART_SetConfig+0x1362>
   1f27a:	687b      	ldr	r3, [r7, #4]
   1f27c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f27e:	2b02      	cmp	r3, #2
   1f280:	d052      	beq.n	1f328 <UART_SetConfig+0x1358>
   1f282:	687b      	ldr	r3, [r7, #4]
   1f284:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f286:	2b03      	cmp	r3, #3
   1f288:	d04a      	beq.n	1f320 <UART_SetConfig+0x1350>
   1f28a:	687b      	ldr	r3, [r7, #4]
   1f28c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f28e:	2b04      	cmp	r3, #4
   1f290:	d041      	beq.n	1f316 <UART_SetConfig+0x1346>
   1f292:	687b      	ldr	r3, [r7, #4]
   1f294:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f296:	2b05      	cmp	r3, #5
   1f298:	d039      	beq.n	1f30e <UART_SetConfig+0x133e>
   1f29a:	687b      	ldr	r3, [r7, #4]
   1f29c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f29e:	2b06      	cmp	r3, #6
   1f2a0:	d031      	beq.n	1f306 <UART_SetConfig+0x1336>
   1f2a2:	687b      	ldr	r3, [r7, #4]
   1f2a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f2a6:	2b07      	cmp	r3, #7
   1f2a8:	d028      	beq.n	1f2fc <UART_SetConfig+0x132c>
   1f2aa:	687b      	ldr	r3, [r7, #4]
   1f2ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f2ae:	2b08      	cmp	r3, #8
   1f2b0:	d01f      	beq.n	1f2f2 <UART_SetConfig+0x1322>
   1f2b2:	687b      	ldr	r3, [r7, #4]
   1f2b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f2b6:	2b09      	cmp	r3, #9
   1f2b8:	d016      	beq.n	1f2e8 <UART_SetConfig+0x1318>
   1f2ba:	687b      	ldr	r3, [r7, #4]
   1f2bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f2be:	2b0a      	cmp	r3, #10
   1f2c0:	d00d      	beq.n	1f2de <UART_SetConfig+0x130e>
   1f2c2:	687b      	ldr	r3, [r7, #4]
   1f2c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f2c6:	2b0b      	cmp	r3, #11
   1f2c8:	d104      	bne.n	1f2d4 <UART_SetConfig+0x1304>
   1f2ca:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   1f2ce:	f04f 0400 	mov.w	r4, #0
   1f2d2:	e037      	b.n	1f344 <UART_SetConfig+0x1374>
   1f2d4:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
   1f2d8:	f04f 0400 	mov.w	r4, #0
   1f2dc:	e032      	b.n	1f344 <UART_SetConfig+0x1374>
   1f2de:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   1f2e2:	f04f 0400 	mov.w	r4, #0
   1f2e6:	e02d      	b.n	1f344 <UART_SetConfig+0x1374>
   1f2e8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
   1f2ec:	f04f 0400 	mov.w	r4, #0
   1f2f0:	e028      	b.n	1f344 <UART_SetConfig+0x1374>
   1f2f2:	f44f 2380 	mov.w	r3, #262144	; 0x40000
   1f2f6:	f04f 0400 	mov.w	r4, #0
   1f2fa:	e023      	b.n	1f344 <UART_SetConfig+0x1374>
   1f2fc:	f44f 2300 	mov.w	r3, #524288	; 0x80000
   1f300:	f04f 0400 	mov.w	r4, #0
   1f304:	e01e      	b.n	1f344 <UART_SetConfig+0x1374>
   1f306:	4b7e      	ldr	r3, [pc, #504]	; (1f500 <UART_SetConfig+0x1530>)
   1f308:	f04f 0400 	mov.w	r4, #0
   1f30c:	e01a      	b.n	1f344 <UART_SetConfig+0x1374>
   1f30e:	4b7d      	ldr	r3, [pc, #500]	; (1f504 <UART_SetConfig+0x1534>)
   1f310:	f04f 0400 	mov.w	r4, #0
   1f314:	e016      	b.n	1f344 <UART_SetConfig+0x1374>
   1f316:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
   1f31a:	f04f 0400 	mov.w	r4, #0
   1f31e:	e011      	b.n	1f344 <UART_SetConfig+0x1374>
   1f320:	4b79      	ldr	r3, [pc, #484]	; (1f508 <UART_SetConfig+0x1538>)
   1f322:	f04f 0400 	mov.w	r4, #0
   1f326:	e00d      	b.n	1f344 <UART_SetConfig+0x1374>
   1f328:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
   1f32c:	f04f 0400 	mov.w	r4, #0
   1f330:	e008      	b.n	1f344 <UART_SetConfig+0x1374>
   1f332:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
   1f336:	f04f 0400 	mov.w	r4, #0
   1f33a:	e003      	b.n	1f344 <UART_SetConfig+0x1374>
   1f33c:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
   1f340:	f04f 0400 	mov.w	r4, #0
   1f344:	687a      	ldr	r2, [r7, #4]
   1f346:	6852      	ldr	r2, [r2, #4]
   1f348:	0852      	lsrs	r2, r2, #1
   1f34a:	4611      	mov	r1, r2
   1f34c:	f04f 0200 	mov.w	r2, #0
   1f350:	eb13 0b01 	adds.w	fp, r3, r1
   1f354:	eb44 0c02 	adc.w	ip, r4, r2
   1f358:	4658      	mov	r0, fp
   1f35a:	4661      	mov	r1, ip
   1f35c:	687b      	ldr	r3, [r7, #4]
   1f35e:	685b      	ldr	r3, [r3, #4]
   1f360:	f04f 0400 	mov.w	r4, #0
   1f364:	461a      	mov	r2, r3
   1f366:	4623      	mov	r3, r4
   1f368:	f004 fb7c 	bl	23a64 <__aeabi_uldivmod>
   1f36c:	4603      	mov	r3, r0
   1f36e:	460c      	mov	r4, r1
   1f370:	637b      	str	r3, [r7, #52]	; 0x34
            break;
   1f372:	e003      	b.n	1f37c <UART_SetConfig+0x13ac>
          default:
            ret = HAL_ERROR;
   1f374:	2301      	movs	r3, #1
   1f376:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
            break;
   1f37a:	bf00      	nop
        }

        /* It is forbidden to write values lower than 0x300 in the LPUART_BRR register */
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
   1f37c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   1f37e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
   1f382:	d309      	bcc.n	1f398 <UART_SetConfig+0x13c8>
   1f384:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   1f386:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   1f38a:	d205      	bcs.n	1f398 <UART_SetConfig+0x13c8>
        {
          huart->Instance->BRR = usartdiv;
   1f38c:	687b      	ldr	r3, [r7, #4]
   1f38e:	681b      	ldr	r3, [r3, #0]
   1f390:	6b7a      	ldr	r2, [r7, #52]	; 0x34
   1f392:	60da      	str	r2, [r3, #12]
   1f394:	f000 bf85 	b.w	202a2 <UART_SetConfig+0x22d2>
        }
        else
        {
          ret = HAL_ERROR;
   1f398:	2301      	movs	r3, #1
   1f39a:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
   1f39e:	f000 bf80 	b.w	202a2 <UART_SetConfig+0x22d2>
        }
      } /*   if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) || (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
    } /* if (lpuart_ker_ck_pres != 0) */
  }
  /* Check UART Over Sampling to set Baud Rate Register */
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
   1f3a2:	687b      	ldr	r3, [r7, #4]
   1f3a4:	69db      	ldr	r3, [r3, #28]
   1f3a6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   1f3aa:	f040 83da 	bne.w	1fb62 <UART_SetConfig+0x1b92>
  {
    switch (clocksource)
   1f3ae:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
   1f3b2:	2b40      	cmp	r3, #64	; 0x40
   1f3b4:	f200 83b3 	bhi.w	1fb1e <UART_SetConfig+0x1b4e>
   1f3b8:	a201      	add	r2, pc, #4	; (adr r2, 1f3c0 <UART_SetConfig+0x13f0>)
   1f3ba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1f3be:	bf00      	nop
   1f3c0:	0001f50d 	.word	0x0001f50d
   1f3c4:	0001f5c5 	.word	0x0001f5c5
   1f3c8:	0001fb1f 	.word	0x0001fb1f
   1f3cc:	0001fb1f 	.word	0x0001fb1f
   1f3d0:	0001f67d 	.word	0x0001f67d
   1f3d4:	0001fb1f 	.word	0x0001fb1f
   1f3d8:	0001fb1f 	.word	0x0001fb1f
   1f3dc:	0001fb1f 	.word	0x0001fb1f
   1f3e0:	0001f739 	.word	0x0001f739
   1f3e4:	0001fb1f 	.word	0x0001fb1f
   1f3e8:	0001fb1f 	.word	0x0001fb1f
   1f3ec:	0001fb1f 	.word	0x0001fb1f
   1f3f0:	0001fb1f 	.word	0x0001fb1f
   1f3f4:	0001fb1f 	.word	0x0001fb1f
   1f3f8:	0001fb1f 	.word	0x0001fb1f
   1f3fc:	0001fb1f 	.word	0x0001fb1f
   1f400:	0001f7f5 	.word	0x0001f7f5
   1f404:	0001fb1f 	.word	0x0001fb1f
   1f408:	0001fb1f 	.word	0x0001fb1f
   1f40c:	0001fb1f 	.word	0x0001fb1f
   1f410:	0001fb1f 	.word	0x0001fb1f
   1f414:	0001fb1f 	.word	0x0001fb1f
   1f418:	0001fb1f 	.word	0x0001fb1f
   1f41c:	0001fb1f 	.word	0x0001fb1f
   1f420:	0001fb1f 	.word	0x0001fb1f
   1f424:	0001fb1f 	.word	0x0001fb1f
   1f428:	0001fb1f 	.word	0x0001fb1f
   1f42c:	0001fb1f 	.word	0x0001fb1f
   1f430:	0001fb1f 	.word	0x0001fb1f
   1f434:	0001fb1f 	.word	0x0001fb1f
   1f438:	0001fb1f 	.word	0x0001fb1f
   1f43c:	0001fb1f 	.word	0x0001fb1f
   1f440:	0001f967 	.word	0x0001f967
   1f444:	0001fb1f 	.word	0x0001fb1f
   1f448:	0001fb1f 	.word	0x0001fb1f
   1f44c:	0001fb1f 	.word	0x0001fb1f
   1f450:	0001fb1f 	.word	0x0001fb1f
   1f454:	0001fb1f 	.word	0x0001fb1f
   1f458:	0001fb1f 	.word	0x0001fb1f
   1f45c:	0001fb1f 	.word	0x0001fb1f
   1f460:	0001fb1f 	.word	0x0001fb1f
   1f464:	0001fb1f 	.word	0x0001fb1f
   1f468:	0001fb1f 	.word	0x0001fb1f
   1f46c:	0001fb1f 	.word	0x0001fb1f
   1f470:	0001fb1f 	.word	0x0001fb1f
   1f474:	0001fb1f 	.word	0x0001fb1f
   1f478:	0001fb1f 	.word	0x0001fb1f
   1f47c:	0001fb1f 	.word	0x0001fb1f
   1f480:	0001fb1f 	.word	0x0001fb1f
   1f484:	0001fb1f 	.word	0x0001fb1f
   1f488:	0001fb1f 	.word	0x0001fb1f
   1f48c:	0001fb1f 	.word	0x0001fb1f
   1f490:	0001fb1f 	.word	0x0001fb1f
   1f494:	0001fb1f 	.word	0x0001fb1f
   1f498:	0001fb1f 	.word	0x0001fb1f
   1f49c:	0001fb1f 	.word	0x0001fb1f
   1f4a0:	0001fb1f 	.word	0x0001fb1f
   1f4a4:	0001fb1f 	.word	0x0001fb1f
   1f4a8:	0001fb1f 	.word	0x0001fb1f
   1f4ac:	0001fb1f 	.word	0x0001fb1f
   1f4b0:	0001fb1f 	.word	0x0001fb1f
   1f4b4:	0001fb1f 	.word	0x0001fb1f
   1f4b8:	0001fb1f 	.word	0x0001fb1f
   1f4bc:	0001fb1f 	.word	0x0001fb1f
   1f4c0:	0001fa5d 	.word	0x0001fa5d
   1f4c4:	f3af 8000 	nop.w
   1f4c8:	05161500 	.word	0x05161500
   1f4cc:	00000000 	.word	0x00000000
   1f4d0:	0a2c2a00 	.word	0x0a2c2a00
   1f4d4:	00000000 	.word	0x00000000
   1f4d8:	003d0900 	.word	0x003d0900
   1f4dc:	3d090000 	.word	0x3d090000
   1f4e0:	007a1200 	.word	0x007a1200
   1f4e4:	00f42400 	.word	0x00f42400
   1f4e8:	01e84800 	.word	0x01e84800
   1f4ec:	03d09000 	.word	0x03d09000
   1f4f0:	061a8000 	.word	0x061a8000
   1f4f4:	07a12000 	.word	0x07a12000
   1f4f8:	0f424000 	.word	0x0f424000
   1f4fc:	1e848000 	.word	0x1e848000
   1f500:	000aaa00 	.word	0x000aaa00
   1f504:	000ccc00 	.word	0x000ccc00
   1f508:	00155500 	.word	0x00155500
    {
      case UART_CLOCKSOURCE_D2PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
   1f50c:	f7fc fb6e 	bl	1bbec <HAL_RCC_GetPCLK1Freq>
   1f510:	62b8      	str	r0, [r7, #40]	; 0x28
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1f512:	687b      	ldr	r3, [r7, #4]
   1f514:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f516:	2b00      	cmp	r3, #0
   1f518:	d044      	beq.n	1f5a4 <UART_SetConfig+0x15d4>
   1f51a:	687b      	ldr	r3, [r7, #4]
   1f51c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f51e:	2b01      	cmp	r3, #1
   1f520:	d03e      	beq.n	1f5a0 <UART_SetConfig+0x15d0>
   1f522:	687b      	ldr	r3, [r7, #4]
   1f524:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f526:	2b02      	cmp	r3, #2
   1f528:	d038      	beq.n	1f59c <UART_SetConfig+0x15cc>
   1f52a:	687b      	ldr	r3, [r7, #4]
   1f52c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f52e:	2b03      	cmp	r3, #3
   1f530:	d032      	beq.n	1f598 <UART_SetConfig+0x15c8>
   1f532:	687b      	ldr	r3, [r7, #4]
   1f534:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f536:	2b04      	cmp	r3, #4
   1f538:	d02c      	beq.n	1f594 <UART_SetConfig+0x15c4>
   1f53a:	687b      	ldr	r3, [r7, #4]
   1f53c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f53e:	2b05      	cmp	r3, #5
   1f540:	d026      	beq.n	1f590 <UART_SetConfig+0x15c0>
   1f542:	687b      	ldr	r3, [r7, #4]
   1f544:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f546:	2b06      	cmp	r3, #6
   1f548:	d020      	beq.n	1f58c <UART_SetConfig+0x15bc>
   1f54a:	687b      	ldr	r3, [r7, #4]
   1f54c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f54e:	2b07      	cmp	r3, #7
   1f550:	d01a      	beq.n	1f588 <UART_SetConfig+0x15b8>
   1f552:	687b      	ldr	r3, [r7, #4]
   1f554:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f556:	2b08      	cmp	r3, #8
   1f558:	d014      	beq.n	1f584 <UART_SetConfig+0x15b4>
   1f55a:	687b      	ldr	r3, [r7, #4]
   1f55c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f55e:	2b09      	cmp	r3, #9
   1f560:	d00e      	beq.n	1f580 <UART_SetConfig+0x15b0>
   1f562:	687b      	ldr	r3, [r7, #4]
   1f564:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f566:	2b0a      	cmp	r3, #10
   1f568:	d008      	beq.n	1f57c <UART_SetConfig+0x15ac>
   1f56a:	687b      	ldr	r3, [r7, #4]
   1f56c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f56e:	2b0b      	cmp	r3, #11
   1f570:	d102      	bne.n	1f578 <UART_SetConfig+0x15a8>
   1f572:	f44f 7380 	mov.w	r3, #256	; 0x100
   1f576:	e016      	b.n	1f5a6 <UART_SetConfig+0x15d6>
   1f578:	2301      	movs	r3, #1
   1f57a:	e014      	b.n	1f5a6 <UART_SetConfig+0x15d6>
   1f57c:	2380      	movs	r3, #128	; 0x80
   1f57e:	e012      	b.n	1f5a6 <UART_SetConfig+0x15d6>
   1f580:	2340      	movs	r3, #64	; 0x40
   1f582:	e010      	b.n	1f5a6 <UART_SetConfig+0x15d6>
   1f584:	2320      	movs	r3, #32
   1f586:	e00e      	b.n	1f5a6 <UART_SetConfig+0x15d6>
   1f588:	2310      	movs	r3, #16
   1f58a:	e00c      	b.n	1f5a6 <UART_SetConfig+0x15d6>
   1f58c:	230c      	movs	r3, #12
   1f58e:	e00a      	b.n	1f5a6 <UART_SetConfig+0x15d6>
   1f590:	230a      	movs	r3, #10
   1f592:	e008      	b.n	1f5a6 <UART_SetConfig+0x15d6>
   1f594:	2308      	movs	r3, #8
   1f596:	e006      	b.n	1f5a6 <UART_SetConfig+0x15d6>
   1f598:	2306      	movs	r3, #6
   1f59a:	e004      	b.n	1f5a6 <UART_SetConfig+0x15d6>
   1f59c:	2304      	movs	r3, #4
   1f59e:	e002      	b.n	1f5a6 <UART_SetConfig+0x15d6>
   1f5a0:	2302      	movs	r3, #2
   1f5a2:	e000      	b.n	1f5a6 <UART_SetConfig+0x15d6>
   1f5a4:	2301      	movs	r3, #1
   1f5a6:	6aba      	ldr	r2, [r7, #40]	; 0x28
   1f5a8:	fbb2 f3f3 	udiv	r3, r2, r3
   1f5ac:	005a      	lsls	r2, r3, #1
   1f5ae:	687b      	ldr	r3, [r7, #4]
   1f5b0:	685b      	ldr	r3, [r3, #4]
   1f5b2:	085b      	lsrs	r3, r3, #1
   1f5b4:	441a      	add	r2, r3
   1f5b6:	687b      	ldr	r3, [r7, #4]
   1f5b8:	685b      	ldr	r3, [r3, #4]
   1f5ba:	fbb2 f3f3 	udiv	r3, r2, r3
   1f5be:	b29b      	uxth	r3, r3
   1f5c0:	637b      	str	r3, [r7, #52]	; 0x34
        break;
   1f5c2:	e2b0      	b.n	1fb26 <UART_SetConfig+0x1b56>
      case UART_CLOCKSOURCE_D2PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
   1f5c4:	f7fc fb28 	bl	1bc18 <HAL_RCC_GetPCLK2Freq>
   1f5c8:	62b8      	str	r0, [r7, #40]	; 0x28
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1f5ca:	687b      	ldr	r3, [r7, #4]
   1f5cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f5ce:	2b00      	cmp	r3, #0
   1f5d0:	d044      	beq.n	1f65c <UART_SetConfig+0x168c>
   1f5d2:	687b      	ldr	r3, [r7, #4]
   1f5d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f5d6:	2b01      	cmp	r3, #1
   1f5d8:	d03e      	beq.n	1f658 <UART_SetConfig+0x1688>
   1f5da:	687b      	ldr	r3, [r7, #4]
   1f5dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f5de:	2b02      	cmp	r3, #2
   1f5e0:	d038      	beq.n	1f654 <UART_SetConfig+0x1684>
   1f5e2:	687b      	ldr	r3, [r7, #4]
   1f5e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f5e6:	2b03      	cmp	r3, #3
   1f5e8:	d032      	beq.n	1f650 <UART_SetConfig+0x1680>
   1f5ea:	687b      	ldr	r3, [r7, #4]
   1f5ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f5ee:	2b04      	cmp	r3, #4
   1f5f0:	d02c      	beq.n	1f64c <UART_SetConfig+0x167c>
   1f5f2:	687b      	ldr	r3, [r7, #4]
   1f5f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f5f6:	2b05      	cmp	r3, #5
   1f5f8:	d026      	beq.n	1f648 <UART_SetConfig+0x1678>
   1f5fa:	687b      	ldr	r3, [r7, #4]
   1f5fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f5fe:	2b06      	cmp	r3, #6
   1f600:	d020      	beq.n	1f644 <UART_SetConfig+0x1674>
   1f602:	687b      	ldr	r3, [r7, #4]
   1f604:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f606:	2b07      	cmp	r3, #7
   1f608:	d01a      	beq.n	1f640 <UART_SetConfig+0x1670>
   1f60a:	687b      	ldr	r3, [r7, #4]
   1f60c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f60e:	2b08      	cmp	r3, #8
   1f610:	d014      	beq.n	1f63c <UART_SetConfig+0x166c>
   1f612:	687b      	ldr	r3, [r7, #4]
   1f614:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f616:	2b09      	cmp	r3, #9
   1f618:	d00e      	beq.n	1f638 <UART_SetConfig+0x1668>
   1f61a:	687b      	ldr	r3, [r7, #4]
   1f61c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f61e:	2b0a      	cmp	r3, #10
   1f620:	d008      	beq.n	1f634 <UART_SetConfig+0x1664>
   1f622:	687b      	ldr	r3, [r7, #4]
   1f624:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f626:	2b0b      	cmp	r3, #11
   1f628:	d102      	bne.n	1f630 <UART_SetConfig+0x1660>
   1f62a:	f44f 7380 	mov.w	r3, #256	; 0x100
   1f62e:	e016      	b.n	1f65e <UART_SetConfig+0x168e>
   1f630:	2301      	movs	r3, #1
   1f632:	e014      	b.n	1f65e <UART_SetConfig+0x168e>
   1f634:	2380      	movs	r3, #128	; 0x80
   1f636:	e012      	b.n	1f65e <UART_SetConfig+0x168e>
   1f638:	2340      	movs	r3, #64	; 0x40
   1f63a:	e010      	b.n	1f65e <UART_SetConfig+0x168e>
   1f63c:	2320      	movs	r3, #32
   1f63e:	e00e      	b.n	1f65e <UART_SetConfig+0x168e>
   1f640:	2310      	movs	r3, #16
   1f642:	e00c      	b.n	1f65e <UART_SetConfig+0x168e>
   1f644:	230c      	movs	r3, #12
   1f646:	e00a      	b.n	1f65e <UART_SetConfig+0x168e>
   1f648:	230a      	movs	r3, #10
   1f64a:	e008      	b.n	1f65e <UART_SetConfig+0x168e>
   1f64c:	2308      	movs	r3, #8
   1f64e:	e006      	b.n	1f65e <UART_SetConfig+0x168e>
   1f650:	2306      	movs	r3, #6
   1f652:	e004      	b.n	1f65e <UART_SetConfig+0x168e>
   1f654:	2304      	movs	r3, #4
   1f656:	e002      	b.n	1f65e <UART_SetConfig+0x168e>
   1f658:	2302      	movs	r3, #2
   1f65a:	e000      	b.n	1f65e <UART_SetConfig+0x168e>
   1f65c:	2301      	movs	r3, #1
   1f65e:	6aba      	ldr	r2, [r7, #40]	; 0x28
   1f660:	fbb2 f3f3 	udiv	r3, r2, r3
   1f664:	005a      	lsls	r2, r3, #1
   1f666:	687b      	ldr	r3, [r7, #4]
   1f668:	685b      	ldr	r3, [r3, #4]
   1f66a:	085b      	lsrs	r3, r3, #1
   1f66c:	441a      	add	r2, r3
   1f66e:	687b      	ldr	r3, [r7, #4]
   1f670:	685b      	ldr	r3, [r3, #4]
   1f672:	fbb2 f3f3 	udiv	r3, r2, r3
   1f676:	b29b      	uxth	r3, r3
   1f678:	637b      	str	r3, [r7, #52]	; 0x34
        break;
   1f67a:	e254      	b.n	1fb26 <UART_SetConfig+0x1b56>
      case UART_CLOCKSOURCE_PLL2:
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
   1f67c:	f107 0318 	add.w	r3, r7, #24
   1f680:	4618      	mov	r0, r3
   1f682:	f7fd f9d3 	bl	1ca2c <HAL_RCCEx_GetPLL2ClockFreq>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pll2_clocks.PLL2_Q_Frequency, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1f686:	69fa      	ldr	r2, [r7, #28]
   1f688:	687b      	ldr	r3, [r7, #4]
   1f68a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f68c:	2b00      	cmp	r3, #0
   1f68e:	d044      	beq.n	1f71a <UART_SetConfig+0x174a>
   1f690:	687b      	ldr	r3, [r7, #4]
   1f692:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f694:	2b01      	cmp	r3, #1
   1f696:	d03e      	beq.n	1f716 <UART_SetConfig+0x1746>
   1f698:	687b      	ldr	r3, [r7, #4]
   1f69a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f69c:	2b02      	cmp	r3, #2
   1f69e:	d038      	beq.n	1f712 <UART_SetConfig+0x1742>
   1f6a0:	687b      	ldr	r3, [r7, #4]
   1f6a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f6a4:	2b03      	cmp	r3, #3
   1f6a6:	d032      	beq.n	1f70e <UART_SetConfig+0x173e>
   1f6a8:	687b      	ldr	r3, [r7, #4]
   1f6aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f6ac:	2b04      	cmp	r3, #4
   1f6ae:	d02c      	beq.n	1f70a <UART_SetConfig+0x173a>
   1f6b0:	687b      	ldr	r3, [r7, #4]
   1f6b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f6b4:	2b05      	cmp	r3, #5
   1f6b6:	d026      	beq.n	1f706 <UART_SetConfig+0x1736>
   1f6b8:	687b      	ldr	r3, [r7, #4]
   1f6ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f6bc:	2b06      	cmp	r3, #6
   1f6be:	d020      	beq.n	1f702 <UART_SetConfig+0x1732>
   1f6c0:	687b      	ldr	r3, [r7, #4]
   1f6c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f6c4:	2b07      	cmp	r3, #7
   1f6c6:	d01a      	beq.n	1f6fe <UART_SetConfig+0x172e>
   1f6c8:	687b      	ldr	r3, [r7, #4]
   1f6ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f6cc:	2b08      	cmp	r3, #8
   1f6ce:	d014      	beq.n	1f6fa <UART_SetConfig+0x172a>
   1f6d0:	687b      	ldr	r3, [r7, #4]
   1f6d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f6d4:	2b09      	cmp	r3, #9
   1f6d6:	d00e      	beq.n	1f6f6 <UART_SetConfig+0x1726>
   1f6d8:	687b      	ldr	r3, [r7, #4]
   1f6da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f6dc:	2b0a      	cmp	r3, #10
   1f6de:	d008      	beq.n	1f6f2 <UART_SetConfig+0x1722>
   1f6e0:	687b      	ldr	r3, [r7, #4]
   1f6e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f6e4:	2b0b      	cmp	r3, #11
   1f6e6:	d102      	bne.n	1f6ee <UART_SetConfig+0x171e>
   1f6e8:	f44f 7380 	mov.w	r3, #256	; 0x100
   1f6ec:	e016      	b.n	1f71c <UART_SetConfig+0x174c>
   1f6ee:	2301      	movs	r3, #1
   1f6f0:	e014      	b.n	1f71c <UART_SetConfig+0x174c>
   1f6f2:	2380      	movs	r3, #128	; 0x80
   1f6f4:	e012      	b.n	1f71c <UART_SetConfig+0x174c>
   1f6f6:	2340      	movs	r3, #64	; 0x40
   1f6f8:	e010      	b.n	1f71c <UART_SetConfig+0x174c>
   1f6fa:	2320      	movs	r3, #32
   1f6fc:	e00e      	b.n	1f71c <UART_SetConfig+0x174c>
   1f6fe:	2310      	movs	r3, #16
   1f700:	e00c      	b.n	1f71c <UART_SetConfig+0x174c>
   1f702:	230c      	movs	r3, #12
   1f704:	e00a      	b.n	1f71c <UART_SetConfig+0x174c>
   1f706:	230a      	movs	r3, #10
   1f708:	e008      	b.n	1f71c <UART_SetConfig+0x174c>
   1f70a:	2308      	movs	r3, #8
   1f70c:	e006      	b.n	1f71c <UART_SetConfig+0x174c>
   1f70e:	2306      	movs	r3, #6
   1f710:	e004      	b.n	1f71c <UART_SetConfig+0x174c>
   1f712:	2304      	movs	r3, #4
   1f714:	e002      	b.n	1f71c <UART_SetConfig+0x174c>
   1f716:	2302      	movs	r3, #2
   1f718:	e000      	b.n	1f71c <UART_SetConfig+0x174c>
   1f71a:	2301      	movs	r3, #1
   1f71c:	fbb2 f3f3 	udiv	r3, r2, r3
   1f720:	005a      	lsls	r2, r3, #1
   1f722:	687b      	ldr	r3, [r7, #4]
   1f724:	685b      	ldr	r3, [r3, #4]
   1f726:	085b      	lsrs	r3, r3, #1
   1f728:	441a      	add	r2, r3
   1f72a:	687b      	ldr	r3, [r7, #4]
   1f72c:	685b      	ldr	r3, [r3, #4]
   1f72e:	fbb2 f3f3 	udiv	r3, r2, r3
   1f732:	b29b      	uxth	r3, r3
   1f734:	637b      	str	r3, [r7, #52]	; 0x34
        break;
   1f736:	e1f6      	b.n	1fb26 <UART_SetConfig+0x1b56>
      case UART_CLOCKSOURCE_PLL3:
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
   1f738:	f107 030c 	add.w	r3, r7, #12
   1f73c:	4618      	mov	r0, r3
   1f73e:	f7fd fac1 	bl	1ccc4 <HAL_RCCEx_GetPLL3ClockFreq>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pll3_clocks.PLL3_Q_Frequency, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1f742:	693a      	ldr	r2, [r7, #16]
   1f744:	687b      	ldr	r3, [r7, #4]
   1f746:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f748:	2b00      	cmp	r3, #0
   1f74a:	d044      	beq.n	1f7d6 <UART_SetConfig+0x1806>
   1f74c:	687b      	ldr	r3, [r7, #4]
   1f74e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f750:	2b01      	cmp	r3, #1
   1f752:	d03e      	beq.n	1f7d2 <UART_SetConfig+0x1802>
   1f754:	687b      	ldr	r3, [r7, #4]
   1f756:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f758:	2b02      	cmp	r3, #2
   1f75a:	d038      	beq.n	1f7ce <UART_SetConfig+0x17fe>
   1f75c:	687b      	ldr	r3, [r7, #4]
   1f75e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f760:	2b03      	cmp	r3, #3
   1f762:	d032      	beq.n	1f7ca <UART_SetConfig+0x17fa>
   1f764:	687b      	ldr	r3, [r7, #4]
   1f766:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f768:	2b04      	cmp	r3, #4
   1f76a:	d02c      	beq.n	1f7c6 <UART_SetConfig+0x17f6>
   1f76c:	687b      	ldr	r3, [r7, #4]
   1f76e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f770:	2b05      	cmp	r3, #5
   1f772:	d026      	beq.n	1f7c2 <UART_SetConfig+0x17f2>
   1f774:	687b      	ldr	r3, [r7, #4]
   1f776:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f778:	2b06      	cmp	r3, #6
   1f77a:	d020      	beq.n	1f7be <UART_SetConfig+0x17ee>
   1f77c:	687b      	ldr	r3, [r7, #4]
   1f77e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f780:	2b07      	cmp	r3, #7
   1f782:	d01a      	beq.n	1f7ba <UART_SetConfig+0x17ea>
   1f784:	687b      	ldr	r3, [r7, #4]
   1f786:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f788:	2b08      	cmp	r3, #8
   1f78a:	d014      	beq.n	1f7b6 <UART_SetConfig+0x17e6>
   1f78c:	687b      	ldr	r3, [r7, #4]
   1f78e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f790:	2b09      	cmp	r3, #9
   1f792:	d00e      	beq.n	1f7b2 <UART_SetConfig+0x17e2>
   1f794:	687b      	ldr	r3, [r7, #4]
   1f796:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f798:	2b0a      	cmp	r3, #10
   1f79a:	d008      	beq.n	1f7ae <UART_SetConfig+0x17de>
   1f79c:	687b      	ldr	r3, [r7, #4]
   1f79e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f7a0:	2b0b      	cmp	r3, #11
   1f7a2:	d102      	bne.n	1f7aa <UART_SetConfig+0x17da>
   1f7a4:	f44f 7380 	mov.w	r3, #256	; 0x100
   1f7a8:	e016      	b.n	1f7d8 <UART_SetConfig+0x1808>
   1f7aa:	2301      	movs	r3, #1
   1f7ac:	e014      	b.n	1f7d8 <UART_SetConfig+0x1808>
   1f7ae:	2380      	movs	r3, #128	; 0x80
   1f7b0:	e012      	b.n	1f7d8 <UART_SetConfig+0x1808>
   1f7b2:	2340      	movs	r3, #64	; 0x40
   1f7b4:	e010      	b.n	1f7d8 <UART_SetConfig+0x1808>
   1f7b6:	2320      	movs	r3, #32
   1f7b8:	e00e      	b.n	1f7d8 <UART_SetConfig+0x1808>
   1f7ba:	2310      	movs	r3, #16
   1f7bc:	e00c      	b.n	1f7d8 <UART_SetConfig+0x1808>
   1f7be:	230c      	movs	r3, #12
   1f7c0:	e00a      	b.n	1f7d8 <UART_SetConfig+0x1808>
   1f7c2:	230a      	movs	r3, #10
   1f7c4:	e008      	b.n	1f7d8 <UART_SetConfig+0x1808>
   1f7c6:	2308      	movs	r3, #8
   1f7c8:	e006      	b.n	1f7d8 <UART_SetConfig+0x1808>
   1f7ca:	2306      	movs	r3, #6
   1f7cc:	e004      	b.n	1f7d8 <UART_SetConfig+0x1808>
   1f7ce:	2304      	movs	r3, #4
   1f7d0:	e002      	b.n	1f7d8 <UART_SetConfig+0x1808>
   1f7d2:	2302      	movs	r3, #2
   1f7d4:	e000      	b.n	1f7d8 <UART_SetConfig+0x1808>
   1f7d6:	2301      	movs	r3, #1
   1f7d8:	fbb2 f3f3 	udiv	r3, r2, r3
   1f7dc:	005a      	lsls	r2, r3, #1
   1f7de:	687b      	ldr	r3, [r7, #4]
   1f7e0:	685b      	ldr	r3, [r3, #4]
   1f7e2:	085b      	lsrs	r3, r3, #1
   1f7e4:	441a      	add	r2, r3
   1f7e6:	687b      	ldr	r3, [r7, #4]
   1f7e8:	685b      	ldr	r3, [r3, #4]
   1f7ea:	fbb2 f3f3 	udiv	r3, r2, r3
   1f7ee:	b29b      	uxth	r3, r3
   1f7f0:	637b      	str	r3, [r7, #52]	; 0x34
        break;
   1f7f2:	e198      	b.n	1fb26 <UART_SetConfig+0x1b56>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
   1f7f4:	4b87      	ldr	r3, [pc, #540]	; (1fa14 <UART_SetConfig+0x1a44>)
   1f7f6:	681b      	ldr	r3, [r3, #0]
   1f7f8:	f003 0320 	and.w	r3, r3, #32
   1f7fc:	2b00      	cmp	r3, #0
   1f7fe:	d05e      	beq.n	1f8be <UART_SetConfig+0x18ee>
        {
          usartdiv = (uint16_t)(UART_DIV_SAMPLING8((HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U)), huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1f800:	4b84      	ldr	r3, [pc, #528]	; (1fa14 <UART_SetConfig+0x1a44>)
   1f802:	681b      	ldr	r3, [r3, #0]
   1f804:	08db      	lsrs	r3, r3, #3
   1f806:	f003 0303 	and.w	r3, r3, #3
   1f80a:	4a83      	ldr	r2, [pc, #524]	; (1fa18 <UART_SetConfig+0x1a48>)
   1f80c:	40da      	lsrs	r2, r3
   1f80e:	687b      	ldr	r3, [r7, #4]
   1f810:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f812:	2b00      	cmp	r3, #0
   1f814:	d044      	beq.n	1f8a0 <UART_SetConfig+0x18d0>
   1f816:	687b      	ldr	r3, [r7, #4]
   1f818:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f81a:	2b01      	cmp	r3, #1
   1f81c:	d03e      	beq.n	1f89c <UART_SetConfig+0x18cc>
   1f81e:	687b      	ldr	r3, [r7, #4]
   1f820:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f822:	2b02      	cmp	r3, #2
   1f824:	d038      	beq.n	1f898 <UART_SetConfig+0x18c8>
   1f826:	687b      	ldr	r3, [r7, #4]
   1f828:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f82a:	2b03      	cmp	r3, #3
   1f82c:	d032      	beq.n	1f894 <UART_SetConfig+0x18c4>
   1f82e:	687b      	ldr	r3, [r7, #4]
   1f830:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f832:	2b04      	cmp	r3, #4
   1f834:	d02c      	beq.n	1f890 <UART_SetConfig+0x18c0>
   1f836:	687b      	ldr	r3, [r7, #4]
   1f838:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f83a:	2b05      	cmp	r3, #5
   1f83c:	d026      	beq.n	1f88c <UART_SetConfig+0x18bc>
   1f83e:	687b      	ldr	r3, [r7, #4]
   1f840:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f842:	2b06      	cmp	r3, #6
   1f844:	d020      	beq.n	1f888 <UART_SetConfig+0x18b8>
   1f846:	687b      	ldr	r3, [r7, #4]
   1f848:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f84a:	2b07      	cmp	r3, #7
   1f84c:	d01a      	beq.n	1f884 <UART_SetConfig+0x18b4>
   1f84e:	687b      	ldr	r3, [r7, #4]
   1f850:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f852:	2b08      	cmp	r3, #8
   1f854:	d014      	beq.n	1f880 <UART_SetConfig+0x18b0>
   1f856:	687b      	ldr	r3, [r7, #4]
   1f858:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f85a:	2b09      	cmp	r3, #9
   1f85c:	d00e      	beq.n	1f87c <UART_SetConfig+0x18ac>
   1f85e:	687b      	ldr	r3, [r7, #4]
   1f860:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f862:	2b0a      	cmp	r3, #10
   1f864:	d008      	beq.n	1f878 <UART_SetConfig+0x18a8>
   1f866:	687b      	ldr	r3, [r7, #4]
   1f868:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f86a:	2b0b      	cmp	r3, #11
   1f86c:	d102      	bne.n	1f874 <UART_SetConfig+0x18a4>
   1f86e:	f44f 7380 	mov.w	r3, #256	; 0x100
   1f872:	e016      	b.n	1f8a2 <UART_SetConfig+0x18d2>
   1f874:	2301      	movs	r3, #1
   1f876:	e014      	b.n	1f8a2 <UART_SetConfig+0x18d2>
   1f878:	2380      	movs	r3, #128	; 0x80
   1f87a:	e012      	b.n	1f8a2 <UART_SetConfig+0x18d2>
   1f87c:	2340      	movs	r3, #64	; 0x40
   1f87e:	e010      	b.n	1f8a2 <UART_SetConfig+0x18d2>
   1f880:	2320      	movs	r3, #32
   1f882:	e00e      	b.n	1f8a2 <UART_SetConfig+0x18d2>
   1f884:	2310      	movs	r3, #16
   1f886:	e00c      	b.n	1f8a2 <UART_SetConfig+0x18d2>
   1f888:	230c      	movs	r3, #12
   1f88a:	e00a      	b.n	1f8a2 <UART_SetConfig+0x18d2>
   1f88c:	230a      	movs	r3, #10
   1f88e:	e008      	b.n	1f8a2 <UART_SetConfig+0x18d2>
   1f890:	2308      	movs	r3, #8
   1f892:	e006      	b.n	1f8a2 <UART_SetConfig+0x18d2>
   1f894:	2306      	movs	r3, #6
   1f896:	e004      	b.n	1f8a2 <UART_SetConfig+0x18d2>
   1f898:	2304      	movs	r3, #4
   1f89a:	e002      	b.n	1f8a2 <UART_SetConfig+0x18d2>
   1f89c:	2302      	movs	r3, #2
   1f89e:	e000      	b.n	1f8a2 <UART_SetConfig+0x18d2>
   1f8a0:	2301      	movs	r3, #1
   1f8a2:	fbb2 f3f3 	udiv	r3, r2, r3
   1f8a6:	005a      	lsls	r2, r3, #1
   1f8a8:	687b      	ldr	r3, [r7, #4]
   1f8aa:	685b      	ldr	r3, [r3, #4]
   1f8ac:	085b      	lsrs	r3, r3, #1
   1f8ae:	441a      	add	r2, r3
   1f8b0:	687b      	ldr	r3, [r7, #4]
   1f8b2:	685b      	ldr	r3, [r3, #4]
   1f8b4:	fbb2 f3f3 	udiv	r3, r2, r3
   1f8b8:	b29b      	uxth	r3, r3
   1f8ba:	637b      	str	r3, [r7, #52]	; 0x34
        }
        else
        {
          usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
        }
        break;
   1f8bc:	e133      	b.n	1fb26 <UART_SetConfig+0x1b56>
          usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1f8be:	687b      	ldr	r3, [r7, #4]
   1f8c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f8c2:	2b00      	cmp	r3, #0
   1f8c4:	d043      	beq.n	1f94e <UART_SetConfig+0x197e>
   1f8c6:	687b      	ldr	r3, [r7, #4]
   1f8c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f8ca:	2b01      	cmp	r3, #1
   1f8cc:	d03d      	beq.n	1f94a <UART_SetConfig+0x197a>
   1f8ce:	687b      	ldr	r3, [r7, #4]
   1f8d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f8d2:	2b02      	cmp	r3, #2
   1f8d4:	d037      	beq.n	1f946 <UART_SetConfig+0x1976>
   1f8d6:	687b      	ldr	r3, [r7, #4]
   1f8d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f8da:	2b03      	cmp	r3, #3
   1f8dc:	d031      	beq.n	1f942 <UART_SetConfig+0x1972>
   1f8de:	687b      	ldr	r3, [r7, #4]
   1f8e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f8e2:	2b04      	cmp	r3, #4
   1f8e4:	d02b      	beq.n	1f93e <UART_SetConfig+0x196e>
   1f8e6:	687b      	ldr	r3, [r7, #4]
   1f8e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f8ea:	2b05      	cmp	r3, #5
   1f8ec:	d025      	beq.n	1f93a <UART_SetConfig+0x196a>
   1f8ee:	687b      	ldr	r3, [r7, #4]
   1f8f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f8f2:	2b06      	cmp	r3, #6
   1f8f4:	d01f      	beq.n	1f936 <UART_SetConfig+0x1966>
   1f8f6:	687b      	ldr	r3, [r7, #4]
   1f8f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f8fa:	2b07      	cmp	r3, #7
   1f8fc:	d019      	beq.n	1f932 <UART_SetConfig+0x1962>
   1f8fe:	687b      	ldr	r3, [r7, #4]
   1f900:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f902:	2b08      	cmp	r3, #8
   1f904:	d013      	beq.n	1f92e <UART_SetConfig+0x195e>
   1f906:	687b      	ldr	r3, [r7, #4]
   1f908:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f90a:	2b09      	cmp	r3, #9
   1f90c:	d00d      	beq.n	1f92a <UART_SetConfig+0x195a>
   1f90e:	687b      	ldr	r3, [r7, #4]
   1f910:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f912:	2b0a      	cmp	r3, #10
   1f914:	d007      	beq.n	1f926 <UART_SetConfig+0x1956>
   1f916:	687b      	ldr	r3, [r7, #4]
   1f918:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f91a:	2b0b      	cmp	r3, #11
   1f91c:	d101      	bne.n	1f922 <UART_SetConfig+0x1952>
   1f91e:	4b3f      	ldr	r3, [pc, #252]	; (1fa1c <UART_SetConfig+0x1a4c>)
   1f920:	e016      	b.n	1f950 <UART_SetConfig+0x1980>
   1f922:	4b3f      	ldr	r3, [pc, #252]	; (1fa20 <UART_SetConfig+0x1a50>)
   1f924:	e014      	b.n	1f950 <UART_SetConfig+0x1980>
   1f926:	4b3f      	ldr	r3, [pc, #252]	; (1fa24 <UART_SetConfig+0x1a54>)
   1f928:	e012      	b.n	1f950 <UART_SetConfig+0x1980>
   1f92a:	4b3f      	ldr	r3, [pc, #252]	; (1fa28 <UART_SetConfig+0x1a58>)
   1f92c:	e010      	b.n	1f950 <UART_SetConfig+0x1980>
   1f92e:	4b3f      	ldr	r3, [pc, #252]	; (1fa2c <UART_SetConfig+0x1a5c>)
   1f930:	e00e      	b.n	1f950 <UART_SetConfig+0x1980>
   1f932:	4b3f      	ldr	r3, [pc, #252]	; (1fa30 <UART_SetConfig+0x1a60>)
   1f934:	e00c      	b.n	1f950 <UART_SetConfig+0x1980>
   1f936:	4b3f      	ldr	r3, [pc, #252]	; (1fa34 <UART_SetConfig+0x1a64>)
   1f938:	e00a      	b.n	1f950 <UART_SetConfig+0x1980>
   1f93a:	4b3f      	ldr	r3, [pc, #252]	; (1fa38 <UART_SetConfig+0x1a68>)
   1f93c:	e008      	b.n	1f950 <UART_SetConfig+0x1980>
   1f93e:	4b3f      	ldr	r3, [pc, #252]	; (1fa3c <UART_SetConfig+0x1a6c>)
   1f940:	e006      	b.n	1f950 <UART_SetConfig+0x1980>
   1f942:	4b3f      	ldr	r3, [pc, #252]	; (1fa40 <UART_SetConfig+0x1a70>)
   1f944:	e004      	b.n	1f950 <UART_SetConfig+0x1980>
   1f946:	4b3f      	ldr	r3, [pc, #252]	; (1fa44 <UART_SetConfig+0x1a74>)
   1f948:	e002      	b.n	1f950 <UART_SetConfig+0x1980>
   1f94a:	4b33      	ldr	r3, [pc, #204]	; (1fa18 <UART_SetConfig+0x1a48>)
   1f94c:	e000      	b.n	1f950 <UART_SetConfig+0x1980>
   1f94e:	4b34      	ldr	r3, [pc, #208]	; (1fa20 <UART_SetConfig+0x1a50>)
   1f950:	687a      	ldr	r2, [r7, #4]
   1f952:	6852      	ldr	r2, [r2, #4]
   1f954:	0852      	lsrs	r2, r2, #1
   1f956:	441a      	add	r2, r3
   1f958:	687b      	ldr	r3, [r7, #4]
   1f95a:	685b      	ldr	r3, [r3, #4]
   1f95c:	fbb2 f3f3 	udiv	r3, r2, r3
   1f960:	b29b      	uxth	r3, r3
   1f962:	637b      	str	r3, [r7, #52]	; 0x34
        break;
   1f964:	e0df      	b.n	1fb26 <UART_SetConfig+0x1b56>
      case UART_CLOCKSOURCE_CSI:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(CSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1f966:	687b      	ldr	r3, [r7, #4]
   1f968:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f96a:	2b00      	cmp	r3, #0
   1f96c:	d045      	beq.n	1f9fa <UART_SetConfig+0x1a2a>
   1f96e:	687b      	ldr	r3, [r7, #4]
   1f970:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f972:	2b01      	cmp	r3, #1
   1f974:	d03f      	beq.n	1f9f6 <UART_SetConfig+0x1a26>
   1f976:	687b      	ldr	r3, [r7, #4]
   1f978:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f97a:	2b02      	cmp	r3, #2
   1f97c:	d039      	beq.n	1f9f2 <UART_SetConfig+0x1a22>
   1f97e:	687b      	ldr	r3, [r7, #4]
   1f980:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f982:	2b03      	cmp	r3, #3
   1f984:	d033      	beq.n	1f9ee <UART_SetConfig+0x1a1e>
   1f986:	687b      	ldr	r3, [r7, #4]
   1f988:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f98a:	2b04      	cmp	r3, #4
   1f98c:	d02d      	beq.n	1f9ea <UART_SetConfig+0x1a1a>
   1f98e:	687b      	ldr	r3, [r7, #4]
   1f990:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f992:	2b05      	cmp	r3, #5
   1f994:	d027      	beq.n	1f9e6 <UART_SetConfig+0x1a16>
   1f996:	687b      	ldr	r3, [r7, #4]
   1f998:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f99a:	2b06      	cmp	r3, #6
   1f99c:	d021      	beq.n	1f9e2 <UART_SetConfig+0x1a12>
   1f99e:	687b      	ldr	r3, [r7, #4]
   1f9a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f9a2:	2b07      	cmp	r3, #7
   1f9a4:	d01b      	beq.n	1f9de <UART_SetConfig+0x1a0e>
   1f9a6:	687b      	ldr	r3, [r7, #4]
   1f9a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f9aa:	2b08      	cmp	r3, #8
   1f9ac:	d015      	beq.n	1f9da <UART_SetConfig+0x1a0a>
   1f9ae:	687b      	ldr	r3, [r7, #4]
   1f9b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f9b2:	2b09      	cmp	r3, #9
   1f9b4:	d00f      	beq.n	1f9d6 <UART_SetConfig+0x1a06>
   1f9b6:	687b      	ldr	r3, [r7, #4]
   1f9b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f9ba:	2b0a      	cmp	r3, #10
   1f9bc:	d008      	beq.n	1f9d0 <UART_SetConfig+0x1a00>
   1f9be:	687b      	ldr	r3, [r7, #4]
   1f9c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1f9c2:	2b0b      	cmp	r3, #11
   1f9c4:	d102      	bne.n	1f9cc <UART_SetConfig+0x19fc>
   1f9c6:	f647 2312 	movw	r3, #31250	; 0x7a12
   1f9ca:	e017      	b.n	1f9fc <UART_SetConfig+0x1a2c>
   1f9cc:	4b18      	ldr	r3, [pc, #96]	; (1fa30 <UART_SetConfig+0x1a60>)
   1f9ce:	e015      	b.n	1f9fc <UART_SetConfig+0x1a2c>
   1f9d0:	f24f 4324 	movw	r3, #62500	; 0xf424
   1f9d4:	e012      	b.n	1f9fc <UART_SetConfig+0x1a2c>
   1f9d6:	4b1c      	ldr	r3, [pc, #112]	; (1fa48 <UART_SetConfig+0x1a78>)
   1f9d8:	e010      	b.n	1f9fc <UART_SetConfig+0x1a2c>
   1f9da:	4b1c      	ldr	r3, [pc, #112]	; (1fa4c <UART_SetConfig+0x1a7c>)
   1f9dc:	e00e      	b.n	1f9fc <UART_SetConfig+0x1a2c>
   1f9de:	4b0f      	ldr	r3, [pc, #60]	; (1fa1c <UART_SetConfig+0x1a4c>)
   1f9e0:	e00c      	b.n	1f9fc <UART_SetConfig+0x1a2c>
   1f9e2:	4b1b      	ldr	r3, [pc, #108]	; (1fa50 <UART_SetConfig+0x1a80>)
   1f9e4:	e00a      	b.n	1f9fc <UART_SetConfig+0x1a2c>
   1f9e6:	4b1b      	ldr	r3, [pc, #108]	; (1fa54 <UART_SetConfig+0x1a84>)
   1f9e8:	e008      	b.n	1f9fc <UART_SetConfig+0x1a2c>
   1f9ea:	4b0e      	ldr	r3, [pc, #56]	; (1fa24 <UART_SetConfig+0x1a54>)
   1f9ec:	e006      	b.n	1f9fc <UART_SetConfig+0x1a2c>
   1f9ee:	4b1a      	ldr	r3, [pc, #104]	; (1fa58 <UART_SetConfig+0x1a88>)
   1f9f0:	e004      	b.n	1f9fc <UART_SetConfig+0x1a2c>
   1f9f2:	4b0d      	ldr	r3, [pc, #52]	; (1fa28 <UART_SetConfig+0x1a58>)
   1f9f4:	e002      	b.n	1f9fc <UART_SetConfig+0x1a2c>
   1f9f6:	4b0d      	ldr	r3, [pc, #52]	; (1fa2c <UART_SetConfig+0x1a5c>)
   1f9f8:	e000      	b.n	1f9fc <UART_SetConfig+0x1a2c>
   1f9fa:	4b0d      	ldr	r3, [pc, #52]	; (1fa30 <UART_SetConfig+0x1a60>)
   1f9fc:	687a      	ldr	r2, [r7, #4]
   1f9fe:	6852      	ldr	r2, [r2, #4]
   1fa00:	0852      	lsrs	r2, r2, #1
   1fa02:	441a      	add	r2, r3
   1fa04:	687b      	ldr	r3, [r7, #4]
   1fa06:	685b      	ldr	r3, [r3, #4]
   1fa08:	fbb2 f3f3 	udiv	r3, r2, r3
   1fa0c:	b29b      	uxth	r3, r3
   1fa0e:	637b      	str	r3, [r7, #52]	; 0x34
        break;
   1fa10:	e089      	b.n	1fb26 <UART_SetConfig+0x1b56>
   1fa12:	bf00      	nop
   1fa14:	58024400 	.word	0x58024400
   1fa18:	03d09000 	.word	0x03d09000
   1fa1c:	0007a120 	.word	0x0007a120
   1fa20:	07a12000 	.word	0x07a12000
   1fa24:	000f4240 	.word	0x000f4240
   1fa28:	001e8480 	.word	0x001e8480
   1fa2c:	003d0900 	.word	0x003d0900
   1fa30:	007a1200 	.word	0x007a1200
   1fa34:	00a2c2aa 	.word	0x00a2c2aa
   1fa38:	00c35000 	.word	0x00c35000
   1fa3c:	00f42400 	.word	0x00f42400
   1fa40:	01458554 	.word	0x01458554
   1fa44:	01e84800 	.word	0x01e84800
   1fa48:	0001e848 	.word	0x0001e848
   1fa4c:	0003d090 	.word	0x0003d090
   1fa50:	000a2c2a 	.word	0x000a2c2a
   1fa54:	000c3500 	.word	0x000c3500
   1fa58:	00145854 	.word	0x00145854
      case UART_CLOCKSOURCE_LSE:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1fa5c:	687b      	ldr	r3, [r7, #4]
   1fa5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fa60:	2b00      	cmp	r3, #0
   1fa62:	d04f      	beq.n	1fb04 <UART_SetConfig+0x1b34>
   1fa64:	687b      	ldr	r3, [r7, #4]
   1fa66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fa68:	2b01      	cmp	r3, #1
   1fa6a:	d048      	beq.n	1fafe <UART_SetConfig+0x1b2e>
   1fa6c:	687b      	ldr	r3, [r7, #4]
   1fa6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fa70:	2b02      	cmp	r3, #2
   1fa72:	d041      	beq.n	1faf8 <UART_SetConfig+0x1b28>
   1fa74:	687b      	ldr	r3, [r7, #4]
   1fa76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fa78:	2b03      	cmp	r3, #3
   1fa7a:	d03a      	beq.n	1faf2 <UART_SetConfig+0x1b22>
   1fa7c:	687b      	ldr	r3, [r7, #4]
   1fa7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fa80:	2b04      	cmp	r3, #4
   1fa82:	d033      	beq.n	1faec <UART_SetConfig+0x1b1c>
   1fa84:	687b      	ldr	r3, [r7, #4]
   1fa86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fa88:	2b05      	cmp	r3, #5
   1fa8a:	d02c      	beq.n	1fae6 <UART_SetConfig+0x1b16>
   1fa8c:	687b      	ldr	r3, [r7, #4]
   1fa8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fa90:	2b06      	cmp	r3, #6
   1fa92:	d025      	beq.n	1fae0 <UART_SetConfig+0x1b10>
   1fa94:	687b      	ldr	r3, [r7, #4]
   1fa96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fa98:	2b07      	cmp	r3, #7
   1fa9a:	d01e      	beq.n	1fada <UART_SetConfig+0x1b0a>
   1fa9c:	687b      	ldr	r3, [r7, #4]
   1fa9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1faa0:	2b08      	cmp	r3, #8
   1faa2:	d017      	beq.n	1fad4 <UART_SetConfig+0x1b04>
   1faa4:	687b      	ldr	r3, [r7, #4]
   1faa6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1faa8:	2b09      	cmp	r3, #9
   1faaa:	d010      	beq.n	1face <UART_SetConfig+0x1afe>
   1faac:	687b      	ldr	r3, [r7, #4]
   1faae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fab0:	2b0a      	cmp	r3, #10
   1fab2:	d009      	beq.n	1fac8 <UART_SetConfig+0x1af8>
   1fab4:	687b      	ldr	r3, [r7, #4]
   1fab6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fab8:	2b0b      	cmp	r3, #11
   1faba:	d102      	bne.n	1fac2 <UART_SetConfig+0x1af2>
   1fabc:	f44f 7380 	mov.w	r3, #256	; 0x100
   1fac0:	e022      	b.n	1fb08 <UART_SetConfig+0x1b38>
   1fac2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   1fac6:	e01f      	b.n	1fb08 <UART_SetConfig+0x1b38>
   1fac8:	f44f 7300 	mov.w	r3, #512	; 0x200
   1facc:	e01c      	b.n	1fb08 <UART_SetConfig+0x1b38>
   1face:	f44f 6380 	mov.w	r3, #1024	; 0x400
   1fad2:	e019      	b.n	1fb08 <UART_SetConfig+0x1b38>
   1fad4:	f44f 6300 	mov.w	r3, #2048	; 0x800
   1fad8:	e016      	b.n	1fb08 <UART_SetConfig+0x1b38>
   1fada:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   1fade:	e013      	b.n	1fb08 <UART_SetConfig+0x1b38>
   1fae0:	f241 5354 	movw	r3, #5460	; 0x1554
   1fae4:	e010      	b.n	1fb08 <UART_SetConfig+0x1b38>
   1fae6:	f641 1398 	movw	r3, #6552	; 0x1998
   1faea:	e00d      	b.n	1fb08 <UART_SetConfig+0x1b38>
   1faec:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   1faf0:	e00a      	b.n	1fb08 <UART_SetConfig+0x1b38>
   1faf2:	f642 23aa 	movw	r3, #10922	; 0x2aaa
   1faf6:	e007      	b.n	1fb08 <UART_SetConfig+0x1b38>
   1faf8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
   1fafc:	e004      	b.n	1fb08 <UART_SetConfig+0x1b38>
   1fafe:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   1fb02:	e001      	b.n	1fb08 <UART_SetConfig+0x1b38>
   1fb04:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   1fb08:	687a      	ldr	r2, [r7, #4]
   1fb0a:	6852      	ldr	r2, [r2, #4]
   1fb0c:	0852      	lsrs	r2, r2, #1
   1fb0e:	441a      	add	r2, r3
   1fb10:	687b      	ldr	r3, [r7, #4]
   1fb12:	685b      	ldr	r3, [r3, #4]
   1fb14:	fbb2 f3f3 	udiv	r3, r2, r3
   1fb18:	b29b      	uxth	r3, r3
   1fb1a:	637b      	str	r3, [r7, #52]	; 0x34
        break;
   1fb1c:	e003      	b.n	1fb26 <UART_SetConfig+0x1b56>
      default:
        ret = HAL_ERROR;
   1fb1e:	2301      	movs	r3, #1
   1fb20:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
        break;
   1fb24:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
   1fb26:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   1fb28:	2b0f      	cmp	r3, #15
   1fb2a:	d916      	bls.n	1fb5a <UART_SetConfig+0x1b8a>
   1fb2c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   1fb2e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   1fb32:	d212      	bcs.n	1fb5a <UART_SetConfig+0x1b8a>
    {
      brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
   1fb34:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   1fb36:	b29b      	uxth	r3, r3
   1fb38:	f023 030f 	bic.w	r3, r3, #15
   1fb3c:	84fb      	strh	r3, [r7, #38]	; 0x26
      brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
   1fb3e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   1fb40:	085b      	lsrs	r3, r3, #1
   1fb42:	b29b      	uxth	r3, r3
   1fb44:	f003 0307 	and.w	r3, r3, #7
   1fb48:	b29a      	uxth	r2, r3
   1fb4a:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
   1fb4c:	4313      	orrs	r3, r2
   1fb4e:	84fb      	strh	r3, [r7, #38]	; 0x26
      huart->Instance->BRR = brrtemp;
   1fb50:	687b      	ldr	r3, [r7, #4]
   1fb52:	681b      	ldr	r3, [r3, #0]
   1fb54:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
   1fb56:	60da      	str	r2, [r3, #12]
   1fb58:	e3a3      	b.n	202a2 <UART_SetConfig+0x22d2>
    }
    else
    {
      ret = HAL_ERROR;
   1fb5a:	2301      	movs	r3, #1
   1fb5c:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
   1fb60:	e39f      	b.n	202a2 <UART_SetConfig+0x22d2>
    }
  }
  else
  {
    switch (clocksource)
   1fb62:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
   1fb66:	2b40      	cmp	r3, #64	; 0x40
   1fb68:	f200 8388 	bhi.w	2027c <UART_SetConfig+0x22ac>
   1fb6c:	a201      	add	r2, pc, #4	; (adr r2, 1fb74 <UART_SetConfig+0x1ba4>)
   1fb6e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1fb72:	bf00      	nop
   1fb74:	0001fc79 	.word	0x0001fc79
   1fb78:	0001fd2f 	.word	0x0001fd2f
   1fb7c:	0002027d 	.word	0x0002027d
   1fb80:	0002027d 	.word	0x0002027d
   1fb84:	0001fde5 	.word	0x0001fde5
   1fb88:	0002027d 	.word	0x0002027d
   1fb8c:	0002027d 	.word	0x0002027d
   1fb90:	0002027d 	.word	0x0002027d
   1fb94:	0001fe9f 	.word	0x0001fe9f
   1fb98:	0002027d 	.word	0x0002027d
   1fb9c:	0002027d 	.word	0x0002027d
   1fba0:	0002027d 	.word	0x0002027d
   1fba4:	0002027d 	.word	0x0002027d
   1fba8:	0002027d 	.word	0x0002027d
   1fbac:	0002027d 	.word	0x0002027d
   1fbb0:	0002027d 	.word	0x0002027d
   1fbb4:	0001ff59 	.word	0x0001ff59
   1fbb8:	0002027d 	.word	0x0002027d
   1fbbc:	0002027d 	.word	0x0002027d
   1fbc0:	0002027d 	.word	0x0002027d
   1fbc4:	0002027d 	.word	0x0002027d
   1fbc8:	0002027d 	.word	0x0002027d
   1fbcc:	0002027d 	.word	0x0002027d
   1fbd0:	0002027d 	.word	0x0002027d
   1fbd4:	0002027d 	.word	0x0002027d
   1fbd8:	0002027d 	.word	0x0002027d
   1fbdc:	0002027d 	.word	0x0002027d
   1fbe0:	0002027d 	.word	0x0002027d
   1fbe4:	0002027d 	.word	0x0002027d
   1fbe8:	0002027d 	.word	0x0002027d
   1fbec:	0002027d 	.word	0x0002027d
   1fbf0:	0002027d 	.word	0x0002027d
   1fbf4:	000200c9 	.word	0x000200c9
   1fbf8:	0002027d 	.word	0x0002027d
   1fbfc:	0002027d 	.word	0x0002027d
   1fc00:	0002027d 	.word	0x0002027d
   1fc04:	0002027d 	.word	0x0002027d
   1fc08:	0002027d 	.word	0x0002027d
   1fc0c:	0002027d 	.word	0x0002027d
   1fc10:	0002027d 	.word	0x0002027d
   1fc14:	0002027d 	.word	0x0002027d
   1fc18:	0002027d 	.word	0x0002027d
   1fc1c:	0002027d 	.word	0x0002027d
   1fc20:	0002027d 	.word	0x0002027d
   1fc24:	0002027d 	.word	0x0002027d
   1fc28:	0002027d 	.word	0x0002027d
   1fc2c:	0002027d 	.word	0x0002027d
   1fc30:	0002027d 	.word	0x0002027d
   1fc34:	0002027d 	.word	0x0002027d
   1fc38:	0002027d 	.word	0x0002027d
   1fc3c:	0002027d 	.word	0x0002027d
   1fc40:	0002027d 	.word	0x0002027d
   1fc44:	0002027d 	.word	0x0002027d
   1fc48:	0002027d 	.word	0x0002027d
   1fc4c:	0002027d 	.word	0x0002027d
   1fc50:	0002027d 	.word	0x0002027d
   1fc54:	0002027d 	.word	0x0002027d
   1fc58:	0002027d 	.word	0x0002027d
   1fc5c:	0002027d 	.word	0x0002027d
   1fc60:	0002027d 	.word	0x0002027d
   1fc64:	0002027d 	.word	0x0002027d
   1fc68:	0002027d 	.word	0x0002027d
   1fc6c:	0002027d 	.word	0x0002027d
   1fc70:	0002027d 	.word	0x0002027d
   1fc74:	000201bd 	.word	0x000201bd
    {
      case UART_CLOCKSOURCE_D2PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
   1fc78:	f7fb ffb8 	bl	1bbec <HAL_RCC_GetPCLK1Freq>
   1fc7c:	62b8      	str	r0, [r7, #40]	; 0x28
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1fc7e:	687b      	ldr	r3, [r7, #4]
   1fc80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fc82:	2b00      	cmp	r3, #0
   1fc84:	d044      	beq.n	1fd10 <UART_SetConfig+0x1d40>
   1fc86:	687b      	ldr	r3, [r7, #4]
   1fc88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fc8a:	2b01      	cmp	r3, #1
   1fc8c:	d03e      	beq.n	1fd0c <UART_SetConfig+0x1d3c>
   1fc8e:	687b      	ldr	r3, [r7, #4]
   1fc90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fc92:	2b02      	cmp	r3, #2
   1fc94:	d038      	beq.n	1fd08 <UART_SetConfig+0x1d38>
   1fc96:	687b      	ldr	r3, [r7, #4]
   1fc98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fc9a:	2b03      	cmp	r3, #3
   1fc9c:	d032      	beq.n	1fd04 <UART_SetConfig+0x1d34>
   1fc9e:	687b      	ldr	r3, [r7, #4]
   1fca0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fca2:	2b04      	cmp	r3, #4
   1fca4:	d02c      	beq.n	1fd00 <UART_SetConfig+0x1d30>
   1fca6:	687b      	ldr	r3, [r7, #4]
   1fca8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fcaa:	2b05      	cmp	r3, #5
   1fcac:	d026      	beq.n	1fcfc <UART_SetConfig+0x1d2c>
   1fcae:	687b      	ldr	r3, [r7, #4]
   1fcb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fcb2:	2b06      	cmp	r3, #6
   1fcb4:	d020      	beq.n	1fcf8 <UART_SetConfig+0x1d28>
   1fcb6:	687b      	ldr	r3, [r7, #4]
   1fcb8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fcba:	2b07      	cmp	r3, #7
   1fcbc:	d01a      	beq.n	1fcf4 <UART_SetConfig+0x1d24>
   1fcbe:	687b      	ldr	r3, [r7, #4]
   1fcc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fcc2:	2b08      	cmp	r3, #8
   1fcc4:	d014      	beq.n	1fcf0 <UART_SetConfig+0x1d20>
   1fcc6:	687b      	ldr	r3, [r7, #4]
   1fcc8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fcca:	2b09      	cmp	r3, #9
   1fccc:	d00e      	beq.n	1fcec <UART_SetConfig+0x1d1c>
   1fcce:	687b      	ldr	r3, [r7, #4]
   1fcd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fcd2:	2b0a      	cmp	r3, #10
   1fcd4:	d008      	beq.n	1fce8 <UART_SetConfig+0x1d18>
   1fcd6:	687b      	ldr	r3, [r7, #4]
   1fcd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fcda:	2b0b      	cmp	r3, #11
   1fcdc:	d102      	bne.n	1fce4 <UART_SetConfig+0x1d14>
   1fcde:	f44f 7380 	mov.w	r3, #256	; 0x100
   1fce2:	e016      	b.n	1fd12 <UART_SetConfig+0x1d42>
   1fce4:	2301      	movs	r3, #1
   1fce6:	e014      	b.n	1fd12 <UART_SetConfig+0x1d42>
   1fce8:	2380      	movs	r3, #128	; 0x80
   1fcea:	e012      	b.n	1fd12 <UART_SetConfig+0x1d42>
   1fcec:	2340      	movs	r3, #64	; 0x40
   1fcee:	e010      	b.n	1fd12 <UART_SetConfig+0x1d42>
   1fcf0:	2320      	movs	r3, #32
   1fcf2:	e00e      	b.n	1fd12 <UART_SetConfig+0x1d42>
   1fcf4:	2310      	movs	r3, #16
   1fcf6:	e00c      	b.n	1fd12 <UART_SetConfig+0x1d42>
   1fcf8:	230c      	movs	r3, #12
   1fcfa:	e00a      	b.n	1fd12 <UART_SetConfig+0x1d42>
   1fcfc:	230a      	movs	r3, #10
   1fcfe:	e008      	b.n	1fd12 <UART_SetConfig+0x1d42>
   1fd00:	2308      	movs	r3, #8
   1fd02:	e006      	b.n	1fd12 <UART_SetConfig+0x1d42>
   1fd04:	2306      	movs	r3, #6
   1fd06:	e004      	b.n	1fd12 <UART_SetConfig+0x1d42>
   1fd08:	2304      	movs	r3, #4
   1fd0a:	e002      	b.n	1fd12 <UART_SetConfig+0x1d42>
   1fd0c:	2302      	movs	r3, #2
   1fd0e:	e000      	b.n	1fd12 <UART_SetConfig+0x1d42>
   1fd10:	2301      	movs	r3, #1
   1fd12:	6aba      	ldr	r2, [r7, #40]	; 0x28
   1fd14:	fbb2 f2f3 	udiv	r2, r2, r3
   1fd18:	687b      	ldr	r3, [r7, #4]
   1fd1a:	685b      	ldr	r3, [r3, #4]
   1fd1c:	085b      	lsrs	r3, r3, #1
   1fd1e:	441a      	add	r2, r3
   1fd20:	687b      	ldr	r3, [r7, #4]
   1fd22:	685b      	ldr	r3, [r3, #4]
   1fd24:	fbb2 f3f3 	udiv	r3, r2, r3
   1fd28:	b29b      	uxth	r3, r3
   1fd2a:	637b      	str	r3, [r7, #52]	; 0x34
        break;
   1fd2c:	e2aa      	b.n	20284 <UART_SetConfig+0x22b4>
      case UART_CLOCKSOURCE_D2PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
   1fd2e:	f7fb ff73 	bl	1bc18 <HAL_RCC_GetPCLK2Freq>
   1fd32:	62b8      	str	r0, [r7, #40]	; 0x28
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1fd34:	687b      	ldr	r3, [r7, #4]
   1fd36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fd38:	2b00      	cmp	r3, #0
   1fd3a:	d044      	beq.n	1fdc6 <UART_SetConfig+0x1df6>
   1fd3c:	687b      	ldr	r3, [r7, #4]
   1fd3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fd40:	2b01      	cmp	r3, #1
   1fd42:	d03e      	beq.n	1fdc2 <UART_SetConfig+0x1df2>
   1fd44:	687b      	ldr	r3, [r7, #4]
   1fd46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fd48:	2b02      	cmp	r3, #2
   1fd4a:	d038      	beq.n	1fdbe <UART_SetConfig+0x1dee>
   1fd4c:	687b      	ldr	r3, [r7, #4]
   1fd4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fd50:	2b03      	cmp	r3, #3
   1fd52:	d032      	beq.n	1fdba <UART_SetConfig+0x1dea>
   1fd54:	687b      	ldr	r3, [r7, #4]
   1fd56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fd58:	2b04      	cmp	r3, #4
   1fd5a:	d02c      	beq.n	1fdb6 <UART_SetConfig+0x1de6>
   1fd5c:	687b      	ldr	r3, [r7, #4]
   1fd5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fd60:	2b05      	cmp	r3, #5
   1fd62:	d026      	beq.n	1fdb2 <UART_SetConfig+0x1de2>
   1fd64:	687b      	ldr	r3, [r7, #4]
   1fd66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fd68:	2b06      	cmp	r3, #6
   1fd6a:	d020      	beq.n	1fdae <UART_SetConfig+0x1dde>
   1fd6c:	687b      	ldr	r3, [r7, #4]
   1fd6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fd70:	2b07      	cmp	r3, #7
   1fd72:	d01a      	beq.n	1fdaa <UART_SetConfig+0x1dda>
   1fd74:	687b      	ldr	r3, [r7, #4]
   1fd76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fd78:	2b08      	cmp	r3, #8
   1fd7a:	d014      	beq.n	1fda6 <UART_SetConfig+0x1dd6>
   1fd7c:	687b      	ldr	r3, [r7, #4]
   1fd7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fd80:	2b09      	cmp	r3, #9
   1fd82:	d00e      	beq.n	1fda2 <UART_SetConfig+0x1dd2>
   1fd84:	687b      	ldr	r3, [r7, #4]
   1fd86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fd88:	2b0a      	cmp	r3, #10
   1fd8a:	d008      	beq.n	1fd9e <UART_SetConfig+0x1dce>
   1fd8c:	687b      	ldr	r3, [r7, #4]
   1fd8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fd90:	2b0b      	cmp	r3, #11
   1fd92:	d102      	bne.n	1fd9a <UART_SetConfig+0x1dca>
   1fd94:	f44f 7380 	mov.w	r3, #256	; 0x100
   1fd98:	e016      	b.n	1fdc8 <UART_SetConfig+0x1df8>
   1fd9a:	2301      	movs	r3, #1
   1fd9c:	e014      	b.n	1fdc8 <UART_SetConfig+0x1df8>
   1fd9e:	2380      	movs	r3, #128	; 0x80
   1fda0:	e012      	b.n	1fdc8 <UART_SetConfig+0x1df8>
   1fda2:	2340      	movs	r3, #64	; 0x40
   1fda4:	e010      	b.n	1fdc8 <UART_SetConfig+0x1df8>
   1fda6:	2320      	movs	r3, #32
   1fda8:	e00e      	b.n	1fdc8 <UART_SetConfig+0x1df8>
   1fdaa:	2310      	movs	r3, #16
   1fdac:	e00c      	b.n	1fdc8 <UART_SetConfig+0x1df8>
   1fdae:	230c      	movs	r3, #12
   1fdb0:	e00a      	b.n	1fdc8 <UART_SetConfig+0x1df8>
   1fdb2:	230a      	movs	r3, #10
   1fdb4:	e008      	b.n	1fdc8 <UART_SetConfig+0x1df8>
   1fdb6:	2308      	movs	r3, #8
   1fdb8:	e006      	b.n	1fdc8 <UART_SetConfig+0x1df8>
   1fdba:	2306      	movs	r3, #6
   1fdbc:	e004      	b.n	1fdc8 <UART_SetConfig+0x1df8>
   1fdbe:	2304      	movs	r3, #4
   1fdc0:	e002      	b.n	1fdc8 <UART_SetConfig+0x1df8>
   1fdc2:	2302      	movs	r3, #2
   1fdc4:	e000      	b.n	1fdc8 <UART_SetConfig+0x1df8>
   1fdc6:	2301      	movs	r3, #1
   1fdc8:	6aba      	ldr	r2, [r7, #40]	; 0x28
   1fdca:	fbb2 f2f3 	udiv	r2, r2, r3
   1fdce:	687b      	ldr	r3, [r7, #4]
   1fdd0:	685b      	ldr	r3, [r3, #4]
   1fdd2:	085b      	lsrs	r3, r3, #1
   1fdd4:	441a      	add	r2, r3
   1fdd6:	687b      	ldr	r3, [r7, #4]
   1fdd8:	685b      	ldr	r3, [r3, #4]
   1fdda:	fbb2 f3f3 	udiv	r3, r2, r3
   1fdde:	b29b      	uxth	r3, r3
   1fde0:	637b      	str	r3, [r7, #52]	; 0x34
        break;
   1fde2:	e24f      	b.n	20284 <UART_SetConfig+0x22b4>
      case UART_CLOCKSOURCE_PLL2:
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
   1fde4:	f107 0318 	add.w	r3, r7, #24
   1fde8:	4618      	mov	r0, r3
   1fdea:	f7fc fe1f 	bl	1ca2c <HAL_RCCEx_GetPLL2ClockFreq>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pll2_clocks.PLL2_Q_Frequency, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1fdee:	69fa      	ldr	r2, [r7, #28]
   1fdf0:	687b      	ldr	r3, [r7, #4]
   1fdf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fdf4:	2b00      	cmp	r3, #0
   1fdf6:	d044      	beq.n	1fe82 <UART_SetConfig+0x1eb2>
   1fdf8:	687b      	ldr	r3, [r7, #4]
   1fdfa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fdfc:	2b01      	cmp	r3, #1
   1fdfe:	d03e      	beq.n	1fe7e <UART_SetConfig+0x1eae>
   1fe00:	687b      	ldr	r3, [r7, #4]
   1fe02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fe04:	2b02      	cmp	r3, #2
   1fe06:	d038      	beq.n	1fe7a <UART_SetConfig+0x1eaa>
   1fe08:	687b      	ldr	r3, [r7, #4]
   1fe0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fe0c:	2b03      	cmp	r3, #3
   1fe0e:	d032      	beq.n	1fe76 <UART_SetConfig+0x1ea6>
   1fe10:	687b      	ldr	r3, [r7, #4]
   1fe12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fe14:	2b04      	cmp	r3, #4
   1fe16:	d02c      	beq.n	1fe72 <UART_SetConfig+0x1ea2>
   1fe18:	687b      	ldr	r3, [r7, #4]
   1fe1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fe1c:	2b05      	cmp	r3, #5
   1fe1e:	d026      	beq.n	1fe6e <UART_SetConfig+0x1e9e>
   1fe20:	687b      	ldr	r3, [r7, #4]
   1fe22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fe24:	2b06      	cmp	r3, #6
   1fe26:	d020      	beq.n	1fe6a <UART_SetConfig+0x1e9a>
   1fe28:	687b      	ldr	r3, [r7, #4]
   1fe2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fe2c:	2b07      	cmp	r3, #7
   1fe2e:	d01a      	beq.n	1fe66 <UART_SetConfig+0x1e96>
   1fe30:	687b      	ldr	r3, [r7, #4]
   1fe32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fe34:	2b08      	cmp	r3, #8
   1fe36:	d014      	beq.n	1fe62 <UART_SetConfig+0x1e92>
   1fe38:	687b      	ldr	r3, [r7, #4]
   1fe3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fe3c:	2b09      	cmp	r3, #9
   1fe3e:	d00e      	beq.n	1fe5e <UART_SetConfig+0x1e8e>
   1fe40:	687b      	ldr	r3, [r7, #4]
   1fe42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fe44:	2b0a      	cmp	r3, #10
   1fe46:	d008      	beq.n	1fe5a <UART_SetConfig+0x1e8a>
   1fe48:	687b      	ldr	r3, [r7, #4]
   1fe4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fe4c:	2b0b      	cmp	r3, #11
   1fe4e:	d102      	bne.n	1fe56 <UART_SetConfig+0x1e86>
   1fe50:	f44f 7380 	mov.w	r3, #256	; 0x100
   1fe54:	e016      	b.n	1fe84 <UART_SetConfig+0x1eb4>
   1fe56:	2301      	movs	r3, #1
   1fe58:	e014      	b.n	1fe84 <UART_SetConfig+0x1eb4>
   1fe5a:	2380      	movs	r3, #128	; 0x80
   1fe5c:	e012      	b.n	1fe84 <UART_SetConfig+0x1eb4>
   1fe5e:	2340      	movs	r3, #64	; 0x40
   1fe60:	e010      	b.n	1fe84 <UART_SetConfig+0x1eb4>
   1fe62:	2320      	movs	r3, #32
   1fe64:	e00e      	b.n	1fe84 <UART_SetConfig+0x1eb4>
   1fe66:	2310      	movs	r3, #16
   1fe68:	e00c      	b.n	1fe84 <UART_SetConfig+0x1eb4>
   1fe6a:	230c      	movs	r3, #12
   1fe6c:	e00a      	b.n	1fe84 <UART_SetConfig+0x1eb4>
   1fe6e:	230a      	movs	r3, #10
   1fe70:	e008      	b.n	1fe84 <UART_SetConfig+0x1eb4>
   1fe72:	2308      	movs	r3, #8
   1fe74:	e006      	b.n	1fe84 <UART_SetConfig+0x1eb4>
   1fe76:	2306      	movs	r3, #6
   1fe78:	e004      	b.n	1fe84 <UART_SetConfig+0x1eb4>
   1fe7a:	2304      	movs	r3, #4
   1fe7c:	e002      	b.n	1fe84 <UART_SetConfig+0x1eb4>
   1fe7e:	2302      	movs	r3, #2
   1fe80:	e000      	b.n	1fe84 <UART_SetConfig+0x1eb4>
   1fe82:	2301      	movs	r3, #1
   1fe84:	fbb2 f2f3 	udiv	r2, r2, r3
   1fe88:	687b      	ldr	r3, [r7, #4]
   1fe8a:	685b      	ldr	r3, [r3, #4]
   1fe8c:	085b      	lsrs	r3, r3, #1
   1fe8e:	441a      	add	r2, r3
   1fe90:	687b      	ldr	r3, [r7, #4]
   1fe92:	685b      	ldr	r3, [r3, #4]
   1fe94:	fbb2 f3f3 	udiv	r3, r2, r3
   1fe98:	b29b      	uxth	r3, r3
   1fe9a:	637b      	str	r3, [r7, #52]	; 0x34
        break;
   1fe9c:	e1f2      	b.n	20284 <UART_SetConfig+0x22b4>
      case UART_CLOCKSOURCE_PLL3:
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
   1fe9e:	f107 030c 	add.w	r3, r7, #12
   1fea2:	4618      	mov	r0, r3
   1fea4:	f7fc ff0e 	bl	1ccc4 <HAL_RCCEx_GetPLL3ClockFreq>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pll3_clocks.PLL3_Q_Frequency, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1fea8:	693a      	ldr	r2, [r7, #16]
   1feaa:	687b      	ldr	r3, [r7, #4]
   1feac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1feae:	2b00      	cmp	r3, #0
   1feb0:	d044      	beq.n	1ff3c <UART_SetConfig+0x1f6c>
   1feb2:	687b      	ldr	r3, [r7, #4]
   1feb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1feb6:	2b01      	cmp	r3, #1
   1feb8:	d03e      	beq.n	1ff38 <UART_SetConfig+0x1f68>
   1feba:	687b      	ldr	r3, [r7, #4]
   1febc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1febe:	2b02      	cmp	r3, #2
   1fec0:	d038      	beq.n	1ff34 <UART_SetConfig+0x1f64>
   1fec2:	687b      	ldr	r3, [r7, #4]
   1fec4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fec6:	2b03      	cmp	r3, #3
   1fec8:	d032      	beq.n	1ff30 <UART_SetConfig+0x1f60>
   1feca:	687b      	ldr	r3, [r7, #4]
   1fecc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fece:	2b04      	cmp	r3, #4
   1fed0:	d02c      	beq.n	1ff2c <UART_SetConfig+0x1f5c>
   1fed2:	687b      	ldr	r3, [r7, #4]
   1fed4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fed6:	2b05      	cmp	r3, #5
   1fed8:	d026      	beq.n	1ff28 <UART_SetConfig+0x1f58>
   1feda:	687b      	ldr	r3, [r7, #4]
   1fedc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fede:	2b06      	cmp	r3, #6
   1fee0:	d020      	beq.n	1ff24 <UART_SetConfig+0x1f54>
   1fee2:	687b      	ldr	r3, [r7, #4]
   1fee4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fee6:	2b07      	cmp	r3, #7
   1fee8:	d01a      	beq.n	1ff20 <UART_SetConfig+0x1f50>
   1feea:	687b      	ldr	r3, [r7, #4]
   1feec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1feee:	2b08      	cmp	r3, #8
   1fef0:	d014      	beq.n	1ff1c <UART_SetConfig+0x1f4c>
   1fef2:	687b      	ldr	r3, [r7, #4]
   1fef4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fef6:	2b09      	cmp	r3, #9
   1fef8:	d00e      	beq.n	1ff18 <UART_SetConfig+0x1f48>
   1fefa:	687b      	ldr	r3, [r7, #4]
   1fefc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1fefe:	2b0a      	cmp	r3, #10
   1ff00:	d008      	beq.n	1ff14 <UART_SetConfig+0x1f44>
   1ff02:	687b      	ldr	r3, [r7, #4]
   1ff04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ff06:	2b0b      	cmp	r3, #11
   1ff08:	d102      	bne.n	1ff10 <UART_SetConfig+0x1f40>
   1ff0a:	f44f 7380 	mov.w	r3, #256	; 0x100
   1ff0e:	e016      	b.n	1ff3e <UART_SetConfig+0x1f6e>
   1ff10:	2301      	movs	r3, #1
   1ff12:	e014      	b.n	1ff3e <UART_SetConfig+0x1f6e>
   1ff14:	2380      	movs	r3, #128	; 0x80
   1ff16:	e012      	b.n	1ff3e <UART_SetConfig+0x1f6e>
   1ff18:	2340      	movs	r3, #64	; 0x40
   1ff1a:	e010      	b.n	1ff3e <UART_SetConfig+0x1f6e>
   1ff1c:	2320      	movs	r3, #32
   1ff1e:	e00e      	b.n	1ff3e <UART_SetConfig+0x1f6e>
   1ff20:	2310      	movs	r3, #16
   1ff22:	e00c      	b.n	1ff3e <UART_SetConfig+0x1f6e>
   1ff24:	230c      	movs	r3, #12
   1ff26:	e00a      	b.n	1ff3e <UART_SetConfig+0x1f6e>
   1ff28:	230a      	movs	r3, #10
   1ff2a:	e008      	b.n	1ff3e <UART_SetConfig+0x1f6e>
   1ff2c:	2308      	movs	r3, #8
   1ff2e:	e006      	b.n	1ff3e <UART_SetConfig+0x1f6e>
   1ff30:	2306      	movs	r3, #6
   1ff32:	e004      	b.n	1ff3e <UART_SetConfig+0x1f6e>
   1ff34:	2304      	movs	r3, #4
   1ff36:	e002      	b.n	1ff3e <UART_SetConfig+0x1f6e>
   1ff38:	2302      	movs	r3, #2
   1ff3a:	e000      	b.n	1ff3e <UART_SetConfig+0x1f6e>
   1ff3c:	2301      	movs	r3, #1
   1ff3e:	fbb2 f2f3 	udiv	r2, r2, r3
   1ff42:	687b      	ldr	r3, [r7, #4]
   1ff44:	685b      	ldr	r3, [r3, #4]
   1ff46:	085b      	lsrs	r3, r3, #1
   1ff48:	441a      	add	r2, r3
   1ff4a:	687b      	ldr	r3, [r7, #4]
   1ff4c:	685b      	ldr	r3, [r3, #4]
   1ff4e:	fbb2 f3f3 	udiv	r3, r2, r3
   1ff52:	b29b      	uxth	r3, r3
   1ff54:	637b      	str	r3, [r7, #52]	; 0x34
        break;
   1ff56:	e195      	b.n	20284 <UART_SetConfig+0x22b4>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
   1ff58:	4b87      	ldr	r3, [pc, #540]	; (20178 <UART_SetConfig+0x21a8>)
   1ff5a:	681b      	ldr	r3, [r3, #0]
   1ff5c:	f003 0320 	and.w	r3, r3, #32
   1ff60:	2b00      	cmp	r3, #0
   1ff62:	d05d      	beq.n	20020 <UART_SetConfig+0x2050>
        {
          usartdiv = (uint16_t)(UART_DIV_SAMPLING16((HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U)), huart->Init.BaudRate, huart->Init.ClockPrescaler));
   1ff64:	4b84      	ldr	r3, [pc, #528]	; (20178 <UART_SetConfig+0x21a8>)
   1ff66:	681b      	ldr	r3, [r3, #0]
   1ff68:	08db      	lsrs	r3, r3, #3
   1ff6a:	f003 0303 	and.w	r3, r3, #3
   1ff6e:	4a83      	ldr	r2, [pc, #524]	; (2017c <UART_SetConfig+0x21ac>)
   1ff70:	40da      	lsrs	r2, r3
   1ff72:	687b      	ldr	r3, [r7, #4]
   1ff74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ff76:	2b00      	cmp	r3, #0
   1ff78:	d044      	beq.n	20004 <UART_SetConfig+0x2034>
   1ff7a:	687b      	ldr	r3, [r7, #4]
   1ff7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ff7e:	2b01      	cmp	r3, #1
   1ff80:	d03e      	beq.n	20000 <UART_SetConfig+0x2030>
   1ff82:	687b      	ldr	r3, [r7, #4]
   1ff84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ff86:	2b02      	cmp	r3, #2
   1ff88:	d038      	beq.n	1fffc <UART_SetConfig+0x202c>
   1ff8a:	687b      	ldr	r3, [r7, #4]
   1ff8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ff8e:	2b03      	cmp	r3, #3
   1ff90:	d032      	beq.n	1fff8 <UART_SetConfig+0x2028>
   1ff92:	687b      	ldr	r3, [r7, #4]
   1ff94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ff96:	2b04      	cmp	r3, #4
   1ff98:	d02c      	beq.n	1fff4 <UART_SetConfig+0x2024>
   1ff9a:	687b      	ldr	r3, [r7, #4]
   1ff9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ff9e:	2b05      	cmp	r3, #5
   1ffa0:	d026      	beq.n	1fff0 <UART_SetConfig+0x2020>
   1ffa2:	687b      	ldr	r3, [r7, #4]
   1ffa4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ffa6:	2b06      	cmp	r3, #6
   1ffa8:	d020      	beq.n	1ffec <UART_SetConfig+0x201c>
   1ffaa:	687b      	ldr	r3, [r7, #4]
   1ffac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ffae:	2b07      	cmp	r3, #7
   1ffb0:	d01a      	beq.n	1ffe8 <UART_SetConfig+0x2018>
   1ffb2:	687b      	ldr	r3, [r7, #4]
   1ffb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ffb6:	2b08      	cmp	r3, #8
   1ffb8:	d014      	beq.n	1ffe4 <UART_SetConfig+0x2014>
   1ffba:	687b      	ldr	r3, [r7, #4]
   1ffbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ffbe:	2b09      	cmp	r3, #9
   1ffc0:	d00e      	beq.n	1ffe0 <UART_SetConfig+0x2010>
   1ffc2:	687b      	ldr	r3, [r7, #4]
   1ffc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ffc6:	2b0a      	cmp	r3, #10
   1ffc8:	d008      	beq.n	1ffdc <UART_SetConfig+0x200c>
   1ffca:	687b      	ldr	r3, [r7, #4]
   1ffcc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   1ffce:	2b0b      	cmp	r3, #11
   1ffd0:	d102      	bne.n	1ffd8 <UART_SetConfig+0x2008>
   1ffd2:	f44f 7380 	mov.w	r3, #256	; 0x100
   1ffd6:	e016      	b.n	20006 <UART_SetConfig+0x2036>
   1ffd8:	2301      	movs	r3, #1
   1ffda:	e014      	b.n	20006 <UART_SetConfig+0x2036>
   1ffdc:	2380      	movs	r3, #128	; 0x80
   1ffde:	e012      	b.n	20006 <UART_SetConfig+0x2036>
   1ffe0:	2340      	movs	r3, #64	; 0x40
   1ffe2:	e010      	b.n	20006 <UART_SetConfig+0x2036>
   1ffe4:	2320      	movs	r3, #32
   1ffe6:	e00e      	b.n	20006 <UART_SetConfig+0x2036>
   1ffe8:	2310      	movs	r3, #16
   1ffea:	e00c      	b.n	20006 <UART_SetConfig+0x2036>
   1ffec:	230c      	movs	r3, #12
   1ffee:	e00a      	b.n	20006 <UART_SetConfig+0x2036>
   1fff0:	230a      	movs	r3, #10
   1fff2:	e008      	b.n	20006 <UART_SetConfig+0x2036>
   1fff4:	2308      	movs	r3, #8
   1fff6:	e006      	b.n	20006 <UART_SetConfig+0x2036>
   1fff8:	2306      	movs	r3, #6
   1fffa:	e004      	b.n	20006 <UART_SetConfig+0x2036>
   1fffc:	2304      	movs	r3, #4
   1fffe:	e002      	b.n	20006 <UART_SetConfig+0x2036>
   20000:	2302      	movs	r3, #2
   20002:	e000      	b.n	20006 <UART_SetConfig+0x2036>
   20004:	2301      	movs	r3, #1
   20006:	fbb2 f2f3 	udiv	r2, r2, r3
   2000a:	687b      	ldr	r3, [r7, #4]
   2000c:	685b      	ldr	r3, [r3, #4]
   2000e:	085b      	lsrs	r3, r3, #1
   20010:	441a      	add	r2, r3
   20012:	687b      	ldr	r3, [r7, #4]
   20014:	685b      	ldr	r3, [r3, #4]
   20016:	fbb2 f3f3 	udiv	r3, r2, r3
   2001a:	b29b      	uxth	r3, r3
   2001c:	637b      	str	r3, [r7, #52]	; 0x34
        }
        else
        {
          usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
        }
        break;
   2001e:	e131      	b.n	20284 <UART_SetConfig+0x22b4>
          usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   20020:	687b      	ldr	r3, [r7, #4]
   20022:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   20024:	2b00      	cmp	r3, #0
   20026:	d043      	beq.n	200b0 <UART_SetConfig+0x20e0>
   20028:	687b      	ldr	r3, [r7, #4]
   2002a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   2002c:	2b01      	cmp	r3, #1
   2002e:	d03d      	beq.n	200ac <UART_SetConfig+0x20dc>
   20030:	687b      	ldr	r3, [r7, #4]
   20032:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   20034:	2b02      	cmp	r3, #2
   20036:	d037      	beq.n	200a8 <UART_SetConfig+0x20d8>
   20038:	687b      	ldr	r3, [r7, #4]
   2003a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   2003c:	2b03      	cmp	r3, #3
   2003e:	d031      	beq.n	200a4 <UART_SetConfig+0x20d4>
   20040:	687b      	ldr	r3, [r7, #4]
   20042:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   20044:	2b04      	cmp	r3, #4
   20046:	d02b      	beq.n	200a0 <UART_SetConfig+0x20d0>
   20048:	687b      	ldr	r3, [r7, #4]
   2004a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   2004c:	2b05      	cmp	r3, #5
   2004e:	d025      	beq.n	2009c <UART_SetConfig+0x20cc>
   20050:	687b      	ldr	r3, [r7, #4]
   20052:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   20054:	2b06      	cmp	r3, #6
   20056:	d01f      	beq.n	20098 <UART_SetConfig+0x20c8>
   20058:	687b      	ldr	r3, [r7, #4]
   2005a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   2005c:	2b07      	cmp	r3, #7
   2005e:	d019      	beq.n	20094 <UART_SetConfig+0x20c4>
   20060:	687b      	ldr	r3, [r7, #4]
   20062:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   20064:	2b08      	cmp	r3, #8
   20066:	d013      	beq.n	20090 <UART_SetConfig+0x20c0>
   20068:	687b      	ldr	r3, [r7, #4]
   2006a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   2006c:	2b09      	cmp	r3, #9
   2006e:	d00d      	beq.n	2008c <UART_SetConfig+0x20bc>
   20070:	687b      	ldr	r3, [r7, #4]
   20072:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   20074:	2b0a      	cmp	r3, #10
   20076:	d007      	beq.n	20088 <UART_SetConfig+0x20b8>
   20078:	687b      	ldr	r3, [r7, #4]
   2007a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   2007c:	2b0b      	cmp	r3, #11
   2007e:	d101      	bne.n	20084 <UART_SetConfig+0x20b4>
   20080:	4b3f      	ldr	r3, [pc, #252]	; (20180 <UART_SetConfig+0x21b0>)
   20082:	e016      	b.n	200b2 <UART_SetConfig+0x20e2>
   20084:	4b3d      	ldr	r3, [pc, #244]	; (2017c <UART_SetConfig+0x21ac>)
   20086:	e014      	b.n	200b2 <UART_SetConfig+0x20e2>
   20088:	4b3e      	ldr	r3, [pc, #248]	; (20184 <UART_SetConfig+0x21b4>)
   2008a:	e012      	b.n	200b2 <UART_SetConfig+0x20e2>
   2008c:	4b3e      	ldr	r3, [pc, #248]	; (20188 <UART_SetConfig+0x21b8>)
   2008e:	e010      	b.n	200b2 <UART_SetConfig+0x20e2>
   20090:	4b3e      	ldr	r3, [pc, #248]	; (2018c <UART_SetConfig+0x21bc>)
   20092:	e00e      	b.n	200b2 <UART_SetConfig+0x20e2>
   20094:	4b3e      	ldr	r3, [pc, #248]	; (20190 <UART_SetConfig+0x21c0>)
   20096:	e00c      	b.n	200b2 <UART_SetConfig+0x20e2>
   20098:	4b3e      	ldr	r3, [pc, #248]	; (20194 <UART_SetConfig+0x21c4>)
   2009a:	e00a      	b.n	200b2 <UART_SetConfig+0x20e2>
   2009c:	4b3e      	ldr	r3, [pc, #248]	; (20198 <UART_SetConfig+0x21c8>)
   2009e:	e008      	b.n	200b2 <UART_SetConfig+0x20e2>
   200a0:	4b3e      	ldr	r3, [pc, #248]	; (2019c <UART_SetConfig+0x21cc>)
   200a2:	e006      	b.n	200b2 <UART_SetConfig+0x20e2>
   200a4:	4b3e      	ldr	r3, [pc, #248]	; (201a0 <UART_SetConfig+0x21d0>)
   200a6:	e004      	b.n	200b2 <UART_SetConfig+0x20e2>
   200a8:	4b3e      	ldr	r3, [pc, #248]	; (201a4 <UART_SetConfig+0x21d4>)
   200aa:	e002      	b.n	200b2 <UART_SetConfig+0x20e2>
   200ac:	4b3e      	ldr	r3, [pc, #248]	; (201a8 <UART_SetConfig+0x21d8>)
   200ae:	e000      	b.n	200b2 <UART_SetConfig+0x20e2>
   200b0:	4b32      	ldr	r3, [pc, #200]	; (2017c <UART_SetConfig+0x21ac>)
   200b2:	687a      	ldr	r2, [r7, #4]
   200b4:	6852      	ldr	r2, [r2, #4]
   200b6:	0852      	lsrs	r2, r2, #1
   200b8:	441a      	add	r2, r3
   200ba:	687b      	ldr	r3, [r7, #4]
   200bc:	685b      	ldr	r3, [r3, #4]
   200be:	fbb2 f3f3 	udiv	r3, r2, r3
   200c2:	b29b      	uxth	r3, r3
   200c4:	637b      	str	r3, [r7, #52]	; 0x34
        break;
   200c6:	e0dd      	b.n	20284 <UART_SetConfig+0x22b4>
      case UART_CLOCKSOURCE_CSI:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(CSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   200c8:	687b      	ldr	r3, [r7, #4]
   200ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   200cc:	2b00      	cmp	r3, #0
   200ce:	d046      	beq.n	2015e <UART_SetConfig+0x218e>
   200d0:	687b      	ldr	r3, [r7, #4]
   200d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   200d4:	2b01      	cmp	r3, #1
   200d6:	d040      	beq.n	2015a <UART_SetConfig+0x218a>
   200d8:	687b      	ldr	r3, [r7, #4]
   200da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   200dc:	2b02      	cmp	r3, #2
   200de:	d03a      	beq.n	20156 <UART_SetConfig+0x2186>
   200e0:	687b      	ldr	r3, [r7, #4]
   200e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   200e4:	2b03      	cmp	r3, #3
   200e6:	d034      	beq.n	20152 <UART_SetConfig+0x2182>
   200e8:	687b      	ldr	r3, [r7, #4]
   200ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   200ec:	2b04      	cmp	r3, #4
   200ee:	d02e      	beq.n	2014e <UART_SetConfig+0x217e>
   200f0:	687b      	ldr	r3, [r7, #4]
   200f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   200f4:	2b05      	cmp	r3, #5
   200f6:	d028      	beq.n	2014a <UART_SetConfig+0x217a>
   200f8:	687b      	ldr	r3, [r7, #4]
   200fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   200fc:	2b06      	cmp	r3, #6
   200fe:	d022      	beq.n	20146 <UART_SetConfig+0x2176>
   20100:	687b      	ldr	r3, [r7, #4]
   20102:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   20104:	2b07      	cmp	r3, #7
   20106:	d01c      	beq.n	20142 <UART_SetConfig+0x2172>
   20108:	687b      	ldr	r3, [r7, #4]
   2010a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   2010c:	2b08      	cmp	r3, #8
   2010e:	d016      	beq.n	2013e <UART_SetConfig+0x216e>
   20110:	687b      	ldr	r3, [r7, #4]
   20112:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   20114:	2b09      	cmp	r3, #9
   20116:	d00f      	beq.n	20138 <UART_SetConfig+0x2168>
   20118:	687b      	ldr	r3, [r7, #4]
   2011a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   2011c:	2b0a      	cmp	r3, #10
   2011e:	d008      	beq.n	20132 <UART_SetConfig+0x2162>
   20120:	687b      	ldr	r3, [r7, #4]
   20122:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   20124:	2b0b      	cmp	r3, #11
   20126:	d102      	bne.n	2012e <UART_SetConfig+0x215e>
   20128:	f643 5309 	movw	r3, #15625	; 0x3d09
   2012c:	e018      	b.n	20160 <UART_SetConfig+0x2190>
   2012e:	4b18      	ldr	r3, [pc, #96]	; (20190 <UART_SetConfig+0x21c0>)
   20130:	e016      	b.n	20160 <UART_SetConfig+0x2190>
   20132:	f647 2312 	movw	r3, #31250	; 0x7a12
   20136:	e013      	b.n	20160 <UART_SetConfig+0x2190>
   20138:	f24f 4324 	movw	r3, #62500	; 0xf424
   2013c:	e010      	b.n	20160 <UART_SetConfig+0x2190>
   2013e:	4b1b      	ldr	r3, [pc, #108]	; (201ac <UART_SetConfig+0x21dc>)
   20140:	e00e      	b.n	20160 <UART_SetConfig+0x2190>
   20142:	4b0f      	ldr	r3, [pc, #60]	; (20180 <UART_SetConfig+0x21b0>)
   20144:	e00c      	b.n	20160 <UART_SetConfig+0x2190>
   20146:	4b1a      	ldr	r3, [pc, #104]	; (201b0 <UART_SetConfig+0x21e0>)
   20148:	e00a      	b.n	20160 <UART_SetConfig+0x2190>
   2014a:	4b1a      	ldr	r3, [pc, #104]	; (201b4 <UART_SetConfig+0x21e4>)
   2014c:	e008      	b.n	20160 <UART_SetConfig+0x2190>
   2014e:	4b0d      	ldr	r3, [pc, #52]	; (20184 <UART_SetConfig+0x21b4>)
   20150:	e006      	b.n	20160 <UART_SetConfig+0x2190>
   20152:	4b19      	ldr	r3, [pc, #100]	; (201b8 <UART_SetConfig+0x21e8>)
   20154:	e004      	b.n	20160 <UART_SetConfig+0x2190>
   20156:	4b0c      	ldr	r3, [pc, #48]	; (20188 <UART_SetConfig+0x21b8>)
   20158:	e002      	b.n	20160 <UART_SetConfig+0x2190>
   2015a:	4b0c      	ldr	r3, [pc, #48]	; (2018c <UART_SetConfig+0x21bc>)
   2015c:	e000      	b.n	20160 <UART_SetConfig+0x2190>
   2015e:	4b0c      	ldr	r3, [pc, #48]	; (20190 <UART_SetConfig+0x21c0>)
   20160:	687a      	ldr	r2, [r7, #4]
   20162:	6852      	ldr	r2, [r2, #4]
   20164:	0852      	lsrs	r2, r2, #1
   20166:	441a      	add	r2, r3
   20168:	687b      	ldr	r3, [r7, #4]
   2016a:	685b      	ldr	r3, [r3, #4]
   2016c:	fbb2 f3f3 	udiv	r3, r2, r3
   20170:	b29b      	uxth	r3, r3
   20172:	637b      	str	r3, [r7, #52]	; 0x34
        break;
   20174:	e086      	b.n	20284 <UART_SetConfig+0x22b4>
   20176:	bf00      	nop
   20178:	58024400 	.word	0x58024400
   2017c:	03d09000 	.word	0x03d09000
   20180:	0003d090 	.word	0x0003d090
   20184:	0007a120 	.word	0x0007a120
   20188:	000f4240 	.word	0x000f4240
   2018c:	001e8480 	.word	0x001e8480
   20190:	003d0900 	.word	0x003d0900
   20194:	00516155 	.word	0x00516155
   20198:	0061a800 	.word	0x0061a800
   2019c:	007a1200 	.word	0x007a1200
   201a0:	00a2c2aa 	.word	0x00a2c2aa
   201a4:	00f42400 	.word	0x00f42400
   201a8:	01e84800 	.word	0x01e84800
   201ac:	0001e848 	.word	0x0001e848
   201b0:	00051615 	.word	0x00051615
   201b4:	00061a80 	.word	0x00061a80
   201b8:	000a2c2a 	.word	0x000a2c2a
      case UART_CLOCKSOURCE_LSE:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
   201bc:	687b      	ldr	r3, [r7, #4]
   201be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   201c0:	2b00      	cmp	r3, #0
   201c2:	d04e      	beq.n	20262 <UART_SetConfig+0x2292>
   201c4:	687b      	ldr	r3, [r7, #4]
   201c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   201c8:	2b01      	cmp	r3, #1
   201ca:	d047      	beq.n	2025c <UART_SetConfig+0x228c>
   201cc:	687b      	ldr	r3, [r7, #4]
   201ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   201d0:	2b02      	cmp	r3, #2
   201d2:	d040      	beq.n	20256 <UART_SetConfig+0x2286>
   201d4:	687b      	ldr	r3, [r7, #4]
   201d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   201d8:	2b03      	cmp	r3, #3
   201da:	d039      	beq.n	20250 <UART_SetConfig+0x2280>
   201dc:	687b      	ldr	r3, [r7, #4]
   201de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   201e0:	2b04      	cmp	r3, #4
   201e2:	d032      	beq.n	2024a <UART_SetConfig+0x227a>
   201e4:	687b      	ldr	r3, [r7, #4]
   201e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   201e8:	2b05      	cmp	r3, #5
   201ea:	d02b      	beq.n	20244 <UART_SetConfig+0x2274>
   201ec:	687b      	ldr	r3, [r7, #4]
   201ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   201f0:	2b06      	cmp	r3, #6
   201f2:	d024      	beq.n	2023e <UART_SetConfig+0x226e>
   201f4:	687b      	ldr	r3, [r7, #4]
   201f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   201f8:	2b07      	cmp	r3, #7
   201fa:	d01d      	beq.n	20238 <UART_SetConfig+0x2268>
   201fc:	687b      	ldr	r3, [r7, #4]
   201fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   20200:	2b08      	cmp	r3, #8
   20202:	d016      	beq.n	20232 <UART_SetConfig+0x2262>
   20204:	687b      	ldr	r3, [r7, #4]
   20206:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   20208:	2b09      	cmp	r3, #9
   2020a:	d00f      	beq.n	2022c <UART_SetConfig+0x225c>
   2020c:	687b      	ldr	r3, [r7, #4]
   2020e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   20210:	2b0a      	cmp	r3, #10
   20212:	d008      	beq.n	20226 <UART_SetConfig+0x2256>
   20214:	687b      	ldr	r3, [r7, #4]
   20216:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   20218:	2b0b      	cmp	r3, #11
   2021a:	d101      	bne.n	20220 <UART_SetConfig+0x2250>
   2021c:	2380      	movs	r3, #128	; 0x80
   2021e:	e022      	b.n	20266 <UART_SetConfig+0x2296>
   20220:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   20224:	e01f      	b.n	20266 <UART_SetConfig+0x2296>
   20226:	f44f 7380 	mov.w	r3, #256	; 0x100
   2022a:	e01c      	b.n	20266 <UART_SetConfig+0x2296>
   2022c:	f44f 7300 	mov.w	r3, #512	; 0x200
   20230:	e019      	b.n	20266 <UART_SetConfig+0x2296>
   20232:	f44f 6380 	mov.w	r3, #1024	; 0x400
   20236:	e016      	b.n	20266 <UART_SetConfig+0x2296>
   20238:	f44f 6300 	mov.w	r3, #2048	; 0x800
   2023c:	e013      	b.n	20266 <UART_SetConfig+0x2296>
   2023e:	f640 23aa 	movw	r3, #2730	; 0xaaa
   20242:	e010      	b.n	20266 <UART_SetConfig+0x2296>
   20244:	f640 43cc 	movw	r3, #3276	; 0xccc
   20248:	e00d      	b.n	20266 <UART_SetConfig+0x2296>
   2024a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   2024e:	e00a      	b.n	20266 <UART_SetConfig+0x2296>
   20250:	f241 5355 	movw	r3, #5461	; 0x1555
   20254:	e007      	b.n	20266 <UART_SetConfig+0x2296>
   20256:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   2025a:	e004      	b.n	20266 <UART_SetConfig+0x2296>
   2025c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
   20260:	e001      	b.n	20266 <UART_SetConfig+0x2296>
   20262:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   20266:	687a      	ldr	r2, [r7, #4]
   20268:	6852      	ldr	r2, [r2, #4]
   2026a:	0852      	lsrs	r2, r2, #1
   2026c:	441a      	add	r2, r3
   2026e:	687b      	ldr	r3, [r7, #4]
   20270:	685b      	ldr	r3, [r3, #4]
   20272:	fbb2 f3f3 	udiv	r3, r2, r3
   20276:	b29b      	uxth	r3, r3
   20278:	637b      	str	r3, [r7, #52]	; 0x34
        break;
   2027a:	e003      	b.n	20284 <UART_SetConfig+0x22b4>
      default:
        ret = HAL_ERROR;
   2027c:	2301      	movs	r3, #1
   2027e:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
        break;
   20282:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
   20284:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   20286:	2b0f      	cmp	r3, #15
   20288:	d908      	bls.n	2029c <UART_SetConfig+0x22cc>
   2028a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
   2028c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   20290:	d204      	bcs.n	2029c <UART_SetConfig+0x22cc>
    {
      huart->Instance->BRR = usartdiv;
   20292:	687b      	ldr	r3, [r7, #4]
   20294:	681b      	ldr	r3, [r3, #0]
   20296:	6b7a      	ldr	r2, [r7, #52]	; 0x34
   20298:	60da      	str	r2, [r3, #12]
   2029a:	e002      	b.n	202a2 <UART_SetConfig+0x22d2>
    }
    else
    {
      ret = HAL_ERROR;
   2029c:	2301      	movs	r3, #1
   2029e:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
    }
  }

  /* Initialize the number of data to process during RX/TX ISR execution */
  huart->NbTxDataToProcess = 1;
   202a2:	687b      	ldr	r3, [r7, #4]
   202a4:	2201      	movs	r2, #1
   202a6:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
  huart->NbRxDataToProcess = 1;
   202aa:	687b      	ldr	r3, [r7, #4]
   202ac:	2201      	movs	r2, #1
   202ae:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68

  /* Clear ISR function pointers */
  huart->RxISR = NULL;
   202b2:	687b      	ldr	r3, [r7, #4]
   202b4:	2200      	movs	r2, #0
   202b6:	66da      	str	r2, [r3, #108]	; 0x6c
  huart->TxISR = NULL;
   202b8:	687b      	ldr	r3, [r7, #4]
   202ba:	2200      	movs	r2, #0
   202bc:	671a      	str	r2, [r3, #112]	; 0x70

  return ret;
   202be:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
}
   202c2:	4618      	mov	r0, r3
   202c4:	3740      	adds	r7, #64	; 0x40
   202c6:	46bd      	mov	sp, r7
   202c8:	e8bd 8890 	ldmia.w	sp!, {r4, r7, fp, pc}

000202cc <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
   202cc:	b480      	push	{r7}
   202ce:	b083      	sub	sp, #12
   202d0:	af00      	add	r7, sp, #0
   202d2:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
   202d4:	687b      	ldr	r3, [r7, #4]
   202d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   202d8:	f003 0301 	and.w	r3, r3, #1
   202dc:	2b00      	cmp	r3, #0
   202de:	d00a      	beq.n	202f6 <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
   202e0:	687b      	ldr	r3, [r7, #4]
   202e2:	681b      	ldr	r3, [r3, #0]
   202e4:	685b      	ldr	r3, [r3, #4]
   202e6:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
   202ea:	687b      	ldr	r3, [r7, #4]
   202ec:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   202ee:	687b      	ldr	r3, [r7, #4]
   202f0:	681b      	ldr	r3, [r3, #0]
   202f2:	430a      	orrs	r2, r1
   202f4:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
   202f6:	687b      	ldr	r3, [r7, #4]
   202f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   202fa:	f003 0302 	and.w	r3, r3, #2
   202fe:	2b00      	cmp	r3, #0
   20300:	d00a      	beq.n	20318 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
   20302:	687b      	ldr	r3, [r7, #4]
   20304:	681b      	ldr	r3, [r3, #0]
   20306:	685b      	ldr	r3, [r3, #4]
   20308:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
   2030c:	687b      	ldr	r3, [r7, #4]
   2030e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   20310:	687b      	ldr	r3, [r7, #4]
   20312:	681b      	ldr	r3, [r3, #0]
   20314:	430a      	orrs	r2, r1
   20316:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
   20318:	687b      	ldr	r3, [r7, #4]
   2031a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   2031c:	f003 0304 	and.w	r3, r3, #4
   20320:	2b00      	cmp	r3, #0
   20322:	d00a      	beq.n	2033a <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
   20324:	687b      	ldr	r3, [r7, #4]
   20326:	681b      	ldr	r3, [r3, #0]
   20328:	685b      	ldr	r3, [r3, #4]
   2032a:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
   2032e:	687b      	ldr	r3, [r7, #4]
   20330:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   20332:	687b      	ldr	r3, [r7, #4]
   20334:	681b      	ldr	r3, [r3, #0]
   20336:	430a      	orrs	r2, r1
   20338:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
   2033a:	687b      	ldr	r3, [r7, #4]
   2033c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   2033e:	f003 0308 	and.w	r3, r3, #8
   20342:	2b00      	cmp	r3, #0
   20344:	d00a      	beq.n	2035c <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
   20346:	687b      	ldr	r3, [r7, #4]
   20348:	681b      	ldr	r3, [r3, #0]
   2034a:	685b      	ldr	r3, [r3, #4]
   2034c:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
   20350:	687b      	ldr	r3, [r7, #4]
   20352:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   20354:	687b      	ldr	r3, [r7, #4]
   20356:	681b      	ldr	r3, [r3, #0]
   20358:	430a      	orrs	r2, r1
   2035a:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
   2035c:	687b      	ldr	r3, [r7, #4]
   2035e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   20360:	f003 0310 	and.w	r3, r3, #16
   20364:	2b00      	cmp	r3, #0
   20366:	d00a      	beq.n	2037e <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
   20368:	687b      	ldr	r3, [r7, #4]
   2036a:	681b      	ldr	r3, [r3, #0]
   2036c:	689b      	ldr	r3, [r3, #8]
   2036e:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
   20372:	687b      	ldr	r3, [r7, #4]
   20374:	6bda      	ldr	r2, [r3, #60]	; 0x3c
   20376:	687b      	ldr	r3, [r7, #4]
   20378:	681b      	ldr	r3, [r3, #0]
   2037a:	430a      	orrs	r2, r1
   2037c:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
   2037e:	687b      	ldr	r3, [r7, #4]
   20380:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   20382:	f003 0320 	and.w	r3, r3, #32
   20386:	2b00      	cmp	r3, #0
   20388:	d00a      	beq.n	203a0 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
   2038a:	687b      	ldr	r3, [r7, #4]
   2038c:	681b      	ldr	r3, [r3, #0]
   2038e:	689b      	ldr	r3, [r3, #8]
   20390:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
   20394:	687b      	ldr	r3, [r7, #4]
   20396:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   20398:	687b      	ldr	r3, [r7, #4]
   2039a:	681b      	ldr	r3, [r3, #0]
   2039c:	430a      	orrs	r2, r1
   2039e:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
   203a0:	687b      	ldr	r3, [r7, #4]
   203a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   203a4:	f003 0340 	and.w	r3, r3, #64	; 0x40
   203a8:	2b00      	cmp	r3, #0
   203aa:	d01a      	beq.n	203e2 <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
   203ac:	687b      	ldr	r3, [r7, #4]
   203ae:	681b      	ldr	r3, [r3, #0]
   203b0:	685b      	ldr	r3, [r3, #4]
   203b2:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
   203b6:	687b      	ldr	r3, [r7, #4]
   203b8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
   203ba:	687b      	ldr	r3, [r7, #4]
   203bc:	681b      	ldr	r3, [r3, #0]
   203be:	430a      	orrs	r2, r1
   203c0:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
   203c2:	687b      	ldr	r3, [r7, #4]
   203c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
   203c6:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   203ca:	d10a      	bne.n	203e2 <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
   203cc:	687b      	ldr	r3, [r7, #4]
   203ce:	681b      	ldr	r3, [r3, #0]
   203d0:	685b      	ldr	r3, [r3, #4]
   203d2:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
   203d6:	687b      	ldr	r3, [r7, #4]
   203d8:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   203da:	687b      	ldr	r3, [r7, #4]
   203dc:	681b      	ldr	r3, [r3, #0]
   203de:	430a      	orrs	r2, r1
   203e0:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
   203e2:	687b      	ldr	r3, [r7, #4]
   203e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   203e6:	f003 0380 	and.w	r3, r3, #128	; 0x80
   203ea:	2b00      	cmp	r3, #0
   203ec:	d00a      	beq.n	20404 <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
   203ee:	687b      	ldr	r3, [r7, #4]
   203f0:	681b      	ldr	r3, [r3, #0]
   203f2:	685b      	ldr	r3, [r3, #4]
   203f4:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
   203f8:	687b      	ldr	r3, [r7, #4]
   203fa:	6cda      	ldr	r2, [r3, #76]	; 0x4c
   203fc:	687b      	ldr	r3, [r7, #4]
   203fe:	681b      	ldr	r3, [r3, #0]
   20400:	430a      	orrs	r2, r1
   20402:	605a      	str	r2, [r3, #4]
  }
}
   20404:	bf00      	nop
   20406:	370c      	adds	r7, #12
   20408:	46bd      	mov	sp, r7
   2040a:	f85d 7b04 	ldr.w	r7, [sp], #4
   2040e:	4770      	bx	lr

00020410 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
   20410:	b580      	push	{r7, lr}
   20412:	b086      	sub	sp, #24
   20414:	af02      	add	r7, sp, #8
   20416:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
   20418:	687b      	ldr	r3, [r7, #4]
   2041a:	2200      	movs	r2, #0
   2041c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Init tickstart for timeout managment*/
  tickstart = HAL_GetTick();
   20420:	f7f9 fda8 	bl	19f74 <HAL_GetTick>
   20424:	60f8      	str	r0, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
   20426:	687b      	ldr	r3, [r7, #4]
   20428:	681b      	ldr	r3, [r3, #0]
   2042a:	681b      	ldr	r3, [r3, #0]
   2042c:	f003 0308 	and.w	r3, r3, #8
   20430:	2b08      	cmp	r3, #8
   20432:	d10e      	bne.n	20452 <UART_CheckIdleState+0x42>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
   20434:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
   20438:	9300      	str	r3, [sp, #0]
   2043a:	68fb      	ldr	r3, [r7, #12]
   2043c:	2200      	movs	r2, #0
   2043e:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
   20442:	6878      	ldr	r0, [r7, #4]
   20444:	f000 f82c 	bl	204a0 <UART_WaitOnFlagUntilTimeout>
   20448:	4603      	mov	r3, r0
   2044a:	2b00      	cmp	r3, #0
   2044c:	d001      	beq.n	20452 <UART_CheckIdleState+0x42>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
   2044e:	2303      	movs	r3, #3
   20450:	e022      	b.n	20498 <UART_CheckIdleState+0x88>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
   20452:	687b      	ldr	r3, [r7, #4]
   20454:	681b      	ldr	r3, [r3, #0]
   20456:	681b      	ldr	r3, [r3, #0]
   20458:	f003 0304 	and.w	r3, r3, #4
   2045c:	2b04      	cmp	r3, #4
   2045e:	d10e      	bne.n	2047e <UART_CheckIdleState+0x6e>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
   20460:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
   20464:	9300      	str	r3, [sp, #0]
   20466:	68fb      	ldr	r3, [r7, #12]
   20468:	2200      	movs	r2, #0
   2046a:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
   2046e:	6878      	ldr	r0, [r7, #4]
   20470:	f000 f816 	bl	204a0 <UART_WaitOnFlagUntilTimeout>
   20474:	4603      	mov	r3, r0
   20476:	2b00      	cmp	r3, #0
   20478:	d001      	beq.n	2047e <UART_CheckIdleState+0x6e>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
   2047a:	2303      	movs	r3, #3
   2047c:	e00c      	b.n	20498 <UART_CheckIdleState+0x88>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
   2047e:	687b      	ldr	r3, [r7, #4]
   20480:	2220      	movs	r2, #32
   20482:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  huart->RxState = HAL_UART_STATE_READY;
   20486:	687b      	ldr	r3, [r7, #4]
   20488:	2220      	movs	r2, #32
   2048a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84

  __HAL_UNLOCK(huart);
   2048e:	687b      	ldr	r3, [r7, #4]
   20490:	2200      	movs	r2, #0
   20492:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

  return HAL_OK;
   20496:	2300      	movs	r3, #0
}
   20498:	4618      	mov	r0, r3
   2049a:	3710      	adds	r7, #16
   2049c:	46bd      	mov	sp, r7
   2049e:	bd80      	pop	{r7, pc}

000204a0 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
   204a0:	b580      	push	{r7, lr}
   204a2:	b084      	sub	sp, #16
   204a4:	af00      	add	r7, sp, #0
   204a6:	60f8      	str	r0, [r7, #12]
   204a8:	60b9      	str	r1, [r7, #8]
   204aa:	603b      	str	r3, [r7, #0]
   204ac:	4613      	mov	r3, r2
   204ae:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
   204b0:	e062      	b.n	20578 <UART_WaitOnFlagUntilTimeout+0xd8>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
   204b2:	69bb      	ldr	r3, [r7, #24]
   204b4:	f1b3 3fff 	cmp.w	r3, #4294967295
   204b8:	d05e      	beq.n	20578 <UART_WaitOnFlagUntilTimeout+0xd8>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
   204ba:	f7f9 fd5b 	bl	19f74 <HAL_GetTick>
   204be:	4602      	mov	r2, r0
   204c0:	683b      	ldr	r3, [r7, #0]
   204c2:	1ad3      	subs	r3, r2, r3
   204c4:	69ba      	ldr	r2, [r7, #24]
   204c6:	429a      	cmp	r2, r3
   204c8:	d302      	bcc.n	204d0 <UART_WaitOnFlagUntilTimeout+0x30>
   204ca:	69bb      	ldr	r3, [r7, #24]
   204cc:	2b00      	cmp	r3, #0
   204ce:	d11d      	bne.n	2050c <UART_WaitOnFlagUntilTimeout+0x6c>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
   204d0:	68fb      	ldr	r3, [r7, #12]
   204d2:	681b      	ldr	r3, [r3, #0]
   204d4:	681a      	ldr	r2, [r3, #0]
   204d6:	68fb      	ldr	r3, [r7, #12]
   204d8:	681b      	ldr	r3, [r3, #0]
   204da:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
   204de:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
   204e0:	68fb      	ldr	r3, [r7, #12]
   204e2:	681b      	ldr	r3, [r3, #0]
   204e4:	689a      	ldr	r2, [r3, #8]
   204e6:	68fb      	ldr	r3, [r7, #12]
   204e8:	681b      	ldr	r3, [r3, #0]
   204ea:	f022 0201 	bic.w	r2, r2, #1
   204ee:	609a      	str	r2, [r3, #8]

        huart->gState = HAL_UART_STATE_READY;
   204f0:	68fb      	ldr	r3, [r7, #12]
   204f2:	2220      	movs	r2, #32
   204f4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        huart->RxState = HAL_UART_STATE_READY;
   204f8:	68fb      	ldr	r3, [r7, #12]
   204fa:	2220      	movs	r2, #32
   204fc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84

        __HAL_UNLOCK(huart);
   20500:	68fb      	ldr	r3, [r7, #12]
   20502:	2200      	movs	r2, #0
   20504:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

        return HAL_TIMEOUT;
   20508:	2303      	movs	r3, #3
   2050a:	e045      	b.n	20598 <UART_WaitOnFlagUntilTimeout+0xf8>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
   2050c:	68fb      	ldr	r3, [r7, #12]
   2050e:	681b      	ldr	r3, [r3, #0]
   20510:	681b      	ldr	r3, [r3, #0]
   20512:	f003 0304 	and.w	r3, r3, #4
   20516:	2b00      	cmp	r3, #0
   20518:	d02e      	beq.n	20578 <UART_WaitOnFlagUntilTimeout+0xd8>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
   2051a:	68fb      	ldr	r3, [r7, #12]
   2051c:	681b      	ldr	r3, [r3, #0]
   2051e:	69db      	ldr	r3, [r3, #28]
   20520:	f403 6300 	and.w	r3, r3, #2048	; 0x800
   20524:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
   20528:	d126      	bne.n	20578 <UART_WaitOnFlagUntilTimeout+0xd8>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
   2052a:	68fb      	ldr	r3, [r7, #12]
   2052c:	681b      	ldr	r3, [r3, #0]
   2052e:	f44f 6200 	mov.w	r2, #2048	; 0x800
   20532:	621a      	str	r2, [r3, #32]
          
          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
   20534:	68fb      	ldr	r3, [r7, #12]
   20536:	681b      	ldr	r3, [r3, #0]
   20538:	681a      	ldr	r2, [r3, #0]
   2053a:	68fb      	ldr	r3, [r7, #12]
   2053c:	681b      	ldr	r3, [r3, #0]
   2053e:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
   20542:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
   20544:	68fb      	ldr	r3, [r7, #12]
   20546:	681b      	ldr	r3, [r3, #0]
   20548:	689a      	ldr	r2, [r3, #8]
   2054a:	68fb      	ldr	r3, [r7, #12]
   2054c:	681b      	ldr	r3, [r3, #0]
   2054e:	f022 0201 	bic.w	r2, r2, #1
   20552:	609a      	str	r2, [r3, #8]

          huart->gState = HAL_UART_STATE_READY;
   20554:	68fb      	ldr	r3, [r7, #12]
   20556:	2220      	movs	r2, #32
   20558:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
          huart->RxState = HAL_UART_STATE_READY;
   2055c:	68fb      	ldr	r3, [r7, #12]
   2055e:	2220      	movs	r2, #32
   20560:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          huart->ErrorCode = HAL_UART_ERROR_RTO;
   20564:	68fb      	ldr	r3, [r7, #12]
   20566:	2220      	movs	r2, #32
   20568:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
          
          /* Process Unlocked */
          __HAL_UNLOCK(huart);
   2056c:	68fb      	ldr	r3, [r7, #12]
   2056e:	2200      	movs	r2, #0
   20570:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
          
          return HAL_TIMEOUT;
   20574:	2303      	movs	r3, #3
   20576:	e00f      	b.n	20598 <UART_WaitOnFlagUntilTimeout+0xf8>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
   20578:	68fb      	ldr	r3, [r7, #12]
   2057a:	681b      	ldr	r3, [r3, #0]
   2057c:	69da      	ldr	r2, [r3, #28]
   2057e:	68bb      	ldr	r3, [r7, #8]
   20580:	4013      	ands	r3, r2
   20582:	68ba      	ldr	r2, [r7, #8]
   20584:	429a      	cmp	r2, r3
   20586:	bf0c      	ite	eq
   20588:	2301      	moveq	r3, #1
   2058a:	2300      	movne	r3, #0
   2058c:	b2db      	uxtb	r3, r3
   2058e:	461a      	mov	r2, r3
   20590:	79fb      	ldrb	r3, [r7, #7]
   20592:	429a      	cmp	r2, r3
   20594:	d08d      	beq.n	204b2 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
   20596:	2300      	movs	r3, #0
}
   20598:	4618      	mov	r0, r3
   2059a:	3710      	adds	r7, #16
   2059c:	46bd      	mov	sp, r7
   2059e:	bd80      	pop	{r7, pc}

000205a0 <HAL_UARTEx_DisableFifoMode>:
  * @brief  Disable the FIFO mode.
  * @param huart      UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_DisableFifoMode(UART_HandleTypeDef *huart)
{
   205a0:	b480      	push	{r7}
   205a2:	b085      	sub	sp, #20
   205a4:	af00      	add	r7, sp, #0
   205a6:	6078      	str	r0, [r7, #4]

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
   205a8:	687b      	ldr	r3, [r7, #4]
   205aa:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
   205ae:	2b01      	cmp	r3, #1
   205b0:	d101      	bne.n	205b6 <HAL_UARTEx_DisableFifoMode+0x16>
   205b2:	2302      	movs	r3, #2
   205b4:	e027      	b.n	20606 <HAL_UARTEx_DisableFifoMode+0x66>
   205b6:	687b      	ldr	r3, [r7, #4]
   205b8:	2201      	movs	r2, #1
   205ba:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

  huart->gState = HAL_UART_STATE_BUSY;
   205be:	687b      	ldr	r3, [r7, #4]
   205c0:	2224      	movs	r2, #36	; 0x24
   205c2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
   205c6:	687b      	ldr	r3, [r7, #4]
   205c8:	681b      	ldr	r3, [r3, #0]
   205ca:	681b      	ldr	r3, [r3, #0]
   205cc:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
   205ce:	687b      	ldr	r3, [r7, #4]
   205d0:	681b      	ldr	r3, [r3, #0]
   205d2:	681a      	ldr	r2, [r3, #0]
   205d4:	687b      	ldr	r3, [r7, #4]
   205d6:	681b      	ldr	r3, [r3, #0]
   205d8:	f022 0201 	bic.w	r2, r2, #1
   205dc:	601a      	str	r2, [r3, #0]

  /* Enable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
   205de:	68fb      	ldr	r3, [r7, #12]
   205e0:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
   205e4:	60fb      	str	r3, [r7, #12]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
   205e6:	687b      	ldr	r3, [r7, #4]
   205e8:	2200      	movs	r2, #0
   205ea:	665a      	str	r2, [r3, #100]	; 0x64

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
   205ec:	687b      	ldr	r3, [r7, #4]
   205ee:	681b      	ldr	r3, [r3, #0]
   205f0:	68fa      	ldr	r2, [r7, #12]
   205f2:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
   205f4:	687b      	ldr	r3, [r7, #4]
   205f6:	2220      	movs	r2, #32
   205f8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
   205fc:	687b      	ldr	r3, [r7, #4]
   205fe:	2200      	movs	r2, #0
   20600:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

  return HAL_OK;
   20604:	2300      	movs	r3, #0
}
   20606:	4618      	mov	r0, r3
   20608:	3714      	adds	r7, #20
   2060a:	46bd      	mov	sp, r7
   2060c:	f85d 7b04 	ldr.w	r7, [sp], #4
   20610:	4770      	bx	lr

00020612 <HAL_UARTEx_SetTxFifoThreshold>:
  *            @arg @ref UART_TXFIFO_THRESHOLD_7_8
  *            @arg @ref UART_TXFIFO_THRESHOLD_8_8
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_SetTxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
{
   20612:	b580      	push	{r7, lr}
   20614:	b084      	sub	sp, #16
   20616:	af00      	add	r7, sp, #0
   20618:	6078      	str	r0, [r7, #4]
   2061a:	6039      	str	r1, [r7, #0]
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
   2061c:	687b      	ldr	r3, [r7, #4]
   2061e:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
   20622:	2b01      	cmp	r3, #1
   20624:	d101      	bne.n	2062a <HAL_UARTEx_SetTxFifoThreshold+0x18>
   20626:	2302      	movs	r3, #2
   20628:	e02d      	b.n	20686 <HAL_UARTEx_SetTxFifoThreshold+0x74>
   2062a:	687b      	ldr	r3, [r7, #4]
   2062c:	2201      	movs	r2, #1
   2062e:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

  huart->gState = HAL_UART_STATE_BUSY;
   20632:	687b      	ldr	r3, [r7, #4]
   20634:	2224      	movs	r2, #36	; 0x24
   20636:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
   2063a:	687b      	ldr	r3, [r7, #4]
   2063c:	681b      	ldr	r3, [r3, #0]
   2063e:	681b      	ldr	r3, [r3, #0]
   20640:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
   20642:	687b      	ldr	r3, [r7, #4]
   20644:	681b      	ldr	r3, [r3, #0]
   20646:	681a      	ldr	r2, [r3, #0]
   20648:	687b      	ldr	r3, [r7, #4]
   2064a:	681b      	ldr	r3, [r3, #0]
   2064c:	f022 0201 	bic.w	r2, r2, #1
   20650:	601a      	str	r2, [r3, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
   20652:	687b      	ldr	r3, [r7, #4]
   20654:	681b      	ldr	r3, [r3, #0]
   20656:	689b      	ldr	r3, [r3, #8]
   20658:	f023 4160 	bic.w	r1, r3, #3758096384	; 0xe0000000
   2065c:	687b      	ldr	r3, [r7, #4]
   2065e:	681b      	ldr	r3, [r3, #0]
   20660:	683a      	ldr	r2, [r7, #0]
   20662:	430a      	orrs	r2, r1
   20664:	609a      	str	r2, [r3, #8]

  /* Determine the number of data to process during RX/TX ISR execution */
  UARTEx_SetNbDataToProcess(huart);
   20666:	6878      	ldr	r0, [r7, #4]
   20668:	f000 f850 	bl	2070c <UARTEx_SetNbDataToProcess>

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
   2066c:	687b      	ldr	r3, [r7, #4]
   2066e:	681b      	ldr	r3, [r3, #0]
   20670:	68fa      	ldr	r2, [r7, #12]
   20672:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
   20674:	687b      	ldr	r3, [r7, #4]
   20676:	2220      	movs	r2, #32
   20678:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
   2067c:	687b      	ldr	r3, [r7, #4]
   2067e:	2200      	movs	r2, #0
   20680:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

  return HAL_OK;
   20684:	2300      	movs	r3, #0
}
   20686:	4618      	mov	r0, r3
   20688:	3710      	adds	r7, #16
   2068a:	46bd      	mov	sp, r7
   2068c:	bd80      	pop	{r7, pc}

0002068e <HAL_UARTEx_SetRxFifoThreshold>:
  *            @arg @ref UART_RXFIFO_THRESHOLD_7_8
  *            @arg @ref UART_RXFIFO_THRESHOLD_8_8
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_SetRxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
{
   2068e:	b580      	push	{r7, lr}
   20690:	b084      	sub	sp, #16
   20692:	af00      	add	r7, sp, #0
   20694:	6078      	str	r0, [r7, #4]
   20696:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
   20698:	687b      	ldr	r3, [r7, #4]
   2069a:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
   2069e:	2b01      	cmp	r3, #1
   206a0:	d101      	bne.n	206a6 <HAL_UARTEx_SetRxFifoThreshold+0x18>
   206a2:	2302      	movs	r3, #2
   206a4:	e02d      	b.n	20702 <HAL_UARTEx_SetRxFifoThreshold+0x74>
   206a6:	687b      	ldr	r3, [r7, #4]
   206a8:	2201      	movs	r2, #1
   206aa:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

  huart->gState = HAL_UART_STATE_BUSY;
   206ae:	687b      	ldr	r3, [r7, #4]
   206b0:	2224      	movs	r2, #36	; 0x24
   206b2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
   206b6:	687b      	ldr	r3, [r7, #4]
   206b8:	681b      	ldr	r3, [r3, #0]
   206ba:	681b      	ldr	r3, [r3, #0]
   206bc:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
   206be:	687b      	ldr	r3, [r7, #4]
   206c0:	681b      	ldr	r3, [r3, #0]
   206c2:	681a      	ldr	r2, [r3, #0]
   206c4:	687b      	ldr	r3, [r7, #4]
   206c6:	681b      	ldr	r3, [r3, #0]
   206c8:	f022 0201 	bic.w	r2, r2, #1
   206cc:	601a      	str	r2, [r3, #0]

  /* Update RX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
   206ce:	687b      	ldr	r3, [r7, #4]
   206d0:	681b      	ldr	r3, [r3, #0]
   206d2:	689b      	ldr	r3, [r3, #8]
   206d4:	f023 6160 	bic.w	r1, r3, #234881024	; 0xe000000
   206d8:	687b      	ldr	r3, [r7, #4]
   206da:	681b      	ldr	r3, [r3, #0]
   206dc:	683a      	ldr	r2, [r7, #0]
   206de:	430a      	orrs	r2, r1
   206e0:	609a      	str	r2, [r3, #8]

  /* Determine the number of data to process during RX/TX ISR execution */
  UARTEx_SetNbDataToProcess(huart);
   206e2:	6878      	ldr	r0, [r7, #4]
   206e4:	f000 f812 	bl	2070c <UARTEx_SetNbDataToProcess>

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
   206e8:	687b      	ldr	r3, [r7, #4]
   206ea:	681b      	ldr	r3, [r3, #0]
   206ec:	68fa      	ldr	r2, [r7, #12]
   206ee:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
   206f0:	687b      	ldr	r3, [r7, #4]
   206f2:	2220      	movs	r2, #32
   206f4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
   206f8:	687b      	ldr	r3, [r7, #4]
   206fa:	2200      	movs	r2, #0
   206fc:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

  return HAL_OK;
   20700:	2300      	movs	r3, #0
}
   20702:	4618      	mov	r0, r3
   20704:	3710      	adds	r7, #16
   20706:	46bd      	mov	sp, r7
   20708:	bd80      	pop	{r7, pc}
	...

0002070c <UARTEx_SetNbDataToProcess>:
  *       the UART configuration registers.
  * @param huart UART handle.
  * @retval None
  */
static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart)
{
   2070c:	b480      	push	{r7}
   2070e:	b089      	sub	sp, #36	; 0x24
   20710:	af00      	add	r7, sp, #0
   20712:	6078      	str	r0, [r7, #4]
  uint8_t rx_fifo_depth;
  uint8_t tx_fifo_depth;
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
   20714:	4a2f      	ldr	r2, [pc, #188]	; (207d4 <UARTEx_SetNbDataToProcess+0xc8>)
   20716:	f107 0314 	add.w	r3, r7, #20
   2071a:	e892 0003 	ldmia.w	r2, {r0, r1}
   2071e:	e883 0003 	stmia.w	r3, {r0, r1}
  uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};
   20722:	4a2d      	ldr	r2, [pc, #180]	; (207d8 <UARTEx_SetNbDataToProcess+0xcc>)
   20724:	f107 030c 	add.w	r3, r7, #12
   20728:	e892 0003 	ldmia.w	r2, {r0, r1}
   2072c:	e883 0003 	stmia.w	r3, {r0, r1}

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
   20730:	687b      	ldr	r3, [r7, #4]
   20732:	6e5b      	ldr	r3, [r3, #100]	; 0x64
   20734:	2b00      	cmp	r3, #0
   20736:	d108      	bne.n	2074a <UARTEx_SetNbDataToProcess+0x3e>
  {
    huart->NbTxDataToProcess = 1U;
   20738:	687b      	ldr	r3, [r7, #4]
   2073a:	2201      	movs	r2, #1
   2073c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
    huart->NbRxDataToProcess = 1U;
   20740:	687b      	ldr	r3, [r7, #4]
   20742:	2201      	movs	r2, #1
   20744:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t)denominator[rx_fifo_threshold];
  }
}
   20748:	e03d      	b.n	207c6 <UARTEx_SetNbDataToProcess+0xba>
    rx_fifo_depth = RX_FIFO_DEPTH;
   2074a:	2308      	movs	r3, #8
   2074c:	77fb      	strb	r3, [r7, #31]
    tx_fifo_depth = TX_FIFO_DEPTH;
   2074e:	2308      	movs	r3, #8
   20750:	77bb      	strb	r3, [r7, #30]
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
   20752:	687b      	ldr	r3, [r7, #4]
   20754:	681b      	ldr	r3, [r3, #0]
   20756:	689b      	ldr	r3, [r3, #8]
   20758:	0e5b      	lsrs	r3, r3, #25
   2075a:	b2db      	uxtb	r3, r3
   2075c:	f003 0307 	and.w	r3, r3, #7
   20760:	777b      	strb	r3, [r7, #29]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
   20762:	687b      	ldr	r3, [r7, #4]
   20764:	681b      	ldr	r3, [r3, #0]
   20766:	689b      	ldr	r3, [r3, #8]
   20768:	0f5b      	lsrs	r3, r3, #29
   2076a:	b2db      	uxtb	r3, r3
   2076c:	f003 0307 	and.w	r3, r3, #7
   20770:	773b      	strb	r3, [r7, #28]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
   20772:	7fbb      	ldrb	r3, [r7, #30]
   20774:	7f3a      	ldrb	r2, [r7, #28]
   20776:	f107 0120 	add.w	r1, r7, #32
   2077a:	440a      	add	r2, r1
   2077c:	f812 2c0c 	ldrb.w	r2, [r2, #-12]
   20780:	fb02 f303 	mul.w	r3, r2, r3
   20784:	7f3a      	ldrb	r2, [r7, #28]
   20786:	f107 0120 	add.w	r1, r7, #32
   2078a:	440a      	add	r2, r1
   2078c:	f812 2c14 	ldrb.w	r2, [r2, #-20]
   20790:	fb93 f3f2 	sdiv	r3, r3, r2
   20794:	b29a      	uxth	r2, r3
   20796:	687b      	ldr	r3, [r7, #4]
   20798:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t)denominator[rx_fifo_threshold];
   2079c:	7ffb      	ldrb	r3, [r7, #31]
   2079e:	7f7a      	ldrb	r2, [r7, #29]
   207a0:	f107 0120 	add.w	r1, r7, #32
   207a4:	440a      	add	r2, r1
   207a6:	f812 2c0c 	ldrb.w	r2, [r2, #-12]
   207aa:	fb02 f303 	mul.w	r3, r2, r3
   207ae:	7f7a      	ldrb	r2, [r7, #29]
   207b0:	f107 0120 	add.w	r1, r7, #32
   207b4:	440a      	add	r2, r1
   207b6:	f812 2c14 	ldrb.w	r2, [r2, #-20]
   207ba:	fb93 f3f2 	sdiv	r3, r3, r2
   207be:	b29a      	uxth	r2, r3
   207c0:	687b      	ldr	r3, [r7, #4]
   207c2:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
}
   207c6:	bf00      	nop
   207c8:	3724      	adds	r7, #36	; 0x24
   207ca:	46bd      	mov	sp, r7
   207cc:	f85d 7b04 	ldr.w	r7, [sp], #4
   207d0:	4770      	bx	lr
   207d2:	bf00      	nop
   207d4:	00023ea4 	.word	0x00023ea4
   207d8:	00023eac 	.word	0x00023eac

000207dc <USB_CoreInit>:
  * @param  cfg pointer to a USB_OTG_CfgTypeDef structure that contains
  *         the configuration information for the specified USBx peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef USB_CoreInit(USB_OTG_GlobalTypeDef *USBx, USB_OTG_CfgTypeDef cfg)
{
   207dc:	b084      	sub	sp, #16
   207de:	b580      	push	{r7, lr}
   207e0:	b084      	sub	sp, #16
   207e2:	af00      	add	r7, sp, #0
   207e4:	6078      	str	r0, [r7, #4]
   207e6:	f107 001c 	add.w	r0, r7, #28
   207ea:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  HAL_StatusTypeDef ret;

  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
   207ee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   207f0:	2b01      	cmp	r3, #1
   207f2:	d120      	bne.n	20836 <USB_CoreInit+0x5a>
  {
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
   207f4:	687b      	ldr	r3, [r7, #4]
   207f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   207f8:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
   207fc:	687b      	ldr	r3, [r7, #4]
   207fe:	639a      	str	r2, [r3, #56]	; 0x38

    /* Init The ULPI Interface */
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
   20800:	687b      	ldr	r3, [r7, #4]
   20802:	68da      	ldr	r2, [r3, #12]
   20804:	4b25      	ldr	r3, [pc, #148]	; (2089c <USB_CoreInit+0xc0>)
   20806:	4013      	ands	r3, r2
   20808:	687a      	ldr	r2, [r7, #4]
   2080a:	60d3      	str	r3, [r2, #12]

    /* Select vbus source */
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
   2080c:	687b      	ldr	r3, [r7, #4]
   2080e:	68db      	ldr	r3, [r3, #12]
   20810:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
   20814:	687b      	ldr	r3, [r7, #4]
   20816:	60da      	str	r2, [r3, #12]
    if (cfg.use_external_vbus == 1U)
   20818:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   2081a:	2b01      	cmp	r3, #1
   2081c:	d105      	bne.n	2082a <USB_CoreInit+0x4e>
    {
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
   2081e:	687b      	ldr	r3, [r7, #4]
   20820:	68db      	ldr	r3, [r3, #12]
   20822:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
   20826:	687b      	ldr	r3, [r7, #4]
   20828:	60da      	str	r2, [r3, #12]
    }
    /* Reset after a PHY select  */
    ret = USB_CoreReset(USBx);
   2082a:	6878      	ldr	r0, [r7, #4]
   2082c:	f001 f826 	bl	2187c <USB_CoreReset>
   20830:	4603      	mov	r3, r0
   20832:	73fb      	strb	r3, [r7, #15]
   20834:	e01a      	b.n	2086c <USB_CoreInit+0x90>
  }
  else /* FS interface (embedded Phy) */
  {
    /* Select FS Embedded PHY */
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
   20836:	687b      	ldr	r3, [r7, #4]
   20838:	68db      	ldr	r3, [r3, #12]
   2083a:	f043 0240 	orr.w	r2, r3, #64	; 0x40
   2083e:	687b      	ldr	r3, [r7, #4]
   20840:	60da      	str	r2, [r3, #12]

    /* Reset after a PHY select and set Host mode */
    ret = USB_CoreReset(USBx);
   20842:	6878      	ldr	r0, [r7, #4]
   20844:	f001 f81a 	bl	2187c <USB_CoreReset>
   20848:	4603      	mov	r3, r0
   2084a:	73fb      	strb	r3, [r7, #15]

    if (cfg.battery_charging_enable == 0U)
   2084c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   2084e:	2b00      	cmp	r3, #0
   20850:	d106      	bne.n	20860 <USB_CoreInit+0x84>
    {
      /* Activate the USB Transceiver */
      USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
   20852:	687b      	ldr	r3, [r7, #4]
   20854:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   20856:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
   2085a:	687b      	ldr	r3, [r7, #4]
   2085c:	639a      	str	r2, [r3, #56]	; 0x38
   2085e:	e005      	b.n	2086c <USB_CoreInit+0x90>
    }
    else
    {
      /* Deactivate the USB Transceiver */
      USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
   20860:	687b      	ldr	r3, [r7, #4]
   20862:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   20864:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
   20868:	687b      	ldr	r3, [r7, #4]
   2086a:	639a      	str	r2, [r3, #56]	; 0x38
    }
  }

  if (cfg.dma_enable == 1U)
   2086c:	6abb      	ldr	r3, [r7, #40]	; 0x28
   2086e:	2b01      	cmp	r3, #1
   20870:	d10b      	bne.n	2088a <USB_CoreInit+0xae>
  {
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
   20872:	687b      	ldr	r3, [r7, #4]
   20874:	689b      	ldr	r3, [r3, #8]
   20876:	f043 0206 	orr.w	r2, r3, #6
   2087a:	687b      	ldr	r3, [r7, #4]
   2087c:	609a      	str	r2, [r3, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
   2087e:	687b      	ldr	r3, [r7, #4]
   20880:	689b      	ldr	r3, [r3, #8]
   20882:	f043 0220 	orr.w	r2, r3, #32
   20886:	687b      	ldr	r3, [r7, #4]
   20888:	609a      	str	r2, [r3, #8]
  }

  return ret;
   2088a:	7bfb      	ldrb	r3, [r7, #15]
}
   2088c:	4618      	mov	r0, r3
   2088e:	3710      	adds	r7, #16
   20890:	46bd      	mov	sp, r7
   20892:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
   20896:	b004      	add	sp, #16
   20898:	4770      	bx	lr
   2089a:	bf00      	nop
   2089c:	ffbdffbf 	.word	0xffbdffbf

000208a0 <USB_EnableGlobalInt>:
  *         Enables the controller's Global Int in the AHB Config reg
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef USB_EnableGlobalInt(USB_OTG_GlobalTypeDef *USBx)
{
   208a0:	b480      	push	{r7}
   208a2:	b083      	sub	sp, #12
   208a4:	af00      	add	r7, sp, #0
   208a6:	6078      	str	r0, [r7, #4]
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
   208a8:	687b      	ldr	r3, [r7, #4]
   208aa:	689b      	ldr	r3, [r3, #8]
   208ac:	f043 0201 	orr.w	r2, r3, #1
   208b0:	687b      	ldr	r3, [r7, #4]
   208b2:	609a      	str	r2, [r3, #8]
  return HAL_OK;
   208b4:	2300      	movs	r3, #0
}
   208b6:	4618      	mov	r0, r3
   208b8:	370c      	adds	r7, #12
   208ba:	46bd      	mov	sp, r7
   208bc:	f85d 7b04 	ldr.w	r7, [sp], #4
   208c0:	4770      	bx	lr

000208c2 <USB_DisableGlobalInt>:
  *         Disable the controller's Global Int in the AHB Config reg
  * @param  USBx  Selected device
  * @retval HAL status
*/
HAL_StatusTypeDef USB_DisableGlobalInt(USB_OTG_GlobalTypeDef *USBx)
{
   208c2:	b480      	push	{r7}
   208c4:	b083      	sub	sp, #12
   208c6:	af00      	add	r7, sp, #0
   208c8:	6078      	str	r0, [r7, #4]
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
   208ca:	687b      	ldr	r3, [r7, #4]
   208cc:	689b      	ldr	r3, [r3, #8]
   208ce:	f023 0201 	bic.w	r2, r3, #1
   208d2:	687b      	ldr	r3, [r7, #4]
   208d4:	609a      	str	r2, [r3, #8]
  return HAL_OK;
   208d6:	2300      	movs	r3, #0
}
   208d8:	4618      	mov	r0, r3
   208da:	370c      	adds	r7, #12
   208dc:	46bd      	mov	sp, r7
   208de:	f85d 7b04 	ldr.w	r7, [sp], #4
   208e2:	4770      	bx	lr

000208e4 <USB_SetCurrentMode>:
  *            @arg USB_HOST_MODE: Host mode
  *            @arg USB_DRD_MODE: Dual Role Device mode
  * @retval HAL status
  */
HAL_StatusTypeDef USB_SetCurrentMode(USB_OTG_GlobalTypeDef *USBx, USB_OTG_ModeTypeDef mode)
{
   208e4:	b580      	push	{r7, lr}
   208e6:	b082      	sub	sp, #8
   208e8:	af00      	add	r7, sp, #0
   208ea:	6078      	str	r0, [r7, #4]
   208ec:	460b      	mov	r3, r1
   208ee:	70fb      	strb	r3, [r7, #3]
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
   208f0:	687b      	ldr	r3, [r7, #4]
   208f2:	68db      	ldr	r3, [r3, #12]
   208f4:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
   208f8:	687b      	ldr	r3, [r7, #4]
   208fa:	60da      	str	r2, [r3, #12]

  if (mode == USB_HOST_MODE)
   208fc:	78fb      	ldrb	r3, [r7, #3]
   208fe:	2b01      	cmp	r3, #1
   20900:	d106      	bne.n	20910 <USB_SetCurrentMode+0x2c>
  {
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
   20902:	687b      	ldr	r3, [r7, #4]
   20904:	68db      	ldr	r3, [r3, #12]
   20906:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
   2090a:	687b      	ldr	r3, [r7, #4]
   2090c:	60da      	str	r2, [r3, #12]
   2090e:	e00b      	b.n	20928 <USB_SetCurrentMode+0x44>
  }
  else if (mode == USB_DEVICE_MODE)
   20910:	78fb      	ldrb	r3, [r7, #3]
   20912:	2b00      	cmp	r3, #0
   20914:	d106      	bne.n	20924 <USB_SetCurrentMode+0x40>
  {
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
   20916:	687b      	ldr	r3, [r7, #4]
   20918:	68db      	ldr	r3, [r3, #12]
   2091a:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
   2091e:	687b      	ldr	r3, [r7, #4]
   20920:	60da      	str	r2, [r3, #12]
   20922:	e001      	b.n	20928 <USB_SetCurrentMode+0x44>
  }
  else
  {
    return HAL_ERROR;
   20924:	2301      	movs	r3, #1
   20926:	e003      	b.n	20930 <USB_SetCurrentMode+0x4c>
  }
  HAL_Delay(50U);
   20928:	2032      	movs	r0, #50	; 0x32
   2092a:	f7f9 fb2f 	bl	19f8c <HAL_Delay>

  return HAL_OK;
   2092e:	2300      	movs	r3, #0
}
   20930:	4618      	mov	r0, r3
   20932:	3708      	adds	r7, #8
   20934:	46bd      	mov	sp, r7
   20936:	bd80      	pop	{r7, pc}

00020938 <USB_DevInit>:
  * @param  cfg   pointer to a USB_OTG_CfgTypeDef structure that contains
  *         the configuration information for the specified USBx peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef USB_DevInit(USB_OTG_GlobalTypeDef *USBx, USB_OTG_CfgTypeDef cfg)
{
   20938:	b084      	sub	sp, #16
   2093a:	b580      	push	{r7, lr}
   2093c:	b086      	sub	sp, #24
   2093e:	af00      	add	r7, sp, #0
   20940:	6078      	str	r0, [r7, #4]
   20942:	f107 0024 	add.w	r0, r7, #36	; 0x24
   20946:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  HAL_StatusTypeDef ret = HAL_OK;
   2094a:	2300      	movs	r3, #0
   2094c:	75fb      	strb	r3, [r7, #23]
  uint32_t USBx_BASE = (uint32_t)USBx;
   2094e:	687b      	ldr	r3, [r7, #4]
   20950:	60fb      	str	r3, [r7, #12]
  uint32_t i;

  for (i = 0U; i < 15U; i++)
   20952:	2300      	movs	r3, #0
   20954:	613b      	str	r3, [r7, #16]
   20956:	e009      	b.n	2096c <USB_DevInit+0x34>
  {
    USBx->DIEPTXF[i] = 0U;
   20958:	687a      	ldr	r2, [r7, #4]
   2095a:	693b      	ldr	r3, [r7, #16]
   2095c:	3340      	adds	r3, #64	; 0x40
   2095e:	009b      	lsls	r3, r3, #2
   20960:	4413      	add	r3, r2
   20962:	2200      	movs	r2, #0
   20964:	605a      	str	r2, [r3, #4]
  for (i = 0U; i < 15U; i++)
   20966:	693b      	ldr	r3, [r7, #16]
   20968:	3301      	adds	r3, #1
   2096a:	613b      	str	r3, [r7, #16]
   2096c:	693b      	ldr	r3, [r7, #16]
   2096e:	2b0e      	cmp	r3, #14
   20970:	d9f2      	bls.n	20958 <USB_DevInit+0x20>
  }

  /* VBUS Sensing setup */
  if (cfg.vbus_sensing_enable == 0U)
   20972:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   20974:	2b00      	cmp	r3, #0
   20976:	d11c      	bne.n	209b2 <USB_DevInit+0x7a>
  {
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
   20978:	68fb      	ldr	r3, [r7, #12]
   2097a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   2097e:	685b      	ldr	r3, [r3, #4]
   20980:	68fa      	ldr	r2, [r7, #12]
   20982:	f502 6200 	add.w	r2, r2, #2048	; 0x800
   20986:	f043 0302 	orr.w	r3, r3, #2
   2098a:	6053      	str	r3, [r2, #4]

    /* Deactivate VBUS Sensing B */
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBDEN;
   2098c:	687b      	ldr	r3, [r7, #4]
   2098e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   20990:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
   20994:	687b      	ldr	r3, [r7, #4]
   20996:	639a      	str	r2, [r3, #56]	; 0x38

    /* B-peripheral session valid override enable */
    USBx->GOTGCTL |= USB_OTG_GOTGCTL_BVALOEN;
   20998:	687b      	ldr	r3, [r7, #4]
   2099a:	681b      	ldr	r3, [r3, #0]
   2099c:	f043 0240 	orr.w	r2, r3, #64	; 0x40
   209a0:	687b      	ldr	r3, [r7, #4]
   209a2:	601a      	str	r2, [r3, #0]
    USBx->GOTGCTL |= USB_OTG_GOTGCTL_BVALOVAL;
   209a4:	687b      	ldr	r3, [r7, #4]
   209a6:	681b      	ldr	r3, [r3, #0]
   209a8:	f043 0280 	orr.w	r2, r3, #128	; 0x80
   209ac:	687b      	ldr	r3, [r7, #4]
   209ae:	601a      	str	r2, [r3, #0]
   209b0:	e005      	b.n	209be <USB_DevInit+0x86>
  }
  else
  {
    /* Enable HW VBUS sensing */
    USBx->GCCFG |= USB_OTG_GCCFG_VBDEN;
   209b2:	687b      	ldr	r3, [r7, #4]
   209b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   209b6:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
   209ba:	687b      	ldr	r3, [r7, #4]
   209bc:	639a      	str	r2, [r3, #56]	; 0x38
  }

  /* Restart the Phy Clock */
  USBx_PCGCCTL = 0U;
   209be:	68fb      	ldr	r3, [r7, #12]
   209c0:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
   209c4:	461a      	mov	r2, r3
   209c6:	2300      	movs	r3, #0
   209c8:	6013      	str	r3, [r2, #0]

  /* Device mode configuration */
  USBx_DEVICE->DCFG |= DCFG_FRAME_INTERVAL_80;
   209ca:	68fb      	ldr	r3, [r7, #12]
   209cc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   209d0:	4619      	mov	r1, r3
   209d2:	68fb      	ldr	r3, [r7, #12]
   209d4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   209d8:	461a      	mov	r2, r3
   209da:	680b      	ldr	r3, [r1, #0]
   209dc:	6013      	str	r3, [r2, #0]

  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
   209de:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   209e0:	2b01      	cmp	r3, #1
   209e2:	d10c      	bne.n	209fe <USB_DevInit+0xc6>
  {
    if (cfg.speed == USBD_HS_SPEED)
   209e4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   209e6:	2b00      	cmp	r3, #0
   209e8:	d104      	bne.n	209f4 <USB_DevInit+0xbc>
    {
      /* Set Core speed to High speed mode */
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH);
   209ea:	2100      	movs	r1, #0
   209ec:	6878      	ldr	r0, [r7, #4]
   209ee:	f000 f949 	bl	20c84 <USB_SetDevSpeed>
   209f2:	e008      	b.n	20a06 <USB_DevInit+0xce>
    }
    else
    {
      /* Set Core speed to Full speed mode */
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
   209f4:	2101      	movs	r1, #1
   209f6:	6878      	ldr	r0, [r7, #4]
   209f8:	f000 f944 	bl	20c84 <USB_SetDevSpeed>
   209fc:	e003      	b.n	20a06 <USB_DevInit+0xce>
    }
  }
  else
  {
    /* Set Core speed to Full speed mode */
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
   209fe:	2103      	movs	r1, #3
   20a00:	6878      	ldr	r0, [r7, #4]
   20a02:	f000 f93f 	bl	20c84 <USB_SetDevSpeed>
  }

  /* Flush the FIFOs */
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
   20a06:	2110      	movs	r1, #16
   20a08:	6878      	ldr	r0, [r7, #4]
   20a0a:	f000 f8f3 	bl	20bf4 <USB_FlushTxFifo>
   20a0e:	4603      	mov	r3, r0
   20a10:	2b00      	cmp	r3, #0
   20a12:	d001      	beq.n	20a18 <USB_DevInit+0xe0>
  {
    ret = HAL_ERROR;
   20a14:	2301      	movs	r3, #1
   20a16:	75fb      	strb	r3, [r7, #23]
  }

  if (USB_FlushRxFifo(USBx) != HAL_OK)
   20a18:	6878      	ldr	r0, [r7, #4]
   20a1a:	f000 f911 	bl	20c40 <USB_FlushRxFifo>
   20a1e:	4603      	mov	r3, r0
   20a20:	2b00      	cmp	r3, #0
   20a22:	d001      	beq.n	20a28 <USB_DevInit+0xf0>
  {
    ret = HAL_ERROR;
   20a24:	2301      	movs	r3, #1
   20a26:	75fb      	strb	r3, [r7, #23]
  }

  /* Clear all pending Device Interrupts */
  USBx_DEVICE->DIEPMSK = 0U;
   20a28:	68fb      	ldr	r3, [r7, #12]
   20a2a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   20a2e:	461a      	mov	r2, r3
   20a30:	2300      	movs	r3, #0
   20a32:	6113      	str	r3, [r2, #16]
  USBx_DEVICE->DOEPMSK = 0U;
   20a34:	68fb      	ldr	r3, [r7, #12]
   20a36:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   20a3a:	461a      	mov	r2, r3
   20a3c:	2300      	movs	r3, #0
   20a3e:	6153      	str	r3, [r2, #20]
  USBx_DEVICE->DAINTMSK = 0U;
   20a40:	68fb      	ldr	r3, [r7, #12]
   20a42:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   20a46:	461a      	mov	r2, r3
   20a48:	2300      	movs	r3, #0
   20a4a:	61d3      	str	r3, [r2, #28]

  for (i = 0U; i < cfg.dev_endpoints; i++)
   20a4c:	2300      	movs	r3, #0
   20a4e:	613b      	str	r3, [r7, #16]
   20a50:	e043      	b.n	20ada <USB_DevInit+0x1a2>
  {
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
   20a52:	693b      	ldr	r3, [r7, #16]
   20a54:	015a      	lsls	r2, r3, #5
   20a56:	68fb      	ldr	r3, [r7, #12]
   20a58:	4413      	add	r3, r2
   20a5a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20a5e:	681b      	ldr	r3, [r3, #0]
   20a60:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
   20a64:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   20a68:	d118      	bne.n	20a9c <USB_DevInit+0x164>
    {
      if (i == 0U)
   20a6a:	693b      	ldr	r3, [r7, #16]
   20a6c:	2b00      	cmp	r3, #0
   20a6e:	d10a      	bne.n	20a86 <USB_DevInit+0x14e>
      {
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
   20a70:	693b      	ldr	r3, [r7, #16]
   20a72:	015a      	lsls	r2, r3, #5
   20a74:	68fb      	ldr	r3, [r7, #12]
   20a76:	4413      	add	r3, r2
   20a78:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20a7c:	461a      	mov	r2, r3
   20a7e:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   20a82:	6013      	str	r3, [r2, #0]
   20a84:	e013      	b.n	20aae <USB_DevInit+0x176>
      }
      else
      {
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
   20a86:	693b      	ldr	r3, [r7, #16]
   20a88:	015a      	lsls	r2, r3, #5
   20a8a:	68fb      	ldr	r3, [r7, #12]
   20a8c:	4413      	add	r3, r2
   20a8e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20a92:	461a      	mov	r2, r3
   20a94:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
   20a98:	6013      	str	r3, [r2, #0]
   20a9a:	e008      	b.n	20aae <USB_DevInit+0x176>
      }
    }
    else
    {
      USBx_INEP(i)->DIEPCTL = 0U;
   20a9c:	693b      	ldr	r3, [r7, #16]
   20a9e:	015a      	lsls	r2, r3, #5
   20aa0:	68fb      	ldr	r3, [r7, #12]
   20aa2:	4413      	add	r3, r2
   20aa4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20aa8:	461a      	mov	r2, r3
   20aaa:	2300      	movs	r3, #0
   20aac:	6013      	str	r3, [r2, #0]
    }

    USBx_INEP(i)->DIEPTSIZ = 0U;
   20aae:	693b      	ldr	r3, [r7, #16]
   20ab0:	015a      	lsls	r2, r3, #5
   20ab2:	68fb      	ldr	r3, [r7, #12]
   20ab4:	4413      	add	r3, r2
   20ab6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20aba:	461a      	mov	r2, r3
   20abc:	2300      	movs	r3, #0
   20abe:	6113      	str	r3, [r2, #16]
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
   20ac0:	693b      	ldr	r3, [r7, #16]
   20ac2:	015a      	lsls	r2, r3, #5
   20ac4:	68fb      	ldr	r3, [r7, #12]
   20ac6:	4413      	add	r3, r2
   20ac8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20acc:	461a      	mov	r2, r3
   20ace:	f64f 337f 	movw	r3, #64383	; 0xfb7f
   20ad2:	6093      	str	r3, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
   20ad4:	693b      	ldr	r3, [r7, #16]
   20ad6:	3301      	adds	r3, #1
   20ad8:	613b      	str	r3, [r7, #16]
   20ada:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   20adc:	693a      	ldr	r2, [r7, #16]
   20ade:	429a      	cmp	r2, r3
   20ae0:	d3b7      	bcc.n	20a52 <USB_DevInit+0x11a>
  }

  for (i = 0U; i < cfg.dev_endpoints; i++)
   20ae2:	2300      	movs	r3, #0
   20ae4:	613b      	str	r3, [r7, #16]
   20ae6:	e043      	b.n	20b70 <USB_DevInit+0x238>
  {
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
   20ae8:	693b      	ldr	r3, [r7, #16]
   20aea:	015a      	lsls	r2, r3, #5
   20aec:	68fb      	ldr	r3, [r7, #12]
   20aee:	4413      	add	r3, r2
   20af0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   20af4:	681b      	ldr	r3, [r3, #0]
   20af6:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
   20afa:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   20afe:	d118      	bne.n	20b32 <USB_DevInit+0x1fa>
    {
      if (i == 0U)
   20b00:	693b      	ldr	r3, [r7, #16]
   20b02:	2b00      	cmp	r3, #0
   20b04:	d10a      	bne.n	20b1c <USB_DevInit+0x1e4>
      {
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
   20b06:	693b      	ldr	r3, [r7, #16]
   20b08:	015a      	lsls	r2, r3, #5
   20b0a:	68fb      	ldr	r3, [r7, #12]
   20b0c:	4413      	add	r3, r2
   20b0e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   20b12:	461a      	mov	r2, r3
   20b14:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   20b18:	6013      	str	r3, [r2, #0]
   20b1a:	e013      	b.n	20b44 <USB_DevInit+0x20c>
      }
      else
      {
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
   20b1c:	693b      	ldr	r3, [r7, #16]
   20b1e:	015a      	lsls	r2, r3, #5
   20b20:	68fb      	ldr	r3, [r7, #12]
   20b22:	4413      	add	r3, r2
   20b24:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   20b28:	461a      	mov	r2, r3
   20b2a:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
   20b2e:	6013      	str	r3, [r2, #0]
   20b30:	e008      	b.n	20b44 <USB_DevInit+0x20c>
      }
    }
    else
    {
      USBx_OUTEP(i)->DOEPCTL = 0U;
   20b32:	693b      	ldr	r3, [r7, #16]
   20b34:	015a      	lsls	r2, r3, #5
   20b36:	68fb      	ldr	r3, [r7, #12]
   20b38:	4413      	add	r3, r2
   20b3a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   20b3e:	461a      	mov	r2, r3
   20b40:	2300      	movs	r3, #0
   20b42:	6013      	str	r3, [r2, #0]
    }

    USBx_OUTEP(i)->DOEPTSIZ = 0U;
   20b44:	693b      	ldr	r3, [r7, #16]
   20b46:	015a      	lsls	r2, r3, #5
   20b48:	68fb      	ldr	r3, [r7, #12]
   20b4a:	4413      	add	r3, r2
   20b4c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   20b50:	461a      	mov	r2, r3
   20b52:	2300      	movs	r3, #0
   20b54:	6113      	str	r3, [r2, #16]
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
   20b56:	693b      	ldr	r3, [r7, #16]
   20b58:	015a      	lsls	r2, r3, #5
   20b5a:	68fb      	ldr	r3, [r7, #12]
   20b5c:	4413      	add	r3, r2
   20b5e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   20b62:	461a      	mov	r2, r3
   20b64:	f64f 337f 	movw	r3, #64383	; 0xfb7f
   20b68:	6093      	str	r3, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
   20b6a:	693b      	ldr	r3, [r7, #16]
   20b6c:	3301      	adds	r3, #1
   20b6e:	613b      	str	r3, [r7, #16]
   20b70:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   20b72:	693a      	ldr	r2, [r7, #16]
   20b74:	429a      	cmp	r2, r3
   20b76:	d3b7      	bcc.n	20ae8 <USB_DevInit+0x1b0>
  }

  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
   20b78:	68fb      	ldr	r3, [r7, #12]
   20b7a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   20b7e:	691b      	ldr	r3, [r3, #16]
   20b80:	68fa      	ldr	r2, [r7, #12]
   20b82:	f502 6200 	add.w	r2, r2, #2048	; 0x800
   20b86:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   20b8a:	6113      	str	r3, [r2, #16]

  /* Disable all interrupts. */
  USBx->GINTMSK = 0U;
   20b8c:	687b      	ldr	r3, [r7, #4]
   20b8e:	2200      	movs	r2, #0
   20b90:	619a      	str	r2, [r3, #24]

  /* Clear any pending interrupts */
  USBx->GINTSTS = 0xBFFFFFFFU;
   20b92:	687b      	ldr	r3, [r7, #4]
   20b94:	f06f 4280 	mvn.w	r2, #1073741824	; 0x40000000
   20b98:	615a      	str	r2, [r3, #20]

  /* Enable the common interrupts */
  if (cfg.dma_enable == 0U)
   20b9a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   20b9c:	2b00      	cmp	r3, #0
   20b9e:	d105      	bne.n	20bac <USB_DevInit+0x274>
  {
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
   20ba0:	687b      	ldr	r3, [r7, #4]
   20ba2:	699b      	ldr	r3, [r3, #24]
   20ba4:	f043 0210 	orr.w	r2, r3, #16
   20ba8:	687b      	ldr	r3, [r7, #4]
   20baa:	619a      	str	r2, [r3, #24]
  }

  /* Enable interrupts matching to the Device mode ONLY */
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
   20bac:	687b      	ldr	r3, [r7, #4]
   20bae:	699a      	ldr	r2, [r3, #24]
   20bb0:	4b0e      	ldr	r3, [pc, #56]	; (20bec <USB_DevInit+0x2b4>)
   20bb2:	4313      	orrs	r3, r2
   20bb4:	687a      	ldr	r2, [r7, #4]
   20bb6:	6193      	str	r3, [r2, #24]
                   USB_OTG_GINTMSK_ENUMDNEM | USB_OTG_GINTMSK_IEPINT |
                   USB_OTG_GINTMSK_OEPINT   | USB_OTG_GINTMSK_IISOIXFRM |
                   USB_OTG_GINTMSK_PXFRM_IISOOXFRM | USB_OTG_GINTMSK_WUIM;

  if (cfg.Sof_enable != 0U)
   20bb8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   20bba:	2b00      	cmp	r3, #0
   20bbc:	d005      	beq.n	20bca <USB_DevInit+0x292>
  {
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
   20bbe:	687b      	ldr	r3, [r7, #4]
   20bc0:	699b      	ldr	r3, [r3, #24]
   20bc2:	f043 0208 	orr.w	r2, r3, #8
   20bc6:	687b      	ldr	r3, [r7, #4]
   20bc8:	619a      	str	r2, [r3, #24]
  }

  if (cfg.vbus_sensing_enable == 1U)
   20bca:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   20bcc:	2b01      	cmp	r3, #1
   20bce:	d105      	bne.n	20bdc <USB_DevInit+0x2a4>
  {
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
   20bd0:	687b      	ldr	r3, [r7, #4]
   20bd2:	699a      	ldr	r2, [r3, #24]
   20bd4:	4b06      	ldr	r3, [pc, #24]	; (20bf0 <USB_DevInit+0x2b8>)
   20bd6:	4313      	orrs	r3, r2
   20bd8:	687a      	ldr	r2, [r7, #4]
   20bda:	6193      	str	r3, [r2, #24]
  }

  return ret;
   20bdc:	7dfb      	ldrb	r3, [r7, #23]
}
   20bde:	4618      	mov	r0, r3
   20be0:	3718      	adds	r7, #24
   20be2:	46bd      	mov	sp, r7
   20be4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
   20be8:	b004      	add	sp, #16
   20bea:	4770      	bx	lr
   20bec:	803c3800 	.word	0x803c3800
   20bf0:	40000004 	.word	0x40000004

00020bf4 <USB_FlushTxFifo>:
  *         This parameter can be a value from 1 to 15
            15 means Flush all Tx FIFOs
  * @retval HAL status
  */
HAL_StatusTypeDef USB_FlushTxFifo(USB_OTG_GlobalTypeDef *USBx, uint32_t num)
{
   20bf4:	b480      	push	{r7}
   20bf6:	b085      	sub	sp, #20
   20bf8:	af00      	add	r7, sp, #0
   20bfa:	6078      	str	r0, [r7, #4]
   20bfc:	6039      	str	r1, [r7, #0]
  uint32_t count = 0U;
   20bfe:	2300      	movs	r3, #0
   20c00:	60fb      	str	r3, [r7, #12]

  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
   20c02:	683b      	ldr	r3, [r7, #0]
   20c04:	019b      	lsls	r3, r3, #6
   20c06:	f043 0220 	orr.w	r2, r3, #32
   20c0a:	687b      	ldr	r3, [r7, #4]
   20c0c:	611a      	str	r2, [r3, #16]

  do
  {
    if (++count > 200000U)
   20c0e:	68fb      	ldr	r3, [r7, #12]
   20c10:	3301      	adds	r3, #1
   20c12:	60fb      	str	r3, [r7, #12]
   20c14:	68fb      	ldr	r3, [r7, #12]
   20c16:	4a09      	ldr	r2, [pc, #36]	; (20c3c <USB_FlushTxFifo+0x48>)
   20c18:	4293      	cmp	r3, r2
   20c1a:	d901      	bls.n	20c20 <USB_FlushTxFifo+0x2c>
    {
      return HAL_TIMEOUT;
   20c1c:	2303      	movs	r3, #3
   20c1e:	e006      	b.n	20c2e <USB_FlushTxFifo+0x3a>
    }
  }
  while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
   20c20:	687b      	ldr	r3, [r7, #4]
   20c22:	691b      	ldr	r3, [r3, #16]
   20c24:	f003 0320 	and.w	r3, r3, #32
   20c28:	2b20      	cmp	r3, #32
   20c2a:	d0f0      	beq.n	20c0e <USB_FlushTxFifo+0x1a>

  return HAL_OK;
   20c2c:	2300      	movs	r3, #0
}
   20c2e:	4618      	mov	r0, r3
   20c30:	3714      	adds	r7, #20
   20c32:	46bd      	mov	sp, r7
   20c34:	f85d 7b04 	ldr.w	r7, [sp], #4
   20c38:	4770      	bx	lr
   20c3a:	bf00      	nop
   20c3c:	00030d40 	.word	0x00030d40

00020c40 <USB_FlushRxFifo>:
  * @brief  USB_FlushRxFifo : Flush Rx FIFO
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef USB_FlushRxFifo(USB_OTG_GlobalTypeDef *USBx)
{
   20c40:	b480      	push	{r7}
   20c42:	b085      	sub	sp, #20
   20c44:	af00      	add	r7, sp, #0
   20c46:	6078      	str	r0, [r7, #4]
  uint32_t count = 0;
   20c48:	2300      	movs	r3, #0
   20c4a:	60fb      	str	r3, [r7, #12]

  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
   20c4c:	687b      	ldr	r3, [r7, #4]
   20c4e:	2210      	movs	r2, #16
   20c50:	611a      	str	r2, [r3, #16]

  do
  {
    if (++count > 200000U)
   20c52:	68fb      	ldr	r3, [r7, #12]
   20c54:	3301      	adds	r3, #1
   20c56:	60fb      	str	r3, [r7, #12]
   20c58:	68fb      	ldr	r3, [r7, #12]
   20c5a:	4a09      	ldr	r2, [pc, #36]	; (20c80 <USB_FlushRxFifo+0x40>)
   20c5c:	4293      	cmp	r3, r2
   20c5e:	d901      	bls.n	20c64 <USB_FlushRxFifo+0x24>
    {
      return HAL_TIMEOUT;
   20c60:	2303      	movs	r3, #3
   20c62:	e006      	b.n	20c72 <USB_FlushRxFifo+0x32>
    }
  }
  while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
   20c64:	687b      	ldr	r3, [r7, #4]
   20c66:	691b      	ldr	r3, [r3, #16]
   20c68:	f003 0310 	and.w	r3, r3, #16
   20c6c:	2b10      	cmp	r3, #16
   20c6e:	d0f0      	beq.n	20c52 <USB_FlushRxFifo+0x12>

  return HAL_OK;
   20c70:	2300      	movs	r3, #0
}
   20c72:	4618      	mov	r0, r3
   20c74:	3714      	adds	r7, #20
   20c76:	46bd      	mov	sp, r7
   20c78:	f85d 7b04 	ldr.w	r7, [sp], #4
   20c7c:	4770      	bx	lr
   20c7e:	bf00      	nop
   20c80:	00030d40 	.word	0x00030d40

00020c84 <USB_SetDevSpeed>:
  *            @arg USB_OTG_SPEED_HIGH_IN_FULL: High speed core in Full Speed mode
  *            @arg USB_OTG_SPEED_FULL: Full speed mode
  * @retval  Hal status
  */
HAL_StatusTypeDef USB_SetDevSpeed(USB_OTG_GlobalTypeDef *USBx, uint8_t speed)
{
   20c84:	b480      	push	{r7}
   20c86:	b085      	sub	sp, #20
   20c88:	af00      	add	r7, sp, #0
   20c8a:	6078      	str	r0, [r7, #4]
   20c8c:	460b      	mov	r3, r1
   20c8e:	70fb      	strb	r3, [r7, #3]
  uint32_t USBx_BASE = (uint32_t)USBx;
   20c90:	687b      	ldr	r3, [r7, #4]
   20c92:	60fb      	str	r3, [r7, #12]

  USBx_DEVICE->DCFG |= speed;
   20c94:	68fb      	ldr	r3, [r7, #12]
   20c96:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   20c9a:	681a      	ldr	r2, [r3, #0]
   20c9c:	78fb      	ldrb	r3, [r7, #3]
   20c9e:	68f9      	ldr	r1, [r7, #12]
   20ca0:	f501 6100 	add.w	r1, r1, #2048	; 0x800
   20ca4:	4313      	orrs	r3, r2
   20ca6:	600b      	str	r3, [r1, #0]
  return HAL_OK;
   20ca8:	2300      	movs	r3, #0
}
   20caa:	4618      	mov	r0, r3
   20cac:	3714      	adds	r7, #20
   20cae:	46bd      	mov	sp, r7
   20cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
   20cb4:	4770      	bx	lr
	...

00020cb8 <USB_ActivateEndpoint>:
  * @param  USBx  Selected device
  * @param  ep pointer to endpoint structure
  * @retval HAL status
  */
HAL_StatusTypeDef USB_ActivateEndpoint(USB_OTG_GlobalTypeDef *USBx, USB_OTG_EPTypeDef *ep)
{
   20cb8:	b480      	push	{r7}
   20cba:	b085      	sub	sp, #20
   20cbc:	af00      	add	r7, sp, #0
   20cbe:	6078      	str	r0, [r7, #4]
   20cc0:	6039      	str	r1, [r7, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
   20cc2:	687b      	ldr	r3, [r7, #4]
   20cc4:	60fb      	str	r3, [r7, #12]
  uint32_t epnum = (uint32_t)ep->num;
   20cc6:	683b      	ldr	r3, [r7, #0]
   20cc8:	781b      	ldrb	r3, [r3, #0]
   20cca:	60bb      	str	r3, [r7, #8]

  if (ep->is_in == 1U)
   20ccc:	683b      	ldr	r3, [r7, #0]
   20cce:	785b      	ldrb	r3, [r3, #1]
   20cd0:	2b01      	cmp	r3, #1
   20cd2:	d139      	bne.n	20d48 <USB_ActivateEndpoint+0x90>
  {
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
   20cd4:	68fb      	ldr	r3, [r7, #12]
   20cd6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   20cda:	69da      	ldr	r2, [r3, #28]
   20cdc:	683b      	ldr	r3, [r7, #0]
   20cde:	781b      	ldrb	r3, [r3, #0]
   20ce0:	f003 030f 	and.w	r3, r3, #15
   20ce4:	2101      	movs	r1, #1
   20ce6:	fa01 f303 	lsl.w	r3, r1, r3
   20cea:	b29b      	uxth	r3, r3
   20cec:	68f9      	ldr	r1, [r7, #12]
   20cee:	f501 6100 	add.w	r1, r1, #2048	; 0x800
   20cf2:	4313      	orrs	r3, r2
   20cf4:	61cb      	str	r3, [r1, #28]

    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
   20cf6:	68bb      	ldr	r3, [r7, #8]
   20cf8:	015a      	lsls	r2, r3, #5
   20cfa:	68fb      	ldr	r3, [r7, #12]
   20cfc:	4413      	add	r3, r2
   20cfe:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20d02:	681b      	ldr	r3, [r3, #0]
   20d04:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
   20d08:	2b00      	cmp	r3, #0
   20d0a:	d153      	bne.n	20db4 <USB_ActivateEndpoint+0xfc>
    {
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
   20d0c:	68bb      	ldr	r3, [r7, #8]
   20d0e:	015a      	lsls	r2, r3, #5
   20d10:	68fb      	ldr	r3, [r7, #12]
   20d12:	4413      	add	r3, r2
   20d14:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20d18:	681a      	ldr	r2, [r3, #0]
   20d1a:	683b      	ldr	r3, [r7, #0]
   20d1c:	689b      	ldr	r3, [r3, #8]
   20d1e:	f3c3 010a 	ubfx	r1, r3, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
   20d22:	683b      	ldr	r3, [r7, #0]
   20d24:	78db      	ldrb	r3, [r3, #3]
   20d26:	049b      	lsls	r3, r3, #18
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
   20d28:	4319      	orrs	r1, r3
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
   20d2a:	68bb      	ldr	r3, [r7, #8]
   20d2c:	059b      	lsls	r3, r3, #22
   20d2e:	430b      	orrs	r3, r1
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
   20d30:	431a      	orrs	r2, r3
   20d32:	68bb      	ldr	r3, [r7, #8]
   20d34:	0159      	lsls	r1, r3, #5
   20d36:	68fb      	ldr	r3, [r7, #12]
   20d38:	440b      	add	r3, r1
   20d3a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20d3e:	4619      	mov	r1, r3
   20d40:	4b20      	ldr	r3, [pc, #128]	; (20dc4 <USB_ActivateEndpoint+0x10c>)
   20d42:	4313      	orrs	r3, r2
   20d44:	600b      	str	r3, [r1, #0]
   20d46:	e035      	b.n	20db4 <USB_ActivateEndpoint+0xfc>
                                   USB_OTG_DIEPCTL_USBAEP;
    }
  }
  else
  {
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
   20d48:	68fb      	ldr	r3, [r7, #12]
   20d4a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   20d4e:	69da      	ldr	r2, [r3, #28]
   20d50:	683b      	ldr	r3, [r7, #0]
   20d52:	781b      	ldrb	r3, [r3, #0]
   20d54:	f003 030f 	and.w	r3, r3, #15
   20d58:	2101      	movs	r1, #1
   20d5a:	fa01 f303 	lsl.w	r3, r1, r3
   20d5e:	041b      	lsls	r3, r3, #16
   20d60:	68f9      	ldr	r1, [r7, #12]
   20d62:	f501 6100 	add.w	r1, r1, #2048	; 0x800
   20d66:	4313      	orrs	r3, r2
   20d68:	61cb      	str	r3, [r1, #28]

    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
   20d6a:	68bb      	ldr	r3, [r7, #8]
   20d6c:	015a      	lsls	r2, r3, #5
   20d6e:	68fb      	ldr	r3, [r7, #12]
   20d70:	4413      	add	r3, r2
   20d72:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   20d76:	681b      	ldr	r3, [r3, #0]
   20d78:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
   20d7c:	2b00      	cmp	r3, #0
   20d7e:	d119      	bne.n	20db4 <USB_ActivateEndpoint+0xfc>
    {
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
   20d80:	68bb      	ldr	r3, [r7, #8]
   20d82:	015a      	lsls	r2, r3, #5
   20d84:	68fb      	ldr	r3, [r7, #12]
   20d86:	4413      	add	r3, r2
   20d88:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   20d8c:	681a      	ldr	r2, [r3, #0]
   20d8e:	683b      	ldr	r3, [r7, #0]
   20d90:	689b      	ldr	r3, [r3, #8]
   20d92:	f3c3 010a 	ubfx	r1, r3, #0, #11
                                    ((uint32_t)ep->type << 18) |
   20d96:	683b      	ldr	r3, [r7, #0]
   20d98:	78db      	ldrb	r3, [r3, #3]
   20d9a:	049b      	lsls	r3, r3, #18
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
   20d9c:	430b      	orrs	r3, r1
   20d9e:	431a      	orrs	r2, r3
   20da0:	68bb      	ldr	r3, [r7, #8]
   20da2:	0159      	lsls	r1, r3, #5
   20da4:	68fb      	ldr	r3, [r7, #12]
   20da6:	440b      	add	r3, r1
   20da8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   20dac:	4619      	mov	r1, r3
   20dae:	4b05      	ldr	r3, [pc, #20]	; (20dc4 <USB_ActivateEndpoint+0x10c>)
   20db0:	4313      	orrs	r3, r2
   20db2:	600b      	str	r3, [r1, #0]
                                    USB_OTG_DIEPCTL_SD0PID_SEVNFRM |
                                    USB_OTG_DOEPCTL_USBAEP;
    }
  }
  return HAL_OK;
   20db4:	2300      	movs	r3, #0
}
   20db6:	4618      	mov	r0, r3
   20db8:	3714      	adds	r7, #20
   20dba:	46bd      	mov	sp, r7
   20dbc:	f85d 7b04 	ldr.w	r7, [sp], #4
   20dc0:	4770      	bx	lr
   20dc2:	bf00      	nop
   20dc4:	10008000 	.word	0x10008000

00020dc8 <USB_DeactivateEndpoint>:
  * @param  USBx  Selected device
  * @param  ep pointer to endpoint structure
  * @retval HAL status
  */
HAL_StatusTypeDef USB_DeactivateEndpoint(USB_OTG_GlobalTypeDef *USBx, USB_OTG_EPTypeDef *ep)
{
   20dc8:	b480      	push	{r7}
   20dca:	b085      	sub	sp, #20
   20dcc:	af00      	add	r7, sp, #0
   20dce:	6078      	str	r0, [r7, #4]
   20dd0:	6039      	str	r1, [r7, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
   20dd2:	687b      	ldr	r3, [r7, #4]
   20dd4:	60fb      	str	r3, [r7, #12]
  uint32_t epnum = (uint32_t)ep->num;
   20dd6:	683b      	ldr	r3, [r7, #0]
   20dd8:	781b      	ldrb	r3, [r3, #0]
   20dda:	60bb      	str	r3, [r7, #8]

  /* Read DEPCTLn register */
  if (ep->is_in == 1U)
   20ddc:	683b      	ldr	r3, [r7, #0]
   20dde:	785b      	ldrb	r3, [r3, #1]
   20de0:	2b01      	cmp	r3, #1
   20de2:	d135      	bne.n	20e50 <USB_DeactivateEndpoint+0x88>
  {
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
   20de4:	68fb      	ldr	r3, [r7, #12]
   20de6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   20dea:	6bda      	ldr	r2, [r3, #60]	; 0x3c
   20dec:	683b      	ldr	r3, [r7, #0]
   20dee:	781b      	ldrb	r3, [r3, #0]
   20df0:	f003 030f 	and.w	r3, r3, #15
   20df4:	2101      	movs	r1, #1
   20df6:	fa01 f303 	lsl.w	r3, r1, r3
   20dfa:	b29b      	uxth	r3, r3
   20dfc:	43db      	mvns	r3, r3
   20dfe:	68f9      	ldr	r1, [r7, #12]
   20e00:	f501 6100 	add.w	r1, r1, #2048	; 0x800
   20e04:	4013      	ands	r3, r2
   20e06:	63cb      	str	r3, [r1, #60]	; 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
   20e08:	68fb      	ldr	r3, [r7, #12]
   20e0a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   20e0e:	69da      	ldr	r2, [r3, #28]
   20e10:	683b      	ldr	r3, [r7, #0]
   20e12:	781b      	ldrb	r3, [r3, #0]
   20e14:	f003 030f 	and.w	r3, r3, #15
   20e18:	2101      	movs	r1, #1
   20e1a:	fa01 f303 	lsl.w	r3, r1, r3
   20e1e:	b29b      	uxth	r3, r3
   20e20:	43db      	mvns	r3, r3
   20e22:	68f9      	ldr	r1, [r7, #12]
   20e24:	f501 6100 	add.w	r1, r1, #2048	; 0x800
   20e28:	4013      	ands	r3, r2
   20e2a:	61cb      	str	r3, [r1, #28]
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
   20e2c:	68bb      	ldr	r3, [r7, #8]
   20e2e:	015a      	lsls	r2, r3, #5
   20e30:	68fb      	ldr	r3, [r7, #12]
   20e32:	4413      	add	r3, r2
   20e34:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20e38:	681a      	ldr	r2, [r3, #0]
   20e3a:	68bb      	ldr	r3, [r7, #8]
   20e3c:	0159      	lsls	r1, r3, #5
   20e3e:	68fb      	ldr	r3, [r7, #12]
   20e40:	440b      	add	r3, r1
   20e42:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20e46:	4619      	mov	r1, r3
   20e48:	4b1f      	ldr	r3, [pc, #124]	; (20ec8 <USB_DeactivateEndpoint+0x100>)
   20e4a:	4013      	ands	r3, r2
   20e4c:	600b      	str	r3, [r1, #0]
   20e4e:	e034      	b.n	20eba <USB_DeactivateEndpoint+0xf2>
                                   USB_OTG_DIEPCTL_SD0PID_SEVNFRM |
                                   USB_OTG_DIEPCTL_EPTYP);
  }
  else
  {
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
   20e50:	68fb      	ldr	r3, [r7, #12]
   20e52:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   20e56:	6bda      	ldr	r2, [r3, #60]	; 0x3c
   20e58:	683b      	ldr	r3, [r7, #0]
   20e5a:	781b      	ldrb	r3, [r3, #0]
   20e5c:	f003 030f 	and.w	r3, r3, #15
   20e60:	2101      	movs	r1, #1
   20e62:	fa01 f303 	lsl.w	r3, r1, r3
   20e66:	041b      	lsls	r3, r3, #16
   20e68:	43db      	mvns	r3, r3
   20e6a:	68f9      	ldr	r1, [r7, #12]
   20e6c:	f501 6100 	add.w	r1, r1, #2048	; 0x800
   20e70:	4013      	ands	r3, r2
   20e72:	63cb      	str	r3, [r1, #60]	; 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
   20e74:	68fb      	ldr	r3, [r7, #12]
   20e76:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   20e7a:	69da      	ldr	r2, [r3, #28]
   20e7c:	683b      	ldr	r3, [r7, #0]
   20e7e:	781b      	ldrb	r3, [r3, #0]
   20e80:	f003 030f 	and.w	r3, r3, #15
   20e84:	2101      	movs	r1, #1
   20e86:	fa01 f303 	lsl.w	r3, r1, r3
   20e8a:	041b      	lsls	r3, r3, #16
   20e8c:	43db      	mvns	r3, r3
   20e8e:	68f9      	ldr	r1, [r7, #12]
   20e90:	f501 6100 	add.w	r1, r1, #2048	; 0x800
   20e94:	4013      	ands	r3, r2
   20e96:	61cb      	str	r3, [r1, #28]
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
   20e98:	68bb      	ldr	r3, [r7, #8]
   20e9a:	015a      	lsls	r2, r3, #5
   20e9c:	68fb      	ldr	r3, [r7, #12]
   20e9e:	4413      	add	r3, r2
   20ea0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   20ea4:	681a      	ldr	r2, [r3, #0]
   20ea6:	68bb      	ldr	r3, [r7, #8]
   20ea8:	0159      	lsls	r1, r3, #5
   20eaa:	68fb      	ldr	r3, [r7, #12]
   20eac:	440b      	add	r3, r1
   20eae:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   20eb2:	4619      	mov	r1, r3
   20eb4:	4b05      	ldr	r3, [pc, #20]	; (20ecc <USB_DeactivateEndpoint+0x104>)
   20eb6:	4013      	ands	r3, r2
   20eb8:	600b      	str	r3, [r1, #0]
                                    USB_OTG_DOEPCTL_MPSIZ |
                                    USB_OTG_DOEPCTL_SD0PID_SEVNFRM |
                                    USB_OTG_DOEPCTL_EPTYP);
  }

  return HAL_OK;
   20eba:	2300      	movs	r3, #0
}
   20ebc:	4618      	mov	r0, r3
   20ebe:	3714      	adds	r7, #20
   20ec0:	46bd      	mov	sp, r7
   20ec2:	f85d 7b04 	ldr.w	r7, [sp], #4
   20ec6:	4770      	bx	lr
   20ec8:	ec337800 	.word	0xec337800
   20ecc:	eff37800 	.word	0xeff37800

00020ed0 <USB_EPStartXfer>:
  *           0 : DMA feature not used
  *           1 : DMA feature used
  * @retval HAL status
  */
HAL_StatusTypeDef USB_EPStartXfer(USB_OTG_GlobalTypeDef *USBx, USB_OTG_EPTypeDef *ep, uint8_t dma)
{
   20ed0:	b580      	push	{r7, lr}
   20ed2:	b08a      	sub	sp, #40	; 0x28
   20ed4:	af02      	add	r7, sp, #8
   20ed6:	60f8      	str	r0, [r7, #12]
   20ed8:	60b9      	str	r1, [r7, #8]
   20eda:	4613      	mov	r3, r2
   20edc:	71fb      	strb	r3, [r7, #7]
  uint32_t USBx_BASE = (uint32_t)USBx;
   20ede:	68fb      	ldr	r3, [r7, #12]
   20ee0:	61fb      	str	r3, [r7, #28]
  uint32_t epnum = (uint32_t)ep->num;
   20ee2:	68bb      	ldr	r3, [r7, #8]
   20ee4:	781b      	ldrb	r3, [r3, #0]
   20ee6:	61bb      	str	r3, [r7, #24]
  uint16_t pktcnt;

  /* IN endpoint */
  if (ep->is_in == 1U)
   20ee8:	68bb      	ldr	r3, [r7, #8]
   20eea:	785b      	ldrb	r3, [r3, #1]
   20eec:	2b01      	cmp	r3, #1
   20eee:	f040 8163 	bne.w	211b8 <USB_EPStartXfer+0x2e8>
  {
    /* Zero Length Packet? */
    if (ep->xfer_len == 0U)
   20ef2:	68bb      	ldr	r3, [r7, #8]
   20ef4:	695b      	ldr	r3, [r3, #20]
   20ef6:	2b00      	cmp	r3, #0
   20ef8:	d132      	bne.n	20f60 <USB_EPStartXfer+0x90>
    {
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
   20efa:	69bb      	ldr	r3, [r7, #24]
   20efc:	015a      	lsls	r2, r3, #5
   20efe:	69fb      	ldr	r3, [r7, #28]
   20f00:	4413      	add	r3, r2
   20f02:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20f06:	691a      	ldr	r2, [r3, #16]
   20f08:	69bb      	ldr	r3, [r7, #24]
   20f0a:	0159      	lsls	r1, r3, #5
   20f0c:	69fb      	ldr	r3, [r7, #28]
   20f0e:	440b      	add	r3, r1
   20f10:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20f14:	4619      	mov	r1, r3
   20f16:	4ba5      	ldr	r3, [pc, #660]	; (211ac <USB_EPStartXfer+0x2dc>)
   20f18:	4013      	ands	r3, r2
   20f1a:	610b      	str	r3, [r1, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
   20f1c:	69bb      	ldr	r3, [r7, #24]
   20f1e:	015a      	lsls	r2, r3, #5
   20f20:	69fb      	ldr	r3, [r7, #28]
   20f22:	4413      	add	r3, r2
   20f24:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20f28:	691b      	ldr	r3, [r3, #16]
   20f2a:	69ba      	ldr	r2, [r7, #24]
   20f2c:	0151      	lsls	r1, r2, #5
   20f2e:	69fa      	ldr	r2, [r7, #28]
   20f30:	440a      	add	r2, r1
   20f32:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   20f36:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
   20f3a:	6113      	str	r3, [r2, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
   20f3c:	69bb      	ldr	r3, [r7, #24]
   20f3e:	015a      	lsls	r2, r3, #5
   20f40:	69fb      	ldr	r3, [r7, #28]
   20f42:	4413      	add	r3, r2
   20f44:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20f48:	691a      	ldr	r2, [r3, #16]
   20f4a:	69bb      	ldr	r3, [r7, #24]
   20f4c:	0159      	lsls	r1, r3, #5
   20f4e:	69fb      	ldr	r3, [r7, #28]
   20f50:	440b      	add	r3, r1
   20f52:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20f56:	4619      	mov	r1, r3
   20f58:	4b95      	ldr	r3, [pc, #596]	; (211b0 <USB_EPStartXfer+0x2e0>)
   20f5a:	4013      	ands	r3, r2
   20f5c:	610b      	str	r3, [r1, #16]
   20f5e:	e074      	b.n	2104a <USB_EPStartXfer+0x17a>
      /* Program the transfer size and packet count
      * as follows: xfersize = N * maxpacket +
      * short_packet pktcnt = N + (short_packet
      * exist ? 1 : 0)
      */
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
   20f60:	69bb      	ldr	r3, [r7, #24]
   20f62:	015a      	lsls	r2, r3, #5
   20f64:	69fb      	ldr	r3, [r7, #28]
   20f66:	4413      	add	r3, r2
   20f68:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20f6c:	691a      	ldr	r2, [r3, #16]
   20f6e:	69bb      	ldr	r3, [r7, #24]
   20f70:	0159      	lsls	r1, r3, #5
   20f72:	69fb      	ldr	r3, [r7, #28]
   20f74:	440b      	add	r3, r1
   20f76:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20f7a:	4619      	mov	r1, r3
   20f7c:	4b8c      	ldr	r3, [pc, #560]	; (211b0 <USB_EPStartXfer+0x2e0>)
   20f7e:	4013      	ands	r3, r2
   20f80:	610b      	str	r3, [r1, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
   20f82:	69bb      	ldr	r3, [r7, #24]
   20f84:	015a      	lsls	r2, r3, #5
   20f86:	69fb      	ldr	r3, [r7, #28]
   20f88:	4413      	add	r3, r2
   20f8a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20f8e:	691a      	ldr	r2, [r3, #16]
   20f90:	69bb      	ldr	r3, [r7, #24]
   20f92:	0159      	lsls	r1, r3, #5
   20f94:	69fb      	ldr	r3, [r7, #28]
   20f96:	440b      	add	r3, r1
   20f98:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20f9c:	4619      	mov	r1, r3
   20f9e:	4b83      	ldr	r3, [pc, #524]	; (211ac <USB_EPStartXfer+0x2dc>)
   20fa0:	4013      	ands	r3, r2
   20fa2:	610b      	str	r3, [r1, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket) << 19));
   20fa4:	69bb      	ldr	r3, [r7, #24]
   20fa6:	015a      	lsls	r2, r3, #5
   20fa8:	69fb      	ldr	r3, [r7, #28]
   20faa:	4413      	add	r3, r2
   20fac:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20fb0:	691a      	ldr	r2, [r3, #16]
   20fb2:	68bb      	ldr	r3, [r7, #8]
   20fb4:	6959      	ldr	r1, [r3, #20]
   20fb6:	68bb      	ldr	r3, [r7, #8]
   20fb8:	689b      	ldr	r3, [r3, #8]
   20fba:	440b      	add	r3, r1
   20fbc:	1e59      	subs	r1, r3, #1
   20fbe:	68bb      	ldr	r3, [r7, #8]
   20fc0:	689b      	ldr	r3, [r3, #8]
   20fc2:	fbb1 f3f3 	udiv	r3, r1, r3
   20fc6:	04d9      	lsls	r1, r3, #19
   20fc8:	4b7a      	ldr	r3, [pc, #488]	; (211b4 <USB_EPStartXfer+0x2e4>)
   20fca:	400b      	ands	r3, r1
   20fcc:	69b9      	ldr	r1, [r7, #24]
   20fce:	0148      	lsls	r0, r1, #5
   20fd0:	69f9      	ldr	r1, [r7, #28]
   20fd2:	4401      	add	r1, r0
   20fd4:	f501 6110 	add.w	r1, r1, #2304	; 0x900
   20fd8:	4313      	orrs	r3, r2
   20fda:	610b      	str	r3, [r1, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
   20fdc:	69bb      	ldr	r3, [r7, #24]
   20fde:	015a      	lsls	r2, r3, #5
   20fe0:	69fb      	ldr	r3, [r7, #28]
   20fe2:	4413      	add	r3, r2
   20fe4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   20fe8:	691a      	ldr	r2, [r3, #16]
   20fea:	68bb      	ldr	r3, [r7, #8]
   20fec:	695b      	ldr	r3, [r3, #20]
   20fee:	f3c3 0312 	ubfx	r3, r3, #0, #19
   20ff2:	69b9      	ldr	r1, [r7, #24]
   20ff4:	0148      	lsls	r0, r1, #5
   20ff6:	69f9      	ldr	r1, [r7, #28]
   20ff8:	4401      	add	r1, r0
   20ffa:	f501 6110 	add.w	r1, r1, #2304	; 0x900
   20ffe:	4313      	orrs	r3, r2
   21000:	610b      	str	r3, [r1, #16]

      if (ep->type == EP_TYPE_ISOC)
   21002:	68bb      	ldr	r3, [r7, #8]
   21004:	78db      	ldrb	r3, [r3, #3]
   21006:	2b01      	cmp	r3, #1
   21008:	d11f      	bne.n	2104a <USB_EPStartXfer+0x17a>
      {
        USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
   2100a:	69bb      	ldr	r3, [r7, #24]
   2100c:	015a      	lsls	r2, r3, #5
   2100e:	69fb      	ldr	r3, [r7, #28]
   21010:	4413      	add	r3, r2
   21012:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   21016:	691b      	ldr	r3, [r3, #16]
   21018:	69ba      	ldr	r2, [r7, #24]
   2101a:	0151      	lsls	r1, r2, #5
   2101c:	69fa      	ldr	r2, [r7, #28]
   2101e:	440a      	add	r2, r1
   21020:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   21024:	f023 43c0 	bic.w	r3, r3, #1610612736	; 0x60000000
   21028:	6113      	str	r3, [r2, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (1U << 29));
   2102a:	69bb      	ldr	r3, [r7, #24]
   2102c:	015a      	lsls	r2, r3, #5
   2102e:	69fb      	ldr	r3, [r7, #28]
   21030:	4413      	add	r3, r2
   21032:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   21036:	691b      	ldr	r3, [r3, #16]
   21038:	69ba      	ldr	r2, [r7, #24]
   2103a:	0151      	lsls	r1, r2, #5
   2103c:	69fa      	ldr	r2, [r7, #28]
   2103e:	440a      	add	r2, r1
   21040:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   21044:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   21048:	6113      	str	r3, [r2, #16]
      }
    }

    if (dma == 1U)
   2104a:	79fb      	ldrb	r3, [r7, #7]
   2104c:	2b01      	cmp	r3, #1
   2104e:	d14b      	bne.n	210e8 <USB_EPStartXfer+0x218>
    {
      if ((uint32_t)ep->dma_addr != 0U)
   21050:	68bb      	ldr	r3, [r7, #8]
   21052:	691b      	ldr	r3, [r3, #16]
   21054:	2b00      	cmp	r3, #0
   21056:	d009      	beq.n	2106c <USB_EPStartXfer+0x19c>
      {
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
   21058:	69bb      	ldr	r3, [r7, #24]
   2105a:	015a      	lsls	r2, r3, #5
   2105c:	69fb      	ldr	r3, [r7, #28]
   2105e:	4413      	add	r3, r2
   21060:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   21064:	461a      	mov	r2, r3
   21066:	68bb      	ldr	r3, [r7, #8]
   21068:	691b      	ldr	r3, [r3, #16]
   2106a:	6153      	str	r3, [r2, #20]
      }

      if (ep->type == EP_TYPE_ISOC)
   2106c:	68bb      	ldr	r3, [r7, #8]
   2106e:	78db      	ldrb	r3, [r3, #3]
   21070:	2b01      	cmp	r3, #1
   21072:	d128      	bne.n	210c6 <USB_EPStartXfer+0x1f6>
      {
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
   21074:	69fb      	ldr	r3, [r7, #28]
   21076:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   2107a:	689b      	ldr	r3, [r3, #8]
   2107c:	f403 7380 	and.w	r3, r3, #256	; 0x100
   21080:	2b00      	cmp	r3, #0
   21082:	d110      	bne.n	210a6 <USB_EPStartXfer+0x1d6>
        {
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
   21084:	69bb      	ldr	r3, [r7, #24]
   21086:	015a      	lsls	r2, r3, #5
   21088:	69fb      	ldr	r3, [r7, #28]
   2108a:	4413      	add	r3, r2
   2108c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   21090:	681b      	ldr	r3, [r3, #0]
   21092:	69ba      	ldr	r2, [r7, #24]
   21094:	0151      	lsls	r1, r2, #5
   21096:	69fa      	ldr	r2, [r7, #28]
   21098:	440a      	add	r2, r1
   2109a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   2109e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   210a2:	6013      	str	r3, [r2, #0]
   210a4:	e00f      	b.n	210c6 <USB_EPStartXfer+0x1f6>
        }
        else
        {
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
   210a6:	69bb      	ldr	r3, [r7, #24]
   210a8:	015a      	lsls	r2, r3, #5
   210aa:	69fb      	ldr	r3, [r7, #28]
   210ac:	4413      	add	r3, r2
   210ae:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   210b2:	681b      	ldr	r3, [r3, #0]
   210b4:	69ba      	ldr	r2, [r7, #24]
   210b6:	0151      	lsls	r1, r2, #5
   210b8:	69fa      	ldr	r2, [r7, #28]
   210ba:	440a      	add	r2, r1
   210bc:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   210c0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
   210c4:	6013      	str	r3, [r2, #0]
        }
      }

      /* EP enable, IN data in FIFO */
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
   210c6:	69bb      	ldr	r3, [r7, #24]
   210c8:	015a      	lsls	r2, r3, #5
   210ca:	69fb      	ldr	r3, [r7, #28]
   210cc:	4413      	add	r3, r2
   210ce:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   210d2:	681b      	ldr	r3, [r3, #0]
   210d4:	69ba      	ldr	r2, [r7, #24]
   210d6:	0151      	lsls	r1, r2, #5
   210d8:	69fa      	ldr	r2, [r7, #28]
   210da:	440a      	add	r2, r1
   210dc:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   210e0:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
   210e4:	6013      	str	r3, [r2, #0]
   210e6:	e133      	b.n	21350 <USB_EPStartXfer+0x480>
    }
    else
    {
      /* EP enable, IN data in FIFO */
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
   210e8:	69bb      	ldr	r3, [r7, #24]
   210ea:	015a      	lsls	r2, r3, #5
   210ec:	69fb      	ldr	r3, [r7, #28]
   210ee:	4413      	add	r3, r2
   210f0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   210f4:	681b      	ldr	r3, [r3, #0]
   210f6:	69ba      	ldr	r2, [r7, #24]
   210f8:	0151      	lsls	r1, r2, #5
   210fa:	69fa      	ldr	r2, [r7, #28]
   210fc:	440a      	add	r2, r1
   210fe:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   21102:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
   21106:	6013      	str	r3, [r2, #0]

      if (ep->type != EP_TYPE_ISOC)
   21108:	68bb      	ldr	r3, [r7, #8]
   2110a:	78db      	ldrb	r3, [r3, #3]
   2110c:	2b01      	cmp	r3, #1
   2110e:	d015      	beq.n	2113c <USB_EPStartXfer+0x26c>
      {
        /* Enable the Tx FIFO Empty Interrupt for this EP */
        if (ep->xfer_len > 0U)
   21110:	68bb      	ldr	r3, [r7, #8]
   21112:	695b      	ldr	r3, [r3, #20]
   21114:	2b00      	cmp	r3, #0
   21116:	f000 811b 	beq.w	21350 <USB_EPStartXfer+0x480>
        {
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
   2111a:	69fb      	ldr	r3, [r7, #28]
   2111c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   21120:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   21122:	68bb      	ldr	r3, [r7, #8]
   21124:	781b      	ldrb	r3, [r3, #0]
   21126:	f003 030f 	and.w	r3, r3, #15
   2112a:	2101      	movs	r1, #1
   2112c:	fa01 f303 	lsl.w	r3, r1, r3
   21130:	69f9      	ldr	r1, [r7, #28]
   21132:	f501 6100 	add.w	r1, r1, #2048	; 0x800
   21136:	4313      	orrs	r3, r2
   21138:	634b      	str	r3, [r1, #52]	; 0x34
   2113a:	e109      	b.n	21350 <USB_EPStartXfer+0x480>
        }
      }
      else
      {
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
   2113c:	69fb      	ldr	r3, [r7, #28]
   2113e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   21142:	689b      	ldr	r3, [r3, #8]
   21144:	f403 7380 	and.w	r3, r3, #256	; 0x100
   21148:	2b00      	cmp	r3, #0
   2114a:	d110      	bne.n	2116e <USB_EPStartXfer+0x29e>
        {
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
   2114c:	69bb      	ldr	r3, [r7, #24]
   2114e:	015a      	lsls	r2, r3, #5
   21150:	69fb      	ldr	r3, [r7, #28]
   21152:	4413      	add	r3, r2
   21154:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   21158:	681b      	ldr	r3, [r3, #0]
   2115a:	69ba      	ldr	r2, [r7, #24]
   2115c:	0151      	lsls	r1, r2, #5
   2115e:	69fa      	ldr	r2, [r7, #28]
   21160:	440a      	add	r2, r1
   21162:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   21166:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   2116a:	6013      	str	r3, [r2, #0]
   2116c:	e00f      	b.n	2118e <USB_EPStartXfer+0x2be>
        }
        else
        {
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
   2116e:	69bb      	ldr	r3, [r7, #24]
   21170:	015a      	lsls	r2, r3, #5
   21172:	69fb      	ldr	r3, [r7, #28]
   21174:	4413      	add	r3, r2
   21176:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   2117a:	681b      	ldr	r3, [r3, #0]
   2117c:	69ba      	ldr	r2, [r7, #24]
   2117e:	0151      	lsls	r1, r2, #5
   21180:	69fa      	ldr	r2, [r7, #28]
   21182:	440a      	add	r2, r1
   21184:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   21188:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
   2118c:	6013      	str	r3, [r2, #0]
        }

        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
   2118e:	68bb      	ldr	r3, [r7, #8]
   21190:	68d9      	ldr	r1, [r3, #12]
   21192:	68bb      	ldr	r3, [r7, #8]
   21194:	781a      	ldrb	r2, [r3, #0]
   21196:	68bb      	ldr	r3, [r7, #8]
   21198:	695b      	ldr	r3, [r3, #20]
   2119a:	b298      	uxth	r0, r3
   2119c:	79fb      	ldrb	r3, [r7, #7]
   2119e:	9300      	str	r3, [sp, #0]
   211a0:	4603      	mov	r3, r0
   211a2:	68f8      	ldr	r0, [r7, #12]
   211a4:	f000 fa38 	bl	21618 <USB_WritePacket>
   211a8:	e0d2      	b.n	21350 <USB_EPStartXfer+0x480>
   211aa:	bf00      	nop
   211ac:	e007ffff 	.word	0xe007ffff
   211b0:	fff80000 	.word	0xfff80000
   211b4:	1ff80000 	.word	0x1ff80000
  {
    /* Program the transfer size and packet count as follows:
    * pktcnt = N
    * xfersize = N * maxpacket
    */
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
   211b8:	69bb      	ldr	r3, [r7, #24]
   211ba:	015a      	lsls	r2, r3, #5
   211bc:	69fb      	ldr	r3, [r7, #28]
   211be:	4413      	add	r3, r2
   211c0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   211c4:	691a      	ldr	r2, [r3, #16]
   211c6:	69bb      	ldr	r3, [r7, #24]
   211c8:	0159      	lsls	r1, r3, #5
   211ca:	69fb      	ldr	r3, [r7, #28]
   211cc:	440b      	add	r3, r1
   211ce:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   211d2:	4619      	mov	r1, r3
   211d4:	4b61      	ldr	r3, [pc, #388]	; (2135c <USB_EPStartXfer+0x48c>)
   211d6:	4013      	ands	r3, r2
   211d8:	610b      	str	r3, [r1, #16]
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
   211da:	69bb      	ldr	r3, [r7, #24]
   211dc:	015a      	lsls	r2, r3, #5
   211de:	69fb      	ldr	r3, [r7, #28]
   211e0:	4413      	add	r3, r2
   211e2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   211e6:	691a      	ldr	r2, [r3, #16]
   211e8:	69bb      	ldr	r3, [r7, #24]
   211ea:	0159      	lsls	r1, r3, #5
   211ec:	69fb      	ldr	r3, [r7, #28]
   211ee:	440b      	add	r3, r1
   211f0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   211f4:	4619      	mov	r1, r3
   211f6:	4b5a      	ldr	r3, [pc, #360]	; (21360 <USB_EPStartXfer+0x490>)
   211f8:	4013      	ands	r3, r2
   211fa:	610b      	str	r3, [r1, #16]

    if (ep->xfer_len == 0U)
   211fc:	68bb      	ldr	r3, [r7, #8]
   211fe:	695b      	ldr	r3, [r3, #20]
   21200:	2b00      	cmp	r3, #0
   21202:	d123      	bne.n	2124c <USB_EPStartXfer+0x37c>
    {
      USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
   21204:	69bb      	ldr	r3, [r7, #24]
   21206:	015a      	lsls	r2, r3, #5
   21208:	69fb      	ldr	r3, [r7, #28]
   2120a:	4413      	add	r3, r2
   2120c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   21210:	691a      	ldr	r2, [r3, #16]
   21212:	68bb      	ldr	r3, [r7, #8]
   21214:	689b      	ldr	r3, [r3, #8]
   21216:	f3c3 0312 	ubfx	r3, r3, #0, #19
   2121a:	69b9      	ldr	r1, [r7, #24]
   2121c:	0148      	lsls	r0, r1, #5
   2121e:	69f9      	ldr	r1, [r7, #28]
   21220:	4401      	add	r1, r0
   21222:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
   21226:	4313      	orrs	r3, r2
   21228:	610b      	str	r3, [r1, #16]
      USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
   2122a:	69bb      	ldr	r3, [r7, #24]
   2122c:	015a      	lsls	r2, r3, #5
   2122e:	69fb      	ldr	r3, [r7, #28]
   21230:	4413      	add	r3, r2
   21232:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   21236:	691b      	ldr	r3, [r3, #16]
   21238:	69ba      	ldr	r2, [r7, #24]
   2123a:	0151      	lsls	r1, r2, #5
   2123c:	69fa      	ldr	r2, [r7, #28]
   2123e:	440a      	add	r2, r1
   21240:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
   21244:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
   21248:	6113      	str	r3, [r2, #16]
   2124a:	e033      	b.n	212b4 <USB_EPStartXfer+0x3e4>
    }
    else
    {
      pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
   2124c:	68bb      	ldr	r3, [r7, #8]
   2124e:	695a      	ldr	r2, [r3, #20]
   21250:	68bb      	ldr	r3, [r7, #8]
   21252:	689b      	ldr	r3, [r3, #8]
   21254:	4413      	add	r3, r2
   21256:	1e5a      	subs	r2, r3, #1
   21258:	68bb      	ldr	r3, [r7, #8]
   2125a:	689b      	ldr	r3, [r3, #8]
   2125c:	fbb2 f3f3 	udiv	r3, r2, r3
   21260:	82fb      	strh	r3, [r7, #22]
      USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
   21262:	69bb      	ldr	r3, [r7, #24]
   21264:	015a      	lsls	r2, r3, #5
   21266:	69fb      	ldr	r3, [r7, #28]
   21268:	4413      	add	r3, r2
   2126a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   2126e:	691a      	ldr	r2, [r3, #16]
   21270:	8afb      	ldrh	r3, [r7, #22]
   21272:	04d9      	lsls	r1, r3, #19
   21274:	4b3b      	ldr	r3, [pc, #236]	; (21364 <USB_EPStartXfer+0x494>)
   21276:	400b      	ands	r3, r1
   21278:	69b9      	ldr	r1, [r7, #24]
   2127a:	0148      	lsls	r0, r1, #5
   2127c:	69f9      	ldr	r1, [r7, #28]
   2127e:	4401      	add	r1, r0
   21280:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
   21284:	4313      	orrs	r3, r2
   21286:	610b      	str	r3, [r1, #16]
      USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & (ep->maxpacket * pktcnt);
   21288:	69bb      	ldr	r3, [r7, #24]
   2128a:	015a      	lsls	r2, r3, #5
   2128c:	69fb      	ldr	r3, [r7, #28]
   2128e:	4413      	add	r3, r2
   21290:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   21294:	691a      	ldr	r2, [r3, #16]
   21296:	68bb      	ldr	r3, [r7, #8]
   21298:	689b      	ldr	r3, [r3, #8]
   2129a:	8af9      	ldrh	r1, [r7, #22]
   2129c:	fb01 f303 	mul.w	r3, r1, r3
   212a0:	f3c3 0312 	ubfx	r3, r3, #0, #19
   212a4:	69b9      	ldr	r1, [r7, #24]
   212a6:	0148      	lsls	r0, r1, #5
   212a8:	69f9      	ldr	r1, [r7, #28]
   212aa:	4401      	add	r1, r0
   212ac:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
   212b0:	4313      	orrs	r3, r2
   212b2:	610b      	str	r3, [r1, #16]
    }

    if (dma == 1U)
   212b4:	79fb      	ldrb	r3, [r7, #7]
   212b6:	2b01      	cmp	r3, #1
   212b8:	d10d      	bne.n	212d6 <USB_EPStartXfer+0x406>
    {
      if ((uint32_t)ep->xfer_buff != 0U)
   212ba:	68bb      	ldr	r3, [r7, #8]
   212bc:	68db      	ldr	r3, [r3, #12]
   212be:	2b00      	cmp	r3, #0
   212c0:	d009      	beq.n	212d6 <USB_EPStartXfer+0x406>
      {
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
   212c2:	68bb      	ldr	r3, [r7, #8]
   212c4:	68d9      	ldr	r1, [r3, #12]
   212c6:	69bb      	ldr	r3, [r7, #24]
   212c8:	015a      	lsls	r2, r3, #5
   212ca:	69fb      	ldr	r3, [r7, #28]
   212cc:	4413      	add	r3, r2
   212ce:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   212d2:	460a      	mov	r2, r1
   212d4:	615a      	str	r2, [r3, #20]
      }
    }

    if (ep->type == EP_TYPE_ISOC)
   212d6:	68bb      	ldr	r3, [r7, #8]
   212d8:	78db      	ldrb	r3, [r3, #3]
   212da:	2b01      	cmp	r3, #1
   212dc:	d128      	bne.n	21330 <USB_EPStartXfer+0x460>
    {
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
   212de:	69fb      	ldr	r3, [r7, #28]
   212e0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   212e4:	689b      	ldr	r3, [r3, #8]
   212e6:	f403 7380 	and.w	r3, r3, #256	; 0x100
   212ea:	2b00      	cmp	r3, #0
   212ec:	d110      	bne.n	21310 <USB_EPStartXfer+0x440>
      {
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
   212ee:	69bb      	ldr	r3, [r7, #24]
   212f0:	015a      	lsls	r2, r3, #5
   212f2:	69fb      	ldr	r3, [r7, #28]
   212f4:	4413      	add	r3, r2
   212f6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   212fa:	681b      	ldr	r3, [r3, #0]
   212fc:	69ba      	ldr	r2, [r7, #24]
   212fe:	0151      	lsls	r1, r2, #5
   21300:	69fa      	ldr	r2, [r7, #28]
   21302:	440a      	add	r2, r1
   21304:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
   21308:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   2130c:	6013      	str	r3, [r2, #0]
   2130e:	e00f      	b.n	21330 <USB_EPStartXfer+0x460>
      }
      else
      {
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
   21310:	69bb      	ldr	r3, [r7, #24]
   21312:	015a      	lsls	r2, r3, #5
   21314:	69fb      	ldr	r3, [r7, #28]
   21316:	4413      	add	r3, r2
   21318:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   2131c:	681b      	ldr	r3, [r3, #0]
   2131e:	69ba      	ldr	r2, [r7, #24]
   21320:	0151      	lsls	r1, r2, #5
   21322:	69fa      	ldr	r2, [r7, #28]
   21324:	440a      	add	r2, r1
   21326:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
   2132a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
   2132e:	6013      	str	r3, [r2, #0]
      }
    }
    /* EP enable */
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
   21330:	69bb      	ldr	r3, [r7, #24]
   21332:	015a      	lsls	r2, r3, #5
   21334:	69fb      	ldr	r3, [r7, #28]
   21336:	4413      	add	r3, r2
   21338:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   2133c:	681b      	ldr	r3, [r3, #0]
   2133e:	69ba      	ldr	r2, [r7, #24]
   21340:	0151      	lsls	r1, r2, #5
   21342:	69fa      	ldr	r2, [r7, #28]
   21344:	440a      	add	r2, r1
   21346:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
   2134a:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
   2134e:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
   21350:	2300      	movs	r3, #0
}
   21352:	4618      	mov	r0, r3
   21354:	3720      	adds	r7, #32
   21356:	46bd      	mov	sp, r7
   21358:	bd80      	pop	{r7, pc}
   2135a:	bf00      	nop
   2135c:	fff80000 	.word	0xfff80000
   21360:	e007ffff 	.word	0xe007ffff
   21364:	1ff80000 	.word	0x1ff80000

00021368 <USB_EP0StartXfer>:
  *           0 : DMA feature not used
  *           1 : DMA feature used
  * @retval HAL status
  */
HAL_StatusTypeDef USB_EP0StartXfer(USB_OTG_GlobalTypeDef *USBx, USB_OTG_EPTypeDef *ep, uint8_t dma)
{
   21368:	b480      	push	{r7}
   2136a:	b087      	sub	sp, #28
   2136c:	af00      	add	r7, sp, #0
   2136e:	60f8      	str	r0, [r7, #12]
   21370:	60b9      	str	r1, [r7, #8]
   21372:	4613      	mov	r3, r2
   21374:	71fb      	strb	r3, [r7, #7]
  uint32_t USBx_BASE = (uint32_t)USBx;
   21376:	68fb      	ldr	r3, [r7, #12]
   21378:	617b      	str	r3, [r7, #20]
  uint32_t epnum = (uint32_t)ep->num;
   2137a:	68bb      	ldr	r3, [r7, #8]
   2137c:	781b      	ldrb	r3, [r3, #0]
   2137e:	613b      	str	r3, [r7, #16]

  /* IN endpoint */
  if (ep->is_in == 1U)
   21380:	68bb      	ldr	r3, [r7, #8]
   21382:	785b      	ldrb	r3, [r3, #1]
   21384:	2b01      	cmp	r3, #1
   21386:	f040 80cd 	bne.w	21524 <USB_EP0StartXfer+0x1bc>
  {
    /* Zero Length Packet? */
    if (ep->xfer_len == 0U)
   2138a:	68bb      	ldr	r3, [r7, #8]
   2138c:	695b      	ldr	r3, [r3, #20]
   2138e:	2b00      	cmp	r3, #0
   21390:	d132      	bne.n	213f8 <USB_EP0StartXfer+0x90>
    {
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
   21392:	693b      	ldr	r3, [r7, #16]
   21394:	015a      	lsls	r2, r3, #5
   21396:	697b      	ldr	r3, [r7, #20]
   21398:	4413      	add	r3, r2
   2139a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   2139e:	691a      	ldr	r2, [r3, #16]
   213a0:	693b      	ldr	r3, [r7, #16]
   213a2:	0159      	lsls	r1, r3, #5
   213a4:	697b      	ldr	r3, [r7, #20]
   213a6:	440b      	add	r3, r1
   213a8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   213ac:	4619      	mov	r1, r3
   213ae:	4b98      	ldr	r3, [pc, #608]	; (21610 <USB_EP0StartXfer+0x2a8>)
   213b0:	4013      	ands	r3, r2
   213b2:	610b      	str	r3, [r1, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
   213b4:	693b      	ldr	r3, [r7, #16]
   213b6:	015a      	lsls	r2, r3, #5
   213b8:	697b      	ldr	r3, [r7, #20]
   213ba:	4413      	add	r3, r2
   213bc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   213c0:	691b      	ldr	r3, [r3, #16]
   213c2:	693a      	ldr	r2, [r7, #16]
   213c4:	0151      	lsls	r1, r2, #5
   213c6:	697a      	ldr	r2, [r7, #20]
   213c8:	440a      	add	r2, r1
   213ca:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   213ce:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
   213d2:	6113      	str	r3, [r2, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
   213d4:	693b      	ldr	r3, [r7, #16]
   213d6:	015a      	lsls	r2, r3, #5
   213d8:	697b      	ldr	r3, [r7, #20]
   213da:	4413      	add	r3, r2
   213dc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   213e0:	691a      	ldr	r2, [r3, #16]
   213e2:	693b      	ldr	r3, [r7, #16]
   213e4:	0159      	lsls	r1, r3, #5
   213e6:	697b      	ldr	r3, [r7, #20]
   213e8:	440b      	add	r3, r1
   213ea:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   213ee:	4619      	mov	r1, r3
   213f0:	4b88      	ldr	r3, [pc, #544]	; (21614 <USB_EP0StartXfer+0x2ac>)
   213f2:	4013      	ands	r3, r2
   213f4:	610b      	str	r3, [r1, #16]
   213f6:	e04e      	b.n	21496 <USB_EP0StartXfer+0x12e>
      /* Program the transfer size and packet count
      * as follows: xfersize = N * maxpacket +
      * short_packet pktcnt = N + (short_packet
      * exist ? 1 : 0)
      */
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
   213f8:	693b      	ldr	r3, [r7, #16]
   213fa:	015a      	lsls	r2, r3, #5
   213fc:	697b      	ldr	r3, [r7, #20]
   213fe:	4413      	add	r3, r2
   21400:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   21404:	691a      	ldr	r2, [r3, #16]
   21406:	693b      	ldr	r3, [r7, #16]
   21408:	0159      	lsls	r1, r3, #5
   2140a:	697b      	ldr	r3, [r7, #20]
   2140c:	440b      	add	r3, r1
   2140e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   21412:	4619      	mov	r1, r3
   21414:	4b7f      	ldr	r3, [pc, #508]	; (21614 <USB_EP0StartXfer+0x2ac>)
   21416:	4013      	ands	r3, r2
   21418:	610b      	str	r3, [r1, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
   2141a:	693b      	ldr	r3, [r7, #16]
   2141c:	015a      	lsls	r2, r3, #5
   2141e:	697b      	ldr	r3, [r7, #20]
   21420:	4413      	add	r3, r2
   21422:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   21426:	691a      	ldr	r2, [r3, #16]
   21428:	693b      	ldr	r3, [r7, #16]
   2142a:	0159      	lsls	r1, r3, #5
   2142c:	697b      	ldr	r3, [r7, #20]
   2142e:	440b      	add	r3, r1
   21430:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   21434:	4619      	mov	r1, r3
   21436:	4b76      	ldr	r3, [pc, #472]	; (21610 <USB_EP0StartXfer+0x2a8>)
   21438:	4013      	ands	r3, r2
   2143a:	610b      	str	r3, [r1, #16]

      if (ep->xfer_len > ep->maxpacket)
   2143c:	68bb      	ldr	r3, [r7, #8]
   2143e:	695a      	ldr	r2, [r3, #20]
   21440:	68bb      	ldr	r3, [r7, #8]
   21442:	689b      	ldr	r3, [r3, #8]
   21444:	429a      	cmp	r2, r3
   21446:	d903      	bls.n	21450 <USB_EP0StartXfer+0xe8>
      {
        ep->xfer_len = ep->maxpacket;
   21448:	68bb      	ldr	r3, [r7, #8]
   2144a:	689a      	ldr	r2, [r3, #8]
   2144c:	68bb      	ldr	r3, [r7, #8]
   2144e:	615a      	str	r2, [r3, #20]
      }
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
   21450:	693b      	ldr	r3, [r7, #16]
   21452:	015a      	lsls	r2, r3, #5
   21454:	697b      	ldr	r3, [r7, #20]
   21456:	4413      	add	r3, r2
   21458:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   2145c:	691b      	ldr	r3, [r3, #16]
   2145e:	693a      	ldr	r2, [r7, #16]
   21460:	0151      	lsls	r1, r2, #5
   21462:	697a      	ldr	r2, [r7, #20]
   21464:	440a      	add	r2, r1
   21466:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   2146a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
   2146e:	6113      	str	r3, [r2, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
   21470:	693b      	ldr	r3, [r7, #16]
   21472:	015a      	lsls	r2, r3, #5
   21474:	697b      	ldr	r3, [r7, #20]
   21476:	4413      	add	r3, r2
   21478:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   2147c:	691a      	ldr	r2, [r3, #16]
   2147e:	68bb      	ldr	r3, [r7, #8]
   21480:	695b      	ldr	r3, [r3, #20]
   21482:	f3c3 0312 	ubfx	r3, r3, #0, #19
   21486:	6939      	ldr	r1, [r7, #16]
   21488:	0148      	lsls	r0, r1, #5
   2148a:	6979      	ldr	r1, [r7, #20]
   2148c:	4401      	add	r1, r0
   2148e:	f501 6110 	add.w	r1, r1, #2304	; 0x900
   21492:	4313      	orrs	r3, r2
   21494:	610b      	str	r3, [r1, #16]
    }

    if (dma == 1U)
   21496:	79fb      	ldrb	r3, [r7, #7]
   21498:	2b01      	cmp	r3, #1
   2149a:	d11e      	bne.n	214da <USB_EP0StartXfer+0x172>
    {
      if ((uint32_t)ep->dma_addr != 0U)
   2149c:	68bb      	ldr	r3, [r7, #8]
   2149e:	691b      	ldr	r3, [r3, #16]
   214a0:	2b00      	cmp	r3, #0
   214a2:	d009      	beq.n	214b8 <USB_EP0StartXfer+0x150>
      {
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
   214a4:	693b      	ldr	r3, [r7, #16]
   214a6:	015a      	lsls	r2, r3, #5
   214a8:	697b      	ldr	r3, [r7, #20]
   214aa:	4413      	add	r3, r2
   214ac:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   214b0:	461a      	mov	r2, r3
   214b2:	68bb      	ldr	r3, [r7, #8]
   214b4:	691b      	ldr	r3, [r3, #16]
   214b6:	6153      	str	r3, [r2, #20]
      }

      /* EP enable, IN data in FIFO */
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
   214b8:	693b      	ldr	r3, [r7, #16]
   214ba:	015a      	lsls	r2, r3, #5
   214bc:	697b      	ldr	r3, [r7, #20]
   214be:	4413      	add	r3, r2
   214c0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   214c4:	681b      	ldr	r3, [r3, #0]
   214c6:	693a      	ldr	r2, [r7, #16]
   214c8:	0151      	lsls	r1, r2, #5
   214ca:	697a      	ldr	r2, [r7, #20]
   214cc:	440a      	add	r2, r1
   214ce:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   214d2:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
   214d6:	6013      	str	r3, [r2, #0]
   214d8:	e092      	b.n	21600 <USB_EP0StartXfer+0x298>
    }
    else
    {
      /* EP enable, IN data in FIFO */
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
   214da:	693b      	ldr	r3, [r7, #16]
   214dc:	015a      	lsls	r2, r3, #5
   214de:	697b      	ldr	r3, [r7, #20]
   214e0:	4413      	add	r3, r2
   214e2:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   214e6:	681b      	ldr	r3, [r3, #0]
   214e8:	693a      	ldr	r2, [r7, #16]
   214ea:	0151      	lsls	r1, r2, #5
   214ec:	697a      	ldr	r2, [r7, #20]
   214ee:	440a      	add	r2, r1
   214f0:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   214f4:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
   214f8:	6013      	str	r3, [r2, #0]

      /* Enable the Tx FIFO Empty Interrupt for this EP */
      if (ep->xfer_len > 0U)
   214fa:	68bb      	ldr	r3, [r7, #8]
   214fc:	695b      	ldr	r3, [r3, #20]
   214fe:	2b00      	cmp	r3, #0
   21500:	d07e      	beq.n	21600 <USB_EP0StartXfer+0x298>
      {
        USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
   21502:	697b      	ldr	r3, [r7, #20]
   21504:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   21508:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   2150a:	68bb      	ldr	r3, [r7, #8]
   2150c:	781b      	ldrb	r3, [r3, #0]
   2150e:	f003 030f 	and.w	r3, r3, #15
   21512:	2101      	movs	r1, #1
   21514:	fa01 f303 	lsl.w	r3, r1, r3
   21518:	6979      	ldr	r1, [r7, #20]
   2151a:	f501 6100 	add.w	r1, r1, #2048	; 0x800
   2151e:	4313      	orrs	r3, r2
   21520:	634b      	str	r3, [r1, #52]	; 0x34
   21522:	e06d      	b.n	21600 <USB_EP0StartXfer+0x298>
  {
    /* Program the transfer size and packet count as follows:
    * pktcnt = N
    * xfersize = N * maxpacket
    */
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
   21524:	693b      	ldr	r3, [r7, #16]
   21526:	015a      	lsls	r2, r3, #5
   21528:	697b      	ldr	r3, [r7, #20]
   2152a:	4413      	add	r3, r2
   2152c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   21530:	691a      	ldr	r2, [r3, #16]
   21532:	693b      	ldr	r3, [r7, #16]
   21534:	0159      	lsls	r1, r3, #5
   21536:	697b      	ldr	r3, [r7, #20]
   21538:	440b      	add	r3, r1
   2153a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   2153e:	4619      	mov	r1, r3
   21540:	4b34      	ldr	r3, [pc, #208]	; (21614 <USB_EP0StartXfer+0x2ac>)
   21542:	4013      	ands	r3, r2
   21544:	610b      	str	r3, [r1, #16]
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
   21546:	693b      	ldr	r3, [r7, #16]
   21548:	015a      	lsls	r2, r3, #5
   2154a:	697b      	ldr	r3, [r7, #20]
   2154c:	4413      	add	r3, r2
   2154e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   21552:	691a      	ldr	r2, [r3, #16]
   21554:	693b      	ldr	r3, [r7, #16]
   21556:	0159      	lsls	r1, r3, #5
   21558:	697b      	ldr	r3, [r7, #20]
   2155a:	440b      	add	r3, r1
   2155c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   21560:	4619      	mov	r1, r3
   21562:	4b2b      	ldr	r3, [pc, #172]	; (21610 <USB_EP0StartXfer+0x2a8>)
   21564:	4013      	ands	r3, r2
   21566:	610b      	str	r3, [r1, #16]

    if (ep->xfer_len > 0U)
   21568:	68bb      	ldr	r3, [r7, #8]
   2156a:	695b      	ldr	r3, [r3, #20]
   2156c:	2b00      	cmp	r3, #0
   2156e:	d003      	beq.n	21578 <USB_EP0StartXfer+0x210>
    {
      ep->xfer_len = ep->maxpacket;
   21570:	68bb      	ldr	r3, [r7, #8]
   21572:	689a      	ldr	r2, [r3, #8]
   21574:	68bb      	ldr	r3, [r7, #8]
   21576:	615a      	str	r2, [r3, #20]
    }

    USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
   21578:	693b      	ldr	r3, [r7, #16]
   2157a:	015a      	lsls	r2, r3, #5
   2157c:	697b      	ldr	r3, [r7, #20]
   2157e:	4413      	add	r3, r2
   21580:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   21584:	691b      	ldr	r3, [r3, #16]
   21586:	693a      	ldr	r2, [r7, #16]
   21588:	0151      	lsls	r1, r2, #5
   2158a:	697a      	ldr	r2, [r7, #20]
   2158c:	440a      	add	r2, r1
   2158e:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
   21592:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
   21596:	6113      	str	r3, [r2, #16]
    USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & (ep->maxpacket));
   21598:	693b      	ldr	r3, [r7, #16]
   2159a:	015a      	lsls	r2, r3, #5
   2159c:	697b      	ldr	r3, [r7, #20]
   2159e:	4413      	add	r3, r2
   215a0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   215a4:	691a      	ldr	r2, [r3, #16]
   215a6:	68bb      	ldr	r3, [r7, #8]
   215a8:	689b      	ldr	r3, [r3, #8]
   215aa:	f3c3 0312 	ubfx	r3, r3, #0, #19
   215ae:	6939      	ldr	r1, [r7, #16]
   215b0:	0148      	lsls	r0, r1, #5
   215b2:	6979      	ldr	r1, [r7, #20]
   215b4:	4401      	add	r1, r0
   215b6:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
   215ba:	4313      	orrs	r3, r2
   215bc:	610b      	str	r3, [r1, #16]

    if (dma == 1U)
   215be:	79fb      	ldrb	r3, [r7, #7]
   215c0:	2b01      	cmp	r3, #1
   215c2:	d10d      	bne.n	215e0 <USB_EP0StartXfer+0x278>
    {
      if ((uint32_t)ep->xfer_buff != 0U)
   215c4:	68bb      	ldr	r3, [r7, #8]
   215c6:	68db      	ldr	r3, [r3, #12]
   215c8:	2b00      	cmp	r3, #0
   215ca:	d009      	beq.n	215e0 <USB_EP0StartXfer+0x278>
      {
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
   215cc:	68bb      	ldr	r3, [r7, #8]
   215ce:	68d9      	ldr	r1, [r3, #12]
   215d0:	693b      	ldr	r3, [r7, #16]
   215d2:	015a      	lsls	r2, r3, #5
   215d4:	697b      	ldr	r3, [r7, #20]
   215d6:	4413      	add	r3, r2
   215d8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   215dc:	460a      	mov	r2, r1
   215de:	615a      	str	r2, [r3, #20]
      }
    }

    /* EP enable */
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
   215e0:	693b      	ldr	r3, [r7, #16]
   215e2:	015a      	lsls	r2, r3, #5
   215e4:	697b      	ldr	r3, [r7, #20]
   215e6:	4413      	add	r3, r2
   215e8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   215ec:	681b      	ldr	r3, [r3, #0]
   215ee:	693a      	ldr	r2, [r7, #16]
   215f0:	0151      	lsls	r1, r2, #5
   215f2:	697a      	ldr	r2, [r7, #20]
   215f4:	440a      	add	r2, r1
   215f6:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
   215fa:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
   215fe:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
   21600:	2300      	movs	r3, #0
}
   21602:	4618      	mov	r0, r3
   21604:	371c      	adds	r7, #28
   21606:	46bd      	mov	sp, r7
   21608:	f85d 7b04 	ldr.w	r7, [sp], #4
   2160c:	4770      	bx	lr
   2160e:	bf00      	nop
   21610:	e007ffff 	.word	0xe007ffff
   21614:	fff80000 	.word	0xfff80000

00021618 <USB_WritePacket>:
  *           0 : DMA feature not used
  *           1 : DMA feature used
  * @retval HAL status
  */
HAL_StatusTypeDef USB_WritePacket(USB_OTG_GlobalTypeDef *USBx, uint8_t *src, uint8_t ch_ep_num, uint16_t len, uint8_t dma)
{
   21618:	b480      	push	{r7}
   2161a:	b089      	sub	sp, #36	; 0x24
   2161c:	af00      	add	r7, sp, #0
   2161e:	60f8      	str	r0, [r7, #12]
   21620:	60b9      	str	r1, [r7, #8]
   21622:	4611      	mov	r1, r2
   21624:	461a      	mov	r2, r3
   21626:	460b      	mov	r3, r1
   21628:	71fb      	strb	r3, [r7, #7]
   2162a:	4613      	mov	r3, r2
   2162c:	80bb      	strh	r3, [r7, #4]
  uint32_t USBx_BASE = (uint32_t)USBx;
   2162e:	68fb      	ldr	r3, [r7, #12]
   21630:	617b      	str	r3, [r7, #20]
  uint32_t *pSrc = (uint32_t *)src;
   21632:	68bb      	ldr	r3, [r7, #8]
   21634:	61fb      	str	r3, [r7, #28]
  uint32_t count32b, i;

  if (dma == 0U)
   21636:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
   2163a:	2b00      	cmp	r3, #0
   2163c:	d11a      	bne.n	21674 <USB_WritePacket+0x5c>
  {
    count32b = ((uint32_t)len + 3U) / 4U;
   2163e:	88bb      	ldrh	r3, [r7, #4]
   21640:	3303      	adds	r3, #3
   21642:	089b      	lsrs	r3, r3, #2
   21644:	613b      	str	r3, [r7, #16]
    for (i = 0U; i < count32b; i++)
   21646:	2300      	movs	r3, #0
   21648:	61bb      	str	r3, [r7, #24]
   2164a:	e00f      	b.n	2166c <USB_WritePacket+0x54>
    {
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
   2164c:	79fb      	ldrb	r3, [r7, #7]
   2164e:	031a      	lsls	r2, r3, #12
   21650:	697b      	ldr	r3, [r7, #20]
   21652:	4413      	add	r3, r2
   21654:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   21658:	461a      	mov	r2, r3
   2165a:	69fb      	ldr	r3, [r7, #28]
   2165c:	681b      	ldr	r3, [r3, #0]
   2165e:	6013      	str	r3, [r2, #0]
      pSrc++;
   21660:	69fb      	ldr	r3, [r7, #28]
   21662:	3304      	adds	r3, #4
   21664:	61fb      	str	r3, [r7, #28]
    for (i = 0U; i < count32b; i++)
   21666:	69bb      	ldr	r3, [r7, #24]
   21668:	3301      	adds	r3, #1
   2166a:	61bb      	str	r3, [r7, #24]
   2166c:	69ba      	ldr	r2, [r7, #24]
   2166e:	693b      	ldr	r3, [r7, #16]
   21670:	429a      	cmp	r2, r3
   21672:	d3eb      	bcc.n	2164c <USB_WritePacket+0x34>
    }
  }

  return HAL_OK;
   21674:	2300      	movs	r3, #0
}
   21676:	4618      	mov	r0, r3
   21678:	3724      	adds	r7, #36	; 0x24
   2167a:	46bd      	mov	sp, r7
   2167c:	f85d 7b04 	ldr.w	r7, [sp], #4
   21680:	4770      	bx	lr

00021682 <USB_EPSetStall>:
  * @param  USBx  Selected device
  * @param  ep pointer to endpoint structure
  * @retval HAL status
  */
HAL_StatusTypeDef USB_EPSetStall(USB_OTG_GlobalTypeDef *USBx, USB_OTG_EPTypeDef *ep)
{
   21682:	b480      	push	{r7}
   21684:	b085      	sub	sp, #20
   21686:	af00      	add	r7, sp, #0
   21688:	6078      	str	r0, [r7, #4]
   2168a:	6039      	str	r1, [r7, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
   2168c:	687b      	ldr	r3, [r7, #4]
   2168e:	60fb      	str	r3, [r7, #12]
  uint32_t epnum = (uint32_t)ep->num;
   21690:	683b      	ldr	r3, [r7, #0]
   21692:	781b      	ldrb	r3, [r3, #0]
   21694:	60bb      	str	r3, [r7, #8]

  if (ep->is_in == 1U)
   21696:	683b      	ldr	r3, [r7, #0]
   21698:	785b      	ldrb	r3, [r3, #1]
   2169a:	2b01      	cmp	r3, #1
   2169c:	d12c      	bne.n	216f8 <USB_EPSetStall+0x76>
  {
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
   2169e:	68bb      	ldr	r3, [r7, #8]
   216a0:	015a      	lsls	r2, r3, #5
   216a2:	68fb      	ldr	r3, [r7, #12]
   216a4:	4413      	add	r3, r2
   216a6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   216aa:	681b      	ldr	r3, [r3, #0]
   216ac:	2b00      	cmp	r3, #0
   216ae:	db12      	blt.n	216d6 <USB_EPSetStall+0x54>
   216b0:	68bb      	ldr	r3, [r7, #8]
   216b2:	2b00      	cmp	r3, #0
   216b4:	d00f      	beq.n	216d6 <USB_EPSetStall+0x54>
    {
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
   216b6:	68bb      	ldr	r3, [r7, #8]
   216b8:	015a      	lsls	r2, r3, #5
   216ba:	68fb      	ldr	r3, [r7, #12]
   216bc:	4413      	add	r3, r2
   216be:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   216c2:	681b      	ldr	r3, [r3, #0]
   216c4:	68ba      	ldr	r2, [r7, #8]
   216c6:	0151      	lsls	r1, r2, #5
   216c8:	68fa      	ldr	r2, [r7, #12]
   216ca:	440a      	add	r2, r1
   216cc:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   216d0:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
   216d4:	6013      	str	r3, [r2, #0]
    }
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
   216d6:	68bb      	ldr	r3, [r7, #8]
   216d8:	015a      	lsls	r2, r3, #5
   216da:	68fb      	ldr	r3, [r7, #12]
   216dc:	4413      	add	r3, r2
   216de:	f503 6310 	add.w	r3, r3, #2304	; 0x900
   216e2:	681b      	ldr	r3, [r3, #0]
   216e4:	68ba      	ldr	r2, [r7, #8]
   216e6:	0151      	lsls	r1, r2, #5
   216e8:	68fa      	ldr	r2, [r7, #12]
   216ea:	440a      	add	r2, r1
   216ec:	f502 6210 	add.w	r2, r2, #2304	; 0x900
   216f0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
   216f4:	6013      	str	r3, [r2, #0]
   216f6:	e02b      	b.n	21750 <USB_EPSetStall+0xce>
  }
  else
  {
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
   216f8:	68bb      	ldr	r3, [r7, #8]
   216fa:	015a      	lsls	r2, r3, #5
   216fc:	68fb      	ldr	r3, [r7, #12]
   216fe:	4413      	add	r3, r2
   21700:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   21704:	681b      	ldr	r3, [r3, #0]
   21706:	2b00      	cmp	r3, #0
   21708:	db12      	blt.n	21730 <USB_EPSetStall+0xae>
   2170a:	68bb      	ldr	r3, [r7, #8]
   2170c:	2b00      	cmp	r3, #0
   2170e:	d00f      	beq.n	21730 <USB_EPSetStall+0xae>
    {
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
   21710:	68bb      	ldr	r3, [r7, #8]
   21712:	015a      	lsls	r2, r3, #5
   21714:	68fb      	ldr	r3, [r7, #12]
   21716:	4413      	add	r3, r2
   21718:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   2171c:	681b      	ldr	r3, [r3, #0]
   2171e:	68ba      	ldr	r2, [r7, #8]
   21720:	0151      	lsls	r1, r2, #5
   21722:	68fa      	ldr	r2, [r7, #12]
   21724:	440a      	add	r2, r1
   21726:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
   2172a:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
   2172e:	6013      	str	r3, [r2, #0]
    }
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
   21730:	68bb      	ldr	r3, [r7, #8]
   21732:	015a      	lsls	r2, r3, #5
   21734:	68fb      	ldr	r3, [r7, #12]
   21736:	4413      	add	r3, r2
   21738:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   2173c:	681b      	ldr	r3, [r3, #0]
   2173e:	68ba      	ldr	r2, [r7, #8]
   21740:	0151      	lsls	r1, r2, #5
   21742:	68fa      	ldr	r2, [r7, #12]
   21744:	440a      	add	r2, r1
   21746:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
   2174a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
   2174e:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
   21750:	2300      	movs	r3, #0
}
   21752:	4618      	mov	r0, r3
   21754:	3714      	adds	r7, #20
   21756:	46bd      	mov	sp, r7
   21758:	f85d 7b04 	ldr.w	r7, [sp], #4
   2175c:	4770      	bx	lr

0002175e <USB_DevConnect>:
  * @brief  USB_DevConnect : Connect the USB device by enabling the pull-up/pull-down
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef  USB_DevConnect(USB_OTG_GlobalTypeDef *USBx)
{
   2175e:	b580      	push	{r7, lr}
   21760:	b084      	sub	sp, #16
   21762:	af00      	add	r7, sp, #0
   21764:	6078      	str	r0, [r7, #4]
  uint32_t USBx_BASE = (uint32_t)USBx;
   21766:	687b      	ldr	r3, [r7, #4]
   21768:	60fb      	str	r3, [r7, #12]

  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
   2176a:	68fb      	ldr	r3, [r7, #12]
   2176c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   21770:	685b      	ldr	r3, [r3, #4]
   21772:	68fa      	ldr	r2, [r7, #12]
   21774:	f502 6200 	add.w	r2, r2, #2048	; 0x800
   21778:	f023 0302 	bic.w	r3, r3, #2
   2177c:	6053      	str	r3, [r2, #4]
  HAL_Delay(3U);
   2177e:	2003      	movs	r0, #3
   21780:	f7f8 fc04 	bl	19f8c <HAL_Delay>

  return HAL_OK;
   21784:	2300      	movs	r3, #0
}
   21786:	4618      	mov	r0, r3
   21788:	3710      	adds	r7, #16
   2178a:	46bd      	mov	sp, r7
   2178c:	bd80      	pop	{r7, pc}

0002178e <USB_DevDisconnect>:
  * @brief  USB_DevDisconnect : Disconnect the USB device by disabling the pull-up/pull-down
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef  USB_DevDisconnect(USB_OTG_GlobalTypeDef *USBx)
{
   2178e:	b580      	push	{r7, lr}
   21790:	b084      	sub	sp, #16
   21792:	af00      	add	r7, sp, #0
   21794:	6078      	str	r0, [r7, #4]
  uint32_t USBx_BASE = (uint32_t)USBx;
   21796:	687b      	ldr	r3, [r7, #4]
   21798:	60fb      	str	r3, [r7, #12]

  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
   2179a:	68fb      	ldr	r3, [r7, #12]
   2179c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
   217a0:	685b      	ldr	r3, [r3, #4]
   217a2:	68fa      	ldr	r2, [r7, #12]
   217a4:	f502 6200 	add.w	r2, r2, #2048	; 0x800
   217a8:	f043 0302 	orr.w	r3, r3, #2
   217ac:	6053      	str	r3, [r2, #4]
  HAL_Delay(3U);
   217ae:	2003      	movs	r0, #3
   217b0:	f7f8 fbec 	bl	19f8c <HAL_Delay>

  return HAL_OK;
   217b4:	2300      	movs	r3, #0
}
   217b6:	4618      	mov	r0, r3
   217b8:	3710      	adds	r7, #16
   217ba:	46bd      	mov	sp, r7
   217bc:	bd80      	pop	{r7, pc}
	...

000217c0 <USB_EP0_OutStart>:
  *           1 : DMA feature used
  * @param  psetup  pointer to setup packet
  * @retval HAL status
  */
HAL_StatusTypeDef USB_EP0_OutStart(USB_OTG_GlobalTypeDef *USBx, uint8_t dma, uint8_t *psetup)
{
   217c0:	b480      	push	{r7}
   217c2:	b087      	sub	sp, #28
   217c4:	af00      	add	r7, sp, #0
   217c6:	60f8      	str	r0, [r7, #12]
   217c8:	460b      	mov	r3, r1
   217ca:	607a      	str	r2, [r7, #4]
   217cc:	72fb      	strb	r3, [r7, #11]
  uint32_t USBx_BASE = (uint32_t)USBx;
   217ce:	68fb      	ldr	r3, [r7, #12]
   217d0:	617b      	str	r3, [r7, #20]
  uint32_t gSNPSiD = *(__IO uint32_t *)(&USBx->CID + 0x1U);
   217d2:	68fb      	ldr	r3, [r7, #12]
   217d4:	333c      	adds	r3, #60	; 0x3c
   217d6:	3304      	adds	r3, #4
   217d8:	681b      	ldr	r3, [r3, #0]
   217da:	613b      	str	r3, [r7, #16]

  if (gSNPSiD > USB_OTG_CORE_ID_300A)
   217dc:	693b      	ldr	r3, [r7, #16]
   217de:	4a26      	ldr	r2, [pc, #152]	; (21878 <USB_EP0_OutStart+0xb8>)
   217e0:	4293      	cmp	r3, r2
   217e2:	d90a      	bls.n	217fa <USB_EP0_OutStart+0x3a>
  {
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
   217e4:	697b      	ldr	r3, [r7, #20]
   217e6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   217ea:	681b      	ldr	r3, [r3, #0]
   217ec:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
   217f0:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   217f4:	d101      	bne.n	217fa <USB_EP0_OutStart+0x3a>
    {
      return HAL_OK;
   217f6:	2300      	movs	r3, #0
   217f8:	e037      	b.n	2186a <USB_EP0_OutStart+0xaa>
    }
  }

  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
   217fa:	697b      	ldr	r3, [r7, #20]
   217fc:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   21800:	461a      	mov	r2, r3
   21802:	2300      	movs	r3, #0
   21804:	6113      	str	r3, [r2, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
   21806:	697b      	ldr	r3, [r7, #20]
   21808:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   2180c:	691b      	ldr	r3, [r3, #16]
   2180e:	697a      	ldr	r2, [r7, #20]
   21810:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
   21814:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
   21818:	6113      	str	r3, [r2, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
   2181a:	697b      	ldr	r3, [r7, #20]
   2181c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   21820:	691b      	ldr	r3, [r3, #16]
   21822:	697a      	ldr	r2, [r7, #20]
   21824:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
   21828:	f043 0318 	orr.w	r3, r3, #24
   2182c:	6113      	str	r3, [r2, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
   2182e:	697b      	ldr	r3, [r7, #20]
   21830:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   21834:	691b      	ldr	r3, [r3, #16]
   21836:	697a      	ldr	r2, [r7, #20]
   21838:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
   2183c:	f043 43c0 	orr.w	r3, r3, #1610612736	; 0x60000000
   21840:	6113      	str	r3, [r2, #16]

  if (dma == 1U)
   21842:	7afb      	ldrb	r3, [r7, #11]
   21844:	2b01      	cmp	r3, #1
   21846:	d10f      	bne.n	21868 <USB_EP0_OutStart+0xa8>
  {
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
   21848:	697b      	ldr	r3, [r7, #20]
   2184a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   2184e:	461a      	mov	r2, r3
   21850:	687b      	ldr	r3, [r7, #4]
   21852:	6153      	str	r3, [r2, #20]
    /* EP enable */
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
   21854:	697b      	ldr	r3, [r7, #20]
   21856:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
   2185a:	681b      	ldr	r3, [r3, #0]
   2185c:	697a      	ldr	r2, [r7, #20]
   2185e:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
   21862:	f043 2380 	orr.w	r3, r3, #2147516416	; 0x80008000
   21866:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
   21868:	2300      	movs	r3, #0
}
   2186a:	4618      	mov	r0, r3
   2186c:	371c      	adds	r7, #28
   2186e:	46bd      	mov	sp, r7
   21870:	f85d 7b04 	ldr.w	r7, [sp], #4
   21874:	4770      	bx	lr
   21876:	bf00      	nop
   21878:	4f54300a 	.word	0x4f54300a

0002187c <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
   2187c:	b480      	push	{r7}
   2187e:	b085      	sub	sp, #20
   21880:	af00      	add	r7, sp, #0
   21882:	6078      	str	r0, [r7, #4]
  uint32_t count = 0U;
   21884:	2300      	movs	r3, #0
   21886:	60fb      	str	r3, [r7, #12]

  /* Wait for AHB master IDLE state. */
  do
  {
    if (++count > 200000U)
   21888:	68fb      	ldr	r3, [r7, #12]
   2188a:	3301      	adds	r3, #1
   2188c:	60fb      	str	r3, [r7, #12]
   2188e:	68fb      	ldr	r3, [r7, #12]
   21890:	4a13      	ldr	r2, [pc, #76]	; (218e0 <USB_CoreReset+0x64>)
   21892:	4293      	cmp	r3, r2
   21894:	d901      	bls.n	2189a <USB_CoreReset+0x1e>
    {
      return HAL_TIMEOUT;
   21896:	2303      	movs	r3, #3
   21898:	e01b      	b.n	218d2 <USB_CoreReset+0x56>
    }
  }
  while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
   2189a:	687b      	ldr	r3, [r7, #4]
   2189c:	691b      	ldr	r3, [r3, #16]
   2189e:	2b00      	cmp	r3, #0
   218a0:	daf2      	bge.n	21888 <USB_CoreReset+0xc>

  /* Core Soft Reset */
  count = 0U;
   218a2:	2300      	movs	r3, #0
   218a4:	60fb      	str	r3, [r7, #12]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
   218a6:	687b      	ldr	r3, [r7, #4]
   218a8:	691b      	ldr	r3, [r3, #16]
   218aa:	f043 0201 	orr.w	r2, r3, #1
   218ae:	687b      	ldr	r3, [r7, #4]
   218b0:	611a      	str	r2, [r3, #16]

  do
  {
    if (++count > 200000U)
   218b2:	68fb      	ldr	r3, [r7, #12]
   218b4:	3301      	adds	r3, #1
   218b6:	60fb      	str	r3, [r7, #12]
   218b8:	68fb      	ldr	r3, [r7, #12]
   218ba:	4a09      	ldr	r2, [pc, #36]	; (218e0 <USB_CoreReset+0x64>)
   218bc:	4293      	cmp	r3, r2
   218be:	d901      	bls.n	218c4 <USB_CoreReset+0x48>
    {
      return HAL_TIMEOUT;
   218c0:	2303      	movs	r3, #3
   218c2:	e006      	b.n	218d2 <USB_CoreReset+0x56>
    }
  }
  while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
   218c4:	687b      	ldr	r3, [r7, #4]
   218c6:	691b      	ldr	r3, [r3, #16]
   218c8:	f003 0301 	and.w	r3, r3, #1
   218cc:	2b01      	cmp	r3, #1
   218ce:	d0f0      	beq.n	218b2 <USB_CoreReset+0x36>

  return HAL_OK;
   218d0:	2300      	movs	r3, #0
}
   218d2:	4618      	mov	r0, r3
   218d4:	3714      	adds	r7, #20
   218d6:	46bd      	mov	sp, r7
   218d8:	f85d 7b04 	ldr.w	r7, [sp], #4
   218dc:	4770      	bx	lr
   218de:	bf00      	nop
   218e0:	00030d40 	.word	0x00030d40

000218e4 <USBD_CDC_Init>:
  * @param  pdev: device instance
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t  USBD_CDC_Init(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
   218e4:	b580      	push	{r7, lr}
   218e6:	b084      	sub	sp, #16
   218e8:	af00      	add	r7, sp, #0
   218ea:	6078      	str	r0, [r7, #4]
   218ec:	460b      	mov	r3, r1
   218ee:	70fb      	strb	r3, [r7, #3]
  uint8_t ret = 0U;
   218f0:	2300      	movs	r3, #0
   218f2:	73fb      	strb	r3, [r7, #15]
  USBD_CDC_HandleTypeDef   *hcdc;

  if (pdev->dev_speed == USBD_SPEED_HIGH)
   218f4:	687b      	ldr	r3, [r7, #4]
   218f6:	7c1b      	ldrb	r3, [r3, #16]
   218f8:	2b00      	cmp	r3, #0
   218fa:	d115      	bne.n	21928 <USBD_CDC_Init+0x44>
  {
    /* Open EP IN */
    USBD_LL_OpenEP(pdev, CDC_IN_EP, USBD_EP_TYPE_BULK,
   218fc:	f44f 7300 	mov.w	r3, #512	; 0x200
   21900:	2202      	movs	r2, #2
   21902:	2181      	movs	r1, #129	; 0x81
   21904:	6878      	ldr	r0, [r7, #4]
   21906:	f000 fea2 	bl	2264e <USBD_LL_OpenEP>
                   CDC_DATA_HS_IN_PACKET_SIZE);

    pdev->ep_in[CDC_IN_EP & 0xFU].is_used = 1U;
   2190a:	687b      	ldr	r3, [r7, #4]
   2190c:	2201      	movs	r2, #1
   2190e:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Open EP OUT */
    USBD_LL_OpenEP(pdev, CDC_OUT_EP, USBD_EP_TYPE_BULK,
   21910:	f44f 7300 	mov.w	r3, #512	; 0x200
   21914:	2202      	movs	r2, #2
   21916:	2101      	movs	r1, #1
   21918:	6878      	ldr	r0, [r7, #4]
   2191a:	f000 fe98 	bl	2264e <USBD_LL_OpenEP>
                   CDC_DATA_HS_OUT_PACKET_SIZE);

    pdev->ep_out[CDC_OUT_EP & 0xFU].is_used = 1U;
   2191e:	687b      	ldr	r3, [r7, #4]
   21920:	2201      	movs	r2, #1
   21922:	f8c3 216c 	str.w	r2, [r3, #364]	; 0x16c
   21926:	e012      	b.n	2194e <USBD_CDC_Init+0x6a>

  }
  else
  {
    /* Open EP IN */
    USBD_LL_OpenEP(pdev, CDC_IN_EP, USBD_EP_TYPE_BULK,
   21928:	2340      	movs	r3, #64	; 0x40
   2192a:	2202      	movs	r2, #2
   2192c:	2181      	movs	r1, #129	; 0x81
   2192e:	6878      	ldr	r0, [r7, #4]
   21930:	f000 fe8d 	bl	2264e <USBD_LL_OpenEP>
                   CDC_DATA_FS_IN_PACKET_SIZE);

    pdev->ep_in[CDC_IN_EP & 0xFU].is_used = 1U;
   21934:	687b      	ldr	r3, [r7, #4]
   21936:	2201      	movs	r2, #1
   21938:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Open EP OUT */
    USBD_LL_OpenEP(pdev, CDC_OUT_EP, USBD_EP_TYPE_BULK,
   2193a:	2340      	movs	r3, #64	; 0x40
   2193c:	2202      	movs	r2, #2
   2193e:	2101      	movs	r1, #1
   21940:	6878      	ldr	r0, [r7, #4]
   21942:	f000 fe84 	bl	2264e <USBD_LL_OpenEP>
                   CDC_DATA_FS_OUT_PACKET_SIZE);

    pdev->ep_out[CDC_OUT_EP & 0xFU].is_used = 1U;
   21946:	687b      	ldr	r3, [r7, #4]
   21948:	2201      	movs	r2, #1
   2194a:	f8c3 216c 	str.w	r2, [r3, #364]	; 0x16c
  }
  /* Open Command IN EP */
  USBD_LL_OpenEP(pdev, CDC_CMD_EP, USBD_EP_TYPE_INTR, CDC_CMD_PACKET_SIZE);
   2194e:	2308      	movs	r3, #8
   21950:	2203      	movs	r2, #3
   21952:	2182      	movs	r1, #130	; 0x82
   21954:	6878      	ldr	r0, [r7, #4]
   21956:	f000 fe7a 	bl	2264e <USBD_LL_OpenEP>
  pdev->ep_in[CDC_CMD_EP & 0xFU].is_used = 1U;
   2195a:	687b      	ldr	r3, [r7, #4]
   2195c:	2201      	movs	r2, #1
   2195e:	641a      	str	r2, [r3, #64]	; 0x40

  pdev->pClassData = USBD_malloc(sizeof(USBD_CDC_HandleTypeDef));
   21960:	f44f 7007 	mov.w	r0, #540	; 0x21c
   21964:	f000 ffa0 	bl	228a8 <malloc>
   21968:	4603      	mov	r3, r0
   2196a:	461a      	mov	r2, r3
   2196c:	687b      	ldr	r3, [r7, #4]
   2196e:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8

  if (pdev->pClassData == NULL)
   21972:	687b      	ldr	r3, [r7, #4]
   21974:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21978:	2b00      	cmp	r3, #0
   2197a:	d102      	bne.n	21982 <USBD_CDC_Init+0x9e>
  {
    ret = 1U;
   2197c:	2301      	movs	r3, #1
   2197e:	73fb      	strb	r3, [r7, #15]
   21980:	e026      	b.n	219d0 <USBD_CDC_Init+0xec>
  }
  else
  {
    hcdc = (USBD_CDC_HandleTypeDef *) pdev->pClassData;
   21982:	687b      	ldr	r3, [r7, #4]
   21984:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21988:	60bb      	str	r3, [r7, #8]

    /* Init  physical Interface components */
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Init();
   2198a:	687b      	ldr	r3, [r7, #4]
   2198c:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
   21990:	681b      	ldr	r3, [r3, #0]
   21992:	4798      	blx	r3

    /* Init Xfer states */
    hcdc->TxState = 0U;
   21994:	68bb      	ldr	r3, [r7, #8]
   21996:	2200      	movs	r2, #0
   21998:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
    hcdc->RxState = 0U;
   2199c:	68bb      	ldr	r3, [r7, #8]
   2199e:	2200      	movs	r2, #0
   219a0:	f8c3 2218 	str.w	r2, [r3, #536]	; 0x218

    if (pdev->dev_speed == USBD_SPEED_HIGH)
   219a4:	687b      	ldr	r3, [r7, #4]
   219a6:	7c1b      	ldrb	r3, [r3, #16]
   219a8:	2b00      	cmp	r3, #0
   219aa:	d109      	bne.n	219c0 <USBD_CDC_Init+0xdc>
    {
      /* Prepare Out endpoint to receive next packet */
      USBD_LL_PrepareReceive(pdev, CDC_OUT_EP, hcdc->RxBuffer,
   219ac:	68bb      	ldr	r3, [r7, #8]
   219ae:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
   219b2:	f44f 7300 	mov.w	r3, #512	; 0x200
   219b6:	2101      	movs	r1, #1
   219b8:	6878      	ldr	r0, [r7, #4]
   219ba:	f000 fecf 	bl	2275c <USBD_LL_PrepareReceive>
   219be:	e007      	b.n	219d0 <USBD_CDC_Init+0xec>
                             CDC_DATA_HS_OUT_PACKET_SIZE);
    }
    else
    {
      /* Prepare Out endpoint to receive next packet */
      USBD_LL_PrepareReceive(pdev, CDC_OUT_EP, hcdc->RxBuffer,
   219c0:	68bb      	ldr	r3, [r7, #8]
   219c2:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
   219c6:	2340      	movs	r3, #64	; 0x40
   219c8:	2101      	movs	r1, #1
   219ca:	6878      	ldr	r0, [r7, #4]
   219cc:	f000 fec6 	bl	2275c <USBD_LL_PrepareReceive>
                             CDC_DATA_FS_OUT_PACKET_SIZE);
    }
  }
  return ret;
   219d0:	7bfb      	ldrb	r3, [r7, #15]
}
   219d2:	4618      	mov	r0, r3
   219d4:	3710      	adds	r7, #16
   219d6:	46bd      	mov	sp, r7
   219d8:	bd80      	pop	{r7, pc}

000219da <USBD_CDC_DeInit>:
  * @param  pdev: device instance
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t  USBD_CDC_DeInit(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
   219da:	b580      	push	{r7, lr}
   219dc:	b084      	sub	sp, #16
   219de:	af00      	add	r7, sp, #0
   219e0:	6078      	str	r0, [r7, #4]
   219e2:	460b      	mov	r3, r1
   219e4:	70fb      	strb	r3, [r7, #3]
  uint8_t ret = 0U;
   219e6:	2300      	movs	r3, #0
   219e8:	73fb      	strb	r3, [r7, #15]

  /* Close EP IN */
  USBD_LL_CloseEP(pdev, CDC_IN_EP);
   219ea:	2181      	movs	r1, #129	; 0x81
   219ec:	6878      	ldr	r0, [r7, #4]
   219ee:	f000 fe54 	bl	2269a <USBD_LL_CloseEP>
  pdev->ep_in[CDC_IN_EP & 0xFU].is_used = 0U;
   219f2:	687b      	ldr	r3, [r7, #4]
   219f4:	2200      	movs	r2, #0
   219f6:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Close EP OUT */
  USBD_LL_CloseEP(pdev, CDC_OUT_EP);
   219f8:	2101      	movs	r1, #1
   219fa:	6878      	ldr	r0, [r7, #4]
   219fc:	f000 fe4d 	bl	2269a <USBD_LL_CloseEP>
  pdev->ep_out[CDC_OUT_EP & 0xFU].is_used = 0U;
   21a00:	687b      	ldr	r3, [r7, #4]
   21a02:	2200      	movs	r2, #0
   21a04:	f8c3 216c 	str.w	r2, [r3, #364]	; 0x16c

  /* Close Command IN EP */
  USBD_LL_CloseEP(pdev, CDC_CMD_EP);
   21a08:	2182      	movs	r1, #130	; 0x82
   21a0a:	6878      	ldr	r0, [r7, #4]
   21a0c:	f000 fe45 	bl	2269a <USBD_LL_CloseEP>
  pdev->ep_in[CDC_CMD_EP & 0xFU].is_used = 0U;
   21a10:	687b      	ldr	r3, [r7, #4]
   21a12:	2200      	movs	r2, #0
   21a14:	641a      	str	r2, [r3, #64]	; 0x40

  /* DeInit  physical Interface components */
  if (pdev->pClassData != NULL)
   21a16:	687b      	ldr	r3, [r7, #4]
   21a18:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21a1c:	2b00      	cmp	r3, #0
   21a1e:	d00e      	beq.n	21a3e <USBD_CDC_DeInit+0x64>
  {
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->DeInit();
   21a20:	687b      	ldr	r3, [r7, #4]
   21a22:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
   21a26:	685b      	ldr	r3, [r3, #4]
   21a28:	4798      	blx	r3
    USBD_free(pdev->pClassData);
   21a2a:	687b      	ldr	r3, [r7, #4]
   21a2c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21a30:	4618      	mov	r0, r3
   21a32:	f000 ff41 	bl	228b8 <free>
    pdev->pClassData = NULL;
   21a36:	687b      	ldr	r3, [r7, #4]
   21a38:	2200      	movs	r2, #0
   21a3a:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
  }

  return ret;
   21a3e:	7bfb      	ldrb	r3, [r7, #15]
}
   21a40:	4618      	mov	r0, r3
   21a42:	3710      	adds	r7, #16
   21a44:	46bd      	mov	sp, r7
   21a46:	bd80      	pop	{r7, pc}

00021a48 <USBD_CDC_Setup>:
  * @param  req: usb requests
  * @retval status
  */
static uint8_t  USBD_CDC_Setup(USBD_HandleTypeDef *pdev,
                               USBD_SetupReqTypedef *req)
{
   21a48:	b580      	push	{r7, lr}
   21a4a:	b086      	sub	sp, #24
   21a4c:	af00      	add	r7, sp, #0
   21a4e:	6078      	str	r0, [r7, #4]
   21a50:	6039      	str	r1, [r7, #0]
  USBD_CDC_HandleTypeDef   *hcdc = (USBD_CDC_HandleTypeDef *) pdev->pClassData;
   21a52:	687b      	ldr	r3, [r7, #4]
   21a54:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21a58:	613b      	str	r3, [r7, #16]
  uint8_t ifalt = 0U;
   21a5a:	2300      	movs	r3, #0
   21a5c:	73fb      	strb	r3, [r7, #15]
  uint16_t status_info = 0U;
   21a5e:	2300      	movs	r3, #0
   21a60:	81bb      	strh	r3, [r7, #12]
  uint8_t ret = USBD_OK;
   21a62:	2300      	movs	r3, #0
   21a64:	75fb      	strb	r3, [r7, #23]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
   21a66:	683b      	ldr	r3, [r7, #0]
   21a68:	781b      	ldrb	r3, [r3, #0]
   21a6a:	f003 0360 	and.w	r3, r3, #96	; 0x60
   21a6e:	2b00      	cmp	r3, #0
   21a70:	d039      	beq.n	21ae6 <USBD_CDC_Setup+0x9e>
   21a72:	2b20      	cmp	r3, #32
   21a74:	d17c      	bne.n	21b70 <USBD_CDC_Setup+0x128>
  {
    case USB_REQ_TYPE_CLASS :
      if (req->wLength)
   21a76:	683b      	ldr	r3, [r7, #0]
   21a78:	88db      	ldrh	r3, [r3, #6]
   21a7a:	2b00      	cmp	r3, #0
   21a7c:	d029      	beq.n	21ad2 <USBD_CDC_Setup+0x8a>
      {
        if (req->bmRequest & 0x80U)
   21a7e:	683b      	ldr	r3, [r7, #0]
   21a80:	781b      	ldrb	r3, [r3, #0]
   21a82:	b25b      	sxtb	r3, r3
   21a84:	2b00      	cmp	r3, #0
   21a86:	da11      	bge.n	21aac <USBD_CDC_Setup+0x64>
        {
          ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Control(req->bRequest,
   21a88:	687b      	ldr	r3, [r7, #4]
   21a8a:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
   21a8e:	689b      	ldr	r3, [r3, #8]
   21a90:	683a      	ldr	r2, [r7, #0]
   21a92:	7850      	ldrb	r0, [r2, #1]
                                                            (uint8_t *)(void *)hcdc->data,
   21a94:	6939      	ldr	r1, [r7, #16]
          ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Control(req->bRequest,
   21a96:	683a      	ldr	r2, [r7, #0]
   21a98:	88d2      	ldrh	r2, [r2, #6]
   21a9a:	4798      	blx	r3
                                                            req->wLength);

          USBD_CtlSendData(pdev, (uint8_t *)(void *)hcdc->data, req->wLength);
   21a9c:	6939      	ldr	r1, [r7, #16]
   21a9e:	683b      	ldr	r3, [r7, #0]
   21aa0:	88db      	ldrh	r3, [r3, #6]
   21aa2:	461a      	mov	r2, r3
   21aa4:	6878      	ldr	r0, [r7, #4]
   21aa6:	f000 faaf 	bl	22008 <USBD_CtlSendData>
      else
      {
        ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Control(req->bRequest,
                                                          (uint8_t *)(void *)req, 0U);
      }
      break;
   21aaa:	e068      	b.n	21b7e <USBD_CDC_Setup+0x136>
          hcdc->CmdOpCode = req->bRequest;
   21aac:	683b      	ldr	r3, [r7, #0]
   21aae:	785a      	ldrb	r2, [r3, #1]
   21ab0:	693b      	ldr	r3, [r7, #16]
   21ab2:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
          hcdc->CmdLength = (uint8_t)req->wLength;
   21ab6:	683b      	ldr	r3, [r7, #0]
   21ab8:	88db      	ldrh	r3, [r3, #6]
   21aba:	b2da      	uxtb	r2, r3
   21abc:	693b      	ldr	r3, [r7, #16]
   21abe:	f883 2201 	strb.w	r2, [r3, #513]	; 0x201
          USBD_CtlPrepareRx(pdev, (uint8_t *)(void *)hcdc->data, req->wLength);
   21ac2:	6939      	ldr	r1, [r7, #16]
   21ac4:	683b      	ldr	r3, [r7, #0]
   21ac6:	88db      	ldrh	r3, [r3, #6]
   21ac8:	461a      	mov	r2, r3
   21aca:	6878      	ldr	r0, [r7, #4]
   21acc:	f000 fab8 	bl	22040 <USBD_CtlPrepareRx>
      break;
   21ad0:	e055      	b.n	21b7e <USBD_CDC_Setup+0x136>
        ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Control(req->bRequest,
   21ad2:	687b      	ldr	r3, [r7, #4]
   21ad4:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
   21ad8:	689b      	ldr	r3, [r3, #8]
   21ada:	683a      	ldr	r2, [r7, #0]
   21adc:	7850      	ldrb	r0, [r2, #1]
   21ade:	2200      	movs	r2, #0
   21ae0:	6839      	ldr	r1, [r7, #0]
   21ae2:	4798      	blx	r3
      break;
   21ae4:	e04b      	b.n	21b7e <USBD_CDC_Setup+0x136>

    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
   21ae6:	683b      	ldr	r3, [r7, #0]
   21ae8:	785b      	ldrb	r3, [r3, #1]
   21aea:	2b0a      	cmp	r3, #10
   21aec:	d017      	beq.n	21b1e <USBD_CDC_Setup+0xd6>
   21aee:	2b0b      	cmp	r3, #11
   21af0:	d029      	beq.n	21b46 <USBD_CDC_Setup+0xfe>
   21af2:	2b00      	cmp	r3, #0
   21af4:	d133      	bne.n	21b5e <USBD_CDC_Setup+0x116>
      {
        case USB_REQ_GET_STATUS:
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
   21af6:	687b      	ldr	r3, [r7, #4]
   21af8:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
   21afc:	2b03      	cmp	r3, #3
   21afe:	d107      	bne.n	21b10 <USBD_CDC_Setup+0xc8>
          {
            USBD_CtlSendData(pdev, (uint8_t *)(void *)&status_info, 2U);
   21b00:	f107 030c 	add.w	r3, r7, #12
   21b04:	2202      	movs	r2, #2
   21b06:	4619      	mov	r1, r3
   21b08:	6878      	ldr	r0, [r7, #4]
   21b0a:	f000 fa7d 	bl	22008 <USBD_CtlSendData>
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
   21b0e:	e02e      	b.n	21b6e <USBD_CDC_Setup+0x126>
            USBD_CtlError(pdev, req);
   21b10:	6839      	ldr	r1, [r7, #0]
   21b12:	6878      	ldr	r0, [r7, #4]
   21b14:	f000 fa0d 	bl	21f32 <USBD_CtlError>
            ret = USBD_FAIL;
   21b18:	2302      	movs	r3, #2
   21b1a:	75fb      	strb	r3, [r7, #23]
          break;
   21b1c:	e027      	b.n	21b6e <USBD_CDC_Setup+0x126>

        case USB_REQ_GET_INTERFACE:
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
   21b1e:	687b      	ldr	r3, [r7, #4]
   21b20:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
   21b24:	2b03      	cmp	r3, #3
   21b26:	d107      	bne.n	21b38 <USBD_CDC_Setup+0xf0>
          {
            USBD_CtlSendData(pdev, &ifalt, 1U);
   21b28:	f107 030f 	add.w	r3, r7, #15
   21b2c:	2201      	movs	r2, #1
   21b2e:	4619      	mov	r1, r3
   21b30:	6878      	ldr	r0, [r7, #4]
   21b32:	f000 fa69 	bl	22008 <USBD_CtlSendData>
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
   21b36:	e01a      	b.n	21b6e <USBD_CDC_Setup+0x126>
            USBD_CtlError(pdev, req);
   21b38:	6839      	ldr	r1, [r7, #0]
   21b3a:	6878      	ldr	r0, [r7, #4]
   21b3c:	f000 f9f9 	bl	21f32 <USBD_CtlError>
            ret = USBD_FAIL;
   21b40:	2302      	movs	r3, #2
   21b42:	75fb      	strb	r3, [r7, #23]
          break;
   21b44:	e013      	b.n	21b6e <USBD_CDC_Setup+0x126>

        case USB_REQ_SET_INTERFACE:
          if (pdev->dev_state != USBD_STATE_CONFIGURED)
   21b46:	687b      	ldr	r3, [r7, #4]
   21b48:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
   21b4c:	2b03      	cmp	r3, #3
   21b4e:	d00d      	beq.n	21b6c <USBD_CDC_Setup+0x124>
          {
            USBD_CtlError(pdev, req);
   21b50:	6839      	ldr	r1, [r7, #0]
   21b52:	6878      	ldr	r0, [r7, #4]
   21b54:	f000 f9ed 	bl	21f32 <USBD_CtlError>
            ret = USBD_FAIL;
   21b58:	2302      	movs	r3, #2
   21b5a:	75fb      	strb	r3, [r7, #23]
          }
          break;
   21b5c:	e006      	b.n	21b6c <USBD_CDC_Setup+0x124>

        default:
          USBD_CtlError(pdev, req);
   21b5e:	6839      	ldr	r1, [r7, #0]
   21b60:	6878      	ldr	r0, [r7, #4]
   21b62:	f000 f9e6 	bl	21f32 <USBD_CtlError>
          ret = USBD_FAIL;
   21b66:	2302      	movs	r3, #2
   21b68:	75fb      	strb	r3, [r7, #23]
          break;
   21b6a:	e000      	b.n	21b6e <USBD_CDC_Setup+0x126>
          break;
   21b6c:	bf00      	nop
      }
      break;
   21b6e:	e006      	b.n	21b7e <USBD_CDC_Setup+0x136>

    default:
      USBD_CtlError(pdev, req);
   21b70:	6839      	ldr	r1, [r7, #0]
   21b72:	6878      	ldr	r0, [r7, #4]
   21b74:	f000 f9dd 	bl	21f32 <USBD_CtlError>
      ret = USBD_FAIL;
   21b78:	2302      	movs	r3, #2
   21b7a:	75fb      	strb	r3, [r7, #23]
      break;
   21b7c:	bf00      	nop
  }

  return ret;
   21b7e:	7dfb      	ldrb	r3, [r7, #23]
}
   21b80:	4618      	mov	r0, r3
   21b82:	3718      	adds	r7, #24
   21b84:	46bd      	mov	sp, r7
   21b86:	bd80      	pop	{r7, pc}

00021b88 <USBD_CDC_DataIn>:
  * @param  pdev: device instance
  * @param  epnum: endpoint number
  * @retval status
  */
static uint8_t  USBD_CDC_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
   21b88:	b580      	push	{r7, lr}
   21b8a:	b084      	sub	sp, #16
   21b8c:	af00      	add	r7, sp, #0
   21b8e:	6078      	str	r0, [r7, #4]
   21b90:	460b      	mov	r3, r1
   21b92:	70fb      	strb	r3, [r7, #3]
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassData;
   21b94:	687b      	ldr	r3, [r7, #4]
   21b96:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21b9a:	60fb      	str	r3, [r7, #12]
  PCD_HandleTypeDef *hpcd = pdev->pData;
   21b9c:	687b      	ldr	r3, [r7, #4]
   21b9e:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
   21ba2:	60bb      	str	r3, [r7, #8]

  if (pdev->pClassData != NULL)
   21ba4:	687b      	ldr	r3, [r7, #4]
   21ba6:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21baa:	2b00      	cmp	r3, #0
   21bac:	d03a      	beq.n	21c24 <USBD_CDC_DataIn+0x9c>
  {
    if ((pdev->ep_in[epnum].total_length > 0U) && ((pdev->ep_in[epnum].total_length % hpcd->IN_ep[epnum].maxpacket) == 0U))
   21bae:	78fa      	ldrb	r2, [r7, #3]
   21bb0:	6879      	ldr	r1, [r7, #4]
   21bb2:	4613      	mov	r3, r2
   21bb4:	009b      	lsls	r3, r3, #2
   21bb6:	4413      	add	r3, r2
   21bb8:	009b      	lsls	r3, r3, #2
   21bba:	440b      	add	r3, r1
   21bbc:	331c      	adds	r3, #28
   21bbe:	681b      	ldr	r3, [r3, #0]
   21bc0:	2b00      	cmp	r3, #0
   21bc2:	d029      	beq.n	21c18 <USBD_CDC_DataIn+0x90>
   21bc4:	78fa      	ldrb	r2, [r7, #3]
   21bc6:	6879      	ldr	r1, [r7, #4]
   21bc8:	4613      	mov	r3, r2
   21bca:	009b      	lsls	r3, r3, #2
   21bcc:	4413      	add	r3, r2
   21bce:	009b      	lsls	r3, r3, #2
   21bd0:	440b      	add	r3, r1
   21bd2:	331c      	adds	r3, #28
   21bd4:	681a      	ldr	r2, [r3, #0]
   21bd6:	78f9      	ldrb	r1, [r7, #3]
   21bd8:	68b8      	ldr	r0, [r7, #8]
   21bda:	460b      	mov	r3, r1
   21bdc:	00db      	lsls	r3, r3, #3
   21bde:	1a5b      	subs	r3, r3, r1
   21be0:	009b      	lsls	r3, r3, #2
   21be2:	4403      	add	r3, r0
   21be4:	3344      	adds	r3, #68	; 0x44
   21be6:	681b      	ldr	r3, [r3, #0]
   21be8:	fbb2 f1f3 	udiv	r1, r2, r3
   21bec:	fb03 f301 	mul.w	r3, r3, r1
   21bf0:	1ad3      	subs	r3, r2, r3
   21bf2:	2b00      	cmp	r3, #0
   21bf4:	d110      	bne.n	21c18 <USBD_CDC_DataIn+0x90>
    {
      /* Update the packet total length */
      pdev->ep_in[epnum].total_length = 0U;
   21bf6:	78fa      	ldrb	r2, [r7, #3]
   21bf8:	6879      	ldr	r1, [r7, #4]
   21bfa:	4613      	mov	r3, r2
   21bfc:	009b      	lsls	r3, r3, #2
   21bfe:	4413      	add	r3, r2
   21c00:	009b      	lsls	r3, r3, #2
   21c02:	440b      	add	r3, r1
   21c04:	331c      	adds	r3, #28
   21c06:	2200      	movs	r2, #0
   21c08:	601a      	str	r2, [r3, #0]

      /* Send ZLP */
      USBD_LL_Transmit(pdev, epnum, NULL, 0U);
   21c0a:	78f9      	ldrb	r1, [r7, #3]
   21c0c:	2300      	movs	r3, #0
   21c0e:	2200      	movs	r2, #0
   21c10:	6878      	ldr	r0, [r7, #4]
   21c12:	f000 fd80 	bl	22716 <USBD_LL_Transmit>
   21c16:	e003      	b.n	21c20 <USBD_CDC_DataIn+0x98>
    }
    else
    {
      hcdc->TxState = 0U;
   21c18:	68fb      	ldr	r3, [r7, #12]
   21c1a:	2200      	movs	r2, #0
   21c1c:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
    }
    return USBD_OK;
   21c20:	2300      	movs	r3, #0
   21c22:	e000      	b.n	21c26 <USBD_CDC_DataIn+0x9e>
  }
  else
  {
    return USBD_FAIL;
   21c24:	2302      	movs	r3, #2
  }
}
   21c26:	4618      	mov	r0, r3
   21c28:	3710      	adds	r7, #16
   21c2a:	46bd      	mov	sp, r7
   21c2c:	bd80      	pop	{r7, pc}

00021c2e <USBD_CDC_DataOut>:
  * @param  pdev: device instance
  * @param  epnum: endpoint number
  * @retval status
  */
static uint8_t  USBD_CDC_DataOut(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
   21c2e:	b580      	push	{r7, lr}
   21c30:	b084      	sub	sp, #16
   21c32:	af00      	add	r7, sp, #0
   21c34:	6078      	str	r0, [r7, #4]
   21c36:	460b      	mov	r3, r1
   21c38:	70fb      	strb	r3, [r7, #3]
  USBD_CDC_HandleTypeDef   *hcdc = (USBD_CDC_HandleTypeDef *) pdev->pClassData;
   21c3a:	687b      	ldr	r3, [r7, #4]
   21c3c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21c40:	60fb      	str	r3, [r7, #12]

  /* Get the received data length */
  hcdc->RxLength = USBD_LL_GetRxDataSize(pdev, epnum);
   21c42:	78fb      	ldrb	r3, [r7, #3]
   21c44:	4619      	mov	r1, r3
   21c46:	6878      	ldr	r0, [r7, #4]
   21c48:	f000 fdab 	bl	227a2 <USBD_LL_GetRxDataSize>
   21c4c:	4602      	mov	r2, r0
   21c4e:	68fb      	ldr	r3, [r7, #12]
   21c50:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c

  /* USB data will be immediately processed, this allow next USB traffic being
  NAKed till the end of the application Xfer */
  if (pdev->pClassData != NULL)
   21c54:	687b      	ldr	r3, [r7, #4]
   21c56:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21c5a:	2b00      	cmp	r3, #0
   21c5c:	d00d      	beq.n	21c7a <USBD_CDC_DataOut+0x4c>
  {
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Receive(hcdc->RxBuffer, &hcdc->RxLength);
   21c5e:	687b      	ldr	r3, [r7, #4]
   21c60:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
   21c64:	68db      	ldr	r3, [r3, #12]
   21c66:	68fa      	ldr	r2, [r7, #12]
   21c68:	f8d2 0204 	ldr.w	r0, [r2, #516]	; 0x204
   21c6c:	68fa      	ldr	r2, [r7, #12]
   21c6e:	f502 7203 	add.w	r2, r2, #524	; 0x20c
   21c72:	4611      	mov	r1, r2
   21c74:	4798      	blx	r3

    return USBD_OK;
   21c76:	2300      	movs	r3, #0
   21c78:	e000      	b.n	21c7c <USBD_CDC_DataOut+0x4e>
  }
  else
  {
    return USBD_FAIL;
   21c7a:	2302      	movs	r3, #2
  }
}
   21c7c:	4618      	mov	r0, r3
   21c7e:	3710      	adds	r7, #16
   21c80:	46bd      	mov	sp, r7
   21c82:	bd80      	pop	{r7, pc}

00021c84 <USBD_CDC_EP0_RxReady>:
  *         Handle EP0 Rx Ready event
  * @param  pdev: device instance
  * @retval status
  */
static uint8_t  USBD_CDC_EP0_RxReady(USBD_HandleTypeDef *pdev)
{
   21c84:	b580      	push	{r7, lr}
   21c86:	b084      	sub	sp, #16
   21c88:	af00      	add	r7, sp, #0
   21c8a:	6078      	str	r0, [r7, #4]
  USBD_CDC_HandleTypeDef   *hcdc = (USBD_CDC_HandleTypeDef *) pdev->pClassData;
   21c8c:	687b      	ldr	r3, [r7, #4]
   21c8e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21c92:	60fb      	str	r3, [r7, #12]

  if ((pdev->pUserData != NULL) && (hcdc->CmdOpCode != 0xFFU))
   21c94:	687b      	ldr	r3, [r7, #4]
   21c96:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
   21c9a:	2b00      	cmp	r3, #0
   21c9c:	d015      	beq.n	21cca <USBD_CDC_EP0_RxReady+0x46>
   21c9e:	68fb      	ldr	r3, [r7, #12]
   21ca0:	f893 3200 	ldrb.w	r3, [r3, #512]	; 0x200
   21ca4:	2bff      	cmp	r3, #255	; 0xff
   21ca6:	d010      	beq.n	21cca <USBD_CDC_EP0_RxReady+0x46>
  {
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Control(hcdc->CmdOpCode,
   21ca8:	687b      	ldr	r3, [r7, #4]
   21caa:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
   21cae:	689b      	ldr	r3, [r3, #8]
   21cb0:	68fa      	ldr	r2, [r7, #12]
   21cb2:	f892 0200 	ldrb.w	r0, [r2, #512]	; 0x200
                                                      (uint8_t *)(void *)hcdc->data,
   21cb6:	68f9      	ldr	r1, [r7, #12]
                                                      (uint16_t)hcdc->CmdLength);
   21cb8:	68fa      	ldr	r2, [r7, #12]
   21cba:	f892 2201 	ldrb.w	r2, [r2, #513]	; 0x201
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Control(hcdc->CmdOpCode,
   21cbe:	b292      	uxth	r2, r2
   21cc0:	4798      	blx	r3
    hcdc->CmdOpCode = 0xFFU;
   21cc2:	68fb      	ldr	r3, [r7, #12]
   21cc4:	22ff      	movs	r2, #255	; 0xff
   21cc6:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200

  }
  return USBD_OK;
   21cca:	2300      	movs	r3, #0
}
   21ccc:	4618      	mov	r0, r3
   21cce:	3710      	adds	r7, #16
   21cd0:	46bd      	mov	sp, r7
   21cd2:	bd80      	pop	{r7, pc}

00021cd4 <USBD_CDC_GetFSCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t  *USBD_CDC_GetFSCfgDesc(uint16_t *length)
{
   21cd4:	b480      	push	{r7}
   21cd6:	b083      	sub	sp, #12
   21cd8:	af00      	add	r7, sp, #0
   21cda:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_CDC_CfgFSDesc);
   21cdc:	687b      	ldr	r3, [r7, #4]
   21cde:	2243      	movs	r2, #67	; 0x43
   21ce0:	801a      	strh	r2, [r3, #0]
  return USBD_CDC_CfgFSDesc;
   21ce2:	4b03      	ldr	r3, [pc, #12]	; (21cf0 <USBD_CDC_GetFSCfgDesc+0x1c>)
}
   21ce4:	4618      	mov	r0, r3
   21ce6:	370c      	adds	r7, #12
   21ce8:	46bd      	mov	sp, r7
   21cea:	f85d 7b04 	ldr.w	r7, [sp], #4
   21cee:	4770      	bx	lr
   21cf0:	000341f0 	.word	0x000341f0

00021cf4 <USBD_CDC_GetHSCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t  *USBD_CDC_GetHSCfgDesc(uint16_t *length)
{
   21cf4:	b480      	push	{r7}
   21cf6:	b083      	sub	sp, #12
   21cf8:	af00      	add	r7, sp, #0
   21cfa:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_CDC_CfgHSDesc);
   21cfc:	687b      	ldr	r3, [r7, #4]
   21cfe:	2243      	movs	r2, #67	; 0x43
   21d00:	801a      	strh	r2, [r3, #0]
  return USBD_CDC_CfgHSDesc;
   21d02:	4b03      	ldr	r3, [pc, #12]	; (21d10 <USBD_CDC_GetHSCfgDesc+0x1c>)
}
   21d04:	4618      	mov	r0, r3
   21d06:	370c      	adds	r7, #12
   21d08:	46bd      	mov	sp, r7
   21d0a:	f85d 7b04 	ldr.w	r7, [sp], #4
   21d0e:	4770      	bx	lr
   21d10:	000341ac 	.word	0x000341ac

00021d14 <USBD_CDC_GetOtherSpeedCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t  *USBD_CDC_GetOtherSpeedCfgDesc(uint16_t *length)
{
   21d14:	b480      	push	{r7}
   21d16:	b083      	sub	sp, #12
   21d18:	af00      	add	r7, sp, #0
   21d1a:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_CDC_OtherSpeedCfgDesc);
   21d1c:	687b      	ldr	r3, [r7, #4]
   21d1e:	2243      	movs	r2, #67	; 0x43
   21d20:	801a      	strh	r2, [r3, #0]
  return USBD_CDC_OtherSpeedCfgDesc;
   21d22:	4b03      	ldr	r3, [pc, #12]	; (21d30 <USBD_CDC_GetOtherSpeedCfgDesc+0x1c>)
}
   21d24:	4618      	mov	r0, r3
   21d26:	370c      	adds	r7, #12
   21d28:	46bd      	mov	sp, r7
   21d2a:	f85d 7b04 	ldr.w	r7, [sp], #4
   21d2e:	4770      	bx	lr
   21d30:	00034234 	.word	0x00034234

00021d34 <USBD_CDC_GetDeviceQualifierDescriptor>:
*         return Device Qualifier descriptor
* @param  length : pointer data length
* @retval pointer to descriptor buffer
*/
uint8_t  *USBD_CDC_GetDeviceQualifierDescriptor(uint16_t *length)
{
   21d34:	b480      	push	{r7}
   21d36:	b083      	sub	sp, #12
   21d38:	af00      	add	r7, sp, #0
   21d3a:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_CDC_DeviceQualifierDesc);
   21d3c:	687b      	ldr	r3, [r7, #4]
   21d3e:	220a      	movs	r2, #10
   21d40:	801a      	strh	r2, [r3, #0]
  return USBD_CDC_DeviceQualifierDesc;
   21d42:	4b03      	ldr	r3, [pc, #12]	; (21d50 <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
}
   21d44:	4618      	mov	r0, r3
   21d46:	370c      	adds	r7, #12
   21d48:	46bd      	mov	sp, r7
   21d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
   21d4e:	4770      	bx	lr
   21d50:	00034168 	.word	0x00034168

00021d54 <USBD_CDC_RegisterInterface>:
  * @param  fops: CD  Interface callback
  * @retval status
  */
uint8_t  USBD_CDC_RegisterInterface(USBD_HandleTypeDef   *pdev,
                                    USBD_CDC_ItfTypeDef *fops)
{
   21d54:	b480      	push	{r7}
   21d56:	b085      	sub	sp, #20
   21d58:	af00      	add	r7, sp, #0
   21d5a:	6078      	str	r0, [r7, #4]
   21d5c:	6039      	str	r1, [r7, #0]
  uint8_t  ret = USBD_FAIL;
   21d5e:	2302      	movs	r3, #2
   21d60:	73fb      	strb	r3, [r7, #15]

  if (fops != NULL)
   21d62:	683b      	ldr	r3, [r7, #0]
   21d64:	2b00      	cmp	r3, #0
   21d66:	d005      	beq.n	21d74 <USBD_CDC_RegisterInterface+0x20>
  {
    pdev->pUserData = fops;
   21d68:	687b      	ldr	r3, [r7, #4]
   21d6a:	683a      	ldr	r2, [r7, #0]
   21d6c:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
    ret = USBD_OK;
   21d70:	2300      	movs	r3, #0
   21d72:	73fb      	strb	r3, [r7, #15]
  }

  return ret;
   21d74:	7bfb      	ldrb	r3, [r7, #15]
}
   21d76:	4618      	mov	r0, r3
   21d78:	3714      	adds	r7, #20
   21d7a:	46bd      	mov	sp, r7
   21d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
   21d80:	4770      	bx	lr

00021d82 <USBD_CDC_SetTxBuffer>:
  * @retval status
  */
uint8_t  USBD_CDC_SetTxBuffer(USBD_HandleTypeDef   *pdev,
                              uint8_t  *pbuff,
                              uint16_t length)
{
   21d82:	b480      	push	{r7}
   21d84:	b087      	sub	sp, #28
   21d86:	af00      	add	r7, sp, #0
   21d88:	60f8      	str	r0, [r7, #12]
   21d8a:	60b9      	str	r1, [r7, #8]
   21d8c:	4613      	mov	r3, r2
   21d8e:	80fb      	strh	r3, [r7, #6]
  USBD_CDC_HandleTypeDef   *hcdc = (USBD_CDC_HandleTypeDef *) pdev->pClassData;
   21d90:	68fb      	ldr	r3, [r7, #12]
   21d92:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21d96:	617b      	str	r3, [r7, #20]

  hcdc->TxBuffer = pbuff;
   21d98:	697b      	ldr	r3, [r7, #20]
   21d9a:	68ba      	ldr	r2, [r7, #8]
   21d9c:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
  hcdc->TxLength = length;
   21da0:	88fa      	ldrh	r2, [r7, #6]
   21da2:	697b      	ldr	r3, [r7, #20]
   21da4:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210

  return USBD_OK;
   21da8:	2300      	movs	r3, #0
}
   21daa:	4618      	mov	r0, r3
   21dac:	371c      	adds	r7, #28
   21dae:	46bd      	mov	sp, r7
   21db0:	f85d 7b04 	ldr.w	r7, [sp], #4
   21db4:	4770      	bx	lr

00021db6 <USBD_CDC_SetRxBuffer>:
  * @param  pbuff: Rx Buffer
  * @retval status
  */
uint8_t  USBD_CDC_SetRxBuffer(USBD_HandleTypeDef   *pdev,
                              uint8_t  *pbuff)
{
   21db6:	b480      	push	{r7}
   21db8:	b085      	sub	sp, #20
   21dba:	af00      	add	r7, sp, #0
   21dbc:	6078      	str	r0, [r7, #4]
   21dbe:	6039      	str	r1, [r7, #0]
  USBD_CDC_HandleTypeDef   *hcdc = (USBD_CDC_HandleTypeDef *) pdev->pClassData;
   21dc0:	687b      	ldr	r3, [r7, #4]
   21dc2:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21dc6:	60fb      	str	r3, [r7, #12]

  hcdc->RxBuffer = pbuff;
   21dc8:	68fb      	ldr	r3, [r7, #12]
   21dca:	683a      	ldr	r2, [r7, #0]
   21dcc:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204

  return USBD_OK;
   21dd0:	2300      	movs	r3, #0
}
   21dd2:	4618      	mov	r0, r3
   21dd4:	3714      	adds	r7, #20
   21dd6:	46bd      	mov	sp, r7
   21dd8:	f85d 7b04 	ldr.w	r7, [sp], #4
   21ddc:	4770      	bx	lr

00021dde <USBD_CDC_TransmitPacket>:
  *         Transmit packet on IN endpoint
  * @param  pdev: device instance
  * @retval status
  */
uint8_t  USBD_CDC_TransmitPacket(USBD_HandleTypeDef *pdev)
{
   21dde:	b580      	push	{r7, lr}
   21de0:	b084      	sub	sp, #16
   21de2:	af00      	add	r7, sp, #0
   21de4:	6078      	str	r0, [r7, #4]
  USBD_CDC_HandleTypeDef   *hcdc = (USBD_CDC_HandleTypeDef *) pdev->pClassData;
   21de6:	687b      	ldr	r3, [r7, #4]
   21de8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21dec:	60fb      	str	r3, [r7, #12]

  if (pdev->pClassData != NULL)
   21dee:	687b      	ldr	r3, [r7, #4]
   21df0:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21df4:	2b00      	cmp	r3, #0
   21df6:	d01c      	beq.n	21e32 <USBD_CDC_TransmitPacket+0x54>
  {
    if (hcdc->TxState == 0U)
   21df8:	68fb      	ldr	r3, [r7, #12]
   21dfa:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
   21dfe:	2b00      	cmp	r3, #0
   21e00:	d115      	bne.n	21e2e <USBD_CDC_TransmitPacket+0x50>
    {
      /* Tx Transfer in progress */
      hcdc->TxState = 1U;
   21e02:	68fb      	ldr	r3, [r7, #12]
   21e04:	2201      	movs	r2, #1
   21e06:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214

      /* Update the packet total length */
      pdev->ep_in[CDC_IN_EP & 0xFU].total_length = hcdc->TxLength;
   21e0a:	68fb      	ldr	r3, [r7, #12]
   21e0c:	f8d3 2210 	ldr.w	r2, [r3, #528]	; 0x210
   21e10:	687b      	ldr	r3, [r7, #4]
   21e12:	631a      	str	r2, [r3, #48]	; 0x30

      /* Transmit next packet */
      USBD_LL_Transmit(pdev, CDC_IN_EP, hcdc->TxBuffer,
   21e14:	68fb      	ldr	r3, [r7, #12]
   21e16:	f8d3 2208 	ldr.w	r2, [r3, #520]	; 0x208
                       (uint16_t)hcdc->TxLength);
   21e1a:	68fb      	ldr	r3, [r7, #12]
   21e1c:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
      USBD_LL_Transmit(pdev, CDC_IN_EP, hcdc->TxBuffer,
   21e20:	b29b      	uxth	r3, r3
   21e22:	2181      	movs	r1, #129	; 0x81
   21e24:	6878      	ldr	r0, [r7, #4]
   21e26:	f000 fc76 	bl	22716 <USBD_LL_Transmit>

      return USBD_OK;
   21e2a:	2300      	movs	r3, #0
   21e2c:	e002      	b.n	21e34 <USBD_CDC_TransmitPacket+0x56>
    }
    else
    {
      return USBD_BUSY;
   21e2e:	2301      	movs	r3, #1
   21e30:	e000      	b.n	21e34 <USBD_CDC_TransmitPacket+0x56>
    }
  }
  else
  {
    return USBD_FAIL;
   21e32:	2302      	movs	r3, #2
  }
}
   21e34:	4618      	mov	r0, r3
   21e36:	3710      	adds	r7, #16
   21e38:	46bd      	mov	sp, r7
   21e3a:	bd80      	pop	{r7, pc}

00021e3c <USBD_CDC_ReceivePacket>:
  *         prepare OUT Endpoint for reception
  * @param  pdev: device instance
  * @retval status
  */
uint8_t  USBD_CDC_ReceivePacket(USBD_HandleTypeDef *pdev)
{
   21e3c:	b580      	push	{r7, lr}
   21e3e:	b084      	sub	sp, #16
   21e40:	af00      	add	r7, sp, #0
   21e42:	6078      	str	r0, [r7, #4]
  USBD_CDC_HandleTypeDef   *hcdc = (USBD_CDC_HandleTypeDef *) pdev->pClassData;
   21e44:	687b      	ldr	r3, [r7, #4]
   21e46:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21e4a:	60fb      	str	r3, [r7, #12]

  /* Suspend or Resume USB Out process */
  if (pdev->pClassData != NULL)
   21e4c:	687b      	ldr	r3, [r7, #4]
   21e4e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   21e52:	2b00      	cmp	r3, #0
   21e54:	d017      	beq.n	21e86 <USBD_CDC_ReceivePacket+0x4a>
  {
    if (pdev->dev_speed == USBD_SPEED_HIGH)
   21e56:	687b      	ldr	r3, [r7, #4]
   21e58:	7c1b      	ldrb	r3, [r3, #16]
   21e5a:	2b00      	cmp	r3, #0
   21e5c:	d109      	bne.n	21e72 <USBD_CDC_ReceivePacket+0x36>
    {
      /* Prepare Out endpoint to receive next packet */
      USBD_LL_PrepareReceive(pdev,
   21e5e:	68fb      	ldr	r3, [r7, #12]
   21e60:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
   21e64:	f44f 7300 	mov.w	r3, #512	; 0x200
   21e68:	2101      	movs	r1, #1
   21e6a:	6878      	ldr	r0, [r7, #4]
   21e6c:	f000 fc76 	bl	2275c <USBD_LL_PrepareReceive>
   21e70:	e007      	b.n	21e82 <USBD_CDC_ReceivePacket+0x46>
                             CDC_DATA_HS_OUT_PACKET_SIZE);
    }
    else
    {
      /* Prepare Out endpoint to receive next packet */
      USBD_LL_PrepareReceive(pdev,
   21e72:	68fb      	ldr	r3, [r7, #12]
   21e74:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
   21e78:	2340      	movs	r3, #64	; 0x40
   21e7a:	2101      	movs	r1, #1
   21e7c:	6878      	ldr	r0, [r7, #4]
   21e7e:	f000 fc6d 	bl	2275c <USBD_LL_PrepareReceive>
                             CDC_OUT_EP,
                             hcdc->RxBuffer,
                             CDC_DATA_FS_OUT_PACKET_SIZE);
    }
    return USBD_OK;
   21e82:	2300      	movs	r3, #0
   21e84:	e000      	b.n	21e88 <USBD_CDC_ReceivePacket+0x4c>
  }
  else
  {
    return USBD_FAIL;
   21e86:	2302      	movs	r3, #2
  }
}
   21e88:	4618      	mov	r0, r3
   21e8a:	3710      	adds	r7, #16
   21e8c:	46bd      	mov	sp, r7
   21e8e:	bd80      	pop	{r7, pc}

00021e90 <USBD_Init>:
* @param  id: Low level core index
* @retval None
*/
USBD_StatusTypeDef USBD_Init(USBD_HandleTypeDef *pdev,
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
   21e90:	b580      	push	{r7, lr}
   21e92:	b084      	sub	sp, #16
   21e94:	af00      	add	r7, sp, #0
   21e96:	60f8      	str	r0, [r7, #12]
   21e98:	60b9      	str	r1, [r7, #8]
   21e9a:	4613      	mov	r3, r2
   21e9c:	71fb      	strb	r3, [r7, #7]
  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
   21e9e:	68fb      	ldr	r3, [r7, #12]
   21ea0:	2b00      	cmp	r3, #0
   21ea2:	d101      	bne.n	21ea8 <USBD_Init+0x18>
  {
#if (USBD_DEBUG_LEVEL > 1U)
    USBD_ErrLog("Invalid Device handle");
#endif
    return USBD_FAIL;
   21ea4:	2302      	movs	r3, #2
   21ea6:	e01a      	b.n	21ede <USBD_Init+0x4e>
  }

  /* Unlink previous class*/
  if (pdev->pClass != NULL)
   21ea8:	68fb      	ldr	r3, [r7, #12]
   21eaa:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
   21eae:	2b00      	cmp	r3, #0
   21eb0:	d003      	beq.n	21eba <USBD_Init+0x2a>
  {
    pdev->pClass = NULL;
   21eb2:	68fb      	ldr	r3, [r7, #12]
   21eb4:	2200      	movs	r2, #0
   21eb6:	f8c3 22b4 	str.w	r2, [r3, #692]	; 0x2b4
  }

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
   21eba:	68bb      	ldr	r3, [r7, #8]
   21ebc:	2b00      	cmp	r3, #0
   21ebe:	d003      	beq.n	21ec8 <USBD_Init+0x38>
  {
    pdev->pDesc = pdesc;
   21ec0:	68fb      	ldr	r3, [r7, #12]
   21ec2:	68ba      	ldr	r2, [r7, #8]
   21ec4:	f8c3 22b0 	str.w	r2, [r3, #688]	; 0x2b0
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
   21ec8:	68fb      	ldr	r3, [r7, #12]
   21eca:	2201      	movs	r2, #1
   21ecc:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
  pdev->id = id;
   21ed0:	68fb      	ldr	r3, [r7, #12]
   21ed2:	79fa      	ldrb	r2, [r7, #7]
   21ed4:	701a      	strb	r2, [r3, #0]
  /* Initialize low level driver */
  USBD_LL_Init(pdev);
   21ed6:	68f8      	ldr	r0, [r7, #12]
   21ed8:	f000 fb4e 	bl	22578 <USBD_LL_Init>

  return USBD_OK;
   21edc:	2300      	movs	r3, #0
}
   21ede:	4618      	mov	r0, r3
   21ee0:	3710      	adds	r7, #16
   21ee2:	46bd      	mov	sp, r7
   21ee4:	bd80      	pop	{r7, pc}

00021ee6 <USBD_RegisterClass>:
  * @param  pDevice : Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef  USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
   21ee6:	b480      	push	{r7}
   21ee8:	b085      	sub	sp, #20
   21eea:	af00      	add	r7, sp, #0
   21eec:	6078      	str	r0, [r7, #4]
   21eee:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef status = USBD_OK;
   21ef0:	2300      	movs	r3, #0
   21ef2:	73fb      	strb	r3, [r7, #15]
  if (pclass != NULL)
   21ef4:	683b      	ldr	r3, [r7, #0]
   21ef6:	2b00      	cmp	r3, #0
   21ef8:	d006      	beq.n	21f08 <USBD_RegisterClass+0x22>
  {
    /* link the class to the USB Device handle */
    pdev->pClass = pclass;
   21efa:	687b      	ldr	r3, [r7, #4]
   21efc:	683a      	ldr	r2, [r7, #0]
   21efe:	f8c3 22b4 	str.w	r2, [r3, #692]	; 0x2b4
    status = USBD_OK;
   21f02:	2300      	movs	r3, #0
   21f04:	73fb      	strb	r3, [r7, #15]
   21f06:	e001      	b.n	21f0c <USBD_RegisterClass+0x26>
  else
  {
#if (USBD_DEBUG_LEVEL > 1U)
    USBD_ErrLog("Invalid Class handle");
#endif
    status = USBD_FAIL;
   21f08:	2302      	movs	r3, #2
   21f0a:	73fb      	strb	r3, [r7, #15]
  }

  return status;
   21f0c:	7bfb      	ldrb	r3, [r7, #15]
}
   21f0e:	4618      	mov	r0, r3
   21f10:	3714      	adds	r7, #20
   21f12:	46bd      	mov	sp, r7
   21f14:	f85d 7b04 	ldr.w	r7, [sp], #4
   21f18:	4770      	bx	lr

00021f1a <USBD_Start>:
  *         Start the USB Device Core.
  * @param  pdev: Device Handle
  * @retval USBD Status
  */
USBD_StatusTypeDef  USBD_Start(USBD_HandleTypeDef *pdev)
{
   21f1a:	b580      	push	{r7, lr}
   21f1c:	b082      	sub	sp, #8
   21f1e:	af00      	add	r7, sp, #0
   21f20:	6078      	str	r0, [r7, #4]
  /* Start the low level driver  */
  USBD_LL_Start(pdev);
   21f22:	6878      	ldr	r0, [r7, #4]
   21f24:	f000 fb78 	bl	22618 <USBD_LL_Start>

  return USBD_OK;
   21f28:	2300      	movs	r3, #0
}
   21f2a:	4618      	mov	r0, r3
   21f2c:	3708      	adds	r7, #8
   21f2e:	46bd      	mov	sp, r7
   21f30:	bd80      	pop	{r7, pc}

00021f32 <USBD_CtlError>:
* @retval None
*/

void USBD_CtlError(USBD_HandleTypeDef *pdev,
                   USBD_SetupReqTypedef *req)
{
   21f32:	b580      	push	{r7, lr}
   21f34:	b082      	sub	sp, #8
   21f36:	af00      	add	r7, sp, #0
   21f38:	6078      	str	r0, [r7, #4]
   21f3a:	6039      	str	r1, [r7, #0]
  USBD_LL_StallEP(pdev, 0x80U);
   21f3c:	2180      	movs	r1, #128	; 0x80
   21f3e:	6878      	ldr	r0, [r7, #4]
   21f40:	f000 fbca 	bl	226d8 <USBD_LL_StallEP>
  USBD_LL_StallEP(pdev, 0U);
   21f44:	2100      	movs	r1, #0
   21f46:	6878      	ldr	r0, [r7, #4]
   21f48:	f000 fbc6 	bl	226d8 <USBD_LL_StallEP>
}
   21f4c:	bf00      	nop
   21f4e:	3708      	adds	r7, #8
   21f50:	46bd      	mov	sp, r7
   21f52:	bd80      	pop	{r7, pc}

00021f54 <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
   21f54:	b580      	push	{r7, lr}
   21f56:	b086      	sub	sp, #24
   21f58:	af00      	add	r7, sp, #0
   21f5a:	60f8      	str	r0, [r7, #12]
   21f5c:	60b9      	str	r1, [r7, #8]
   21f5e:	607a      	str	r2, [r7, #4]
  uint8_t idx = 0U;
   21f60:	2300      	movs	r3, #0
   21f62:	75fb      	strb	r3, [r7, #23]

  if (desc != NULL)
   21f64:	68fb      	ldr	r3, [r7, #12]
   21f66:	2b00      	cmp	r3, #0
   21f68:	d032      	beq.n	21fd0 <USBD_GetString+0x7c>
  {
    *len = (uint16_t)USBD_GetLen(desc) * 2U + 2U;
   21f6a:	68f8      	ldr	r0, [r7, #12]
   21f6c:	f000 f834 	bl	21fd8 <USBD_GetLen>
   21f70:	4603      	mov	r3, r0
   21f72:	3301      	adds	r3, #1
   21f74:	b29b      	uxth	r3, r3
   21f76:	005b      	lsls	r3, r3, #1
   21f78:	b29a      	uxth	r2, r3
   21f7a:	687b      	ldr	r3, [r7, #4]
   21f7c:	801a      	strh	r2, [r3, #0]
    unicode[idx++] = *(uint8_t *)(void *)len;
   21f7e:	7dfb      	ldrb	r3, [r7, #23]
   21f80:	1c5a      	adds	r2, r3, #1
   21f82:	75fa      	strb	r2, [r7, #23]
   21f84:	461a      	mov	r2, r3
   21f86:	68bb      	ldr	r3, [r7, #8]
   21f88:	4413      	add	r3, r2
   21f8a:	687a      	ldr	r2, [r7, #4]
   21f8c:	7812      	ldrb	r2, [r2, #0]
   21f8e:	701a      	strb	r2, [r3, #0]
    unicode[idx++] = USB_DESC_TYPE_STRING;
   21f90:	7dfb      	ldrb	r3, [r7, #23]
   21f92:	1c5a      	adds	r2, r3, #1
   21f94:	75fa      	strb	r2, [r7, #23]
   21f96:	461a      	mov	r2, r3
   21f98:	68bb      	ldr	r3, [r7, #8]
   21f9a:	4413      	add	r3, r2
   21f9c:	2203      	movs	r2, #3
   21f9e:	701a      	strb	r2, [r3, #0]

    while (*desc != '\0')
   21fa0:	e012      	b.n	21fc8 <USBD_GetString+0x74>
    {
      unicode[idx++] = *desc++;
   21fa2:	68fb      	ldr	r3, [r7, #12]
   21fa4:	1c5a      	adds	r2, r3, #1
   21fa6:	60fa      	str	r2, [r7, #12]
   21fa8:	7dfa      	ldrb	r2, [r7, #23]
   21faa:	1c51      	adds	r1, r2, #1
   21fac:	75f9      	strb	r1, [r7, #23]
   21fae:	4611      	mov	r1, r2
   21fb0:	68ba      	ldr	r2, [r7, #8]
   21fb2:	440a      	add	r2, r1
   21fb4:	781b      	ldrb	r3, [r3, #0]
   21fb6:	7013      	strb	r3, [r2, #0]
      unicode[idx++] =  0U;
   21fb8:	7dfb      	ldrb	r3, [r7, #23]
   21fba:	1c5a      	adds	r2, r3, #1
   21fbc:	75fa      	strb	r2, [r7, #23]
   21fbe:	461a      	mov	r2, r3
   21fc0:	68bb      	ldr	r3, [r7, #8]
   21fc2:	4413      	add	r3, r2
   21fc4:	2200      	movs	r2, #0
   21fc6:	701a      	strb	r2, [r3, #0]
    while (*desc != '\0')
   21fc8:	68fb      	ldr	r3, [r7, #12]
   21fca:	781b      	ldrb	r3, [r3, #0]
   21fcc:	2b00      	cmp	r3, #0
   21fce:	d1e8      	bne.n	21fa2 <USBD_GetString+0x4e>
    }
  }
}
   21fd0:	bf00      	nop
   21fd2:	3718      	adds	r7, #24
   21fd4:	46bd      	mov	sp, r7
   21fd6:	bd80      	pop	{r7, pc}

00021fd8 <USBD_GetLen>:
  *         return the string length
   * @param  buf : pointer to the ascii string buffer
  * @retval string length
  */
static uint8_t USBD_GetLen(uint8_t *buf)
{
   21fd8:	b480      	push	{r7}
   21fda:	b085      	sub	sp, #20
   21fdc:	af00      	add	r7, sp, #0
   21fde:	6078      	str	r0, [r7, #4]
  uint8_t  len = 0U;
   21fe0:	2300      	movs	r3, #0
   21fe2:	73fb      	strb	r3, [r7, #15]

  while (*buf != '\0')
   21fe4:	e005      	b.n	21ff2 <USBD_GetLen+0x1a>
  {
    len++;
   21fe6:	7bfb      	ldrb	r3, [r7, #15]
   21fe8:	3301      	adds	r3, #1
   21fea:	73fb      	strb	r3, [r7, #15]
    buf++;
   21fec:	687b      	ldr	r3, [r7, #4]
   21fee:	3301      	adds	r3, #1
   21ff0:	607b      	str	r3, [r7, #4]
  while (*buf != '\0')
   21ff2:	687b      	ldr	r3, [r7, #4]
   21ff4:	781b      	ldrb	r3, [r3, #0]
   21ff6:	2b00      	cmp	r3, #0
   21ff8:	d1f5      	bne.n	21fe6 <USBD_GetLen+0xe>
  }

  return len;
   21ffa:	7bfb      	ldrb	r3, [r7, #15]
}
   21ffc:	4618      	mov	r0, r3
   21ffe:	3714      	adds	r7, #20
   22000:	46bd      	mov	sp, r7
   22002:	f85d 7b04 	ldr.w	r7, [sp], #4
   22006:	4770      	bx	lr

00022008 <USBD_CtlSendData>:
* @param  len: length of data to be sent
* @retval status
*/
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint16_t len)
{
   22008:	b580      	push	{r7, lr}
   2200a:	b084      	sub	sp, #16
   2200c:	af00      	add	r7, sp, #0
   2200e:	60f8      	str	r0, [r7, #12]
   22010:	60b9      	str	r1, [r7, #8]
   22012:	4613      	mov	r3, r2
   22014:	80fb      	strh	r3, [r7, #6]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
   22016:	68fb      	ldr	r3, [r7, #12]
   22018:	2202      	movs	r2, #2
   2201a:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  pdev->ep_in[0].total_length = len;
   2201e:	88fa      	ldrh	r2, [r7, #6]
   22020:	68fb      	ldr	r3, [r7, #12]
   22022:	61da      	str	r2, [r3, #28]
  pdev->ep_in[0].rem_length   = len;
   22024:	88fa      	ldrh	r2, [r7, #6]
   22026:	68fb      	ldr	r3, [r7, #12]
   22028:	621a      	str	r2, [r3, #32]

  /* Start the transfer */
  USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
   2202a:	88fb      	ldrh	r3, [r7, #6]
   2202c:	68ba      	ldr	r2, [r7, #8]
   2202e:	2100      	movs	r1, #0
   22030:	68f8      	ldr	r0, [r7, #12]
   22032:	f000 fb70 	bl	22716 <USBD_LL_Transmit>

  return USBD_OK;
   22036:	2300      	movs	r3, #0
}
   22038:	4618      	mov	r0, r3
   2203a:	3710      	adds	r7, #16
   2203c:	46bd      	mov	sp, r7
   2203e:	bd80      	pop	{r7, pc}

00022040 <USBD_CtlPrepareRx>:
* @param  len: length of data to be received
* @retval status
*/
USBD_StatusTypeDef USBD_CtlPrepareRx(USBD_HandleTypeDef *pdev,
                                     uint8_t *pbuf, uint16_t len)
{
   22040:	b580      	push	{r7, lr}
   22042:	b084      	sub	sp, #16
   22044:	af00      	add	r7, sp, #0
   22046:	60f8      	str	r0, [r7, #12]
   22048:	60b9      	str	r1, [r7, #8]
   2204a:	4613      	mov	r3, r2
   2204c:	80fb      	strh	r3, [r7, #6]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_OUT;
   2204e:	68fb      	ldr	r3, [r7, #12]
   22050:	2203      	movs	r2, #3
   22052:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  pdev->ep_out[0].total_length = len;
   22056:	88fa      	ldrh	r2, [r7, #6]
   22058:	68fb      	ldr	r3, [r7, #12]
   2205a:	f8c3 215c 	str.w	r2, [r3, #348]	; 0x15c
  pdev->ep_out[0].rem_length   = len;
   2205e:	88fa      	ldrh	r2, [r7, #6]
   22060:	68fb      	ldr	r3, [r7, #12]
   22062:	f8c3 2160 	str.w	r2, [r3, #352]	; 0x160

  /* Start the transfer */
  USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
   22066:	88fb      	ldrh	r3, [r7, #6]
   22068:	68ba      	ldr	r2, [r7, #8]
   2206a:	2100      	movs	r1, #0
   2206c:	68f8      	ldr	r0, [r7, #12]
   2206e:	f000 fb75 	bl	2275c <USBD_LL_PrepareReceive>

  return USBD_OK;
   22072:	2300      	movs	r3, #0
}
   22074:	4618      	mov	r0, r3
   22076:	3710      	adds	r7, #16
   22078:	46bd      	mov	sp, r7
   2207a:	bd80      	pop	{r7, pc}

0002207c <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
   2207c:	b580      	push	{r7, lr}
   2207e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */
  
  /* USER CODE END USB_DEVICE_Init_PreTreatment */
  
  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceFS, &FS_Desc, DEVICE_FS) != USBD_OK)
   22080:	2200      	movs	r2, #0
   22082:	4913      	ldr	r1, [pc, #76]	; (220d0 <MX_USB_DEVICE_Init+0x54>)
   22084:	4813      	ldr	r0, [pc, #76]	; (220d4 <MX_USB_DEVICE_Init+0x58>)
   22086:	f7ff ff03 	bl	21e90 <USBD_Init>
   2208a:	4603      	mov	r3, r0
   2208c:	2b00      	cmp	r3, #0
   2208e:	d001      	beq.n	22094 <MX_USB_DEVICE_Init+0x18>
  {
    Error_Handler();
   22090:	f7f7 fc3c 	bl	1990c <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_CDC) != USBD_OK)
   22094:	4910      	ldr	r1, [pc, #64]	; (220d8 <MX_USB_DEVICE_Init+0x5c>)
   22096:	480f      	ldr	r0, [pc, #60]	; (220d4 <MX_USB_DEVICE_Init+0x58>)
   22098:	f7ff ff25 	bl	21ee6 <USBD_RegisterClass>
   2209c:	4603      	mov	r3, r0
   2209e:	2b00      	cmp	r3, #0
   220a0:	d001      	beq.n	220a6 <MX_USB_DEVICE_Init+0x2a>
  {
    Error_Handler();
   220a2:	f7f7 fc33 	bl	1990c <Error_Handler>
  }
  if (USBD_CDC_RegisterInterface(&hUsbDeviceFS, &USBD_Interface_fops_FS) != USBD_OK)
   220a6:	490d      	ldr	r1, [pc, #52]	; (220dc <MX_USB_DEVICE_Init+0x60>)
   220a8:	480a      	ldr	r0, [pc, #40]	; (220d4 <MX_USB_DEVICE_Init+0x58>)
   220aa:	f7ff fe53 	bl	21d54 <USBD_CDC_RegisterInterface>
   220ae:	4603      	mov	r3, r0
   220b0:	2b00      	cmp	r3, #0
   220b2:	d001      	beq.n	220b8 <MX_USB_DEVICE_Init+0x3c>
  {
    Error_Handler();
   220b4:	f7f7 fc2a 	bl	1990c <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
   220b8:	4806      	ldr	r0, [pc, #24]	; (220d4 <MX_USB_DEVICE_Init+0x58>)
   220ba:	f7ff ff2e 	bl	21f1a <USBD_Start>
   220be:	4603      	mov	r3, r0
   220c0:	2b00      	cmp	r3, #0
   220c2:	d001      	beq.n	220c8 <MX_USB_DEVICE_Init+0x4c>
  {
    Error_Handler();
   220c4:	f7f7 fc22 	bl	1990c <Error_Handler>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */
  HAL_PWREx_EnableUSBVoltageDetector();
   220c8:	f7f8 fe50 	bl	1ad6c <HAL_PWREx_EnableUSBVoltageDetector>
  
  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
   220cc:	bf00      	nop
   220ce:	bd80      	pop	{r7, pc}
   220d0:	00034288 	.word	0x00034288
   220d4:	00034810 	.word	0x00034810
   220d8:	00034174 	.word	0x00034174
   220dc:	00034278 	.word	0x00034278

000220e0 <CDC_Init_FS>:
/**
  * @brief  Initializes the CDC media low layer over the FS USB IP
  * @retval USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_Init_FS(void)
{
   220e0:	b580      	push	{r7, lr}
   220e2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 3 */
  /* Set Application Buffers */
  USBD_CDC_SetTxBuffer(&hUsbDeviceFS, UserTxBufferFS, 0);
   220e4:	2200      	movs	r2, #0
   220e6:	4905      	ldr	r1, [pc, #20]	; (220fc <CDC_Init_FS+0x1c>)
   220e8:	4805      	ldr	r0, [pc, #20]	; (22100 <CDC_Init_FS+0x20>)
   220ea:	f7ff fe4a 	bl	21d82 <USBD_CDC_SetTxBuffer>
  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
   220ee:	4905      	ldr	r1, [pc, #20]	; (22104 <CDC_Init_FS+0x24>)
   220f0:	4803      	ldr	r0, [pc, #12]	; (22100 <CDC_Init_FS+0x20>)
   220f2:	f7ff fe60 	bl	21db6 <USBD_CDC_SetRxBuffer>
  return (USBD_OK);
   220f6:	2300      	movs	r3, #0
  /* USER CODE END 3 */
}
   220f8:	4618      	mov	r0, r3
   220fa:	bd80      	pop	{r7, pc}
   220fc:	000352d4 	.word	0x000352d4
   22100:	00034810 	.word	0x00034810
   22104:	00034ad4 	.word	0x00034ad4

00022108 <CDC_DeInit_FS>:
/**
  * @brief  DeInitializes the CDC media low layer
  * @retval USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_DeInit_FS(void)
{
   22108:	b480      	push	{r7}
   2210a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 4 */
  return (USBD_OK);
   2210c:	2300      	movs	r3, #0
  /* USER CODE END 4 */
}
   2210e:	4618      	mov	r0, r3
   22110:	46bd      	mov	sp, r7
   22112:	f85d 7b04 	ldr.w	r7, [sp], #4
   22116:	4770      	bx	lr

00022118 <CDC_Control_FS>:
  * @param  pbuf: Buffer containing command data (request parameters)
  * @param  length: Number of data to be sent (in bytes)
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length)
{
   22118:	b480      	push	{r7}
   2211a:	b085      	sub	sp, #20
   2211c:	af00      	add	r7, sp, #0
   2211e:	4603      	mov	r3, r0
   22120:	6039      	str	r1, [r7, #0]
   22122:	71fb      	strb	r3, [r7, #7]
   22124:	4613      	mov	r3, r2
   22126:	80bb      	strh	r3, [r7, #4]
  /* USER CODE BEGIN 5 */
	uint8_t tempbuf[7] = {0,0,0,0,0,0,0};
   22128:	f107 0308 	add.w	r3, r7, #8
   2212c:	2200      	movs	r2, #0
   2212e:	601a      	str	r2, [r3, #0]
   22130:	f8c3 2003 	str.w	r2, [r3, #3]
  switch(cmd)
   22134:	79fb      	ldrb	r3, [r7, #7]
   22136:	2b23      	cmp	r3, #35	; 0x23
   22138:	d87c      	bhi.n	22234 <CDC_Control_FS+0x11c>
   2213a:	a201      	add	r2, pc, #4	; (adr r2, 22140 <CDC_Control_FS+0x28>)
   2213c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   22140:	00022235 	.word	0x00022235
   22144:	00022235 	.word	0x00022235
   22148:	00022235 	.word	0x00022235
   2214c:	00022235 	.word	0x00022235
   22150:	00022235 	.word	0x00022235
   22154:	00022235 	.word	0x00022235
   22158:	00022235 	.word	0x00022235
   2215c:	00022235 	.word	0x00022235
   22160:	00022235 	.word	0x00022235
   22164:	00022235 	.word	0x00022235
   22168:	00022235 	.word	0x00022235
   2216c:	00022235 	.word	0x00022235
   22170:	00022235 	.word	0x00022235
   22174:	00022235 	.word	0x00022235
   22178:	00022235 	.word	0x00022235
   2217c:	00022235 	.word	0x00022235
   22180:	00022235 	.word	0x00022235
   22184:	00022235 	.word	0x00022235
   22188:	00022235 	.word	0x00022235
   2218c:	00022235 	.word	0x00022235
   22190:	00022235 	.word	0x00022235
   22194:	00022235 	.word	0x00022235
   22198:	00022235 	.word	0x00022235
   2219c:	00022235 	.word	0x00022235
   221a0:	00022235 	.word	0x00022235
   221a4:	00022235 	.word	0x00022235
   221a8:	00022235 	.word	0x00022235
   221ac:	00022235 	.word	0x00022235
   221b0:	00022235 	.word	0x00022235
   221b4:	00022235 	.word	0x00022235
   221b8:	00022235 	.word	0x00022235
   221bc:	00022235 	.word	0x00022235
   221c0:	000221d1 	.word	0x000221d1
   221c4:	000221fd 	.word	0x000221fd
   221c8:	00022235 	.word	0x00022235
   221cc:	00022235 	.word	0x00022235
  /*                                        3 - Mark                             */
  /*                                        4 - Space                            */
  /* 6      | bDataBits  |   1   | Number Data bits (5, 6, 7, 8 or 16).          */
  /*******************************************************************************/
    case CDC_SET_LINE_CODING:
     	tempbuf[0] = pbuf[0];
   221d0:	683b      	ldr	r3, [r7, #0]
   221d2:	781b      	ldrb	r3, [r3, #0]
   221d4:	723b      	strb	r3, [r7, #8]
     	tempbuf[1] = pbuf[1];
   221d6:	683b      	ldr	r3, [r7, #0]
   221d8:	785b      	ldrb	r3, [r3, #1]
   221da:	727b      	strb	r3, [r7, #9]
     	tempbuf[2] = pbuf[2];
   221dc:	683b      	ldr	r3, [r7, #0]
   221de:	789b      	ldrb	r3, [r3, #2]
   221e0:	72bb      	strb	r3, [r7, #10]
     	tempbuf[3] = pbuf[3];
   221e2:	683b      	ldr	r3, [r7, #0]
   221e4:	78db      	ldrb	r3, [r3, #3]
   221e6:	72fb      	strb	r3, [r7, #11]
     	tempbuf[4] = pbuf[4];
   221e8:	683b      	ldr	r3, [r7, #0]
   221ea:	791b      	ldrb	r3, [r3, #4]
   221ec:	733b      	strb	r3, [r7, #12]
     	tempbuf[5] = pbuf[5];
   221ee:	683b      	ldr	r3, [r7, #0]
   221f0:	795b      	ldrb	r3, [r3, #5]
   221f2:	737b      	strb	r3, [r7, #13]
     	tempbuf[6] = pbuf[6];
   221f4:	683b      	ldr	r3, [r7, #0]
   221f6:	799b      	ldrb	r3, [r3, #6]
   221f8:	73bb      	strb	r3, [r7, #14]
     	break;
   221fa:	e01c      	b.n	22236 <CDC_Control_FS+0x11e>

     case CDC_GET_LINE_CODING:
     	pbuf[0] = tempbuf[0];
   221fc:	7a3a      	ldrb	r2, [r7, #8]
   221fe:	683b      	ldr	r3, [r7, #0]
   22200:	701a      	strb	r2, [r3, #0]
     	pbuf[1] = tempbuf[1];
   22202:	683b      	ldr	r3, [r7, #0]
   22204:	3301      	adds	r3, #1
   22206:	7a7a      	ldrb	r2, [r7, #9]
   22208:	701a      	strb	r2, [r3, #0]
     	pbuf[2] = tempbuf[2];
   2220a:	683b      	ldr	r3, [r7, #0]
   2220c:	3302      	adds	r3, #2
   2220e:	7aba      	ldrb	r2, [r7, #10]
   22210:	701a      	strb	r2, [r3, #0]
     	pbuf[3] = tempbuf[3];
   22212:	683b      	ldr	r3, [r7, #0]
   22214:	3303      	adds	r3, #3
   22216:	7afa      	ldrb	r2, [r7, #11]
   22218:	701a      	strb	r2, [r3, #0]
     	pbuf[4] = tempbuf[4];
   2221a:	683b      	ldr	r3, [r7, #0]
   2221c:	3304      	adds	r3, #4
   2221e:	7b3a      	ldrb	r2, [r7, #12]
   22220:	701a      	strb	r2, [r3, #0]
     	pbuf[5] = tempbuf[5];
   22222:	683b      	ldr	r3, [r7, #0]
   22224:	3305      	adds	r3, #5
   22226:	7b7a      	ldrb	r2, [r7, #13]
   22228:	701a      	strb	r2, [r3, #0]
     	pbuf[6] = tempbuf[6];
   2222a:	683b      	ldr	r3, [r7, #0]
   2222c:	3306      	adds	r3, #6
   2222e:	7bba      	ldrb	r2, [r7, #14]
   22230:	701a      	strb	r2, [r3, #0]
     	break;
   22232:	e000      	b.n	22236 <CDC_Control_FS+0x11e>
    case CDC_SEND_BREAK:

    break;

  default:
    break;
   22234:	bf00      	nop
  }

  return (USBD_OK);
   22236:	2300      	movs	r3, #0
  /* USER CODE END 5 */
}
   22238:	4618      	mov	r0, r3
   2223a:	3714      	adds	r7, #20
   2223c:	46bd      	mov	sp, r7
   2223e:	f85d 7b04 	ldr.w	r7, [sp], #4
   22242:	4770      	bx	lr

00022244 <CDC_Receive_FS>:
  * @param  Buf: Buffer of data to be received
  * @param  Len: Number of data received (in bytes)
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_Receive_FS(uint8_t* Buf, uint32_t *Len)
{
   22244:	b580      	push	{r7, lr}
   22246:	b082      	sub	sp, #8
   22248:	af00      	add	r7, sp, #0
   2224a:	6078      	str	r0, [r7, #4]
   2224c:	6039      	str	r1, [r7, #0]
  /* USER CODE BEGIN 6 */
  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
   2224e:	6879      	ldr	r1, [r7, #4]
   22250:	4805      	ldr	r0, [pc, #20]	; (22268 <CDC_Receive_FS+0x24>)
   22252:	f7ff fdb0 	bl	21db6 <USBD_CDC_SetRxBuffer>
  USBD_CDC_ReceivePacket(&hUsbDeviceFS);
   22256:	4804      	ldr	r0, [pc, #16]	; (22268 <CDC_Receive_FS+0x24>)
   22258:	f7ff fdf0 	bl	21e3c <USBD_CDC_ReceivePacket>
  return (USBD_OK);
   2225c:	2300      	movs	r3, #0
  /* USER CODE END 6 */
}
   2225e:	4618      	mov	r0, r3
   22260:	3708      	adds	r7, #8
   22262:	46bd      	mov	sp, r7
   22264:	bd80      	pop	{r7, pc}
   22266:	bf00      	nop
   22268:	00034810 	.word	0x00034810

0002226c <CDC_Transmit_FS>:
  * @param  Buf: Buffer of data to be sent
  * @param  Len: Number of data to be sent (in bytes)
  * @retval USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
  */
uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len)
{
   2226c:	b580      	push	{r7, lr}
   2226e:	b084      	sub	sp, #16
   22270:	af00      	add	r7, sp, #0
   22272:	6078      	str	r0, [r7, #4]
   22274:	460b      	mov	r3, r1
   22276:	807b      	strh	r3, [r7, #2]
  uint8_t result = USBD_OK;
   22278:	2300      	movs	r3, #0
   2227a:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN 7 */
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceFS.pClassData;
   2227c:	4b0d      	ldr	r3, [pc, #52]	; (222b4 <CDC_Transmit_FS+0x48>)
   2227e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
   22282:	60bb      	str	r3, [r7, #8]
  if (hcdc->TxState != 0){
   22284:	68bb      	ldr	r3, [r7, #8]
   22286:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
   2228a:	2b00      	cmp	r3, #0
   2228c:	d001      	beq.n	22292 <CDC_Transmit_FS+0x26>
    return USBD_BUSY;
   2228e:	2301      	movs	r3, #1
   22290:	e00b      	b.n	222aa <CDC_Transmit_FS+0x3e>
  }
  USBD_CDC_SetTxBuffer(&hUsbDeviceFS, Buf, Len);
   22292:	887b      	ldrh	r3, [r7, #2]
   22294:	461a      	mov	r2, r3
   22296:	6879      	ldr	r1, [r7, #4]
   22298:	4806      	ldr	r0, [pc, #24]	; (222b4 <CDC_Transmit_FS+0x48>)
   2229a:	f7ff fd72 	bl	21d82 <USBD_CDC_SetTxBuffer>
  result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
   2229e:	4805      	ldr	r0, [pc, #20]	; (222b4 <CDC_Transmit_FS+0x48>)
   222a0:	f7ff fd9d 	bl	21dde <USBD_CDC_TransmitPacket>
   222a4:	4603      	mov	r3, r0
   222a6:	73fb      	strb	r3, [r7, #15]
  /* USER CODE END 7 */
  return result;
   222a8:	7bfb      	ldrb	r3, [r7, #15]
}
   222aa:	4618      	mov	r0, r3
   222ac:	3710      	adds	r7, #16
   222ae:	46bd      	mov	sp, r7
   222b0:	bd80      	pop	{r7, pc}
   222b2:	bf00      	nop
   222b4:	00034810 	.word	0x00034810

000222b8 <USBD_FS_DeviceDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
   222b8:	b480      	push	{r7}
   222ba:	b083      	sub	sp, #12
   222bc:	af00      	add	r7, sp, #0
   222be:	4603      	mov	r3, r0
   222c0:	6039      	str	r1, [r7, #0]
   222c2:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = sizeof(USBD_FS_DeviceDesc);
   222c4:	683b      	ldr	r3, [r7, #0]
   222c6:	2212      	movs	r2, #18
   222c8:	801a      	strh	r2, [r3, #0]
  return USBD_FS_DeviceDesc;
   222ca:	4b03      	ldr	r3, [pc, #12]	; (222d8 <USBD_FS_DeviceDescriptor+0x20>)
}
   222cc:	4618      	mov	r0, r3
   222ce:	370c      	adds	r7, #12
   222d0:	46bd      	mov	sp, r7
   222d2:	f85d 7b04 	ldr.w	r7, [sp], #4
   222d6:	4770      	bx	lr
   222d8:	000342a4 	.word	0x000342a4

000222dc <USBD_FS_LangIDStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
   222dc:	b480      	push	{r7}
   222de:	b083      	sub	sp, #12
   222e0:	af00      	add	r7, sp, #0
   222e2:	4603      	mov	r3, r0
   222e4:	6039      	str	r1, [r7, #0]
   222e6:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
   222e8:	683b      	ldr	r3, [r7, #0]
   222ea:	2204      	movs	r2, #4
   222ec:	801a      	strh	r2, [r3, #0]
  return USBD_LangIDDesc;
   222ee:	4b03      	ldr	r3, [pc, #12]	; (222fc <USBD_FS_LangIDStrDescriptor+0x20>)
}
   222f0:	4618      	mov	r0, r3
   222f2:	370c      	adds	r7, #12
   222f4:	46bd      	mov	sp, r7
   222f6:	f85d 7b04 	ldr.w	r7, [sp], #4
   222fa:	4770      	bx	lr
   222fc:	000342b8 	.word	0x000342b8

00022300 <USBD_FS_ProductStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
   22300:	b580      	push	{r7, lr}
   22302:	b082      	sub	sp, #8
   22304:	af00      	add	r7, sp, #0
   22306:	4603      	mov	r3, r0
   22308:	6039      	str	r1, [r7, #0]
   2230a:	71fb      	strb	r3, [r7, #7]
  if(speed == 0)
   2230c:	79fb      	ldrb	r3, [r7, #7]
   2230e:	2b00      	cmp	r3, #0
   22310:	d105      	bne.n	2231e <USBD_FS_ProductStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
   22312:	683a      	ldr	r2, [r7, #0]
   22314:	4907      	ldr	r1, [pc, #28]	; (22334 <USBD_FS_ProductStrDescriptor+0x34>)
   22316:	4808      	ldr	r0, [pc, #32]	; (22338 <USBD_FS_ProductStrDescriptor+0x38>)
   22318:	f7ff fe1c 	bl	21f54 <USBD_GetString>
   2231c:	e004      	b.n	22328 <USBD_FS_ProductStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
   2231e:	683a      	ldr	r2, [r7, #0]
   22320:	4904      	ldr	r1, [pc, #16]	; (22334 <USBD_FS_ProductStrDescriptor+0x34>)
   22322:	4805      	ldr	r0, [pc, #20]	; (22338 <USBD_FS_ProductStrDescriptor+0x38>)
   22324:	f7ff fe16 	bl	21f54 <USBD_GetString>
  }
  return USBD_StrDesc;
   22328:	4b02      	ldr	r3, [pc, #8]	; (22334 <USBD_FS_ProductStrDescriptor+0x34>)
}
   2232a:	4618      	mov	r0, r3
   2232c:	3708      	adds	r7, #8
   2232e:	46bd      	mov	sp, r7
   22330:	bd80      	pop	{r7, pc}
   22332:	bf00      	nop
   22334:	00035ad4 	.word	0x00035ad4
   22338:	00023eb4 	.word	0x00023eb4

0002233c <USBD_FS_ManufacturerStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
   2233c:	b580      	push	{r7, lr}
   2233e:	b082      	sub	sp, #8
   22340:	af00      	add	r7, sp, #0
   22342:	4603      	mov	r3, r0
   22344:	6039      	str	r1, [r7, #0]
   22346:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
   22348:	683a      	ldr	r2, [r7, #0]
   2234a:	4904      	ldr	r1, [pc, #16]	; (2235c <USBD_FS_ManufacturerStrDescriptor+0x20>)
   2234c:	4804      	ldr	r0, [pc, #16]	; (22360 <USBD_FS_ManufacturerStrDescriptor+0x24>)
   2234e:	f7ff fe01 	bl	21f54 <USBD_GetString>
  return USBD_StrDesc;
   22352:	4b02      	ldr	r3, [pc, #8]	; (2235c <USBD_FS_ManufacturerStrDescriptor+0x20>)
}
   22354:	4618      	mov	r0, r3
   22356:	3708      	adds	r7, #8
   22358:	46bd      	mov	sp, r7
   2235a:	bd80      	pop	{r7, pc}
   2235c:	00035ad4 	.word	0x00035ad4
   22360:	00023ecc 	.word	0x00023ecc

00022364 <USBD_FS_SerialStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
   22364:	b580      	push	{r7, lr}
   22366:	b082      	sub	sp, #8
   22368:	af00      	add	r7, sp, #0
   2236a:	4603      	mov	r3, r0
   2236c:	6039      	str	r1, [r7, #0]
   2236e:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = USB_SIZ_STRING_SERIAL;
   22370:	683b      	ldr	r3, [r7, #0]
   22372:	221a      	movs	r2, #26
   22374:	801a      	strh	r2, [r3, #0]

  /* Update the serial number string descriptor with the data from the unique
   * ID */
  Get_SerialNum();
   22376:	f000 f843 	bl	22400 <Get_SerialNum>
  /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */
  
  /* USER CODE END USBD_FS_SerialStrDescriptor */
  return (uint8_t *) USBD_StringSerial;
   2237a:	4b02      	ldr	r3, [pc, #8]	; (22384 <USBD_FS_SerialStrDescriptor+0x20>)
}
   2237c:	4618      	mov	r0, r3
   2237e:	3708      	adds	r7, #8
   22380:	46bd      	mov	sp, r7
   22382:	bd80      	pop	{r7, pc}
   22384:	000342bc 	.word	0x000342bc

00022388 <USBD_FS_ConfigStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
   22388:	b580      	push	{r7, lr}
   2238a:	b082      	sub	sp, #8
   2238c:	af00      	add	r7, sp, #0
   2238e:	4603      	mov	r3, r0
   22390:	6039      	str	r1, [r7, #0]
   22392:	71fb      	strb	r3, [r7, #7]
  if(speed == USBD_SPEED_HIGH)
   22394:	79fb      	ldrb	r3, [r7, #7]
   22396:	2b00      	cmp	r3, #0
   22398:	d105      	bne.n	223a6 <USBD_FS_ConfigStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
   2239a:	683a      	ldr	r2, [r7, #0]
   2239c:	4907      	ldr	r1, [pc, #28]	; (223bc <USBD_FS_ConfigStrDescriptor+0x34>)
   2239e:	4808      	ldr	r0, [pc, #32]	; (223c0 <USBD_FS_ConfigStrDescriptor+0x38>)
   223a0:	f7ff fdd8 	bl	21f54 <USBD_GetString>
   223a4:	e004      	b.n	223b0 <USBD_FS_ConfigStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
   223a6:	683a      	ldr	r2, [r7, #0]
   223a8:	4904      	ldr	r1, [pc, #16]	; (223bc <USBD_FS_ConfigStrDescriptor+0x34>)
   223aa:	4805      	ldr	r0, [pc, #20]	; (223c0 <USBD_FS_ConfigStrDescriptor+0x38>)
   223ac:	f7ff fdd2 	bl	21f54 <USBD_GetString>
  }
  return USBD_StrDesc;
   223b0:	4b02      	ldr	r3, [pc, #8]	; (223bc <USBD_FS_ConfigStrDescriptor+0x34>)
}
   223b2:	4618      	mov	r0, r3
   223b4:	3708      	adds	r7, #8
   223b6:	46bd      	mov	sp, r7
   223b8:	bd80      	pop	{r7, pc}
   223ba:	bf00      	nop
   223bc:	00035ad4 	.word	0x00035ad4
   223c0:	00023ee0 	.word	0x00023ee0

000223c4 <USBD_FS_InterfaceStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
   223c4:	b580      	push	{r7, lr}
   223c6:	b082      	sub	sp, #8
   223c8:	af00      	add	r7, sp, #0
   223ca:	4603      	mov	r3, r0
   223cc:	6039      	str	r1, [r7, #0]
   223ce:	71fb      	strb	r3, [r7, #7]
  if(speed == 0)
   223d0:	79fb      	ldrb	r3, [r7, #7]
   223d2:	2b00      	cmp	r3, #0
   223d4:	d105      	bne.n	223e2 <USBD_FS_InterfaceStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
   223d6:	683a      	ldr	r2, [r7, #0]
   223d8:	4907      	ldr	r1, [pc, #28]	; (223f8 <USBD_FS_InterfaceStrDescriptor+0x34>)
   223da:	4808      	ldr	r0, [pc, #32]	; (223fc <USBD_FS_InterfaceStrDescriptor+0x38>)
   223dc:	f7ff fdba 	bl	21f54 <USBD_GetString>
   223e0:	e004      	b.n	223ec <USBD_FS_InterfaceStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
   223e2:	683a      	ldr	r2, [r7, #0]
   223e4:	4904      	ldr	r1, [pc, #16]	; (223f8 <USBD_FS_InterfaceStrDescriptor+0x34>)
   223e6:	4805      	ldr	r0, [pc, #20]	; (223fc <USBD_FS_InterfaceStrDescriptor+0x38>)
   223e8:	f7ff fdb4 	bl	21f54 <USBD_GetString>
  }
  return USBD_StrDesc;
   223ec:	4b02      	ldr	r3, [pc, #8]	; (223f8 <USBD_FS_InterfaceStrDescriptor+0x34>)
}
   223ee:	4618      	mov	r0, r3
   223f0:	3708      	adds	r7, #8
   223f2:	46bd      	mov	sp, r7
   223f4:	bd80      	pop	{r7, pc}
   223f6:	bf00      	nop
   223f8:	00035ad4 	.word	0x00035ad4
   223fc:	00023eec 	.word	0x00023eec

00022400 <Get_SerialNum>:
  * @brief  Create the serial number string descriptor 
  * @param  None 
  * @retval None
  */
static void Get_SerialNum(void)
{
   22400:	b580      	push	{r7, lr}
   22402:	b084      	sub	sp, #16
   22404:	af00      	add	r7, sp, #0
  uint32_t deviceserial0, deviceserial1, deviceserial2;

  deviceserial0 = *(uint32_t *) DEVICE_ID1;
   22406:	4b0f      	ldr	r3, [pc, #60]	; (22444 <Get_SerialNum+0x44>)
   22408:	681b      	ldr	r3, [r3, #0]
   2240a:	60fb      	str	r3, [r7, #12]
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
   2240c:	4b0e      	ldr	r3, [pc, #56]	; (22448 <Get_SerialNum+0x48>)
   2240e:	681b      	ldr	r3, [r3, #0]
   22410:	60bb      	str	r3, [r7, #8]
  deviceserial2 = *(uint32_t *) DEVICE_ID3;
   22412:	4b0e      	ldr	r3, [pc, #56]	; (2244c <Get_SerialNum+0x4c>)
   22414:	681b      	ldr	r3, [r3, #0]
   22416:	607b      	str	r3, [r7, #4]

  deviceserial0 += deviceserial2;
   22418:	68fa      	ldr	r2, [r7, #12]
   2241a:	687b      	ldr	r3, [r7, #4]
   2241c:	4413      	add	r3, r2
   2241e:	60fb      	str	r3, [r7, #12]

  if (deviceserial0 != 0)
   22420:	68fb      	ldr	r3, [r7, #12]
   22422:	2b00      	cmp	r3, #0
   22424:	d009      	beq.n	2243a <Get_SerialNum+0x3a>
  {
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
   22426:	2208      	movs	r2, #8
   22428:	4909      	ldr	r1, [pc, #36]	; (22450 <Get_SerialNum+0x50>)
   2242a:	68f8      	ldr	r0, [r7, #12]
   2242c:	f000 f814 	bl	22458 <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
   22430:	2204      	movs	r2, #4
   22432:	4908      	ldr	r1, [pc, #32]	; (22454 <Get_SerialNum+0x54>)
   22434:	68b8      	ldr	r0, [r7, #8]
   22436:	f000 f80f 	bl	22458 <IntToUnicode>
  }
}
   2243a:	bf00      	nop
   2243c:	3710      	adds	r7, #16
   2243e:	46bd      	mov	sp, r7
   22440:	bd80      	pop	{r7, pc}
   22442:	bf00      	nop
   22444:	1ff1e800 	.word	0x1ff1e800
   22448:	1ff1e804 	.word	0x1ff1e804
   2244c:	1ff1e808 	.word	0x1ff1e808
   22450:	000342be 	.word	0x000342be
   22454:	000342ce 	.word	0x000342ce

00022458 <IntToUnicode>:
  * @param  pbuf: pointer to the buffer 
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
   22458:	b480      	push	{r7}
   2245a:	b087      	sub	sp, #28
   2245c:	af00      	add	r7, sp, #0
   2245e:	60f8      	str	r0, [r7, #12]
   22460:	60b9      	str	r1, [r7, #8]
   22462:	4613      	mov	r3, r2
   22464:	71fb      	strb	r3, [r7, #7]
  uint8_t idx = 0;
   22466:	2300      	movs	r3, #0
   22468:	75fb      	strb	r3, [r7, #23]

  for (idx = 0; idx < len; idx++)
   2246a:	2300      	movs	r3, #0
   2246c:	75fb      	strb	r3, [r7, #23]
   2246e:	e027      	b.n	224c0 <IntToUnicode+0x68>
  {
    if (((value >> 28)) < 0xA)
   22470:	68fb      	ldr	r3, [r7, #12]
   22472:	0f1b      	lsrs	r3, r3, #28
   22474:	2b09      	cmp	r3, #9
   22476:	d80b      	bhi.n	22490 <IntToUnicode+0x38>
    {
      pbuf[2 * idx] = (value >> 28) + '0';
   22478:	68fb      	ldr	r3, [r7, #12]
   2247a:	0f1b      	lsrs	r3, r3, #28
   2247c:	b2da      	uxtb	r2, r3
   2247e:	7dfb      	ldrb	r3, [r7, #23]
   22480:	005b      	lsls	r3, r3, #1
   22482:	4619      	mov	r1, r3
   22484:	68bb      	ldr	r3, [r7, #8]
   22486:	440b      	add	r3, r1
   22488:	3230      	adds	r2, #48	; 0x30
   2248a:	b2d2      	uxtb	r2, r2
   2248c:	701a      	strb	r2, [r3, #0]
   2248e:	e00a      	b.n	224a6 <IntToUnicode+0x4e>
    }
    else
    {
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
   22490:	68fb      	ldr	r3, [r7, #12]
   22492:	0f1b      	lsrs	r3, r3, #28
   22494:	b2da      	uxtb	r2, r3
   22496:	7dfb      	ldrb	r3, [r7, #23]
   22498:	005b      	lsls	r3, r3, #1
   2249a:	4619      	mov	r1, r3
   2249c:	68bb      	ldr	r3, [r7, #8]
   2249e:	440b      	add	r3, r1
   224a0:	3237      	adds	r2, #55	; 0x37
   224a2:	b2d2      	uxtb	r2, r2
   224a4:	701a      	strb	r2, [r3, #0]
    }

    value = value << 4;
   224a6:	68fb      	ldr	r3, [r7, #12]
   224a8:	011b      	lsls	r3, r3, #4
   224aa:	60fb      	str	r3, [r7, #12]

    pbuf[2 * idx + 1] = 0;
   224ac:	7dfb      	ldrb	r3, [r7, #23]
   224ae:	005b      	lsls	r3, r3, #1
   224b0:	3301      	adds	r3, #1
   224b2:	68ba      	ldr	r2, [r7, #8]
   224b4:	4413      	add	r3, r2
   224b6:	2200      	movs	r2, #0
   224b8:	701a      	strb	r2, [r3, #0]
  for (idx = 0; idx < len; idx++)
   224ba:	7dfb      	ldrb	r3, [r7, #23]
   224bc:	3301      	adds	r3, #1
   224be:	75fb      	strb	r3, [r7, #23]
   224c0:	7dfa      	ldrb	r2, [r7, #23]
   224c2:	79fb      	ldrb	r3, [r7, #7]
   224c4:	429a      	cmp	r2, r3
   224c6:	d3d3      	bcc.n	22470 <IntToUnicode+0x18>
  }
}
   224c8:	bf00      	nop
   224ca:	371c      	adds	r7, #28
   224cc:	46bd      	mov	sp, r7
   224ce:	f85d 7b04 	ldr.w	r7, [sp], #4
   224d2:	4770      	bx	lr

000224d4 <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
   224d4:	b580      	push	{r7, lr}
   224d6:	b08a      	sub	sp, #40	; 0x28
   224d8:	af00      	add	r7, sp, #0
   224da:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
   224dc:	f107 0314 	add.w	r3, r7, #20
   224e0:	2200      	movs	r2, #0
   224e2:	601a      	str	r2, [r3, #0]
   224e4:	605a      	str	r2, [r3, #4]
   224e6:	609a      	str	r2, [r3, #8]
   224e8:	60da      	str	r2, [r3, #12]
   224ea:	611a      	str	r2, [r3, #16]
  if(pcdHandle->Instance==USB_OTG_FS)
   224ec:	687b      	ldr	r3, [r7, #4]
   224ee:	681b      	ldr	r3, [r3, #0]
   224f0:	4a1e      	ldr	r2, [pc, #120]	; (2256c <HAL_PCD_MspInit+0x98>)
   224f2:	4293      	cmp	r3, r2
   224f4:	d136      	bne.n	22564 <HAL_PCD_MspInit+0x90>
  {
  /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */

  /* USER CODE END USB_OTG_FS_MspInit 0 */
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
   224f6:	4b1e      	ldr	r3, [pc, #120]	; (22570 <HAL_PCD_MspInit+0x9c>)
   224f8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   224fc:	4a1c      	ldr	r2, [pc, #112]	; (22570 <HAL_PCD_MspInit+0x9c>)
   224fe:	f043 0301 	orr.w	r3, r3, #1
   22502:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   22506:	4b1a      	ldr	r3, [pc, #104]	; (22570 <HAL_PCD_MspInit+0x9c>)
   22508:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
   2250c:	f003 0301 	and.w	r3, r3, #1
   22510:	613b      	str	r3, [r7, #16]
   22512:	693b      	ldr	r3, [r7, #16]
    PA8     ------> USB_OTG_FS_SOF
    PA10     ------> USB_OTG_FS_ID
    PA11     ------> USB_OTG_FS_DM
    PA12     ------> USB_OTG_FS_DP 
    */
    GPIO_InitStruct.Pin = USB_SOF_Pin|USB_ID_Pin|USB_DM_Pin|USB_DP_Pin;
   22514:	f44f 53e8 	mov.w	r3, #7424	; 0x1d00
   22518:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   2251a:	2302      	movs	r3, #2
   2251c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
   2251e:	2300      	movs	r3, #0
   22520:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   22522:	2300      	movs	r3, #0
   22524:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG1_FS;
   22526:	230a      	movs	r3, #10
   22528:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   2252a:	f107 0314 	add.w	r3, r7, #20
   2252e:	4619      	mov	r1, r3
   22530:	4810      	ldr	r0, [pc, #64]	; (22574 <HAL_PCD_MspInit+0xa0>)
   22532:	f7f7 fe69 	bl	1a208 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
   22536:	4b0e      	ldr	r3, [pc, #56]	; (22570 <HAL_PCD_MspInit+0x9c>)
   22538:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
   2253c:	4a0c      	ldr	r2, [pc, #48]	; (22570 <HAL_PCD_MspInit+0x9c>)
   2253e:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
   22542:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
   22546:	4b0a      	ldr	r3, [pc, #40]	; (22570 <HAL_PCD_MspInit+0x9c>)
   22548:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
   2254c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
   22550:	60fb      	str	r3, [r7, #12]
   22552:	68fb      	ldr	r3, [r7, #12]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 0, 0);
   22554:	2200      	movs	r2, #0
   22556:	2100      	movs	r1, #0
   22558:	2065      	movs	r0, #101	; 0x65
   2255a:	f7f7 fe20 	bl	1a19e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
   2255e:	2065      	movs	r0, #101	; 0x65
   22560:	f7f7 fe37 	bl	1a1d2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */

  /* USER CODE END USB_OTG_FS_MspInit 1 */
  }
}
   22564:	bf00      	nop
   22566:	3728      	adds	r7, #40	; 0x28
   22568:	46bd      	mov	sp, r7
   2256a:	bd80      	pop	{r7, pc}
   2256c:	40080000 	.word	0x40080000
   22570:	58024400 	.word	0x58024400
   22574:	58020000 	.word	0x58020000

00022578 <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
   22578:	b580      	push	{r7, lr}
   2257a:	b082      	sub	sp, #8
   2257c:	af00      	add	r7, sp, #0
   2257e:	6078      	str	r0, [r7, #4]
  /* Init USB Ip. */
  if (pdev->id == DEVICE_FS) {
   22580:	687b      	ldr	r3, [r7, #4]
   22582:	781b      	ldrb	r3, [r3, #0]
   22584:	2b00      	cmp	r3, #0
   22586:	d13e      	bne.n	22606 <USBD_LL_Init+0x8e>
  /* Link the driver to the stack. */
  hpcd_USB_OTG_FS.pData = pdev;
   22588:	4a21      	ldr	r2, [pc, #132]	; (22610 <USBD_LL_Init+0x98>)
   2258a:	687b      	ldr	r3, [r7, #4]
   2258c:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
  pdev->pData = &hpcd_USB_OTG_FS;
   22590:	687b      	ldr	r3, [r7, #4]
   22592:	4a1f      	ldr	r2, [pc, #124]	; (22610 <USBD_LL_Init+0x98>)
   22594:	f8c3 22c0 	str.w	r2, [r3, #704]	; 0x2c0
  
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
   22598:	4b1d      	ldr	r3, [pc, #116]	; (22610 <USBD_LL_Init+0x98>)
   2259a:	4a1e      	ldr	r2, [pc, #120]	; (22614 <USBD_LL_Init+0x9c>)
   2259c:	601a      	str	r2, [r3, #0]
  hpcd_USB_OTG_FS.Init.dev_endpoints = 9;
   2259e:	4b1c      	ldr	r3, [pc, #112]	; (22610 <USBD_LL_Init+0x98>)
   225a0:	2209      	movs	r2, #9
   225a2:	605a      	str	r2, [r3, #4]
  hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
   225a4:	4b1a      	ldr	r3, [pc, #104]	; (22610 <USBD_LL_Init+0x98>)
   225a6:	2202      	movs	r2, #2
   225a8:	60da      	str	r2, [r3, #12]
  hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
   225aa:	4b19      	ldr	r3, [pc, #100]	; (22610 <USBD_LL_Init+0x98>)
   225ac:	2200      	movs	r2, #0
   225ae:	611a      	str	r2, [r3, #16]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
   225b0:	4b17      	ldr	r3, [pc, #92]	; (22610 <USBD_LL_Init+0x98>)
   225b2:	2202      	movs	r2, #2
   225b4:	619a      	str	r2, [r3, #24]
  hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
   225b6:	4b16      	ldr	r3, [pc, #88]	; (22610 <USBD_LL_Init+0x98>)
   225b8:	2201      	movs	r2, #1
   225ba:	61da      	str	r2, [r3, #28]
  hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
   225bc:	4b14      	ldr	r3, [pc, #80]	; (22610 <USBD_LL_Init+0x98>)
   225be:	2200      	movs	r2, #0
   225c0:	621a      	str	r2, [r3, #32]
  hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
   225c2:	4b13      	ldr	r3, [pc, #76]	; (22610 <USBD_LL_Init+0x98>)
   225c4:	2200      	movs	r2, #0
   225c6:	625a      	str	r2, [r3, #36]	; 0x24
  hpcd_USB_OTG_FS.Init.battery_charging_enable = DISABLE;
   225c8:	4b11      	ldr	r3, [pc, #68]	; (22610 <USBD_LL_Init+0x98>)
   225ca:	2200      	movs	r2, #0
   225cc:	629a      	str	r2, [r3, #40]	; 0x28
  hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
   225ce:	4b10      	ldr	r3, [pc, #64]	; (22610 <USBD_LL_Init+0x98>)
   225d0:	2200      	movs	r2, #0
   225d2:	62da      	str	r2, [r3, #44]	; 0x2c
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
   225d4:	4b0e      	ldr	r3, [pc, #56]	; (22610 <USBD_LL_Init+0x98>)
   225d6:	2200      	movs	r2, #0
   225d8:	631a      	str	r2, [r3, #48]	; 0x30
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
   225da:	480d      	ldr	r0, [pc, #52]	; (22610 <USBD_LL_Init+0x98>)
   225dc:	f7f7 fff5 	bl	1a5ca <HAL_PCD_Init>
   225e0:	4603      	mov	r3, r0
   225e2:	2b00      	cmp	r3, #0
   225e4:	d001      	beq.n	225ea <USBD_LL_Init+0x72>
  {
    Error_Handler( );
   225e6:	f7f7 f991 	bl	1990c <Error_Handler>
  HAL_PCD_RegisterDataOutStageCallback(&hpcd_USB_OTG_FS, PCD_DataOutStageCallback);
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_OTG_FS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_OTG_FS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_OTG_FS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_FS, 0x80);
   225ea:	2180      	movs	r1, #128	; 0x80
   225ec:	4808      	ldr	r0, [pc, #32]	; (22610 <USBD_LL_Init+0x98>)
   225ee:	f7f8 fb4d 	bl	1ac8c <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 0, 0x40);
   225f2:	2240      	movs	r2, #64	; 0x40
   225f4:	2100      	movs	r1, #0
   225f6:	4806      	ldr	r0, [pc, #24]	; (22610 <USBD_LL_Init+0x98>)
   225f8:	f7f8 fb01 	bl	1abfe <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 1, 0x80);
   225fc:	2280      	movs	r2, #128	; 0x80
   225fe:	2101      	movs	r1, #1
   22600:	4803      	ldr	r0, [pc, #12]	; (22610 <USBD_LL_Init+0x98>)
   22602:	f7f8 fafc 	bl	1abfe <HAL_PCDEx_SetTxFiFo>
  }
  return USBD_OK;
   22606:	2300      	movs	r3, #0
}
   22608:	4618      	mov	r0, r3
   2260a:	3708      	adds	r7, #8
   2260c:	46bd      	mov	sp, r7
   2260e:	bd80      	pop	{r7, pc}
   22610:	00035cd4 	.word	0x00035cd4
   22614:	40080000 	.word	0x40080000

00022618 <USBD_LL_Start>:
  * @brief  Starts the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Start(USBD_HandleTypeDef *pdev)
{
   22618:	b580      	push	{r7, lr}
   2261a:	b084      	sub	sp, #16
   2261c:	af00      	add	r7, sp, #0
   2261e:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef hal_status = HAL_OK;
   22620:	2300      	movs	r3, #0
   22622:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
   22624:	2300      	movs	r3, #0
   22626:	73bb      	strb	r3, [r7, #14]
 
  hal_status = HAL_PCD_Start(pdev->pData);
   22628:	687b      	ldr	r3, [r7, #4]
   2262a:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
   2262e:	4618      	mov	r0, r3
   22630:	f7f8 f8ef 	bl	1a812 <HAL_PCD_Start>
   22634:	4603      	mov	r3, r0
   22636:	73fb      	strb	r3, [r7, #15]
  
  usb_status =  USBD_Get_USB_Status(hal_status);     
   22638:	7bfb      	ldrb	r3, [r7, #15]
   2263a:	4618      	mov	r0, r3
   2263c:	f000 f8c4 	bl	227c8 <USBD_Get_USB_Status>
   22640:	4603      	mov	r3, r0
   22642:	73bb      	strb	r3, [r7, #14]
  
  return usb_status;
   22644:	7bbb      	ldrb	r3, [r7, #14]
}
   22646:	4618      	mov	r0, r3
   22648:	3710      	adds	r7, #16
   2264a:	46bd      	mov	sp, r7
   2264c:	bd80      	pop	{r7, pc}

0002264e <USBD_LL_OpenEP>:
  * @param  ep_type: Endpoint type
  * @param  ep_mps: Endpoint max packet size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_OpenEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t ep_type, uint16_t ep_mps)
{
   2264e:	b580      	push	{r7, lr}
   22650:	b084      	sub	sp, #16
   22652:	af00      	add	r7, sp, #0
   22654:	6078      	str	r0, [r7, #4]
   22656:	4608      	mov	r0, r1
   22658:	4611      	mov	r1, r2
   2265a:	461a      	mov	r2, r3
   2265c:	4603      	mov	r3, r0
   2265e:	70fb      	strb	r3, [r7, #3]
   22660:	460b      	mov	r3, r1
   22662:	70bb      	strb	r3, [r7, #2]
   22664:	4613      	mov	r3, r2
   22666:	803b      	strh	r3, [r7, #0]
  HAL_StatusTypeDef hal_status = HAL_OK;
   22668:	2300      	movs	r3, #0
   2266a:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
   2266c:	2300      	movs	r3, #0
   2266e:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
   22670:	687b      	ldr	r3, [r7, #4]
   22672:	f8d3 02c0 	ldr.w	r0, [r3, #704]	; 0x2c0
   22676:	78bb      	ldrb	r3, [r7, #2]
   22678:	883a      	ldrh	r2, [r7, #0]
   2267a:	78f9      	ldrb	r1, [r7, #3]
   2267c:	f7f8 f8fc 	bl	1a878 <HAL_PCD_EP_Open>
   22680:	4603      	mov	r3, r0
   22682:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
   22684:	7bfb      	ldrb	r3, [r7, #15]
   22686:	4618      	mov	r0, r3
   22688:	f000 f89e 	bl	227c8 <USBD_Get_USB_Status>
   2268c:	4603      	mov	r3, r0
   2268e:	73bb      	strb	r3, [r7, #14]
  
  return usb_status;
   22690:	7bbb      	ldrb	r3, [r7, #14]
}
   22692:	4618      	mov	r0, r3
   22694:	3710      	adds	r7, #16
   22696:	46bd      	mov	sp, r7
   22698:	bd80      	pop	{r7, pc}

0002269a <USBD_LL_CloseEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_CloseEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
   2269a:	b580      	push	{r7, lr}
   2269c:	b084      	sub	sp, #16
   2269e:	af00      	add	r7, sp, #0
   226a0:	6078      	str	r0, [r7, #4]
   226a2:	460b      	mov	r3, r1
   226a4:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
   226a6:	2300      	movs	r3, #0
   226a8:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
   226aa:	2300      	movs	r3, #0
   226ac:	73bb      	strb	r3, [r7, #14]
  
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
   226ae:	687b      	ldr	r3, [r7, #4]
   226b0:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
   226b4:	78fa      	ldrb	r2, [r7, #3]
   226b6:	4611      	mov	r1, r2
   226b8:	4618      	mov	r0, r3
   226ba:	f7f8 f945 	bl	1a948 <HAL_PCD_EP_Close>
   226be:	4603      	mov	r3, r0
   226c0:	73fb      	strb	r3, [r7, #15]
  
  usb_status =  USBD_Get_USB_Status(hal_status);    
   226c2:	7bfb      	ldrb	r3, [r7, #15]
   226c4:	4618      	mov	r0, r3
   226c6:	f000 f87f 	bl	227c8 <USBD_Get_USB_Status>
   226ca:	4603      	mov	r3, r0
   226cc:	73bb      	strb	r3, [r7, #14]
 
  return usb_status;  
   226ce:	7bbb      	ldrb	r3, [r7, #14]
}
   226d0:	4618      	mov	r0, r3
   226d2:	3710      	adds	r7, #16
   226d4:	46bd      	mov	sp, r7
   226d6:	bd80      	pop	{r7, pc}

000226d8 <USBD_LL_StallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_StallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
   226d8:	b580      	push	{r7, lr}
   226da:	b084      	sub	sp, #16
   226dc:	af00      	add	r7, sp, #0
   226de:	6078      	str	r0, [r7, #4]
   226e0:	460b      	mov	r3, r1
   226e2:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
   226e4:	2300      	movs	r3, #0
   226e6:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
   226e8:	2300      	movs	r3, #0
   226ea:	73bb      	strb	r3, [r7, #14]
  
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
   226ec:	687b      	ldr	r3, [r7, #4]
   226ee:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
   226f2:	78fa      	ldrb	r2, [r7, #3]
   226f4:	4611      	mov	r1, r2
   226f6:	4618      	mov	r0, r3
   226f8:	f7f8 fa1d 	bl	1ab36 <HAL_PCD_EP_SetStall>
   226fc:	4603      	mov	r3, r0
   226fe:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
   22700:	7bfb      	ldrb	r3, [r7, #15]
   22702:	4618      	mov	r0, r3
   22704:	f000 f860 	bl	227c8 <USBD_Get_USB_Status>
   22708:	4603      	mov	r3, r0
   2270a:	73bb      	strb	r3, [r7, #14]
  
  return usb_status;  
   2270c:	7bbb      	ldrb	r3, [r7, #14]
}
   2270e:	4618      	mov	r0, r3
   22710:	3710      	adds	r7, #16
   22712:	46bd      	mov	sp, r7
   22714:	bd80      	pop	{r7, pc}

00022716 <USBD_LL_Transmit>:
  * @param  pbuf: Pointer to data to be sent
  * @param  size: Data size    
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Transmit(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf, uint16_t size)
{
   22716:	b580      	push	{r7, lr}
   22718:	b086      	sub	sp, #24
   2271a:	af00      	add	r7, sp, #0
   2271c:	60f8      	str	r0, [r7, #12]
   2271e:	607a      	str	r2, [r7, #4]
   22720:	461a      	mov	r2, r3
   22722:	460b      	mov	r3, r1
   22724:	72fb      	strb	r3, [r7, #11]
   22726:	4613      	mov	r3, r2
   22728:	813b      	strh	r3, [r7, #8]
  HAL_StatusTypeDef hal_status = HAL_OK;
   2272a:	2300      	movs	r3, #0
   2272c:	75fb      	strb	r3, [r7, #23]
  USBD_StatusTypeDef usb_status = USBD_OK;
   2272e:	2300      	movs	r3, #0
   22730:	75bb      	strb	r3, [r7, #22]

  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
   22732:	68fb      	ldr	r3, [r7, #12]
   22734:	f8d3 02c0 	ldr.w	r0, [r3, #704]	; 0x2c0
   22738:	893b      	ldrh	r3, [r7, #8]
   2273a:	7af9      	ldrb	r1, [r7, #11]
   2273c:	687a      	ldr	r2, [r7, #4]
   2273e:	f7f8 f9b0 	bl	1aaa2 <HAL_PCD_EP_Transmit>
   22742:	4603      	mov	r3, r0
   22744:	75fb      	strb	r3, [r7, #23]
  
  usb_status =  USBD_Get_USB_Status(hal_status); 
   22746:	7dfb      	ldrb	r3, [r7, #23]
   22748:	4618      	mov	r0, r3
   2274a:	f000 f83d 	bl	227c8 <USBD_Get_USB_Status>
   2274e:	4603      	mov	r3, r0
   22750:	75bb      	strb	r3, [r7, #22]
  
  return usb_status;    
   22752:	7dbb      	ldrb	r3, [r7, #22]
}
   22754:	4618      	mov	r0, r3
   22756:	3718      	adds	r7, #24
   22758:	46bd      	mov	sp, r7
   2275a:	bd80      	pop	{r7, pc}

0002275c <USBD_LL_PrepareReceive>:
  * @param  pbuf: Pointer to data to be received
  * @param  size: Data size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf, uint16_t size)
{
   2275c:	b580      	push	{r7, lr}
   2275e:	b086      	sub	sp, #24
   22760:	af00      	add	r7, sp, #0
   22762:	60f8      	str	r0, [r7, #12]
   22764:	607a      	str	r2, [r7, #4]
   22766:	461a      	mov	r2, r3
   22768:	460b      	mov	r3, r1
   2276a:	72fb      	strb	r3, [r7, #11]
   2276c:	4613      	mov	r3, r2
   2276e:	813b      	strh	r3, [r7, #8]
  HAL_StatusTypeDef hal_status = HAL_OK;
   22770:	2300      	movs	r3, #0
   22772:	75fb      	strb	r3, [r7, #23]
  USBD_StatusTypeDef usb_status = USBD_OK;
   22774:	2300      	movs	r3, #0
   22776:	75bb      	strb	r3, [r7, #22]

  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
   22778:	68fb      	ldr	r3, [r7, #12]
   2277a:	f8d3 02c0 	ldr.w	r0, [r3, #704]	; 0x2c0
   2277e:	893b      	ldrh	r3, [r7, #8]
   22780:	7af9      	ldrb	r1, [r7, #11]
   22782:	687a      	ldr	r2, [r7, #4]
   22784:	f7f8 f92a 	bl	1a9dc <HAL_PCD_EP_Receive>
   22788:	4603      	mov	r3, r0
   2278a:	75fb      	strb	r3, [r7, #23]
  
  usb_status =  USBD_Get_USB_Status(hal_status);   
   2278c:	7dfb      	ldrb	r3, [r7, #23]
   2278e:	4618      	mov	r0, r3
   22790:	f000 f81a 	bl	227c8 <USBD_Get_USB_Status>
   22794:	4603      	mov	r3, r0
   22796:	75bb      	strb	r3, [r7, #22]
  
  return usb_status; 
   22798:	7dbb      	ldrb	r3, [r7, #22]
}
   2279a:	4618      	mov	r0, r3
   2279c:	3718      	adds	r7, #24
   2279e:	46bd      	mov	sp, r7
   227a0:	bd80      	pop	{r7, pc}

000227a2 <USBD_LL_GetRxDataSize>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval Recived Data Size
  */
uint32_t USBD_LL_GetRxDataSize(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
   227a2:	b580      	push	{r7, lr}
   227a4:	b082      	sub	sp, #8
   227a6:	af00      	add	r7, sp, #0
   227a8:	6078      	str	r0, [r7, #4]
   227aa:	460b      	mov	r3, r1
   227ac:	70fb      	strb	r3, [r7, #3]
  return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
   227ae:	687b      	ldr	r3, [r7, #4]
   227b0:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
   227b4:	78fa      	ldrb	r2, [r7, #3]
   227b6:	4611      	mov	r1, r2
   227b8:	4618      	mov	r0, r3
   227ba:	f7f8 f95a 	bl	1aa72 <HAL_PCD_EP_GetRxCount>
   227be:	4603      	mov	r3, r0
}
   227c0:	4618      	mov	r0, r3
   227c2:	3708      	adds	r7, #8
   227c4:	46bd      	mov	sp, r7
   227c6:	bd80      	pop	{r7, pc}

000227c8 <USBD_Get_USB_Status>:
  * @brief  Retuns the USB status depending on the HAL status:
  * @param  hal_status: HAL status
  * @retval USB status
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
   227c8:	b480      	push	{r7}
   227ca:	b085      	sub	sp, #20
   227cc:	af00      	add	r7, sp, #0
   227ce:	4603      	mov	r3, r0
   227d0:	71fb      	strb	r3, [r7, #7]
  USBD_StatusTypeDef usb_status = USBD_OK;
   227d2:	2300      	movs	r3, #0
   227d4:	73fb      	strb	r3, [r7, #15]

  switch (hal_status)
   227d6:	79fb      	ldrb	r3, [r7, #7]
   227d8:	2b03      	cmp	r3, #3
   227da:	d817      	bhi.n	2280c <USBD_Get_USB_Status+0x44>
   227dc:	a201      	add	r2, pc, #4	; (adr r2, 227e4 <USBD_Get_USB_Status+0x1c>)
   227de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   227e2:	bf00      	nop
   227e4:	000227f5 	.word	0x000227f5
   227e8:	000227fb 	.word	0x000227fb
   227ec:	00022801 	.word	0x00022801
   227f0:	00022807 	.word	0x00022807
  {
    case HAL_OK :
      usb_status = USBD_OK;
   227f4:	2300      	movs	r3, #0
   227f6:	73fb      	strb	r3, [r7, #15]
    break;
   227f8:	e00b      	b.n	22812 <USBD_Get_USB_Status+0x4a>
    case HAL_ERROR :
      usb_status = USBD_FAIL;
   227fa:	2302      	movs	r3, #2
   227fc:	73fb      	strb	r3, [r7, #15]
    break;
   227fe:	e008      	b.n	22812 <USBD_Get_USB_Status+0x4a>
    case HAL_BUSY :
      usb_status = USBD_BUSY;
   22800:	2301      	movs	r3, #1
   22802:	73fb      	strb	r3, [r7, #15]
    break;
   22804:	e005      	b.n	22812 <USBD_Get_USB_Status+0x4a>
    case HAL_TIMEOUT :
      usb_status = USBD_FAIL;
   22806:	2302      	movs	r3, #2
   22808:	73fb      	strb	r3, [r7, #15]
    break;
   2280a:	e002      	b.n	22812 <USBD_Get_USB_Status+0x4a>
    default :
      usb_status = USBD_FAIL;
   2280c:	2302      	movs	r3, #2
   2280e:	73fb      	strb	r3, [r7, #15]
    break;
   22810:	bf00      	nop
  }
  return usb_status;
   22812:	7bfb      	ldrb	r3, [r7, #15]
}
   22814:	4618      	mov	r0, r3
   22816:	3714      	adds	r7, #20
   22818:	46bd      	mov	sp, r7
   2281a:	f85d 7b04 	ldr.w	r7, [sp], #4
   2281e:	4770      	bx	lr

00022820 <__errno>:
   22820:	4b01      	ldr	r3, [pc, #4]	; (22828 <__errno+0x8>)
   22822:	6818      	ldr	r0, [r3, #0]
   22824:	4770      	bx	lr
   22826:	bf00      	nop
   22828:	000342d8 	.word	0x000342d8

0002282c <__libc_init_array>:
   2282c:	b570      	push	{r4, r5, r6, lr}
   2282e:	4e0d      	ldr	r6, [pc, #52]	; (22864 <__libc_init_array+0x38>)
   22830:	4c0d      	ldr	r4, [pc, #52]	; (22868 <__libc_init_array+0x3c>)
   22832:	1ba4      	subs	r4, r4, r6
   22834:	10a4      	asrs	r4, r4, #2
   22836:	2500      	movs	r5, #0
   22838:	42a5      	cmp	r5, r4
   2283a:	d109      	bne.n	22850 <__libc_init_array+0x24>
   2283c:	4e0b      	ldr	r6, [pc, #44]	; (2286c <__libc_init_array+0x40>)
   2283e:	4c0c      	ldr	r4, [pc, #48]	; (22870 <__libc_init_array+0x44>)
   22840:	f7e5 fbde 	bl	8000 <_init>
   22844:	1ba4      	subs	r4, r4, r6
   22846:	10a4      	asrs	r4, r4, #2
   22848:	2500      	movs	r5, #0
   2284a:	42a5      	cmp	r5, r4
   2284c:	d105      	bne.n	2285a <__libc_init_array+0x2e>
   2284e:	bd70      	pop	{r4, r5, r6, pc}
   22850:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   22854:	4798      	blx	r3
   22856:	3501      	adds	r5, #1
   22858:	e7ee      	b.n	22838 <__libc_init_array+0xc>
   2285a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   2285e:	4798      	blx	r3
   22860:	3501      	adds	r5, #1
   22862:	e7f2      	b.n	2284a <__libc_init_array+0x1e>
   22864:	00034144 	.word	0x00034144
   22868:	00034144 	.word	0x00034144
   2286c:	00034144 	.word	0x00034144
   22870:	00034148 	.word	0x00034148

00022874 <__itoa>:
   22874:	1e93      	subs	r3, r2, #2
   22876:	2b22      	cmp	r3, #34	; 0x22
   22878:	b510      	push	{r4, lr}
   2287a:	460c      	mov	r4, r1
   2287c:	d904      	bls.n	22888 <__itoa+0x14>
   2287e:	2300      	movs	r3, #0
   22880:	700b      	strb	r3, [r1, #0]
   22882:	461c      	mov	r4, r3
   22884:	4620      	mov	r0, r4
   22886:	bd10      	pop	{r4, pc}
   22888:	2a0a      	cmp	r2, #10
   2288a:	d109      	bne.n	228a0 <__itoa+0x2c>
   2288c:	2800      	cmp	r0, #0
   2288e:	da07      	bge.n	228a0 <__itoa+0x2c>
   22890:	232d      	movs	r3, #45	; 0x2d
   22892:	700b      	strb	r3, [r1, #0]
   22894:	4240      	negs	r0, r0
   22896:	2101      	movs	r1, #1
   22898:	4421      	add	r1, r4
   2289a:	f000 f8f5 	bl	22a88 <__utoa>
   2289e:	e7f1      	b.n	22884 <__itoa+0x10>
   228a0:	2100      	movs	r1, #0
   228a2:	e7f9      	b.n	22898 <__itoa+0x24>

000228a4 <itoa>:
   228a4:	f7ff bfe6 	b.w	22874 <__itoa>

000228a8 <malloc>:
   228a8:	4b02      	ldr	r3, [pc, #8]	; (228b4 <malloc+0xc>)
   228aa:	4601      	mov	r1, r0
   228ac:	6818      	ldr	r0, [r3, #0]
   228ae:	f000 b861 	b.w	22974 <_malloc_r>
   228b2:	bf00      	nop
   228b4:	000342d8 	.word	0x000342d8

000228b8 <free>:
   228b8:	4b02      	ldr	r3, [pc, #8]	; (228c4 <free+0xc>)
   228ba:	4601      	mov	r1, r0
   228bc:	6818      	ldr	r0, [r3, #0]
   228be:	f000 b80b 	b.w	228d8 <_free_r>
   228c2:	bf00      	nop
   228c4:	000342d8 	.word	0x000342d8

000228c8 <memset>:
   228c8:	4402      	add	r2, r0
   228ca:	4603      	mov	r3, r0
   228cc:	4293      	cmp	r3, r2
   228ce:	d100      	bne.n	228d2 <memset+0xa>
   228d0:	4770      	bx	lr
   228d2:	f803 1b01 	strb.w	r1, [r3], #1
   228d6:	e7f9      	b.n	228cc <memset+0x4>

000228d8 <_free_r>:
   228d8:	b538      	push	{r3, r4, r5, lr}
   228da:	4605      	mov	r5, r0
   228dc:	2900      	cmp	r1, #0
   228de:	d045      	beq.n	2296c <_free_r+0x94>
   228e0:	f851 3c04 	ldr.w	r3, [r1, #-4]
   228e4:	1f0c      	subs	r4, r1, #4
   228e6:	2b00      	cmp	r3, #0
   228e8:	bfb8      	it	lt
   228ea:	18e4      	addlt	r4, r4, r3
   228ec:	f000 f90a 	bl	22b04 <__malloc_lock>
   228f0:	4a1f      	ldr	r2, [pc, #124]	; (22970 <_free_r+0x98>)
   228f2:	6813      	ldr	r3, [r2, #0]
   228f4:	4610      	mov	r0, r2
   228f6:	b933      	cbnz	r3, 22906 <_free_r+0x2e>
   228f8:	6063      	str	r3, [r4, #4]
   228fa:	6014      	str	r4, [r2, #0]
   228fc:	4628      	mov	r0, r5
   228fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   22902:	f000 b900 	b.w	22b06 <__malloc_unlock>
   22906:	42a3      	cmp	r3, r4
   22908:	d90c      	bls.n	22924 <_free_r+0x4c>
   2290a:	6821      	ldr	r1, [r4, #0]
   2290c:	1862      	adds	r2, r4, r1
   2290e:	4293      	cmp	r3, r2
   22910:	bf04      	itt	eq
   22912:	681a      	ldreq	r2, [r3, #0]
   22914:	685b      	ldreq	r3, [r3, #4]
   22916:	6063      	str	r3, [r4, #4]
   22918:	bf04      	itt	eq
   2291a:	1852      	addeq	r2, r2, r1
   2291c:	6022      	streq	r2, [r4, #0]
   2291e:	6004      	str	r4, [r0, #0]
   22920:	e7ec      	b.n	228fc <_free_r+0x24>
   22922:	4613      	mov	r3, r2
   22924:	685a      	ldr	r2, [r3, #4]
   22926:	b10a      	cbz	r2, 2292c <_free_r+0x54>
   22928:	42a2      	cmp	r2, r4
   2292a:	d9fa      	bls.n	22922 <_free_r+0x4a>
   2292c:	6819      	ldr	r1, [r3, #0]
   2292e:	1858      	adds	r0, r3, r1
   22930:	42a0      	cmp	r0, r4
   22932:	d10b      	bne.n	2294c <_free_r+0x74>
   22934:	6820      	ldr	r0, [r4, #0]
   22936:	4401      	add	r1, r0
   22938:	1858      	adds	r0, r3, r1
   2293a:	4282      	cmp	r2, r0
   2293c:	6019      	str	r1, [r3, #0]
   2293e:	d1dd      	bne.n	228fc <_free_r+0x24>
   22940:	6810      	ldr	r0, [r2, #0]
   22942:	6852      	ldr	r2, [r2, #4]
   22944:	605a      	str	r2, [r3, #4]
   22946:	4401      	add	r1, r0
   22948:	6019      	str	r1, [r3, #0]
   2294a:	e7d7      	b.n	228fc <_free_r+0x24>
   2294c:	d902      	bls.n	22954 <_free_r+0x7c>
   2294e:	230c      	movs	r3, #12
   22950:	602b      	str	r3, [r5, #0]
   22952:	e7d3      	b.n	228fc <_free_r+0x24>
   22954:	6820      	ldr	r0, [r4, #0]
   22956:	1821      	adds	r1, r4, r0
   22958:	428a      	cmp	r2, r1
   2295a:	bf04      	itt	eq
   2295c:	6811      	ldreq	r1, [r2, #0]
   2295e:	6852      	ldreq	r2, [r2, #4]
   22960:	6062      	str	r2, [r4, #4]
   22962:	bf04      	itt	eq
   22964:	1809      	addeq	r1, r1, r0
   22966:	6021      	streq	r1, [r4, #0]
   22968:	605c      	str	r4, [r3, #4]
   2296a:	e7c7      	b.n	228fc <_free_r+0x24>
   2296c:	bd38      	pop	{r3, r4, r5, pc}
   2296e:	bf00      	nop
   22970:	00034444 	.word	0x00034444

00022974 <_malloc_r>:
   22974:	b570      	push	{r4, r5, r6, lr}
   22976:	1ccd      	adds	r5, r1, #3
   22978:	f025 0503 	bic.w	r5, r5, #3
   2297c:	3508      	adds	r5, #8
   2297e:	2d0c      	cmp	r5, #12
   22980:	bf38      	it	cc
   22982:	250c      	movcc	r5, #12
   22984:	2d00      	cmp	r5, #0
   22986:	4606      	mov	r6, r0
   22988:	db01      	blt.n	2298e <_malloc_r+0x1a>
   2298a:	42a9      	cmp	r1, r5
   2298c:	d903      	bls.n	22996 <_malloc_r+0x22>
   2298e:	230c      	movs	r3, #12
   22990:	6033      	str	r3, [r6, #0]
   22992:	2000      	movs	r0, #0
   22994:	bd70      	pop	{r4, r5, r6, pc}
   22996:	f000 f8b5 	bl	22b04 <__malloc_lock>
   2299a:	4a21      	ldr	r2, [pc, #132]	; (22a20 <_malloc_r+0xac>)
   2299c:	6814      	ldr	r4, [r2, #0]
   2299e:	4621      	mov	r1, r4
   229a0:	b991      	cbnz	r1, 229c8 <_malloc_r+0x54>
   229a2:	4c20      	ldr	r4, [pc, #128]	; (22a24 <_malloc_r+0xb0>)
   229a4:	6823      	ldr	r3, [r4, #0]
   229a6:	b91b      	cbnz	r3, 229b0 <_malloc_r+0x3c>
   229a8:	4630      	mov	r0, r6
   229aa:	f000 f83d 	bl	22a28 <_sbrk_r>
   229ae:	6020      	str	r0, [r4, #0]
   229b0:	4629      	mov	r1, r5
   229b2:	4630      	mov	r0, r6
   229b4:	f000 f838 	bl	22a28 <_sbrk_r>
   229b8:	1c43      	adds	r3, r0, #1
   229ba:	d124      	bne.n	22a06 <_malloc_r+0x92>
   229bc:	230c      	movs	r3, #12
   229be:	6033      	str	r3, [r6, #0]
   229c0:	4630      	mov	r0, r6
   229c2:	f000 f8a0 	bl	22b06 <__malloc_unlock>
   229c6:	e7e4      	b.n	22992 <_malloc_r+0x1e>
   229c8:	680b      	ldr	r3, [r1, #0]
   229ca:	1b5b      	subs	r3, r3, r5
   229cc:	d418      	bmi.n	22a00 <_malloc_r+0x8c>
   229ce:	2b0b      	cmp	r3, #11
   229d0:	d90f      	bls.n	229f2 <_malloc_r+0x7e>
   229d2:	600b      	str	r3, [r1, #0]
   229d4:	50cd      	str	r5, [r1, r3]
   229d6:	18cc      	adds	r4, r1, r3
   229d8:	4630      	mov	r0, r6
   229da:	f000 f894 	bl	22b06 <__malloc_unlock>
   229de:	f104 000b 	add.w	r0, r4, #11
   229e2:	1d23      	adds	r3, r4, #4
   229e4:	f020 0007 	bic.w	r0, r0, #7
   229e8:	1ac3      	subs	r3, r0, r3
   229ea:	d0d3      	beq.n	22994 <_malloc_r+0x20>
   229ec:	425a      	negs	r2, r3
   229ee:	50e2      	str	r2, [r4, r3]
   229f0:	e7d0      	b.n	22994 <_malloc_r+0x20>
   229f2:	428c      	cmp	r4, r1
   229f4:	684b      	ldr	r3, [r1, #4]
   229f6:	bf16      	itet	ne
   229f8:	6063      	strne	r3, [r4, #4]
   229fa:	6013      	streq	r3, [r2, #0]
   229fc:	460c      	movne	r4, r1
   229fe:	e7eb      	b.n	229d8 <_malloc_r+0x64>
   22a00:	460c      	mov	r4, r1
   22a02:	6849      	ldr	r1, [r1, #4]
   22a04:	e7cc      	b.n	229a0 <_malloc_r+0x2c>
   22a06:	1cc4      	adds	r4, r0, #3
   22a08:	f024 0403 	bic.w	r4, r4, #3
   22a0c:	42a0      	cmp	r0, r4
   22a0e:	d005      	beq.n	22a1c <_malloc_r+0xa8>
   22a10:	1a21      	subs	r1, r4, r0
   22a12:	4630      	mov	r0, r6
   22a14:	f000 f808 	bl	22a28 <_sbrk_r>
   22a18:	3001      	adds	r0, #1
   22a1a:	d0cf      	beq.n	229bc <_malloc_r+0x48>
   22a1c:	6025      	str	r5, [r4, #0]
   22a1e:	e7db      	b.n	229d8 <_malloc_r+0x64>
   22a20:	00034444 	.word	0x00034444
   22a24:	00034448 	.word	0x00034448

00022a28 <_sbrk_r>:
   22a28:	b538      	push	{r3, r4, r5, lr}
   22a2a:	4c06      	ldr	r4, [pc, #24]	; (22a44 <_sbrk_r+0x1c>)
   22a2c:	2300      	movs	r3, #0
   22a2e:	4605      	mov	r5, r0
   22a30:	4608      	mov	r0, r1
   22a32:	6023      	str	r3, [r4, #0]
   22a34:	f7f7 fa00 	bl	19e38 <_sbrk>
   22a38:	1c43      	adds	r3, r0, #1
   22a3a:	d102      	bne.n	22a42 <_sbrk_r+0x1a>
   22a3c:	6823      	ldr	r3, [r4, #0]
   22a3e:	b103      	cbz	r3, 22a42 <_sbrk_r+0x1a>
   22a40:	602b      	str	r3, [r5, #0]
   22a42:	bd38      	pop	{r3, r4, r5, pc}
   22a44:	000360dc 	.word	0x000360dc

00022a48 <strcat>:
   22a48:	b510      	push	{r4, lr}
   22a4a:	4603      	mov	r3, r0
   22a4c:	781a      	ldrb	r2, [r3, #0]
   22a4e:	1c5c      	adds	r4, r3, #1
   22a50:	b93a      	cbnz	r2, 22a62 <strcat+0x1a>
   22a52:	3b01      	subs	r3, #1
   22a54:	f811 2b01 	ldrb.w	r2, [r1], #1
   22a58:	f803 2f01 	strb.w	r2, [r3, #1]!
   22a5c:	2a00      	cmp	r2, #0
   22a5e:	d1f9      	bne.n	22a54 <strcat+0xc>
   22a60:	bd10      	pop	{r4, pc}
   22a62:	4623      	mov	r3, r4
   22a64:	e7f2      	b.n	22a4c <strcat+0x4>

00022a66 <strcpy>:
   22a66:	4603      	mov	r3, r0
   22a68:	f811 2b01 	ldrb.w	r2, [r1], #1
   22a6c:	f803 2b01 	strb.w	r2, [r3], #1
   22a70:	2a00      	cmp	r2, #0
   22a72:	d1f9      	bne.n	22a68 <strcpy+0x2>
   22a74:	4770      	bx	lr

00022a76 <strlen>:
   22a76:	4603      	mov	r3, r0
   22a78:	f813 2b01 	ldrb.w	r2, [r3], #1
   22a7c:	2a00      	cmp	r2, #0
   22a7e:	d1fb      	bne.n	22a78 <strlen+0x2>
   22a80:	1a18      	subs	r0, r3, r0
   22a82:	3801      	subs	r0, #1
   22a84:	4770      	bx	lr
	...

00022a88 <__utoa>:
   22a88:	b5f0      	push	{r4, r5, r6, r7, lr}
   22a8a:	4b1d      	ldr	r3, [pc, #116]	; (22b00 <__utoa+0x78>)
   22a8c:	b08b      	sub	sp, #44	; 0x2c
   22a8e:	4605      	mov	r5, r0
   22a90:	460c      	mov	r4, r1
   22a92:	466e      	mov	r6, sp
   22a94:	f103 0c20 	add.w	ip, r3, #32
   22a98:	6818      	ldr	r0, [r3, #0]
   22a9a:	6859      	ldr	r1, [r3, #4]
   22a9c:	4637      	mov	r7, r6
   22a9e:	c703      	stmia	r7!, {r0, r1}
   22aa0:	3308      	adds	r3, #8
   22aa2:	4563      	cmp	r3, ip
   22aa4:	463e      	mov	r6, r7
   22aa6:	d1f7      	bne.n	22a98 <__utoa+0x10>
   22aa8:	6818      	ldr	r0, [r3, #0]
   22aaa:	791b      	ldrb	r3, [r3, #4]
   22aac:	713b      	strb	r3, [r7, #4]
   22aae:	1e93      	subs	r3, r2, #2
   22ab0:	2b22      	cmp	r3, #34	; 0x22
   22ab2:	6038      	str	r0, [r7, #0]
   22ab4:	f04f 0300 	mov.w	r3, #0
   22ab8:	d904      	bls.n	22ac4 <__utoa+0x3c>
   22aba:	7023      	strb	r3, [r4, #0]
   22abc:	461c      	mov	r4, r3
   22abe:	4620      	mov	r0, r4
   22ac0:	b00b      	add	sp, #44	; 0x2c
   22ac2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   22ac4:	1e66      	subs	r6, r4, #1
   22ac6:	fbb5 f0f2 	udiv	r0, r5, r2
   22aca:	af0a      	add	r7, sp, #40	; 0x28
   22acc:	fb02 5510 	mls	r5, r2, r0, r5
   22ad0:	443d      	add	r5, r7
   22ad2:	1c59      	adds	r1, r3, #1
   22ad4:	f815 5c28 	ldrb.w	r5, [r5, #-40]
   22ad8:	f806 5f01 	strb.w	r5, [r6, #1]!
   22adc:	4605      	mov	r5, r0
   22ade:	b968      	cbnz	r0, 22afc <__utoa+0x74>
   22ae0:	5460      	strb	r0, [r4, r1]
   22ae2:	4423      	add	r3, r4
   22ae4:	4622      	mov	r2, r4
   22ae6:	1b19      	subs	r1, r3, r4
   22ae8:	1b10      	subs	r0, r2, r4
   22aea:	4281      	cmp	r1, r0
   22aec:	dde7      	ble.n	22abe <__utoa+0x36>
   22aee:	7811      	ldrb	r1, [r2, #0]
   22af0:	7818      	ldrb	r0, [r3, #0]
   22af2:	f802 0b01 	strb.w	r0, [r2], #1
   22af6:	f803 1901 	strb.w	r1, [r3], #-1
   22afa:	e7f4      	b.n	22ae6 <__utoa+0x5e>
   22afc:	460b      	mov	r3, r1
   22afe:	e7e2      	b.n	22ac6 <__utoa+0x3e>
   22b00:	00023f00 	.word	0x00023f00

00022b04 <__malloc_lock>:
   22b04:	4770      	bx	lr

00022b06 <__malloc_unlock>:
   22b06:	4770      	bx	lr

00022b08 <cos>:
   22b08:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   22b0a:	eeb0 7b40 	vmov.f64	d7, d0
   22b0e:	ee17 3a90 	vmov	r3, s15
   22b12:	4a19      	ldr	r2, [pc, #100]	; (22b78 <cos+0x70>)
   22b14:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
   22b18:	4293      	cmp	r3, r2
   22b1a:	dc04      	bgt.n	22b26 <cos+0x1e>
   22b1c:	ed9f 1b14 	vldr	d1, [pc, #80]	; 22b70 <cos+0x68>
   22b20:	f000 fb22 	bl	23168 <__kernel_cos>
   22b24:	e004      	b.n	22b30 <cos+0x28>
   22b26:	4a15      	ldr	r2, [pc, #84]	; (22b7c <cos+0x74>)
   22b28:	4293      	cmp	r3, r2
   22b2a:	dd04      	ble.n	22b36 <cos+0x2e>
   22b2c:	ee30 0b40 	vsub.f64	d0, d0, d0
   22b30:	b005      	add	sp, #20
   22b32:	f85d fb04 	ldr.w	pc, [sp], #4
   22b36:	4668      	mov	r0, sp
   22b38:	f000 f9da 	bl	22ef0 <__ieee754_rem_pio2>
   22b3c:	f000 0003 	and.w	r0, r0, #3
   22b40:	2801      	cmp	r0, #1
   22b42:	ed9d 1b02 	vldr	d1, [sp, #8]
   22b46:	ed9d 0b00 	vldr	d0, [sp]
   22b4a:	d007      	beq.n	22b5c <cos+0x54>
   22b4c:	2802      	cmp	r0, #2
   22b4e:	d00a      	beq.n	22b66 <cos+0x5e>
   22b50:	2800      	cmp	r0, #0
   22b52:	d0e5      	beq.n	22b20 <cos+0x18>
   22b54:	2001      	movs	r0, #1
   22b56:	f000 fe0f 	bl	23778 <__kernel_sin>
   22b5a:	e7e9      	b.n	22b30 <cos+0x28>
   22b5c:	f000 fe0c 	bl	23778 <__kernel_sin>
   22b60:	eeb1 0b40 	vneg.f64	d0, d0
   22b64:	e7e4      	b.n	22b30 <cos+0x28>
   22b66:	f000 faff 	bl	23168 <__kernel_cos>
   22b6a:	e7f9      	b.n	22b60 <cos+0x58>
   22b6c:	f3af 8000 	nop.w
	...
   22b78:	3fe921fb 	.word	0x3fe921fb
   22b7c:	7fefffff 	.word	0x7fefffff

00022b80 <sin>:
   22b80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   22b82:	eeb0 7b40 	vmov.f64	d7, d0
   22b86:	ee17 3a90 	vmov	r3, s15
   22b8a:	4a19      	ldr	r2, [pc, #100]	; (22bf0 <sin+0x70>)
   22b8c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
   22b90:	4293      	cmp	r3, r2
   22b92:	dc05      	bgt.n	22ba0 <sin+0x20>
   22b94:	ed9f 1b14 	vldr	d1, [pc, #80]	; 22be8 <sin+0x68>
   22b98:	2000      	movs	r0, #0
   22b9a:	f000 fded 	bl	23778 <__kernel_sin>
   22b9e:	e004      	b.n	22baa <sin+0x2a>
   22ba0:	4a14      	ldr	r2, [pc, #80]	; (22bf4 <sin+0x74>)
   22ba2:	4293      	cmp	r3, r2
   22ba4:	dd04      	ble.n	22bb0 <sin+0x30>
   22ba6:	ee30 0b40 	vsub.f64	d0, d0, d0
   22baa:	b005      	add	sp, #20
   22bac:	f85d fb04 	ldr.w	pc, [sp], #4
   22bb0:	4668      	mov	r0, sp
   22bb2:	f000 f99d 	bl	22ef0 <__ieee754_rem_pio2>
   22bb6:	f000 0003 	and.w	r0, r0, #3
   22bba:	2801      	cmp	r0, #1
   22bbc:	ed9d 1b02 	vldr	d1, [sp, #8]
   22bc0:	ed9d 0b00 	vldr	d0, [sp]
   22bc4:	d004      	beq.n	22bd0 <sin+0x50>
   22bc6:	2802      	cmp	r0, #2
   22bc8:	d005      	beq.n	22bd6 <sin+0x56>
   22bca:	b950      	cbnz	r0, 22be2 <sin+0x62>
   22bcc:	2001      	movs	r0, #1
   22bce:	e7e4      	b.n	22b9a <sin+0x1a>
   22bd0:	f000 faca 	bl	23168 <__kernel_cos>
   22bd4:	e7e9      	b.n	22baa <sin+0x2a>
   22bd6:	2001      	movs	r0, #1
   22bd8:	f000 fdce 	bl	23778 <__kernel_sin>
   22bdc:	eeb1 0b40 	vneg.f64	d0, d0
   22be0:	e7e3      	b.n	22baa <sin+0x2a>
   22be2:	f000 fac1 	bl	23168 <__kernel_cos>
   22be6:	e7f9      	b.n	22bdc <sin+0x5c>
	...
   22bf0:	3fe921fb 	.word	0x3fe921fb
   22bf4:	7fefffff 	.word	0x7fefffff

00022bf8 <exp>:
   22bf8:	b510      	push	{r4, lr}
   22bfa:	ed2d 8b04 	vpush	{d8-d9}
   22bfe:	eeb0 8b40 	vmov.f64	d8, d0
   22c02:	4c33      	ldr	r4, [pc, #204]	; (22cd0 <exp+0xd8>)
   22c04:	b08a      	sub	sp, #40	; 0x28
   22c06:	f000 f86b 	bl	22ce0 <__ieee754_exp>
   22c0a:	f994 3000 	ldrsb.w	r3, [r4]
   22c0e:	eeb0 9b40 	vmov.f64	d9, d0
   22c12:	3301      	adds	r3, #1
   22c14:	d029      	beq.n	22c6a <exp+0x72>
   22c16:	eeb0 0b48 	vmov.f64	d0, d8
   22c1a:	f000 fe0e 	bl	2383a <finite>
   22c1e:	b320      	cbz	r0, 22c6a <exp+0x72>
   22c20:	ed9f 7b27 	vldr	d7, [pc, #156]	; 22cc0 <exp+0xc8>
   22c24:	eeb4 8bc7 	vcmpe.f64	d8, d7
   22c28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   22c2c:	dd2e      	ble.n	22c8c <exp+0x94>
   22c2e:	2303      	movs	r3, #3
   22c30:	9300      	str	r3, [sp, #0]
   22c32:	4b28      	ldr	r3, [pc, #160]	; (22cd4 <exp+0xdc>)
   22c34:	9301      	str	r3, [sp, #4]
   22c36:	2300      	movs	r3, #0
   22c38:	9308      	str	r3, [sp, #32]
   22c3a:	f994 3000 	ldrsb.w	r3, [r4]
   22c3e:	ed8d 8b04 	vstr	d8, [sp, #16]
   22c42:	ed8d 8b02 	vstr	d8, [sp, #8]
   22c46:	b9b3      	cbnz	r3, 22c76 <exp+0x7e>
   22c48:	4b23      	ldr	r3, [pc, #140]	; (22cd8 <exp+0xe0>)
   22c4a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
   22c4e:	e9cd 2306 	strd	r2, r3, [sp, #24]
   22c52:	4668      	mov	r0, sp
   22c54:	f000 fe74 	bl	23940 <matherr>
   22c58:	b198      	cbz	r0, 22c82 <exp+0x8a>
   22c5a:	9b08      	ldr	r3, [sp, #32]
   22c5c:	b11b      	cbz	r3, 22c66 <exp+0x6e>
   22c5e:	f7ff fddf 	bl	22820 <__errno>
   22c62:	9b08      	ldr	r3, [sp, #32]
   22c64:	6003      	str	r3, [r0, #0]
   22c66:	ed9d 9b06 	vldr	d9, [sp, #24]
   22c6a:	eeb0 0b49 	vmov.f64	d0, d9
   22c6e:	b00a      	add	sp, #40	; 0x28
   22c70:	ecbd 8b04 	vpop	{d8-d9}
   22c74:	bd10      	pop	{r4, pc}
   22c76:	4919      	ldr	r1, [pc, #100]	; (22cdc <exp+0xe4>)
   22c78:	2000      	movs	r0, #0
   22c7a:	e9cd 0106 	strd	r0, r1, [sp, #24]
   22c7e:	2b02      	cmp	r3, #2
   22c80:	d1e7      	bne.n	22c52 <exp+0x5a>
   22c82:	f7ff fdcd 	bl	22820 <__errno>
   22c86:	2322      	movs	r3, #34	; 0x22
   22c88:	6003      	str	r3, [r0, #0]
   22c8a:	e7e6      	b.n	22c5a <exp+0x62>
   22c8c:	ed9f 7b0e 	vldr	d7, [pc, #56]	; 22cc8 <exp+0xd0>
   22c90:	eeb4 8bc7 	vcmpe.f64	d8, d7
   22c94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   22c98:	d5e7      	bpl.n	22c6a <exp+0x72>
   22c9a:	2304      	movs	r3, #4
   22c9c:	9300      	str	r3, [sp, #0]
   22c9e:	4b0d      	ldr	r3, [pc, #52]	; (22cd4 <exp+0xdc>)
   22ca0:	9301      	str	r3, [sp, #4]
   22ca2:	2300      	movs	r3, #0
   22ca4:	9308      	str	r3, [sp, #32]
   22ca6:	2200      	movs	r2, #0
   22ca8:	2300      	movs	r3, #0
   22caa:	e9cd 2306 	strd	r2, r3, [sp, #24]
   22cae:	ed8d 8b04 	vstr	d8, [sp, #16]
   22cb2:	ed8d 8b02 	vstr	d8, [sp, #8]
   22cb6:	f994 3000 	ldrsb.w	r3, [r4]
   22cba:	e7e0      	b.n	22c7e <exp+0x86>
   22cbc:	f3af 8000 	nop.w
   22cc0:	fefa39ef 	.word	0xfefa39ef
   22cc4:	40862e42 	.word	0x40862e42
   22cc8:	d52d3051 	.word	0xd52d3051
   22ccc:	c0874910 	.word	0xc0874910
   22cd0:	0003433c 	.word	0x0003433c
   22cd4:	00023f25 	.word	0x00023f25
   22cd8:	47efffff 	.word	0x47efffff
   22cdc:	7ff00000 	.word	0x7ff00000

00022ce0 <__ieee754_exp>:
   22ce0:	ee10 1a90 	vmov	r1, s1
   22ce4:	4b7a      	ldr	r3, [pc, #488]	; (22ed0 <__ieee754_exp+0x1f0>)
   22ce6:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
   22cea:	429a      	cmp	r2, r3
   22cec:	b082      	sub	sp, #8
   22cee:	ea4f 70d1 	mov.w	r0, r1, lsr #31
   22cf2:	d928      	bls.n	22d46 <__ieee754_exp+0x66>
   22cf4:	4b77      	ldr	r3, [pc, #476]	; (22ed4 <__ieee754_exp+0x1f4>)
   22cf6:	429a      	cmp	r2, r3
   22cf8:	d90f      	bls.n	22d1a <__ieee754_exp+0x3a>
   22cfa:	ee10 3a10 	vmov	r3, s0
   22cfe:	f3c1 0113 	ubfx	r1, r1, #0, #20
   22d02:	430b      	orrs	r3, r1
   22d04:	d003      	beq.n	22d0e <__ieee754_exp+0x2e>
   22d06:	ee30 0b00 	vadd.f64	d0, d0, d0
   22d0a:	b002      	add	sp, #8
   22d0c:	4770      	bx	lr
   22d0e:	ed9f 7b56 	vldr	d7, [pc, #344]	; 22e68 <__ieee754_exp+0x188>
   22d12:	2800      	cmp	r0, #0
   22d14:	fe00 0b07 	vseleq.f64	d0, d0, d7
   22d18:	e7f7      	b.n	22d0a <__ieee754_exp+0x2a>
   22d1a:	ed9f 7b55 	vldr	d7, [pc, #340]	; 22e70 <__ieee754_exp+0x190>
   22d1e:	eeb4 0bc7 	vcmpe.f64	d0, d7
   22d22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   22d26:	dd04      	ble.n	22d32 <__ieee754_exp+0x52>
   22d28:	ed9f 0b53 	vldr	d0, [pc, #332]	; 22e78 <__ieee754_exp+0x198>
   22d2c:	ee20 0b00 	vmul.f64	d0, d0, d0
   22d30:	e7eb      	b.n	22d0a <__ieee754_exp+0x2a>
   22d32:	ed9f 7b53 	vldr	d7, [pc, #332]	; 22e80 <__ieee754_exp+0x1a0>
   22d36:	eeb4 0bc7 	vcmpe.f64	d0, d7
   22d3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   22d3e:	d505      	bpl.n	22d4c <__ieee754_exp+0x6c>
   22d40:	ed9f 0b49 	vldr	d0, [pc, #292]	; 22e68 <__ieee754_exp+0x188>
   22d44:	e7e1      	b.n	22d0a <__ieee754_exp+0x2a>
   22d46:	4b64      	ldr	r3, [pc, #400]	; (22ed8 <__ieee754_exp+0x1f8>)
   22d48:	429a      	cmp	r2, r3
   22d4a:	d956      	bls.n	22dfa <__ieee754_exp+0x11a>
   22d4c:	4b63      	ldr	r3, [pc, #396]	; (22edc <__ieee754_exp+0x1fc>)
   22d4e:	429a      	cmp	r2, r3
   22d50:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   22d54:	d838      	bhi.n	22dc8 <__ieee754_exp+0xe8>
   22d56:	4b62      	ldr	r3, [pc, #392]	; (22ee0 <__ieee754_exp+0x200>)
   22d58:	4413      	add	r3, r2
   22d5a:	ed93 6b00 	vldr	d6, [r3]
   22d5e:	4b61      	ldr	r3, [pc, #388]	; (22ee4 <__ieee754_exp+0x204>)
   22d60:	ee30 6b46 	vsub.f64	d6, d0, d6
   22d64:	4413      	add	r3, r2
   22d66:	ed93 7b00 	vldr	d7, [r3]
   22d6a:	f1c0 0301 	rsb	r3, r0, #1
   22d6e:	1a1b      	subs	r3, r3, r0
   22d70:	ee36 0b47 	vsub.f64	d0, d6, d7
   22d74:	ed9f 4b44 	vldr	d4, [pc, #272]	; 22e88 <__ieee754_exp+0x1a8>
   22d78:	ee20 5b00 	vmul.f64	d5, d0, d0
   22d7c:	ed9f 3b44 	vldr	d3, [pc, #272]	; 22e90 <__ieee754_exp+0x1b0>
   22d80:	eea5 3b04 	vfma.f64	d3, d5, d4
   22d84:	ed9f 4b44 	vldr	d4, [pc, #272]	; 22e98 <__ieee754_exp+0x1b8>
   22d88:	eea3 4b05 	vfma.f64	d4, d3, d5
   22d8c:	ed9f 3b44 	vldr	d3, [pc, #272]	; 22ea0 <__ieee754_exp+0x1c0>
   22d90:	eea4 3b05 	vfma.f64	d3, d4, d5
   22d94:	ed9f 4b44 	vldr	d4, [pc, #272]	; 22ea8 <__ieee754_exp+0x1c8>
   22d98:	eea3 4b05 	vfma.f64	d4, d3, d5
   22d9c:	eeb0 3b40 	vmov.f64	d3, d0
   22da0:	eea4 3b45 	vfms.f64	d3, d4, d5
   22da4:	eeb0 4b00 	vmov.f64	d4, #0	; 0x40000000  2.0
   22da8:	eeb0 5b43 	vmov.f64	d5, d3
   22dac:	ee20 2b03 	vmul.f64	d2, d0, d3
   22db0:	eeb7 3b00 	vmov.f64	d3, #112	; 0x3f800000  1.0
   22db4:	bba3      	cbnz	r3, 22e20 <__ieee754_exp+0x140>
   22db6:	ee35 5b44 	vsub.f64	d5, d5, d4
   22dba:	ee82 7b05 	vdiv.f64	d7, d2, d5
   22dbe:	ee37 0b40 	vsub.f64	d0, d7, d0
   22dc2:	ee33 0b40 	vsub.f64	d0, d3, d0
   22dc6:	e7a0      	b.n	22d0a <__ieee754_exp+0x2a>
   22dc8:	4b47      	ldr	r3, [pc, #284]	; (22ee8 <__ieee754_exp+0x208>)
   22dca:	4413      	add	r3, r2
   22dcc:	ed93 7b00 	vldr	d7, [r3]
   22dd0:	ed9f 6b37 	vldr	d6, [pc, #220]	; 22eb0 <__ieee754_exp+0x1d0>
   22dd4:	ed9f 5b38 	vldr	d5, [pc, #224]	; 22eb8 <__ieee754_exp+0x1d8>
   22dd8:	eea0 7b06 	vfma.f64	d7, d0, d6
   22ddc:	ed9f 6b38 	vldr	d6, [pc, #224]	; 22ec0 <__ieee754_exp+0x1e0>
   22de0:	eefd 7bc7 	vcvt.s32.f64	s15, d7
   22de4:	ee17 3a90 	vmov	r3, s15
   22de8:	eeb8 7be7 	vcvt.f64.s32	d7, s15
   22dec:	eea7 0b46 	vfms.f64	d0, d7, d6
   22df0:	ee27 7b05 	vmul.f64	d7, d7, d5
   22df4:	eeb0 6b40 	vmov.f64	d6, d0
   22df8:	e7ba      	b.n	22d70 <__ieee754_exp+0x90>
   22dfa:	4b3c      	ldr	r3, [pc, #240]	; (22eec <__ieee754_exp+0x20c>)
   22dfc:	429a      	cmp	r2, r3
   22dfe:	d80d      	bhi.n	22e1c <__ieee754_exp+0x13c>
   22e00:	eeb7 4b00 	vmov.f64	d4, #112	; 0x3f800000  1.0
   22e04:	ed9f 5b1c 	vldr	d5, [pc, #112]	; 22e78 <__ieee754_exp+0x198>
   22e08:	ee30 5b05 	vadd.f64	d5, d0, d5
   22e0c:	eeb4 5bc4 	vcmpe.f64	d5, d4
   22e10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   22e14:	dd02      	ble.n	22e1c <__ieee754_exp+0x13c>
   22e16:	ee30 0b04 	vadd.f64	d0, d0, d4
   22e1a:	e776      	b.n	22d0a <__ieee754_exp+0x2a>
   22e1c:	2300      	movs	r3, #0
   22e1e:	e7a9      	b.n	22d74 <__ieee754_exp+0x94>
   22e20:	f46f 717f 	mvn.w	r1, #1020	; 0x3fc
   22e24:	ee34 5b45 	vsub.f64	d5, d4, d5
   22e28:	428b      	cmp	r3, r1
   22e2a:	ee82 4b05 	vdiv.f64	d4, d2, d5
   22e2e:	ee37 7b44 	vsub.f64	d7, d7, d4
   22e32:	ee37 7b46 	vsub.f64	d7, d7, d6
   22e36:	ee33 7b47 	vsub.f64	d7, d3, d7
   22e3a:	ed8d 7b00 	vstr	d7, [sp]
   22e3e:	9a01      	ldr	r2, [sp, #4]
   22e40:	e9dd 0100 	ldrd	r0, r1, [sp]
   22e44:	db04      	blt.n	22e50 <__ieee754_exp+0x170>
   22e46:	eb02 5103 	add.w	r1, r2, r3, lsl #20
   22e4a:	ec41 0b10 	vmov	d0, r0, r1
   22e4e:	e75c      	b.n	22d0a <__ieee754_exp+0x2a>
   22e50:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
   22e54:	eb02 5103 	add.w	r1, r2, r3, lsl #20
   22e58:	ed9f 7b1b 	vldr	d7, [pc, #108]	; 22ec8 <__ieee754_exp+0x1e8>
   22e5c:	ec41 0b10 	vmov	d0, r0, r1
   22e60:	ee20 0b07 	vmul.f64	d0, d0, d7
   22e64:	e751      	b.n	22d0a <__ieee754_exp+0x2a>
   22e66:	bf00      	nop
	...
   22e70:	fefa39ef 	.word	0xfefa39ef
   22e74:	40862e42 	.word	0x40862e42
   22e78:	8800759c 	.word	0x8800759c
   22e7c:	7e37e43c 	.word	0x7e37e43c
   22e80:	d52d3051 	.word	0xd52d3051
   22e84:	c0874910 	.word	0xc0874910
   22e88:	72bea4d0 	.word	0x72bea4d0
   22e8c:	3e663769 	.word	0x3e663769
   22e90:	c5d26bf1 	.word	0xc5d26bf1
   22e94:	bebbbd41 	.word	0xbebbbd41
   22e98:	af25de2c 	.word	0xaf25de2c
   22e9c:	3f11566a 	.word	0x3f11566a
   22ea0:	16bebd93 	.word	0x16bebd93
   22ea4:	bf66c16c 	.word	0xbf66c16c
   22ea8:	5555553e 	.word	0x5555553e
   22eac:	3fc55555 	.word	0x3fc55555
   22eb0:	652b82fe 	.word	0x652b82fe
   22eb4:	3ff71547 	.word	0x3ff71547
   22eb8:	35793c76 	.word	0x35793c76
   22ebc:	3dea39ef 	.word	0x3dea39ef
   22ec0:	fee00000 	.word	0xfee00000
   22ec4:	3fe62e42 	.word	0x3fe62e42
   22ec8:	00000000 	.word	0x00000000
   22ecc:	01700000 	.word	0x01700000
   22ed0:	40862e41 	.word	0x40862e41
   22ed4:	7fefffff 	.word	0x7fefffff
   22ed8:	3fd62e42 	.word	0x3fd62e42
   22edc:	3ff0a2b1 	.word	0x3ff0a2b1
   22ee0:	00023f40 	.word	0x00023f40
   22ee4:	00023f50 	.word	0x00023f50
   22ee8:	00023f30 	.word	0x00023f30
   22eec:	3e2fffff 	.word	0x3e2fffff

00022ef0 <__ieee754_rem_pio2>:
   22ef0:	b570      	push	{r4, r5, r6, lr}
   22ef2:	eeb0 7b40 	vmov.f64	d7, d0
   22ef6:	ee17 5a90 	vmov	r5, s15
   22efa:	4b95      	ldr	r3, [pc, #596]	; (23150 <__ieee754_rem_pio2+0x260>)
   22efc:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
   22f00:	429e      	cmp	r6, r3
   22f02:	b088      	sub	sp, #32
   22f04:	4604      	mov	r4, r0
   22f06:	dc07      	bgt.n	22f18 <__ieee754_rem_pio2+0x28>
   22f08:	2200      	movs	r2, #0
   22f0a:	2300      	movs	r3, #0
   22f0c:	ed84 0b00 	vstr	d0, [r4]
   22f10:	e9c0 2302 	strd	r2, r3, [r0, #8]
   22f14:	2000      	movs	r0, #0
   22f16:	e01b      	b.n	22f50 <__ieee754_rem_pio2+0x60>
   22f18:	4b8e      	ldr	r3, [pc, #568]	; (23154 <__ieee754_rem_pio2+0x264>)
   22f1a:	429e      	cmp	r6, r3
   22f1c:	dc3b      	bgt.n	22f96 <__ieee754_rem_pio2+0xa6>
   22f1e:	f5a3 231b 	sub.w	r3, r3, #634880	; 0x9b000
   22f22:	2d00      	cmp	r5, #0
   22f24:	ed9f 6b7a 	vldr	d6, [pc, #488]	; 23110 <__ieee754_rem_pio2+0x220>
   22f28:	f5a3 63f0 	sub.w	r3, r3, #1920	; 0x780
   22f2c:	dd19      	ble.n	22f62 <__ieee754_rem_pio2+0x72>
   22f2e:	ee30 7b46 	vsub.f64	d7, d0, d6
   22f32:	429e      	cmp	r6, r3
   22f34:	d00e      	beq.n	22f54 <__ieee754_rem_pio2+0x64>
   22f36:	ed9f 6b78 	vldr	d6, [pc, #480]	; 23118 <__ieee754_rem_pio2+0x228>
   22f3a:	ee37 5b46 	vsub.f64	d5, d7, d6
   22f3e:	ee37 7b45 	vsub.f64	d7, d7, d5
   22f42:	ed84 5b00 	vstr	d5, [r4]
   22f46:	ee37 7b46 	vsub.f64	d7, d7, d6
   22f4a:	ed84 7b02 	vstr	d7, [r4, #8]
   22f4e:	2001      	movs	r0, #1
   22f50:	b008      	add	sp, #32
   22f52:	bd70      	pop	{r4, r5, r6, pc}
   22f54:	ed9f 6b72 	vldr	d6, [pc, #456]	; 23120 <__ieee754_rem_pio2+0x230>
   22f58:	ee37 7b46 	vsub.f64	d7, d7, d6
   22f5c:	ed9f 6b72 	vldr	d6, [pc, #456]	; 23128 <__ieee754_rem_pio2+0x238>
   22f60:	e7eb      	b.n	22f3a <__ieee754_rem_pio2+0x4a>
   22f62:	429e      	cmp	r6, r3
   22f64:	ee30 7b06 	vadd.f64	d7, d0, d6
   22f68:	d00e      	beq.n	22f88 <__ieee754_rem_pio2+0x98>
   22f6a:	ed9f 6b6b 	vldr	d6, [pc, #428]	; 23118 <__ieee754_rem_pio2+0x228>
   22f6e:	ee37 5b06 	vadd.f64	d5, d7, d6
   22f72:	ee37 7b45 	vsub.f64	d7, d7, d5
   22f76:	ed84 5b00 	vstr	d5, [r4]
   22f7a:	ee37 7b06 	vadd.f64	d7, d7, d6
   22f7e:	f04f 30ff 	mov.w	r0, #4294967295
   22f82:	ed84 7b02 	vstr	d7, [r4, #8]
   22f86:	e7e3      	b.n	22f50 <__ieee754_rem_pio2+0x60>
   22f88:	ed9f 6b65 	vldr	d6, [pc, #404]	; 23120 <__ieee754_rem_pio2+0x230>
   22f8c:	ee37 7b06 	vadd.f64	d7, d7, d6
   22f90:	ed9f 6b65 	vldr	d6, [pc, #404]	; 23128 <__ieee754_rem_pio2+0x238>
   22f94:	e7eb      	b.n	22f6e <__ieee754_rem_pio2+0x7e>
   22f96:	4b70      	ldr	r3, [pc, #448]	; (23158 <__ieee754_rem_pio2+0x268>)
   22f98:	429e      	cmp	r6, r3
   22f9a:	dc6c      	bgt.n	23076 <__ieee754_rem_pio2+0x186>
   22f9c:	f000 fc44 	bl	23828 <fabs>
   22fa0:	eeb6 7b00 	vmov.f64	d7, #96	; 0x3f000000  0.5
   22fa4:	ed9f 6b62 	vldr	d6, [pc, #392]	; 23130 <__ieee754_rem_pio2+0x240>
   22fa8:	eea0 7b06 	vfma.f64	d7, d0, d6
   22fac:	eefd 7bc7 	vcvt.s32.f64	s15, d7
   22fb0:	eeb8 4be7 	vcvt.f64.s32	d4, s15
   22fb4:	ee17 0a90 	vmov	r0, s15
   22fb8:	eeb1 5b44 	vneg.f64	d5, d4
   22fbc:	ed9f 7b54 	vldr	d7, [pc, #336]	; 23110 <__ieee754_rem_pio2+0x220>
   22fc0:	eea5 0b07 	vfma.f64	d0, d5, d7
   22fc4:	ed9f 7b54 	vldr	d7, [pc, #336]	; 23118 <__ieee754_rem_pio2+0x228>
   22fc8:	281f      	cmp	r0, #31
   22fca:	ee24 7b07 	vmul.f64	d7, d4, d7
   22fce:	ee30 6b47 	vsub.f64	d6, d0, d7
   22fd2:	dc08      	bgt.n	22fe6 <__ieee754_rem_pio2+0xf6>
   22fd4:	1e42      	subs	r2, r0, #1
   22fd6:	4b61      	ldr	r3, [pc, #388]	; (2315c <__ieee754_rem_pio2+0x26c>)
   22fd8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   22fdc:	42b3      	cmp	r3, r6
   22fde:	d002      	beq.n	22fe6 <__ieee754_rem_pio2+0xf6>
   22fe0:	ed84 6b00 	vstr	d6, [r4]
   22fe4:	e022      	b.n	2302c <__ieee754_rem_pio2+0x13c>
   22fe6:	ee16 3a90 	vmov	r3, s13
   22fea:	1536      	asrs	r6, r6, #20
   22fec:	f3c3 530a 	ubfx	r3, r3, #20, #11
   22ff0:	1af3      	subs	r3, r6, r3
   22ff2:	2b10      	cmp	r3, #16
   22ff4:	ddf4      	ble.n	22fe0 <__ieee754_rem_pio2+0xf0>
   22ff6:	eeb0 6b40 	vmov.f64	d6, d0
   22ffa:	ed9f 3b49 	vldr	d3, [pc, #292]	; 23120 <__ieee754_rem_pio2+0x230>
   22ffe:	eea5 6b03 	vfma.f64	d6, d5, d3
   23002:	ee30 7b46 	vsub.f64	d7, d0, d6
   23006:	eea5 7b03 	vfma.f64	d7, d5, d3
   2300a:	ed9f 3b47 	vldr	d3, [pc, #284]	; 23128 <__ieee754_rem_pio2+0x238>
   2300e:	ee94 7b03 	vfnms.f64	d7, d4, d3
   23012:	ee36 3b47 	vsub.f64	d3, d6, d7
   23016:	ee13 3a90 	vmov	r3, s7
   2301a:	f3c3 530a 	ubfx	r3, r3, #20, #11
   2301e:	1af6      	subs	r6, r6, r3
   23020:	2e31      	cmp	r6, #49	; 0x31
   23022:	dc17      	bgt.n	23054 <__ieee754_rem_pio2+0x164>
   23024:	eeb0 0b46 	vmov.f64	d0, d6
   23028:	ed84 3b00 	vstr	d3, [r4]
   2302c:	ed94 6b00 	vldr	d6, [r4]
   23030:	2d00      	cmp	r5, #0
   23032:	ee30 0b46 	vsub.f64	d0, d0, d6
   23036:	ee30 7b47 	vsub.f64	d7, d0, d7
   2303a:	ed84 7b02 	vstr	d7, [r4, #8]
   2303e:	da87      	bge.n	22f50 <__ieee754_rem_pio2+0x60>
   23040:	eeb1 6b46 	vneg.f64	d6, d6
   23044:	ed84 6b00 	vstr	d6, [r4]
   23048:	eeb1 7b47 	vneg.f64	d7, d7
   2304c:	4240      	negs	r0, r0
   2304e:	ed84 7b02 	vstr	d7, [r4, #8]
   23052:	e77d      	b.n	22f50 <__ieee754_rem_pio2+0x60>
   23054:	ed9f 3b38 	vldr	d3, [pc, #224]	; 23138 <__ieee754_rem_pio2+0x248>
   23058:	eeb0 0b46 	vmov.f64	d0, d6
   2305c:	eea5 0b03 	vfma.f64	d0, d5, d3
   23060:	ee36 7b40 	vsub.f64	d7, d6, d0
   23064:	ed9f 6b36 	vldr	d6, [pc, #216]	; 23140 <__ieee754_rem_pio2+0x250>
   23068:	eea5 7b03 	vfma.f64	d7, d5, d3
   2306c:	ee94 7b06 	vfnms.f64	d7, d4, d6
   23070:	ee30 6b47 	vsub.f64	d6, d0, d7
   23074:	e7b4      	b.n	22fe0 <__ieee754_rem_pio2+0xf0>
   23076:	4b3a      	ldr	r3, [pc, #232]	; (23160 <__ieee754_rem_pio2+0x270>)
   23078:	429e      	cmp	r6, r3
   2307a:	dd06      	ble.n	2308a <__ieee754_rem_pio2+0x19a>
   2307c:	ee30 7b40 	vsub.f64	d7, d0, d0
   23080:	ed80 7b02 	vstr	d7, [r0, #8]
   23084:	ed80 7b00 	vstr	d7, [r0]
   23088:	e744      	b.n	22f14 <__ieee754_rem_pio2+0x24>
   2308a:	1532      	asrs	r2, r6, #20
   2308c:	f2a2 4216 	subw	r2, r2, #1046	; 0x416
   23090:	ee10 0a10 	vmov	r0, s0
   23094:	eba6 5102 	sub.w	r1, r6, r2, lsl #20
   23098:	ec41 0b17 	vmov	d7, r0, r1
   2309c:	eebd 6bc7 	vcvt.s32.f64	s12, d7
   230a0:	ed9f 5b29 	vldr	d5, [pc, #164]	; 23148 <__ieee754_rem_pio2+0x258>
   230a4:	eeb8 6bc6 	vcvt.f64.s32	d6, s12
   230a8:	ee37 7b46 	vsub.f64	d7, d7, d6
   230ac:	ed8d 6b02 	vstr	d6, [sp, #8]
   230b0:	ee27 7b05 	vmul.f64	d7, d7, d5
   230b4:	eebd 6bc7 	vcvt.s32.f64	s12, d7
   230b8:	a908      	add	r1, sp, #32
   230ba:	eeb8 6bc6 	vcvt.f64.s32	d6, s12
   230be:	ee37 7b46 	vsub.f64	d7, d7, d6
   230c2:	ed8d 6b04 	vstr	d6, [sp, #16]
   230c6:	ee27 7b05 	vmul.f64	d7, d7, d5
   230ca:	ed8d 7b06 	vstr	d7, [sp, #24]
   230ce:	2303      	movs	r3, #3
   230d0:	ed31 7b02 	vldmdb	r1!, {d7}
   230d4:	eeb5 7b40 	vcmp.f64	d7, #0.0
   230d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   230dc:	f103 30ff 	add.w	r0, r3, #4294967295
   230e0:	d013      	beq.n	2310a <__ieee754_rem_pio2+0x21a>
   230e2:	4920      	ldr	r1, [pc, #128]	; (23164 <__ieee754_rem_pio2+0x274>)
   230e4:	9101      	str	r1, [sp, #4]
   230e6:	2102      	movs	r1, #2
   230e8:	9100      	str	r1, [sp, #0]
   230ea:	a802      	add	r0, sp, #8
   230ec:	4621      	mov	r1, r4
   230ee:	f000 f8a7 	bl	23240 <__kernel_rem_pio2>
   230f2:	2d00      	cmp	r5, #0
   230f4:	f6bf af2c 	bge.w	22f50 <__ieee754_rem_pio2+0x60>
   230f8:	ed94 7b00 	vldr	d7, [r4]
   230fc:	eeb1 7b47 	vneg.f64	d7, d7
   23100:	ed84 7b00 	vstr	d7, [r4]
   23104:	ed94 7b02 	vldr	d7, [r4, #8]
   23108:	e79e      	b.n	23048 <__ieee754_rem_pio2+0x158>
   2310a:	4603      	mov	r3, r0
   2310c:	e7e0      	b.n	230d0 <__ieee754_rem_pio2+0x1e0>
   2310e:	bf00      	nop
   23110:	54400000 	.word	0x54400000
   23114:	3ff921fb 	.word	0x3ff921fb
   23118:	1a626331 	.word	0x1a626331
   2311c:	3dd0b461 	.word	0x3dd0b461
   23120:	1a600000 	.word	0x1a600000
   23124:	3dd0b461 	.word	0x3dd0b461
   23128:	2e037073 	.word	0x2e037073
   2312c:	3ba3198a 	.word	0x3ba3198a
   23130:	6dc9c883 	.word	0x6dc9c883
   23134:	3fe45f30 	.word	0x3fe45f30
   23138:	2e000000 	.word	0x2e000000
   2313c:	3ba3198a 	.word	0x3ba3198a
   23140:	252049c1 	.word	0x252049c1
   23144:	397b839a 	.word	0x397b839a
   23148:	00000000 	.word	0x00000000
   2314c:	41700000 	.word	0x41700000
   23150:	3fe921fb 	.word	0x3fe921fb
   23154:	4002d97b 	.word	0x4002d97b
   23158:	413921fb 	.word	0x413921fb
   2315c:	00023f60 	.word	0x00023f60
   23160:	7fefffff 	.word	0x7fefffff
   23164:	00023fe0 	.word	0x00023fe0

00023168 <__kernel_cos>:
   23168:	ee10 1a90 	vmov	r1, s1
   2316c:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
   23170:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   23174:	f1b1 5f79 	cmp.w	r1, #1044381696	; 0x3e400000
   23178:	da05      	bge.n	23186 <__kernel_cos+0x1e>
   2317a:	eefd 6bc0 	vcvt.s32.f64	s13, d0
   2317e:	ee16 3a90 	vmov	r3, s13
   23182:	2b00      	cmp	r3, #0
   23184:	d03d      	beq.n	23202 <__kernel_cos+0x9a>
   23186:	ee20 4b00 	vmul.f64	d4, d0, d0
   2318a:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
   2318e:	ed9f 3b1e 	vldr	d3, [pc, #120]	; 23208 <__kernel_cos+0xa0>
   23192:	ee21 1b40 	vnmul.f64	d1, d1, d0
   23196:	ee24 6b06 	vmul.f64	d6, d4, d6
   2319a:	ed9f 5b1d 	vldr	d5, [pc, #116]	; 23210 <__kernel_cos+0xa8>
   2319e:	eea4 5b03 	vfma.f64	d5, d4, d3
   231a2:	ed9f 3b1d 	vldr	d3, [pc, #116]	; 23218 <__kernel_cos+0xb0>
   231a6:	eea5 3b04 	vfma.f64	d3, d5, d4
   231aa:	ed9f 5b1d 	vldr	d5, [pc, #116]	; 23220 <__kernel_cos+0xb8>
   231ae:	eea3 5b04 	vfma.f64	d5, d3, d4
   231b2:	ed9f 3b1d 	vldr	d3, [pc, #116]	; 23228 <__kernel_cos+0xc0>
   231b6:	4b20      	ldr	r3, [pc, #128]	; (23238 <__kernel_cos+0xd0>)
   231b8:	eea5 3b04 	vfma.f64	d3, d5, d4
   231bc:	ed9f 5b1c 	vldr	d5, [pc, #112]	; 23230 <__kernel_cos+0xc8>
   231c0:	4299      	cmp	r1, r3
   231c2:	eea3 5b04 	vfma.f64	d5, d3, d4
   231c6:	ee25 5b04 	vmul.f64	d5, d5, d4
   231ca:	eea4 1b05 	vfma.f64	d1, d4, d5
   231ce:	dc04      	bgt.n	231da <__kernel_cos+0x72>
   231d0:	ee36 6b41 	vsub.f64	d6, d6, d1
   231d4:	ee37 0b46 	vsub.f64	d0, d7, d6
   231d8:	4770      	bx	lr
   231da:	4b18      	ldr	r3, [pc, #96]	; (2323c <__kernel_cos+0xd4>)
   231dc:	4299      	cmp	r1, r3
   231de:	dc0d      	bgt.n	231fc <__kernel_cos+0x94>
   231e0:	2200      	movs	r2, #0
   231e2:	f5a1 1300 	sub.w	r3, r1, #2097152	; 0x200000
   231e6:	ec43 2b15 	vmov	d5, r2, r3
   231ea:	ee37 0b45 	vsub.f64	d0, d7, d5
   231ee:	ee36 6b45 	vsub.f64	d6, d6, d5
   231f2:	ee36 6b41 	vsub.f64	d6, d6, d1
   231f6:	ee30 0b46 	vsub.f64	d0, d0, d6
   231fa:	4770      	bx	lr
   231fc:	eeb5 5b02 	vmov.f64	d5, #82	; 0x3e900000  0.2812500
   23200:	e7f3      	b.n	231ea <__kernel_cos+0x82>
   23202:	eeb0 0b47 	vmov.f64	d0, d7
   23206:	4770      	bx	lr
   23208:	be8838d4 	.word	0xbe8838d4
   2320c:	bda8fae9 	.word	0xbda8fae9
   23210:	bdb4b1c4 	.word	0xbdb4b1c4
   23214:	3e21ee9e 	.word	0x3e21ee9e
   23218:	809c52ad 	.word	0x809c52ad
   2321c:	be927e4f 	.word	0xbe927e4f
   23220:	19cb1590 	.word	0x19cb1590
   23224:	3efa01a0 	.word	0x3efa01a0
   23228:	16c15177 	.word	0x16c15177
   2322c:	bf56c16c 	.word	0xbf56c16c
   23230:	5555554c 	.word	0x5555554c
   23234:	3fa55555 	.word	0x3fa55555
   23238:	3fd33332 	.word	0x3fd33332
   2323c:	3fe90000 	.word	0x3fe90000

00023240 <__kernel_rem_pio2>:
   23240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23244:	ed2d 8b06 	vpush	{d8-d10}
   23248:	f5ad 7d13 	sub.w	sp, sp, #588	; 0x24c
   2324c:	469b      	mov	fp, r3
   2324e:	460e      	mov	r6, r1
   23250:	4bc7      	ldr	r3, [pc, #796]	; (23570 <__kernel_rem_pio2+0x330>)
   23252:	99a2      	ldr	r1, [sp, #648]	; 0x288
   23254:	9002      	str	r0, [sp, #8]
   23256:	f853 9021 	ldr.w	r9, [r3, r1, lsl #2]
   2325a:	98a3      	ldr	r0, [sp, #652]	; 0x28c
   2325c:	1ed1      	subs	r1, r2, #3
   2325e:	2318      	movs	r3, #24
   23260:	f06f 0417 	mvn.w	r4, #23
   23264:	fb91 f1f3 	sdiv	r1, r1, r3
   23268:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
   2326c:	f10b 3aff 	add.w	sl, fp, #4294967295
   23270:	fb01 4404 	mla	r4, r1, r4, r4
   23274:	ed9f 6bb8 	vldr	d6, [pc, #736]	; 23558 <__kernel_rem_pio2+0x318>
   23278:	4414      	add	r4, r2
   2327a:	eba1 050a 	sub.w	r5, r1, sl
   2327e:	aa1a      	add	r2, sp, #104	; 0x68
   23280:	eb09 070a 	add.w	r7, r9, sl
   23284:	eb00 0c85 	add.w	ip, r0, r5, lsl #2
   23288:	4696      	mov	lr, r2
   2328a:	2300      	movs	r3, #0
   2328c:	42bb      	cmp	r3, r7
   2328e:	dd0f      	ble.n	232b0 <__kernel_rem_pio2+0x70>
   23290:	af6a      	add	r7, sp, #424	; 0x1a8
   23292:	2200      	movs	r2, #0
   23294:	454a      	cmp	r2, r9
   23296:	dc28      	bgt.n	232ea <__kernel_rem_pio2+0xaa>
   23298:	f10d 0c68 	add.w	ip, sp, #104	; 0x68
   2329c:	eb0b 0302 	add.w	r3, fp, r2
   232a0:	eb0c 03c3 	add.w	r3, ip, r3, lsl #3
   232a4:	9d02      	ldr	r5, [sp, #8]
   232a6:	ed9f 7bac 	vldr	d7, [pc, #688]	; 23558 <__kernel_rem_pio2+0x318>
   232aa:	f04f 0c00 	mov.w	ip, #0
   232ae:	e016      	b.n	232de <__kernel_rem_pio2+0x9e>
   232b0:	42dd      	cmn	r5, r3
   232b2:	d409      	bmi.n	232c8 <__kernel_rem_pio2+0x88>
   232b4:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
   232b8:	ee07 2a90 	vmov	s15, r2
   232bc:	eeb8 7be7 	vcvt.f64.s32	d7, s15
   232c0:	ecae 7b02 	vstmia	lr!, {d7}
   232c4:	3301      	adds	r3, #1
   232c6:	e7e1      	b.n	2328c <__kernel_rem_pio2+0x4c>
   232c8:	eeb0 7b46 	vmov.f64	d7, d6
   232cc:	e7f8      	b.n	232c0 <__kernel_rem_pio2+0x80>
   232ce:	ecb5 5b02 	vldmia	r5!, {d5}
   232d2:	ed33 6b02 	vldmdb	r3!, {d6}
   232d6:	f10c 0c01 	add.w	ip, ip, #1
   232da:	eea5 7b06 	vfma.f64	d7, d5, d6
   232de:	45d4      	cmp	ip, sl
   232e0:	ddf5      	ble.n	232ce <__kernel_rem_pio2+0x8e>
   232e2:	eca7 7b02 	vstmia	r7!, {d7}
   232e6:	3201      	adds	r2, #1
   232e8:	e7d4      	b.n	23294 <__kernel_rem_pio2+0x54>
   232ea:	ab06      	add	r3, sp, #24
   232ec:	eb03 0389 	add.w	r3, r3, r9, lsl #2
   232f0:	ed9f 9b9b 	vldr	d9, [pc, #620]	; 23560 <__kernel_rem_pio2+0x320>
   232f4:	ed9f ab9c 	vldr	d10, [pc, #624]	; 23568 <__kernel_rem_pio2+0x328>
   232f8:	9304      	str	r3, [sp, #16]
   232fa:	eb00 0381 	add.w	r3, r0, r1, lsl #2
   232fe:	9303      	str	r3, [sp, #12]
   23300:	464d      	mov	r5, r9
   23302:	ab92      	add	r3, sp, #584	; 0x248
   23304:	f105 5700 	add.w	r7, r5, #536870912	; 0x20000000
   23308:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
   2330c:	3f01      	subs	r7, #1
   2330e:	ed13 0b28 	vldr	d0, [r3, #-160]	; 0xffffff60
   23312:	00ff      	lsls	r7, r7, #3
   23314:	ab92      	add	r3, sp, #584	; 0x248
   23316:	19da      	adds	r2, r3, r7
   23318:	3a98      	subs	r2, #152	; 0x98
   2331a:	2300      	movs	r3, #0
   2331c:	1ae9      	subs	r1, r5, r3
   2331e:	2900      	cmp	r1, #0
   23320:	dc4e      	bgt.n	233c0 <__kernel_rem_pio2+0x180>
   23322:	4620      	mov	r0, r4
   23324:	f000 fb10 	bl	23948 <scalbn>
   23328:	eeb0 8b40 	vmov.f64	d8, d0
   2332c:	eeb4 0b00 	vmov.f64	d0, #64	; 0x3e000000  0.125
   23330:	ee28 0b00 	vmul.f64	d0, d8, d0
   23334:	f000 fa8c 	bl	23850 <floor>
   23338:	eeb2 7b00 	vmov.f64	d7, #32	; 0x41000000  8.0
   2333c:	eea0 8b47 	vfms.f64	d8, d0, d7
   23340:	eefd 7bc8 	vcvt.s32.f64	s15, d8
   23344:	2c00      	cmp	r4, #0
   23346:	edcd 7a01 	vstr	s15, [sp, #4]
   2334a:	eeb8 7be7 	vcvt.f64.s32	d7, s15
   2334e:	ee38 8b47 	vsub.f64	d8, d8, d7
   23352:	dd4a      	ble.n	233ea <__kernel_rem_pio2+0x1aa>
   23354:	1e69      	subs	r1, r5, #1
   23356:	ab06      	add	r3, sp, #24
   23358:	f1c4 0018 	rsb	r0, r4, #24
   2335c:	f853 c021 	ldr.w	ip, [r3, r1, lsl #2]
   23360:	9a01      	ldr	r2, [sp, #4]
   23362:	fa4c f300 	asr.w	r3, ip, r0
   23366:	441a      	add	r2, r3
   23368:	4083      	lsls	r3, r0
   2336a:	9201      	str	r2, [sp, #4]
   2336c:	ebac 0203 	sub.w	r2, ip, r3
   23370:	ab06      	add	r3, sp, #24
   23372:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
   23376:	f1c4 0317 	rsb	r3, r4, #23
   2337a:	fa42 f803 	asr.w	r8, r2, r3
   2337e:	f1b8 0f00 	cmp.w	r8, #0
   23382:	dd43      	ble.n	2340c <__kernel_rem_pio2+0x1cc>
   23384:	9b01      	ldr	r3, [sp, #4]
   23386:	2000      	movs	r0, #0
   23388:	3301      	adds	r3, #1
   2338a:	9301      	str	r3, [sp, #4]
   2338c:	4601      	mov	r1, r0
   2338e:	f06f 4c7f 	mvn.w	ip, #4278190080	; 0xff000000
   23392:	4285      	cmp	r5, r0
   23394:	dc6e      	bgt.n	23474 <__kernel_rem_pio2+0x234>
   23396:	2c00      	cmp	r4, #0
   23398:	dd04      	ble.n	233a4 <__kernel_rem_pio2+0x164>
   2339a:	2c01      	cmp	r4, #1
   2339c:	d07f      	beq.n	2349e <__kernel_rem_pio2+0x25e>
   2339e:	2c02      	cmp	r4, #2
   233a0:	f000 8087 	beq.w	234b2 <__kernel_rem_pio2+0x272>
   233a4:	f1b8 0f02 	cmp.w	r8, #2
   233a8:	d130      	bne.n	2340c <__kernel_rem_pio2+0x1cc>
   233aa:	eeb7 0b00 	vmov.f64	d0, #112	; 0x3f800000  1.0
   233ae:	ee30 8b48 	vsub.f64	d8, d0, d8
   233b2:	b359      	cbz	r1, 2340c <__kernel_rem_pio2+0x1cc>
   233b4:	4620      	mov	r0, r4
   233b6:	f000 fac7 	bl	23948 <scalbn>
   233ba:	ee38 8b40 	vsub.f64	d8, d8, d0
   233be:	e025      	b.n	2340c <__kernel_rem_pio2+0x1cc>
   233c0:	ee20 7b09 	vmul.f64	d7, d0, d9
   233c4:	eebd 7bc7 	vcvt.s32.f64	s14, d7
   233c8:	a806      	add	r0, sp, #24
   233ca:	eeb8 7bc7 	vcvt.f64.s32	d7, s14
   233ce:	eea7 0b4a 	vfms.f64	d0, d7, d10
   233d2:	eebd 0bc0 	vcvt.s32.f64	s0, d0
   233d6:	ee10 1a10 	vmov	r1, s0
   233da:	ed32 0b02 	vldmdb	r2!, {d0}
   233de:	f840 1023 	str.w	r1, [r0, r3, lsl #2]
   233e2:	ee37 0b00 	vadd.f64	d0, d7, d0
   233e6:	3301      	adds	r3, #1
   233e8:	e798      	b.n	2331c <__kernel_rem_pio2+0xdc>
   233ea:	d106      	bne.n	233fa <__kernel_rem_pio2+0x1ba>
   233ec:	1e6b      	subs	r3, r5, #1
   233ee:	aa06      	add	r2, sp, #24
   233f0:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   233f4:	ea4f 58e2 	mov.w	r8, r2, asr #23
   233f8:	e7c1      	b.n	2337e <__kernel_rem_pio2+0x13e>
   233fa:	eeb6 7b00 	vmov.f64	d7, #96	; 0x3f000000  0.5
   233fe:	eeb4 8bc7 	vcmpe.f64	d8, d7
   23402:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   23406:	da32      	bge.n	2346e <__kernel_rem_pio2+0x22e>
   23408:	f04f 0800 	mov.w	r8, #0
   2340c:	eeb5 8b40 	vcmp.f64	d8, #0.0
   23410:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   23414:	f040 80b0 	bne.w	23578 <__kernel_rem_pio2+0x338>
   23418:	1e6b      	subs	r3, r5, #1
   2341a:	4618      	mov	r0, r3
   2341c:	2200      	movs	r2, #0
   2341e:	4548      	cmp	r0, r9
   23420:	da4e      	bge.n	234c0 <__kernel_rem_pio2+0x280>
   23422:	2a00      	cmp	r2, #0
   23424:	f000 8088 	beq.w	23538 <__kernel_rem_pio2+0x2f8>
   23428:	aa06      	add	r2, sp, #24
   2342a:	3c18      	subs	r4, #24
   2342c:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
   23430:	2900      	cmp	r1, #0
   23432:	f000 808e 	beq.w	23552 <__kernel_rem_pio2+0x312>
   23436:	eeb7 0b00 	vmov.f64	d0, #112	; 0x3f800000  1.0
   2343a:	4620      	mov	r0, r4
   2343c:	9302      	str	r3, [sp, #8]
   2343e:	f000 fa83 	bl	23948 <scalbn>
   23442:	9b02      	ldr	r3, [sp, #8]
   23444:	aa6a      	add	r2, sp, #424	; 0x1a8
   23446:	00d9      	lsls	r1, r3, #3
   23448:	ed9f 6b45 	vldr	d6, [pc, #276]	; 23560 <__kernel_rem_pio2+0x320>
   2344c:	1850      	adds	r0, r2, r1
   2344e:	f100 0508 	add.w	r5, r0, #8
   23452:	461c      	mov	r4, r3
   23454:	2c00      	cmp	r4, #0
   23456:	f280 80bd 	bge.w	235d4 <__kernel_rem_pio2+0x394>
   2345a:	2500      	movs	r5, #0
   2345c:	1b5c      	subs	r4, r3, r5
   2345e:	2c00      	cmp	r4, #0
   23460:	f2c0 80dd 	blt.w	2361e <__kernel_rem_pio2+0x3de>
   23464:	4f43      	ldr	r7, [pc, #268]	; (23574 <__kernel_rem_pio2+0x334>)
   23466:	ed9f 7b3c 	vldr	d7, [pc, #240]	; 23558 <__kernel_rem_pio2+0x318>
   2346a:	2400      	movs	r4, #0
   2346c:	e0cb      	b.n	23606 <__kernel_rem_pio2+0x3c6>
   2346e:	f04f 0802 	mov.w	r8, #2
   23472:	e787      	b.n	23384 <__kernel_rem_pio2+0x144>
   23474:	ab06      	add	r3, sp, #24
   23476:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
   2347a:	b949      	cbnz	r1, 23490 <__kernel_rem_pio2+0x250>
   2347c:	b12b      	cbz	r3, 2348a <__kernel_rem_pio2+0x24a>
   2347e:	aa06      	add	r2, sp, #24
   23480:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
   23484:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
   23488:	2301      	movs	r3, #1
   2348a:	3001      	adds	r0, #1
   2348c:	4619      	mov	r1, r3
   2348e:	e780      	b.n	23392 <__kernel_rem_pio2+0x152>
   23490:	aa06      	add	r2, sp, #24
   23492:	ebac 0303 	sub.w	r3, ip, r3
   23496:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
   2349a:	460b      	mov	r3, r1
   2349c:	e7f5      	b.n	2348a <__kernel_rem_pio2+0x24a>
   2349e:	1e68      	subs	r0, r5, #1
   234a0:	ab06      	add	r3, sp, #24
   234a2:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
   234a6:	f3c3 0316 	ubfx	r3, r3, #0, #23
   234aa:	aa06      	add	r2, sp, #24
   234ac:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
   234b0:	e778      	b.n	233a4 <__kernel_rem_pio2+0x164>
   234b2:	1e68      	subs	r0, r5, #1
   234b4:	ab06      	add	r3, sp, #24
   234b6:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
   234ba:	f3c3 0315 	ubfx	r3, r3, #0, #22
   234be:	e7f4      	b.n	234aa <__kernel_rem_pio2+0x26a>
   234c0:	a906      	add	r1, sp, #24
   234c2:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
   234c6:	3801      	subs	r0, #1
   234c8:	430a      	orrs	r2, r1
   234ca:	e7a8      	b.n	2341e <__kernel_rem_pio2+0x1de>
   234cc:	f10c 0c01 	add.w	ip, ip, #1
   234d0:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   234d4:	2a00      	cmp	r2, #0
   234d6:	d0f9      	beq.n	234cc <__kernel_rem_pio2+0x28c>
   234d8:	eb0b 0305 	add.w	r3, fp, r5
   234dc:	aa1a      	add	r2, sp, #104	; 0x68
   234de:	00db      	lsls	r3, r3, #3
   234e0:	1898      	adds	r0, r3, r2
   234e2:	3008      	adds	r0, #8
   234e4:	1c69      	adds	r1, r5, #1
   234e6:	3708      	adds	r7, #8
   234e8:	2200      	movs	r2, #0
   234ea:	4465      	add	r5, ip
   234ec:	9005      	str	r0, [sp, #20]
   234ee:	428d      	cmp	r5, r1
   234f0:	f6ff af07 	blt.w	23302 <__kernel_rem_pio2+0xc2>
   234f4:	a81a      	add	r0, sp, #104	; 0x68
   234f6:	eb02 0c03 	add.w	ip, r2, r3
   234fa:	4484      	add	ip, r0
   234fc:	9803      	ldr	r0, [sp, #12]
   234fe:	f8dd e008 	ldr.w	lr, [sp, #8]
   23502:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
   23506:	9001      	str	r0, [sp, #4]
   23508:	ee07 0a90 	vmov	s15, r0
   2350c:	eeb8 7be7 	vcvt.f64.s32	d7, s15
   23510:	9805      	ldr	r0, [sp, #20]
   23512:	ed8c 7b00 	vstr	d7, [ip]
   23516:	ed9f 7b10 	vldr	d7, [pc, #64]	; 23558 <__kernel_rem_pio2+0x318>
   2351a:	eb00 0802 	add.w	r8, r0, r2
   2351e:	f04f 0c00 	mov.w	ip, #0
   23522:	45d4      	cmp	ip, sl
   23524:	dd0c      	ble.n	23540 <__kernel_rem_pio2+0x300>
   23526:	eb02 0c07 	add.w	ip, r2, r7
   2352a:	a86a      	add	r0, sp, #424	; 0x1a8
   2352c:	4484      	add	ip, r0
   2352e:	ed8c 7b02 	vstr	d7, [ip, #8]
   23532:	3101      	adds	r1, #1
   23534:	3208      	adds	r2, #8
   23536:	e7da      	b.n	234ee <__kernel_rem_pio2+0x2ae>
   23538:	9b04      	ldr	r3, [sp, #16]
   2353a:	f04f 0c01 	mov.w	ip, #1
   2353e:	e7c7      	b.n	234d0 <__kernel_rem_pio2+0x290>
   23540:	ecbe 5b02 	vldmia	lr!, {d5}
   23544:	ed38 6b02 	vldmdb	r8!, {d6}
   23548:	f10c 0c01 	add.w	ip, ip, #1
   2354c:	eea5 7b06 	vfma.f64	d7, d5, d6
   23550:	e7e7      	b.n	23522 <__kernel_rem_pio2+0x2e2>
   23552:	3b01      	subs	r3, #1
   23554:	e768      	b.n	23428 <__kernel_rem_pio2+0x1e8>
   23556:	bf00      	nop
	...
   23564:	3e700000 	.word	0x3e700000
   23568:	00000000 	.word	0x00000000
   2356c:	41700000 	.word	0x41700000
   23570:	00024128 	.word	0x00024128
   23574:	000240e8 	.word	0x000240e8
   23578:	4260      	negs	r0, r4
   2357a:	eeb0 0b48 	vmov.f64	d0, d8
   2357e:	f000 f9e3 	bl	23948 <scalbn>
   23582:	ed9f 6b77 	vldr	d6, [pc, #476]	; 23760 <__kernel_rem_pio2+0x520>
   23586:	eeb4 0bc6 	vcmpe.f64	d0, d6
   2358a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   2358e:	db18      	blt.n	235c2 <__kernel_rem_pio2+0x382>
   23590:	ed9f 7b75 	vldr	d7, [pc, #468]	; 23768 <__kernel_rem_pio2+0x528>
   23594:	ee20 7b07 	vmul.f64	d7, d0, d7
   23598:	eebd 7bc7 	vcvt.s32.f64	s14, d7
   2359c:	aa06      	add	r2, sp, #24
   2359e:	eeb8 5bc7 	vcvt.f64.s32	d5, s14
   235a2:	eea5 0b46 	vfms.f64	d0, d5, d6
   235a6:	eebd 0bc0 	vcvt.s32.f64	s0, d0
   235aa:	a906      	add	r1, sp, #24
   235ac:	ee10 3a10 	vmov	r3, s0
   235b0:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
   235b4:	1c6b      	adds	r3, r5, #1
   235b6:	ee17 2a10 	vmov	r2, s14
   235ba:	3418      	adds	r4, #24
   235bc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
   235c0:	e739      	b.n	23436 <__kernel_rem_pio2+0x1f6>
   235c2:	eebd 0bc0 	vcvt.s32.f64	s0, d0
   235c6:	aa06      	add	r2, sp, #24
   235c8:	ee10 3a10 	vmov	r3, s0
   235cc:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
   235d0:	462b      	mov	r3, r5
   235d2:	e730      	b.n	23436 <__kernel_rem_pio2+0x1f6>
   235d4:	aa06      	add	r2, sp, #24
   235d6:	f852 2024 	ldr.w	r2, [r2, r4, lsl #2]
   235da:	9202      	str	r2, [sp, #8]
   235dc:	ee07 2a90 	vmov	s15, r2
   235e0:	3c01      	subs	r4, #1
   235e2:	eeb8 7be7 	vcvt.f64.s32	d7, s15
   235e6:	ee27 7b00 	vmul.f64	d7, d7, d0
   235ea:	ee20 0b06 	vmul.f64	d0, d0, d6
   235ee:	ed25 7b02 	vstmdb	r5!, {d7}
   235f2:	e72f      	b.n	23454 <__kernel_rem_pio2+0x214>
   235f4:	eb00 0cc4 	add.w	ip, r0, r4, lsl #3
   235f8:	ecb7 5b02 	vldmia	r7!, {d5}
   235fc:	ed9c 6b00 	vldr	d6, [ip]
   23600:	3401      	adds	r4, #1
   23602:	eea5 7b06 	vfma.f64	d7, d5, d6
   23606:	454c      	cmp	r4, r9
   23608:	dc01      	bgt.n	2360e <__kernel_rem_pio2+0x3ce>
   2360a:	42a5      	cmp	r5, r4
   2360c:	daf2      	bge.n	235f4 <__kernel_rem_pio2+0x3b4>
   2360e:	aa42      	add	r2, sp, #264	; 0x108
   23610:	eb02 04c5 	add.w	r4, r2, r5, lsl #3
   23614:	ed84 7b00 	vstr	d7, [r4]
   23618:	3501      	adds	r5, #1
   2361a:	3808      	subs	r0, #8
   2361c:	e71e      	b.n	2345c <__kernel_rem_pio2+0x21c>
   2361e:	9aa2      	ldr	r2, [sp, #648]	; 0x288
   23620:	2a03      	cmp	r2, #3
   23622:	d84e      	bhi.n	236c2 <__kernel_rem_pio2+0x482>
   23624:	e8df f002 	tbb	[pc, r2]
   23628:	021f1f3e 	.word	0x021f1f3e
   2362c:	3108      	adds	r1, #8
   2362e:	aa42      	add	r2, sp, #264	; 0x108
   23630:	4411      	add	r1, r2
   23632:	4608      	mov	r0, r1
   23634:	461c      	mov	r4, r3
   23636:	2c00      	cmp	r4, #0
   23638:	dc61      	bgt.n	236fe <__kernel_rem_pio2+0x4be>
   2363a:	4608      	mov	r0, r1
   2363c:	461c      	mov	r4, r3
   2363e:	2c01      	cmp	r4, #1
   23640:	dc6d      	bgt.n	2371e <__kernel_rem_pio2+0x4de>
   23642:	ed9f 7b4b 	vldr	d7, [pc, #300]	; 23770 <__kernel_rem_pio2+0x530>
   23646:	2b01      	cmp	r3, #1
   23648:	dc79      	bgt.n	2373e <__kernel_rem_pio2+0x4fe>
   2364a:	ed9d 5b42 	vldr	d5, [sp, #264]	; 0x108
   2364e:	ed9d 6b44 	vldr	d6, [sp, #272]	; 0x110
   23652:	f1b8 0f00 	cmp.w	r8, #0
   23656:	d178      	bne.n	2374a <__kernel_rem_pio2+0x50a>
   23658:	ed86 5b00 	vstr	d5, [r6]
   2365c:	ed86 6b02 	vstr	d6, [r6, #8]
   23660:	ed86 7b04 	vstr	d7, [r6, #16]
   23664:	e02d      	b.n	236c2 <__kernel_rem_pio2+0x482>
   23666:	ed9f 6b42 	vldr	d6, [pc, #264]	; 23770 <__kernel_rem_pio2+0x530>
   2366a:	3108      	adds	r1, #8
   2366c:	aa42      	add	r2, sp, #264	; 0x108
   2366e:	4411      	add	r1, r2
   23670:	4618      	mov	r0, r3
   23672:	2800      	cmp	r0, #0
   23674:	da34      	bge.n	236e0 <__kernel_rem_pio2+0x4a0>
   23676:	f1b8 0f00 	cmp.w	r8, #0
   2367a:	d037      	beq.n	236ec <__kernel_rem_pio2+0x4ac>
   2367c:	eeb1 7b46 	vneg.f64	d7, d6
   23680:	ed86 7b00 	vstr	d7, [r6]
   23684:	ed9d 7b42 	vldr	d7, [sp, #264]	; 0x108
   23688:	a844      	add	r0, sp, #272	; 0x110
   2368a:	2101      	movs	r1, #1
   2368c:	ee37 7b46 	vsub.f64	d7, d7, d6
   23690:	428b      	cmp	r3, r1
   23692:	da2e      	bge.n	236f2 <__kernel_rem_pio2+0x4b2>
   23694:	f1b8 0f00 	cmp.w	r8, #0
   23698:	d001      	beq.n	2369e <__kernel_rem_pio2+0x45e>
   2369a:	eeb1 7b47 	vneg.f64	d7, d7
   2369e:	ed86 7b02 	vstr	d7, [r6, #8]
   236a2:	e00e      	b.n	236c2 <__kernel_rem_pio2+0x482>
   236a4:	aa92      	add	r2, sp, #584	; 0x248
   236a6:	ed9f 7b32 	vldr	d7, [pc, #200]	; 23770 <__kernel_rem_pio2+0x530>
   236aa:	4411      	add	r1, r2
   236ac:	f5a1 719c 	sub.w	r1, r1, #312	; 0x138
   236b0:	2b00      	cmp	r3, #0
   236b2:	da0f      	bge.n	236d4 <__kernel_rem_pio2+0x494>
   236b4:	f1b8 0f00 	cmp.w	r8, #0
   236b8:	d001      	beq.n	236be <__kernel_rem_pio2+0x47e>
   236ba:	eeb1 7b47 	vneg.f64	d7, d7
   236be:	ed86 7b00 	vstr	d7, [r6]
   236c2:	9b01      	ldr	r3, [sp, #4]
   236c4:	f003 0007 	and.w	r0, r3, #7
   236c8:	f50d 7d13 	add.w	sp, sp, #588	; 0x24c
   236cc:	ecbd 8b06 	vpop	{d8-d10}
   236d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   236d4:	ed31 6b02 	vldmdb	r1!, {d6}
   236d8:	3b01      	subs	r3, #1
   236da:	ee37 7b06 	vadd.f64	d7, d7, d6
   236de:	e7e7      	b.n	236b0 <__kernel_rem_pio2+0x470>
   236e0:	ed31 7b02 	vldmdb	r1!, {d7}
   236e4:	3801      	subs	r0, #1
   236e6:	ee36 6b07 	vadd.f64	d6, d6, d7
   236ea:	e7c2      	b.n	23672 <__kernel_rem_pio2+0x432>
   236ec:	eeb0 7b46 	vmov.f64	d7, d6
   236f0:	e7c6      	b.n	23680 <__kernel_rem_pio2+0x440>
   236f2:	ecb0 6b02 	vldmia	r0!, {d6}
   236f6:	3101      	adds	r1, #1
   236f8:	ee37 7b06 	vadd.f64	d7, d7, d6
   236fc:	e7c8      	b.n	23690 <__kernel_rem_pio2+0x450>
   236fe:	ed10 7b04 	vldr	d7, [r0, #-16]
   23702:	ed30 5b02 	vldmdb	r0!, {d5}
   23706:	3c01      	subs	r4, #1
   23708:	ee37 6b05 	vadd.f64	d6, d7, d5
   2370c:	ee37 7b46 	vsub.f64	d7, d7, d6
   23710:	ed00 6b02 	vstr	d6, [r0, #-8]
   23714:	ee37 7b05 	vadd.f64	d7, d7, d5
   23718:	ed80 7b00 	vstr	d7, [r0]
   2371c:	e78b      	b.n	23636 <__kernel_rem_pio2+0x3f6>
   2371e:	ed10 7b04 	vldr	d7, [r0, #-16]
   23722:	ed30 5b02 	vldmdb	r0!, {d5}
   23726:	3c01      	subs	r4, #1
   23728:	ee37 6b05 	vadd.f64	d6, d7, d5
   2372c:	ee37 7b46 	vsub.f64	d7, d7, d6
   23730:	ed00 6b02 	vstr	d6, [r0, #-8]
   23734:	ee37 7b05 	vadd.f64	d7, d7, d5
   23738:	ed80 7b00 	vstr	d7, [r0]
   2373c:	e77f      	b.n	2363e <__kernel_rem_pio2+0x3fe>
   2373e:	ed31 6b02 	vldmdb	r1!, {d6}
   23742:	3b01      	subs	r3, #1
   23744:	ee37 7b06 	vadd.f64	d7, d7, d6
   23748:	e77d      	b.n	23646 <__kernel_rem_pio2+0x406>
   2374a:	eeb1 5b45 	vneg.f64	d5, d5
   2374e:	eeb1 6b46 	vneg.f64	d6, d6
   23752:	ed86 5b00 	vstr	d5, [r6]
   23756:	eeb1 7b47 	vneg.f64	d7, d7
   2375a:	ed86 6b02 	vstr	d6, [r6, #8]
   2375e:	e77f      	b.n	23660 <__kernel_rem_pio2+0x420>
   23760:	00000000 	.word	0x00000000
   23764:	41700000 	.word	0x41700000
   23768:	00000000 	.word	0x00000000
   2376c:	3e700000 	.word	0x3e700000
	...

00023778 <__kernel_sin>:
   23778:	ee10 3a90 	vmov	r3, s1
   2377c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
   23780:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
   23784:	da04      	bge.n	23790 <__kernel_sin+0x18>
   23786:	eefd 7bc0 	vcvt.s32.f64	s15, d0
   2378a:	ee17 3a90 	vmov	r3, s15
   2378e:	b35b      	cbz	r3, 237e8 <__kernel_sin+0x70>
   23790:	ee20 6b00 	vmul.f64	d6, d0, d0
   23794:	ee20 5b06 	vmul.f64	d5, d0, d6
   23798:	ed9f 7b15 	vldr	d7, [pc, #84]	; 237f0 <__kernel_sin+0x78>
   2379c:	ed9f 4b16 	vldr	d4, [pc, #88]	; 237f8 <__kernel_sin+0x80>
   237a0:	eea6 4b07 	vfma.f64	d4, d6, d7
   237a4:	ed9f 7b16 	vldr	d7, [pc, #88]	; 23800 <__kernel_sin+0x88>
   237a8:	eea4 7b06 	vfma.f64	d7, d4, d6
   237ac:	ed9f 4b16 	vldr	d4, [pc, #88]	; 23808 <__kernel_sin+0x90>
   237b0:	eea7 4b06 	vfma.f64	d4, d7, d6
   237b4:	ed9f 7b16 	vldr	d7, [pc, #88]	; 23810 <__kernel_sin+0x98>
   237b8:	eea4 7b06 	vfma.f64	d7, d4, d6
   237bc:	b930      	cbnz	r0, 237cc <__kernel_sin+0x54>
   237be:	ed9f 4b16 	vldr	d4, [pc, #88]	; 23818 <__kernel_sin+0xa0>
   237c2:	eea6 4b07 	vfma.f64	d4, d6, d7
   237c6:	eea4 0b05 	vfma.f64	d0, d4, d5
   237ca:	4770      	bx	lr
   237cc:	ee27 7b45 	vnmul.f64	d7, d7, d5
   237d0:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
   237d4:	eea1 7b04 	vfma.f64	d7, d1, d4
   237d8:	ee97 1b06 	vfnms.f64	d1, d7, d6
   237dc:	ed9f 7b10 	vldr	d7, [pc, #64]	; 23820 <__kernel_sin+0xa8>
   237e0:	eea5 1b07 	vfma.f64	d1, d5, d7
   237e4:	ee30 0b41 	vsub.f64	d0, d0, d1
   237e8:	4770      	bx	lr
   237ea:	bf00      	nop
   237ec:	f3af 8000 	nop.w
   237f0:	5acfd57c 	.word	0x5acfd57c
   237f4:	3de5d93a 	.word	0x3de5d93a
   237f8:	8a2b9ceb 	.word	0x8a2b9ceb
   237fc:	be5ae5e6 	.word	0xbe5ae5e6
   23800:	57b1fe7d 	.word	0x57b1fe7d
   23804:	3ec71de3 	.word	0x3ec71de3
   23808:	19c161d5 	.word	0x19c161d5
   2380c:	bf2a01a0 	.word	0xbf2a01a0
   23810:	1110f8a6 	.word	0x1110f8a6
   23814:	3f811111 	.word	0x3f811111
   23818:	55555549 	.word	0x55555549
   2381c:	bfc55555 	.word	0xbfc55555
   23820:	55555549 	.word	0x55555549
   23824:	3fc55555 	.word	0x3fc55555

00023828 <fabs>:
   23828:	ec51 0b10 	vmov	r0, r1, d0
   2382c:	ee10 2a10 	vmov	r2, s0
   23830:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   23834:	ec43 2b10 	vmov	d0, r2, r3
   23838:	4770      	bx	lr

0002383a <finite>:
   2383a:	ee10 3a90 	vmov	r3, s1
   2383e:	f043 4000 	orr.w	r0, r3, #2147483648	; 0x80000000
   23842:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
   23846:	0fc0      	lsrs	r0, r0, #31
   23848:	4770      	bx	lr
   2384a:	0000      	movs	r0, r0
   2384c:	0000      	movs	r0, r0
	...

00023850 <floor>:
   23850:	ee10 1a90 	vmov	r1, s1
   23854:	f3c1 520a 	ubfx	r2, r1, #20, #11
   23858:	f2a2 33ff 	subw	r3, r2, #1023	; 0x3ff
   2385c:	2b13      	cmp	r3, #19
   2385e:	b530      	push	{r4, r5, lr}
   23860:	ee10 0a10 	vmov	r0, s0
   23864:	ee10 5a10 	vmov	r5, s0
   23868:	dc33      	bgt.n	238d2 <floor+0x82>
   2386a:	2b00      	cmp	r3, #0
   2386c:	da17      	bge.n	2389e <floor+0x4e>
   2386e:	ed9f 7b30 	vldr	d7, [pc, #192]	; 23930 <floor+0xe0>
   23872:	ee30 0b07 	vadd.f64	d0, d0, d7
   23876:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
   2387a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   2387e:	dd09      	ble.n	23894 <floor+0x44>
   23880:	2900      	cmp	r1, #0
   23882:	da50      	bge.n	23926 <floor+0xd6>
   23884:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   23888:	4a2b      	ldr	r2, [pc, #172]	; (23938 <floor+0xe8>)
   2388a:	4303      	orrs	r3, r0
   2388c:	2000      	movs	r0, #0
   2388e:	4283      	cmp	r3, r0
   23890:	bf18      	it	ne
   23892:	4611      	movne	r1, r2
   23894:	460b      	mov	r3, r1
   23896:	4602      	mov	r2, r0
   23898:	ec43 2b10 	vmov	d0, r2, r3
   2389c:	e020      	b.n	238e0 <floor+0x90>
   2389e:	4a27      	ldr	r2, [pc, #156]	; (2393c <floor+0xec>)
   238a0:	411a      	asrs	r2, r3
   238a2:	ea01 0402 	and.w	r4, r1, r2
   238a6:	4304      	orrs	r4, r0
   238a8:	d01a      	beq.n	238e0 <floor+0x90>
   238aa:	ed9f 7b21 	vldr	d7, [pc, #132]	; 23930 <floor+0xe0>
   238ae:	ee30 0b07 	vadd.f64	d0, d0, d7
   238b2:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
   238b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   238ba:	ddeb      	ble.n	23894 <floor+0x44>
   238bc:	2900      	cmp	r1, #0
   238be:	bfbe      	ittt	lt
   238c0:	f44f 1080 	movlt.w	r0, #1048576	; 0x100000
   238c4:	fa40 f303 	asrlt.w	r3, r0, r3
   238c8:	18c9      	addlt	r1, r1, r3
   238ca:	ea21 0102 	bic.w	r1, r1, r2
   238ce:	2000      	movs	r0, #0
   238d0:	e7e0      	b.n	23894 <floor+0x44>
   238d2:	2b33      	cmp	r3, #51	; 0x33
   238d4:	dd05      	ble.n	238e2 <floor+0x92>
   238d6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   238da:	d101      	bne.n	238e0 <floor+0x90>
   238dc:	ee30 0b00 	vadd.f64	d0, d0, d0
   238e0:	bd30      	pop	{r4, r5, pc}
   238e2:	f2a2 4413 	subw	r4, r2, #1043	; 0x413
   238e6:	f04f 32ff 	mov.w	r2, #4294967295
   238ea:	40e2      	lsrs	r2, r4
   238ec:	4202      	tst	r2, r0
   238ee:	d0f7      	beq.n	238e0 <floor+0x90>
   238f0:	ed9f 7b0f 	vldr	d7, [pc, #60]	; 23930 <floor+0xe0>
   238f4:	ee30 0b07 	vadd.f64	d0, d0, d7
   238f8:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
   238fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   23900:	ddc8      	ble.n	23894 <floor+0x44>
   23902:	2900      	cmp	r1, #0
   23904:	da02      	bge.n	2390c <floor+0xbc>
   23906:	2b14      	cmp	r3, #20
   23908:	d103      	bne.n	23912 <floor+0xc2>
   2390a:	3101      	adds	r1, #1
   2390c:	ea20 0002 	bic.w	r0, r0, r2
   23910:	e7c0      	b.n	23894 <floor+0x44>
   23912:	2401      	movs	r4, #1
   23914:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
   23918:	fa04 f303 	lsl.w	r3, r4, r3
   2391c:	4418      	add	r0, r3
   2391e:	42a8      	cmp	r0, r5
   23920:	bf38      	it	cc
   23922:	1909      	addcc	r1, r1, r4
   23924:	e7f2      	b.n	2390c <floor+0xbc>
   23926:	2000      	movs	r0, #0
   23928:	4601      	mov	r1, r0
   2392a:	e7b3      	b.n	23894 <floor+0x44>
   2392c:	f3af 8000 	nop.w
   23930:	8800759c 	.word	0x8800759c
   23934:	7e37e43c 	.word	0x7e37e43c
   23938:	bff00000 	.word	0xbff00000
   2393c:	000fffff 	.word	0x000fffff

00023940 <matherr>:
   23940:	2000      	movs	r0, #0
   23942:	4770      	bx	lr
   23944:	0000      	movs	r0, r0
	...

00023948 <scalbn>:
   23948:	b500      	push	{lr}
   2394a:	ed2d 8b02 	vpush	{d8}
   2394e:	b083      	sub	sp, #12
   23950:	ed8d 0b00 	vstr	d0, [sp]
   23954:	9b01      	ldr	r3, [sp, #4]
   23956:	f3c3 520a 	ubfx	r2, r3, #20, #11
   2395a:	b9a2      	cbnz	r2, 23986 <scalbn+0x3e>
   2395c:	9a00      	ldr	r2, [sp, #0]
   2395e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
   23962:	4313      	orrs	r3, r2
   23964:	d03a      	beq.n	239dc <scalbn+0x94>
   23966:	ed9f 7b2e 	vldr	d7, [pc, #184]	; 23a20 <scalbn+0xd8>
   2396a:	4b35      	ldr	r3, [pc, #212]	; (23a40 <scalbn+0xf8>)
   2396c:	ee20 7b07 	vmul.f64	d7, d0, d7
   23970:	4298      	cmp	r0, r3
   23972:	ed8d 7b00 	vstr	d7, [sp]
   23976:	da11      	bge.n	2399c <scalbn+0x54>
   23978:	ed9f 7b2b 	vldr	d7, [pc, #172]	; 23a28 <scalbn+0xe0>
   2397c:	ed9d 6b00 	vldr	d6, [sp]
   23980:	ee27 7b06 	vmul.f64	d7, d7, d6
   23984:	e007      	b.n	23996 <scalbn+0x4e>
   23986:	f240 71ff 	movw	r1, #2047	; 0x7ff
   2398a:	428a      	cmp	r2, r1
   2398c:	d10a      	bne.n	239a4 <scalbn+0x5c>
   2398e:	ed9d 7b00 	vldr	d7, [sp]
   23992:	ee37 7b07 	vadd.f64	d7, d7, d7
   23996:	ed8d 7b00 	vstr	d7, [sp]
   2399a:	e01f      	b.n	239dc <scalbn+0x94>
   2399c:	9b01      	ldr	r3, [sp, #4]
   2399e:	f3c3 520a 	ubfx	r2, r3, #20, #11
   239a2:	3a36      	subs	r2, #54	; 0x36
   239a4:	4402      	add	r2, r0
   239a6:	f240 71fe 	movw	r1, #2046	; 0x7fe
   239aa:	428a      	cmp	r2, r1
   239ac:	dd0a      	ble.n	239c4 <scalbn+0x7c>
   239ae:	ed9f 8b20 	vldr	d8, [pc, #128]	; 23a30 <scalbn+0xe8>
   239b2:	eeb0 0b48 	vmov.f64	d0, d8
   239b6:	ed9d 1b00 	vldr	d1, [sp]
   239ba:	f000 f843 	bl	23a44 <copysign>
   239be:	ee20 7b08 	vmul.f64	d7, d0, d8
   239c2:	e7e8      	b.n	23996 <scalbn+0x4e>
   239c4:	2a00      	cmp	r2, #0
   239c6:	dd10      	ble.n	239ea <scalbn+0xa2>
   239c8:	e9dd 0100 	ldrd	r0, r1, [sp]
   239cc:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
   239d0:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
   239d4:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
   239d8:	e9cd 0100 	strd	r0, r1, [sp]
   239dc:	ed9d 0b00 	vldr	d0, [sp]
   239e0:	b003      	add	sp, #12
   239e2:	ecbd 8b02 	vpop	{d8}
   239e6:	f85d fb04 	ldr.w	pc, [sp], #4
   239ea:	f112 0f35 	cmn.w	r2, #53	; 0x35
   239ee:	da06      	bge.n	239fe <scalbn+0xb6>
   239f0:	f24c 3350 	movw	r3, #50000	; 0xc350
   239f4:	4298      	cmp	r0, r3
   239f6:	dcda      	bgt.n	239ae <scalbn+0x66>
   239f8:	ed9f 8b0b 	vldr	d8, [pc, #44]	; 23a28 <scalbn+0xe0>
   239fc:	e7d9      	b.n	239b2 <scalbn+0x6a>
   239fe:	e9dd 0100 	ldrd	r0, r1, [sp]
   23a02:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
   23a06:	3236      	adds	r2, #54	; 0x36
   23a08:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
   23a0c:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
   23a10:	ec41 0b17 	vmov	d7, r0, r1
   23a14:	ed9f 6b08 	vldr	d6, [pc, #32]	; 23a38 <scalbn+0xf0>
   23a18:	e7b2      	b.n	23980 <scalbn+0x38>
   23a1a:	bf00      	nop
   23a1c:	f3af 8000 	nop.w
   23a20:	00000000 	.word	0x00000000
   23a24:	43500000 	.word	0x43500000
   23a28:	c2f8f359 	.word	0xc2f8f359
   23a2c:	01a56e1f 	.word	0x01a56e1f
   23a30:	8800759c 	.word	0x8800759c
   23a34:	7e37e43c 	.word	0x7e37e43c
   23a38:	00000000 	.word	0x00000000
   23a3c:	3c900000 	.word	0x3c900000
   23a40:	ffff3cb0 	.word	0xffff3cb0

00023a44 <copysign>:
   23a44:	ec51 0b10 	vmov	r0, r1, d0
   23a48:	ee11 0a90 	vmov	r0, s3
   23a4c:	ee10 2a10 	vmov	r2, s0
   23a50:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   23a54:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   23a58:	ea41 0300 	orr.w	r3, r1, r0
   23a5c:	ec43 2b10 	vmov	d0, r2, r3
   23a60:	4770      	bx	lr
	...

00023a64 <__aeabi_uldivmod>:
   23a64:	b953      	cbnz	r3, 23a7c <__aeabi_uldivmod+0x18>
   23a66:	b94a      	cbnz	r2, 23a7c <__aeabi_uldivmod+0x18>
   23a68:	2900      	cmp	r1, #0
   23a6a:	bf08      	it	eq
   23a6c:	2800      	cmpeq	r0, #0
   23a6e:	bf1c      	itt	ne
   23a70:	f04f 31ff 	movne.w	r1, #4294967295
   23a74:	f04f 30ff 	movne.w	r0, #4294967295
   23a78:	f000 b972 	b.w	23d60 <__aeabi_idiv0>
   23a7c:	f1ad 0c08 	sub.w	ip, sp, #8
   23a80:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   23a84:	f000 f806 	bl	23a94 <__udivmoddi4>
   23a88:	f8dd e004 	ldr.w	lr, [sp, #4]
   23a8c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   23a90:	b004      	add	sp, #16
   23a92:	4770      	bx	lr

00023a94 <__udivmoddi4>:
   23a94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   23a98:	9e08      	ldr	r6, [sp, #32]
   23a9a:	4604      	mov	r4, r0
   23a9c:	4688      	mov	r8, r1
   23a9e:	2b00      	cmp	r3, #0
   23aa0:	d14b      	bne.n	23b3a <__udivmoddi4+0xa6>
   23aa2:	428a      	cmp	r2, r1
   23aa4:	4615      	mov	r5, r2
   23aa6:	d967      	bls.n	23b78 <__udivmoddi4+0xe4>
   23aa8:	fab2 f282 	clz	r2, r2
   23aac:	b14a      	cbz	r2, 23ac2 <__udivmoddi4+0x2e>
   23aae:	f1c2 0720 	rsb	r7, r2, #32
   23ab2:	fa01 f302 	lsl.w	r3, r1, r2
   23ab6:	fa20 f707 	lsr.w	r7, r0, r7
   23aba:	4095      	lsls	r5, r2
   23abc:	ea47 0803 	orr.w	r8, r7, r3
   23ac0:	4094      	lsls	r4, r2
   23ac2:	ea4f 4e15 	mov.w	lr, r5, lsr #16
   23ac6:	0c23      	lsrs	r3, r4, #16
   23ac8:	fbb8 f7fe 	udiv	r7, r8, lr
   23acc:	fa1f fc85 	uxth.w	ip, r5
   23ad0:	fb0e 8817 	mls	r8, lr, r7, r8
   23ad4:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   23ad8:	fb07 f10c 	mul.w	r1, r7, ip
   23adc:	4299      	cmp	r1, r3
   23ade:	d909      	bls.n	23af4 <__udivmoddi4+0x60>
   23ae0:	18eb      	adds	r3, r5, r3
   23ae2:	f107 30ff 	add.w	r0, r7, #4294967295
   23ae6:	f080 811b 	bcs.w	23d20 <__udivmoddi4+0x28c>
   23aea:	4299      	cmp	r1, r3
   23aec:	f240 8118 	bls.w	23d20 <__udivmoddi4+0x28c>
   23af0:	3f02      	subs	r7, #2
   23af2:	442b      	add	r3, r5
   23af4:	1a5b      	subs	r3, r3, r1
   23af6:	b2a4      	uxth	r4, r4
   23af8:	fbb3 f0fe 	udiv	r0, r3, lr
   23afc:	fb0e 3310 	mls	r3, lr, r0, r3
   23b00:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
   23b04:	fb00 fc0c 	mul.w	ip, r0, ip
   23b08:	45a4      	cmp	ip, r4
   23b0a:	d909      	bls.n	23b20 <__udivmoddi4+0x8c>
   23b0c:	192c      	adds	r4, r5, r4
   23b0e:	f100 33ff 	add.w	r3, r0, #4294967295
   23b12:	f080 8107 	bcs.w	23d24 <__udivmoddi4+0x290>
   23b16:	45a4      	cmp	ip, r4
   23b18:	f240 8104 	bls.w	23d24 <__udivmoddi4+0x290>
   23b1c:	3802      	subs	r0, #2
   23b1e:	442c      	add	r4, r5
   23b20:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
   23b24:	eba4 040c 	sub.w	r4, r4, ip
   23b28:	2700      	movs	r7, #0
   23b2a:	b11e      	cbz	r6, 23b34 <__udivmoddi4+0xa0>
   23b2c:	40d4      	lsrs	r4, r2
   23b2e:	2300      	movs	r3, #0
   23b30:	e9c6 4300 	strd	r4, r3, [r6]
   23b34:	4639      	mov	r1, r7
   23b36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   23b3a:	428b      	cmp	r3, r1
   23b3c:	d909      	bls.n	23b52 <__udivmoddi4+0xbe>
   23b3e:	2e00      	cmp	r6, #0
   23b40:	f000 80eb 	beq.w	23d1a <__udivmoddi4+0x286>
   23b44:	2700      	movs	r7, #0
   23b46:	e9c6 0100 	strd	r0, r1, [r6]
   23b4a:	4638      	mov	r0, r7
   23b4c:	4639      	mov	r1, r7
   23b4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   23b52:	fab3 f783 	clz	r7, r3
   23b56:	2f00      	cmp	r7, #0
   23b58:	d147      	bne.n	23bea <__udivmoddi4+0x156>
   23b5a:	428b      	cmp	r3, r1
   23b5c:	d302      	bcc.n	23b64 <__udivmoddi4+0xd0>
   23b5e:	4282      	cmp	r2, r0
   23b60:	f200 80fa 	bhi.w	23d58 <__udivmoddi4+0x2c4>
   23b64:	1a84      	subs	r4, r0, r2
   23b66:	eb61 0303 	sbc.w	r3, r1, r3
   23b6a:	2001      	movs	r0, #1
   23b6c:	4698      	mov	r8, r3
   23b6e:	2e00      	cmp	r6, #0
   23b70:	d0e0      	beq.n	23b34 <__udivmoddi4+0xa0>
   23b72:	e9c6 4800 	strd	r4, r8, [r6]
   23b76:	e7dd      	b.n	23b34 <__udivmoddi4+0xa0>
   23b78:	b902      	cbnz	r2, 23b7c <__udivmoddi4+0xe8>
   23b7a:	deff      	udf	#255	; 0xff
   23b7c:	fab2 f282 	clz	r2, r2
   23b80:	2a00      	cmp	r2, #0
   23b82:	f040 808f 	bne.w	23ca4 <__udivmoddi4+0x210>
   23b86:	1b49      	subs	r1, r1, r5
   23b88:	ea4f 4e15 	mov.w	lr, r5, lsr #16
   23b8c:	fa1f f885 	uxth.w	r8, r5
   23b90:	2701      	movs	r7, #1
   23b92:	fbb1 fcfe 	udiv	ip, r1, lr
   23b96:	0c23      	lsrs	r3, r4, #16
   23b98:	fb0e 111c 	mls	r1, lr, ip, r1
   23b9c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   23ba0:	fb08 f10c 	mul.w	r1, r8, ip
   23ba4:	4299      	cmp	r1, r3
   23ba6:	d907      	bls.n	23bb8 <__udivmoddi4+0x124>
   23ba8:	18eb      	adds	r3, r5, r3
   23baa:	f10c 30ff 	add.w	r0, ip, #4294967295
   23bae:	d202      	bcs.n	23bb6 <__udivmoddi4+0x122>
   23bb0:	4299      	cmp	r1, r3
   23bb2:	f200 80cd 	bhi.w	23d50 <__udivmoddi4+0x2bc>
   23bb6:	4684      	mov	ip, r0
   23bb8:	1a59      	subs	r1, r3, r1
   23bba:	b2a3      	uxth	r3, r4
   23bbc:	fbb1 f0fe 	udiv	r0, r1, lr
   23bc0:	fb0e 1410 	mls	r4, lr, r0, r1
   23bc4:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
   23bc8:	fb08 f800 	mul.w	r8, r8, r0
   23bcc:	45a0      	cmp	r8, r4
   23bce:	d907      	bls.n	23be0 <__udivmoddi4+0x14c>
   23bd0:	192c      	adds	r4, r5, r4
   23bd2:	f100 33ff 	add.w	r3, r0, #4294967295
   23bd6:	d202      	bcs.n	23bde <__udivmoddi4+0x14a>
   23bd8:	45a0      	cmp	r8, r4
   23bda:	f200 80b6 	bhi.w	23d4a <__udivmoddi4+0x2b6>
   23bde:	4618      	mov	r0, r3
   23be0:	eba4 0408 	sub.w	r4, r4, r8
   23be4:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
   23be8:	e79f      	b.n	23b2a <__udivmoddi4+0x96>
   23bea:	f1c7 0c20 	rsb	ip, r7, #32
   23bee:	40bb      	lsls	r3, r7
   23bf0:	fa22 fe0c 	lsr.w	lr, r2, ip
   23bf4:	ea4e 0e03 	orr.w	lr, lr, r3
   23bf8:	fa01 f407 	lsl.w	r4, r1, r7
   23bfc:	fa20 f50c 	lsr.w	r5, r0, ip
   23c00:	fa21 f30c 	lsr.w	r3, r1, ip
   23c04:	ea4f 481e 	mov.w	r8, lr, lsr #16
   23c08:	4325      	orrs	r5, r4
   23c0a:	fbb3 f9f8 	udiv	r9, r3, r8
   23c0e:	0c2c      	lsrs	r4, r5, #16
   23c10:	fb08 3319 	mls	r3, r8, r9, r3
   23c14:	fa1f fa8e 	uxth.w	sl, lr
   23c18:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
   23c1c:	fb09 f40a 	mul.w	r4, r9, sl
   23c20:	429c      	cmp	r4, r3
   23c22:	fa02 f207 	lsl.w	r2, r2, r7
   23c26:	fa00 f107 	lsl.w	r1, r0, r7
   23c2a:	d90b      	bls.n	23c44 <__udivmoddi4+0x1b0>
   23c2c:	eb1e 0303 	adds.w	r3, lr, r3
   23c30:	f109 30ff 	add.w	r0, r9, #4294967295
   23c34:	f080 8087 	bcs.w	23d46 <__udivmoddi4+0x2b2>
   23c38:	429c      	cmp	r4, r3
   23c3a:	f240 8084 	bls.w	23d46 <__udivmoddi4+0x2b2>
   23c3e:	f1a9 0902 	sub.w	r9, r9, #2
   23c42:	4473      	add	r3, lr
   23c44:	1b1b      	subs	r3, r3, r4
   23c46:	b2ad      	uxth	r5, r5
   23c48:	fbb3 f0f8 	udiv	r0, r3, r8
   23c4c:	fb08 3310 	mls	r3, r8, r0, r3
   23c50:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
   23c54:	fb00 fa0a 	mul.w	sl, r0, sl
   23c58:	45a2      	cmp	sl, r4
   23c5a:	d908      	bls.n	23c6e <__udivmoddi4+0x1da>
   23c5c:	eb1e 0404 	adds.w	r4, lr, r4
   23c60:	f100 33ff 	add.w	r3, r0, #4294967295
   23c64:	d26b      	bcs.n	23d3e <__udivmoddi4+0x2aa>
   23c66:	45a2      	cmp	sl, r4
   23c68:	d969      	bls.n	23d3e <__udivmoddi4+0x2aa>
   23c6a:	3802      	subs	r0, #2
   23c6c:	4474      	add	r4, lr
   23c6e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   23c72:	fba0 8902 	umull	r8, r9, r0, r2
   23c76:	eba4 040a 	sub.w	r4, r4, sl
   23c7a:	454c      	cmp	r4, r9
   23c7c:	46c2      	mov	sl, r8
   23c7e:	464b      	mov	r3, r9
   23c80:	d354      	bcc.n	23d2c <__udivmoddi4+0x298>
   23c82:	d051      	beq.n	23d28 <__udivmoddi4+0x294>
   23c84:	2e00      	cmp	r6, #0
   23c86:	d069      	beq.n	23d5c <__udivmoddi4+0x2c8>
   23c88:	ebb1 050a 	subs.w	r5, r1, sl
   23c8c:	eb64 0403 	sbc.w	r4, r4, r3
   23c90:	fa04 fc0c 	lsl.w	ip, r4, ip
   23c94:	40fd      	lsrs	r5, r7
   23c96:	40fc      	lsrs	r4, r7
   23c98:	ea4c 0505 	orr.w	r5, ip, r5
   23c9c:	e9c6 5400 	strd	r5, r4, [r6]
   23ca0:	2700      	movs	r7, #0
   23ca2:	e747      	b.n	23b34 <__udivmoddi4+0xa0>
   23ca4:	f1c2 0320 	rsb	r3, r2, #32
   23ca8:	fa20 f703 	lsr.w	r7, r0, r3
   23cac:	4095      	lsls	r5, r2
   23cae:	fa01 f002 	lsl.w	r0, r1, r2
   23cb2:	fa21 f303 	lsr.w	r3, r1, r3
   23cb6:	ea4f 4e15 	mov.w	lr, r5, lsr #16
   23cba:	4338      	orrs	r0, r7
   23cbc:	0c01      	lsrs	r1, r0, #16
   23cbe:	fbb3 f7fe 	udiv	r7, r3, lr
   23cc2:	fa1f f885 	uxth.w	r8, r5
   23cc6:	fb0e 3317 	mls	r3, lr, r7, r3
   23cca:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
   23cce:	fb07 f308 	mul.w	r3, r7, r8
   23cd2:	428b      	cmp	r3, r1
   23cd4:	fa04 f402 	lsl.w	r4, r4, r2
   23cd8:	d907      	bls.n	23cea <__udivmoddi4+0x256>
   23cda:	1869      	adds	r1, r5, r1
   23cdc:	f107 3cff 	add.w	ip, r7, #4294967295
   23ce0:	d22f      	bcs.n	23d42 <__udivmoddi4+0x2ae>
   23ce2:	428b      	cmp	r3, r1
   23ce4:	d92d      	bls.n	23d42 <__udivmoddi4+0x2ae>
   23ce6:	3f02      	subs	r7, #2
   23ce8:	4429      	add	r1, r5
   23cea:	1acb      	subs	r3, r1, r3
   23cec:	b281      	uxth	r1, r0
   23cee:	fbb3 f0fe 	udiv	r0, r3, lr
   23cf2:	fb0e 3310 	mls	r3, lr, r0, r3
   23cf6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
   23cfa:	fb00 f308 	mul.w	r3, r0, r8
   23cfe:	428b      	cmp	r3, r1
   23d00:	d907      	bls.n	23d12 <__udivmoddi4+0x27e>
   23d02:	1869      	adds	r1, r5, r1
   23d04:	f100 3cff 	add.w	ip, r0, #4294967295
   23d08:	d217      	bcs.n	23d3a <__udivmoddi4+0x2a6>
   23d0a:	428b      	cmp	r3, r1
   23d0c:	d915      	bls.n	23d3a <__udivmoddi4+0x2a6>
   23d0e:	3802      	subs	r0, #2
   23d10:	4429      	add	r1, r5
   23d12:	1ac9      	subs	r1, r1, r3
   23d14:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
   23d18:	e73b      	b.n	23b92 <__udivmoddi4+0xfe>
   23d1a:	4637      	mov	r7, r6
   23d1c:	4630      	mov	r0, r6
   23d1e:	e709      	b.n	23b34 <__udivmoddi4+0xa0>
   23d20:	4607      	mov	r7, r0
   23d22:	e6e7      	b.n	23af4 <__udivmoddi4+0x60>
   23d24:	4618      	mov	r0, r3
   23d26:	e6fb      	b.n	23b20 <__udivmoddi4+0x8c>
   23d28:	4541      	cmp	r1, r8
   23d2a:	d2ab      	bcs.n	23c84 <__udivmoddi4+0x1f0>
   23d2c:	ebb8 0a02 	subs.w	sl, r8, r2
   23d30:	eb69 020e 	sbc.w	r2, r9, lr
   23d34:	3801      	subs	r0, #1
   23d36:	4613      	mov	r3, r2
   23d38:	e7a4      	b.n	23c84 <__udivmoddi4+0x1f0>
   23d3a:	4660      	mov	r0, ip
   23d3c:	e7e9      	b.n	23d12 <__udivmoddi4+0x27e>
   23d3e:	4618      	mov	r0, r3
   23d40:	e795      	b.n	23c6e <__udivmoddi4+0x1da>
   23d42:	4667      	mov	r7, ip
   23d44:	e7d1      	b.n	23cea <__udivmoddi4+0x256>
   23d46:	4681      	mov	r9, r0
   23d48:	e77c      	b.n	23c44 <__udivmoddi4+0x1b0>
   23d4a:	3802      	subs	r0, #2
   23d4c:	442c      	add	r4, r5
   23d4e:	e747      	b.n	23be0 <__udivmoddi4+0x14c>
   23d50:	f1ac 0c02 	sub.w	ip, ip, #2
   23d54:	442b      	add	r3, r5
   23d56:	e72f      	b.n	23bb8 <__udivmoddi4+0x124>
   23d58:	4638      	mov	r0, r7
   23d5a:	e708      	b.n	23b6e <__udivmoddi4+0xda>
   23d5c:	4637      	mov	r7, r6
   23d5e:	e6e9      	b.n	23b34 <__udivmoddi4+0xa0>

00023d60 <__aeabi_idiv0>:
   23d60:	4770      	bx	lr
   23d62:	bf00      	nop

Disassembly of section .fini:

00023d64 <_fini>:
   23d64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   23d66:	bf00      	nop
   23d68:	bcf8      	pop	{r3, r4, r5, r6, r7}
   23d6a:	bc08      	pop	{r3}
   23d6c:	469e      	mov	lr, r3
   23d6e:	4770      	bx	lr
